

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 22:12:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  008F                     	;# 
   367  0090                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  009F                     	;# 
   385  0105                     	;# 
   386  0107                     	;# 
   387  0108                     	;# 
   388  0109                     	;# 
   389  010C                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  010E                     	;# 
   393  010F                     	;# 
   394  0185                     	;# 
   395  0187                     	;# 
   396  0188                     	;# 
   397  0189                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000D                     	;# 
   414  000E                     	;# 
   415  000E                     	;# 
   416  000F                     	;# 
   417  0010                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0013                     	;# 
   421  0014                     	;# 
   422  0015                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0017                     	;# 
   426  0018                     	;# 
   427  0019                     	;# 
   428  001A                     	;# 
   429  001B                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001D                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  0081                     	;# 
   436  0085                     	;# 
   437  0086                     	;# 
   438  0087                     	;# 
   439  0088                     	;# 
   440  0089                     	;# 
   441  008C                     	;# 
   442  008D                     	;# 
   443  008E                     	;# 
   444  008F                     	;# 
   445  0090                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0094                     	;# 
   452  0095                     	;# 
   453  0096                     	;# 
   454  0097                     	;# 
   455  0098                     	;# 
   456  0099                     	;# 
   457  009A                     	;# 
   458  009B                     	;# 
   459  009C                     	;# 
   460  009D                     	;# 
   461  009E                     	;# 
   462  009F                     	;# 
   463  0105                     	;# 
   464  0107                     	;# 
   465  0108                     	;# 
   466  0109                     	;# 
   467  010C                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  0185                     	;# 
   473  0187                     	;# 
   474  0188                     	;# 
   475  0189                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478                           
   479                           	psect	strings
   480  0800                     __pstrings:
   481  0800                     stringtab:
   482  0800                     __stringtab:
   483                           
   484                           ;	String table - string pointers are 1 byte each
   485  0800  1BFF               	btfsc	btemp+1,7
   486  0801  280A               	ljmp	stringcode
   487  0802  1383               	bcf	3,7
   488  0803  187F               	btfsc	btemp+1,0
   489  0804  1783               	bsf	3,7
   490  0805  0800               	movf	0,w
   491  0806  0A84               	incf	4,f
   492  0807  1903               	skipnz
   493  0808  0AFF               	incf	btemp+1,f
   494  0809  0008               	return
   495  080A                     stringcode:
   496  080A                     stringdir:
   497  080A  3008               	movlw	high stringdir
   498  080B  008A               	movwf	10
   499  080C  0804               	movf	4,w
   500  080D  0A84               	incf	4,f
   501  080E  0782               	addwf	2,f
   502  080F                     __stringbase:
   503  080F  3400               	retlw	0
   504  0810                     __end_of__stringtab:
   505  0810                     __powers_:
   506  0810  3400               	retlw	0
   507  0811  3400               	retlw	0
   508  0812  3480               	retlw	128
   509  0813  343F               	retlw	63
   510  0814  3400               	retlw	0
   511  0815  3400               	retlw	0
   512  0816  3420               	retlw	32
   513  0817  3441               	retlw	65
   514  0818  3400               	retlw	0
   515  0819  3400               	retlw	0
   516  081A  34C8               	retlw	200
   517  081B  3442               	retlw	66
   518  081C  3400               	retlw	0
   519  081D  3400               	retlw	0
   520  081E  347A               	retlw	122
   521  081F  3444               	retlw	68
   522  0820  3400               	retlw	0
   523  0821  3440               	retlw	64
   524  0822  341C               	retlw	28
   525  0823  3446               	retlw	70
   526  0824  3400               	retlw	0
   527  0825  3450               	retlw	80
   528  0826  34C3               	retlw	195
   529  0827  3447               	retlw	71
   530  0828  3400               	retlw	0
   531  0829  3424               	retlw	36
   532  082A  3474               	retlw	116
   533  082B  3449               	retlw	73
   534  082C  3480               	retlw	128
   535  082D  3496               	retlw	150
   536  082E  3418               	retlw	24
   537  082F  344B               	retlw	75
   538  0830  3420               	retlw	32
   539  0831  34BC               	retlw	188
   540  0832  34BE               	retlw	190
   541  0833  344C               	retlw	76
   542  0834  3428               	retlw	40
   543  0835  346B               	retlw	107
   544  0836  346E               	retlw	110
   545  0837  344E               	retlw	78
   546  0838  34F9               	retlw	249
   547  0839  3402               	retlw	2
   548  083A  3415               	retlw	21
   549  083B  3450               	retlw	80
   550  083C  34EC               	retlw	236
   551  083D  3478               	retlw	120
   552  083E  34AD               	retlw	173
   553  083F  3460               	retlw	96
   554  0840  34CA               	retlw	202
   555  0841  34F2               	retlw	242
   556  0842  3449               	retlw	73
   557  0843  3471               	retlw	113
   558  0844                     __end_of__powers_:
   559  0844                     __npowers_:
   560  0844  3400               	retlw	0
   561  0845  3400               	retlw	0
   562  0846  3480               	retlw	128
   563  0847  343F               	retlw	63
   564  0848  34CD               	retlw	205
   565  0849  34CC               	retlw	204
   566  084A  34CC               	retlw	204
   567  084B  343D               	retlw	61
   568  084C  340A               	retlw	10
   569  084D  34D7               	retlw	215
   570  084E  3423               	retlw	35
   571  084F  343C               	retlw	60
   572  0850  346F               	retlw	111
   573  0851  3412               	retlw	18
   574  0852  3483               	retlw	131
   575  0853  343A               	retlw	58
   576  0854  3417               	retlw	23
   577  0855  34B7               	retlw	183
   578  0856  34D1               	retlw	209
   579  0857  3438               	retlw	56
   580  0858  34AC               	retlw	172
   581  0859  34C5               	retlw	197
   582  085A  3427               	retlw	39
   583  085B  3437               	retlw	55
   584  085C  34BD               	retlw	189
   585  085D  3437               	retlw	55
   586  085E  3486               	retlw	134
   587  085F  3435               	retlw	53
   588  0860  3495               	retlw	149
   589  0861  34BF               	retlw	191
   590  0862  34D6               	retlw	214
   591  0863  3433               	retlw	51
   592  0864  3477               	retlw	119
   593  0865  34CC               	retlw	204
   594  0866  342B               	retlw	43
   595  0867  3432               	retlw	50
   596  0868  345F               	retlw	95
   597  0869  3470               	retlw	112
   598  086A  3489               	retlw	137
   599  086B  3430               	retlw	48
   600  086C  34FF               	retlw	255
   601  086D  34E6               	retlw	230
   602  086E  34DB               	retlw	219
   603  086F  342E               	retlw	46
   604  0870  3408               	retlw	8
   605  0871  34E5               	retlw	229
   606  0872  343C               	retlw	60
   607  0873  341E               	retlw	30
   608  0874  3460               	retlw	96
   609  0875  3442               	retlw	66
   610  0876  34A2               	retlw	162
   611  0877  340D               	retlw	13
   612  0878                     __end_of__npowers_:
   613  0878                     _dpowers:
   614  0878  3401               	retlw	1
   615  0879  3400               	retlw	0
   616  087A  3400               	retlw	0
   617  087B  3400               	retlw	0
   618  087C  340A               	retlw	10
   619  087D  3400               	retlw	0
   620  087E  3400               	retlw	0
   621  087F  3400               	retlw	0
   622  0880  3464               	retlw	100
   623  0881  3400               	retlw	0
   624  0882  3400               	retlw	0
   625  0883  3400               	retlw	0
   626  0884  34E8               	retlw	232
   627  0885  3403               	retlw	3
   628  0886  3400               	retlw	0
   629  0887  3400               	retlw	0
   630  0888  3410               	retlw	16
   631  0889  3427               	retlw	39
   632  088A  3400               	retlw	0
   633  088B  3400               	retlw	0
   634  088C  34A0               	retlw	160
   635  088D  3486               	retlw	134
   636  088E  3401               	retlw	1
   637  088F  3400               	retlw	0
   638  0890  3440               	retlw	64
   639  0891  3442               	retlw	66
   640  0892  340F               	retlw	15
   641  0893  3400               	retlw	0
   642  0894  3480               	retlw	128
   643  0895  3496               	retlw	150
   644  0896  3498               	retlw	152
   645  0897  3400               	retlw	0
   646  0898  3400               	retlw	0
   647  0899  34E1               	retlw	225
   648  089A  34F5               	retlw	245
   649  089B  3405               	retlw	5
   650  089C  3400               	retlw	0
   651  089D  34CA               	retlw	202
   652  089E  349A               	retlw	154
   653  089F  343B               	retlw	59
   654  08A0                     __end_of_dpowers:
   655  001E                     _ADRESH	set	30
   656  0007                     _PORTCbits	set	7
   657  0018                     _RCSTAbits	set	24
   658  000B                     _INTCONbits	set	11
   659  0009                     _PORTE	set	9
   660  0008                     _PORTD	set	8
   661  0007                     _PORTC	set	7
   662  0006                     _PORTB	set	6
   663  001F                     _ADCON0bits	set	31
   664  0019                     _TXREG	set	25
   665  001A                     _RCREG	set	26
   666  000C                     _PIR1bits	set	12
   667  0064                     _TXIF	set	100
   668  009A                     _SPBRGH	set	154
   669  0099                     _SPBRG	set	153
   670  0098                     _TXSTAbits	set	152
   671  009F                     _ADCON1bits	set	159
   672  008C                     _PIE1bits	set	140
   673  008F                     _OSCCONbits	set	143
   674  0089                     _TRISE	set	137
   675  0088                     _TRISD	set	136
   676  0087                     _TRISC	set	135
   677  0086                     _TRISB	set	134
   678  0085                     _TRISA	set	133
   679  0187                     _BAUDCTLbits	set	391
   680  0189                     _ANSELH	set	393
   681  0188                     _ANSEL	set	392
   682  08A0                     STR_5:
   683  08A0  3456               	retlw	86	;'V'
   684  08A1  346F               	retlw	111	;'o'
   685  08A2  346C               	retlw	108	;'l'
   686  08A3  3474               	retlw	116	;'t'
   687  08A4  3461               	retlw	97	;'a'
   688  08A5  346A               	retlw	106	;'j'
   689  08A6  3465               	retlw	101	;'e'
   690  08A7  3420               	retlw	32	;' '
   691  08A8  3431               	retlw	49	;'1'
   692  08A9  343A               	retlw	58	;':'
   693  08AA  3420               	retlw	32	;' '
   694  08AB  3425               	retlw	37	;'%'
   695  08AC  3433               	retlw	51	;'3'
   696  08AD  342E               	retlw	46	;'.'
   697  08AE  3432               	retlw	50	;'2'
   698  08AF  3466               	retlw	102	;'f'
   699  08B0  3456               	retlw	86	;'V'
   700  08B1  3400               	retlw	0
   701  08B2                     STR_6:
   702  08B2  3456               	retlw	86	;'V'
   703  08B3  346F               	retlw	111	;'o'
   704  08B4  346C               	retlw	108	;'l'
   705  08B5  3474               	retlw	116	;'t'
   706  08B6  3461               	retlw	97	;'a'
   707  08B7  346A               	retlw	106	;'j'
   708  08B8  3465               	retlw	101	;'e'
   709  08B9  3420               	retlw	32	;' '
   710  08BA  3432               	retlw	50	;'2'
   711  08BB  343A               	retlw	58	;':'
   712  08BC  3420               	retlw	32	;' '
   713  08BD  3425               	retlw	37	;'%'
   714  08BE  3433               	retlw	51	;'3'
   715  08BF  342E               	retlw	46	;'.'
   716  08C0  3432               	retlw	50	;'2'
   717  08C1  3466               	retlw	102	;'f'
   718  08C2  3456               	retlw	86	;'V'
   719  08C3  3400               	retlw	0
   720  08C4                     STR_1:
   721  08C4  3453               	retlw	83	;'S'
   722  08C5  3431               	retlw	49	;'1'
   723  08C6  343A               	retlw	58	;':'
   724  08C7  3420               	retlw	32	;' '
   725  08C8  3420               	retlw	32	;' '
   726  08C9  3420               	retlw	32	;' '
   727  08CA  3453               	retlw	83	;'S'
   728  08CB  3432               	retlw	50	;'2'
   729  08CC  343A               	retlw	58	;':'
   730  08CD  3420               	retlw	32	;' '
   731  08CE  3420               	retlw	32	;' '
   732  08CF  3420               	retlw	32	;' '
   733  08D0  3453               	retlw	83	;'S'
   734  08D1  3433               	retlw	51	;'3'
   735  08D2  343A               	retlw	58	;':'
   736  08D3  3400               	retlw	0
   737  08D4                     STR_4:
   738  08D4  3425               	retlw	37	;'%'
   739  08D5  3433               	retlw	51	;'3'
   740  08D6  342E               	retlw	46	;'.'
   741  08D7  3430               	retlw	48	;'0'
   742  08D8  3466               	retlw	102	;'f'
   743  08D9  3400               	retlw	0
   744  08AB                     
   745                           	psect	cinit
   746  000F                     start_initialization:	
   747                           ; #config settings
   748                           
   749  000F                     __initialization:
   750                           
   751                           ; Clear objects allocated to BANK0
   752  000F  1283               	bcf	3,5	;RP0=0, select bank0
   753  0010  1303               	bcf	3,6	;RP1=0, select bank0
   754  0011  01EF               	clrf	__pbssBANK0& (0+127)
   755                           
   756                           ; Clear objects allocated to BANK1
   757  0012  1383               	bcf	3,7	;select IRP bank0
   758  0013  30CC               	movlw	low __pbssBANK1
   759  0014  0084               	movwf	4
   760  0015  30E5               	movlw	low (__pbssBANK1+25)
   761  0016  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   762                           
   763                           ; Clear objects allocated to BANK3
   764  001B  1783               	bsf	3,7	;select IRP bank2
   765  001C  3090               	movlw	low __pbssBANK3
   766  001D  0084               	movwf	4
   767  001E  30EA               	movlw	low (__pbssBANK3+90)
   768  001F  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   769  0024                     end_of_initialization:	
   770                           ;End of C runtime variable initialization code
   771                           
   772  0024                     __end_of__initialization:
   773  0024  0183               	clrf	3
   774  0025  160A  118A  2884   	ljmp	_main	;jump to C main() function
   775                           
   776                           	psect	bssBANK0
   777  006F                     __pbssBANK0:
   778  006F                     _dato:
   779  006F                     	ds	1
   780                           
   781                           	psect	bssBANK1
   782  00CC                     __pbssBANK1:
   783  00CC                     _vol2:
   784  00CC                     	ds	4
   785  00D0                     _vol1:
   786  00D0                     	ds	4
   787  00D4                     _c:
   788  00D4                     	ds	4
   789  00D8                     _valor2:
   790  00D8                     	ds	1
   791  00D9                     _valor1:
   792  00D9                     	ds	1
   793  00DA                     _valadc:
   794  00DA                     	ds	1
   795  00DB                     _v1:
   796  00DB                     	ds	10
   797                           
   798                           	psect	bssBANK3
   799  0190                     __pbssBANK3:
   800  0190                     _cadena3:
   801  0190                     	ds	30
   802  01AE                     _cadena2:
   803  01AE                     	ds	30
   804  01CC                     _cadena1:
   805  01CC                     	ds	30
   806                           
   807                           	psect	clrtext
   808  07F7                     clear_ram0:	
   809                           ;	Called with FSR containing the base address, and
   810                           ;	W with the last address+1
   811                           
   812  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   813  07F8                     clrloop0:
   814  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   815  07F9  0A84               	incf	4,f	;increment pointer
   816  07FA  0604               	xorwf	4,w	;XOR with final address
   817  07FB  1903               	btfsc	3,2	;have we reached the end yet?
   818  07FC  3400               	retlw	0	;all done for this memory range, return
   819  07FD  0604               	xorwf	4,w	;XOR again to restore value
   820  07FE  2FF8               	goto	clrloop0	;do the next byte
   821                           
   822                           	psect	cstackBANK1
   823  00A0                     __pcstackBANK1:
   824  00A0                     ?___flsub:
   825  00A0                     ___flsub@a:	
   826                           ; 4 bytes @ 0x0
   827                           
   828                           
   829                           ; 4 bytes @ 0x0
   830  00A0                     	ds	4
   831  00A4                     ___flsub@b:
   832                           
   833                           ; 4 bytes @ 0x4
   834  00A4                     	ds	4
   835  00A8                     ?_sprintf:
   836  00A8                     sprintf@sp:	
   837                           ; 2 bytes @ 0x8
   838                           
   839                           
   840                           ; 2 bytes @ 0x8
   841  00A8                     	ds	2
   842  00AA                     sprintf@f:
   843                           
   844                           ; 1 bytes @ 0xA
   845  00AA                     	ds	5
   846  00AF                     _sprintf$1178:
   847                           
   848                           ; 4 bytes @ 0xF
   849  00AF                     	ds	4
   850  00B3                     sprintf@ap:
   851                           
   852                           ; 1 bytes @ 0x13
   853  00B3                     	ds	1
   854  00B4                     sprintf@val:
   855                           
   856                           ; 4 bytes @ 0x14
   857  00B4                     	ds	4
   858  00B8                     sprintf@flag:
   859                           
   860                           ; 2 bytes @ 0x18
   861  00B8                     	ds	2
   862  00BA                     sprintf@width:
   863                           
   864                           ; 2 bytes @ 0x1A
   865  00BA                     	ds	2
   866  00BC                     sprintf@tmpval:
   867                           
   868                           ; 4 bytes @ 0x1C
   869  00BC                     	ds	4
   870  00C0                     sprintf@eexp:
   871                           
   872                           ; 2 bytes @ 0x20
   873  00C0                     	ds	2
   874  00C2                     sprintf@fval:
   875                           
   876                           ; 4 bytes @ 0x22
   877  00C2                     	ds	4
   878  00C6                     sprintf@prec:
   879                           
   880                           ; 2 bytes @ 0x26
   881  00C6                     	ds	2
   882  00C8                     sprintf@c:
   883                           
   884                           ; 1 bytes @ 0x28
   885  00C8                     	ds	1
   886  00C9                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x29
   889  00C9                     	ds	3
   890                           
   891                           	psect	cstackCOMMON
   892  0070                     __pcstackCOMMON:
   893  0070                     ?_isdigit:
   894  0070                     ?_setup:	
   895                           ; 1 bit 
   896                           
   897  0070                     ?_Lcd_Init:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_Lcd_Clear:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_envio_caract:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_ADC:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_Interrupciones:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ??_Interrupciones:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_main:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_Lcd_Port:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_Lcd_Cmd:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_Lcd_Write_Char:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_envio_char:	
   928                           ; 1 bytes @ 0x0
   929                           
   930                           
   931                           ; 1 bytes @ 0x0
   932  0070                     	ds	3
   933  0073                     ?___fleq:
   934  0073                     ?___flge:	
   935                           ; 1 bit 
   936                           
   937  0073                     ??_setup:	
   938                           ; 1 bit 
   939                           
   940  0073                     ??_ADC:	
   941                           ; 1 bytes @ 0x3
   942                           
   943  0073                     ??_isdigit:	
   944                           ; 1 bytes @ 0x3
   945                           
   946  0073                     ??_Lcd_Port:	
   947                           ; 1 bytes @ 0x3
   948                           
   949  0073                     ??_envio_char:	
   950                           ; 1 bytes @ 0x3
   951                           
   952  0073                     ?__Umul8_16:	
   953                           ; 1 bytes @ 0x3
   954                           
   955  0073                     ?___wmul:	
   956                           ; 2 bytes @ 0x3
   957                           
   958  0073                     ?___awmod:	
   959                           ; 2 bytes @ 0x3
   960                           
   961  0073                     ?___lwmod:	
   962                           ; 2 bytes @ 0x3
   963                           
   964  0073                     ?__tdiv_to_l_:	
   965                           ; 2 bytes @ 0x3
   966                           
   967  0073                     ?__div_to_l_:	
   968                           ; 4 bytes @ 0x3
   969                           
   970  0073                     ?___lldiv:	
   971                           ; 4 bytes @ 0x3
   972                           
   973  0073                     ?___flneg:	
   974                           ; 4 bytes @ 0x3
   975                           
   976  0073                     ?___llmod:	
   977                           ; 4 bytes @ 0x3
   978                           
   979  0073                     ?___xxtofl:	
   980                           ; 4 bytes @ 0x3
   981                           
   982  0073                     Lcd_Port@a:	
   983                           ; 4 bytes @ 0x3
   984                           
   985  0073                     envio_char@dato:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0073                     __Umul8_16@multiplicand:	
   989                           ; 1 bytes @ 0x3
   990                           
   991  0073                     _isdigit$998:	
   992                           ; 1 bytes @ 0x3
   993                           
   994  0073                     ___wmul@multiplier:	
   995                           ; 1 bytes @ 0x3
   996                           
   997  0073                     ___awmod@divisor:	
   998                           ; 2 bytes @ 0x3
   999                           
  1000  0073                     ___lwmod@divisor:	
  1001                           ; 2 bytes @ 0x3
  1002                           
  1003  0073                     ___lldiv@divisor:	
  1004                           ; 2 bytes @ 0x3
  1005                           
  1006  0073                     __div_to_l_@f1:	
  1007                           ; 4 bytes @ 0x3
  1008                           
  1009  0073                     ___fleq@ff1:	
  1010                           ; 4 bytes @ 0x3
  1011                           
  1012  0073                     ___flge@ff1:	
  1013                           ; 4 bytes @ 0x3
  1014                           
  1015  0073                     ___flneg@f1:	
  1016                           ; 4 bytes @ 0x3
  1017                           
  1018  0073                     __tdiv_to_l_@f1:	
  1019                           ; 4 bytes @ 0x3
  1020                           
  1021  0073                     ___llmod@divisor:	
  1022                           ; 4 bytes @ 0x3
  1023                           
  1024  0073                     ___xxtofl@val:	
  1025                           ; 4 bytes @ 0x3
  1026                           
  1027                           
  1028                           ; 4 bytes @ 0x3
  1029  0073                     	ds	1
  1030  0074                     ??_envio_caract:
  1031  0074                     ??_Lcd_Cmd:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0074                     ??_Lcd_Write_Char:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  0074                     ADC@a:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  0074                     isdigit@c:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x4
  1045  0074                     	ds	1
  1046  0075                     ??__Umul8_16:
  1047  0075                     Lcd_Write_Char@a:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050  0075                     envio_caract@i:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053  0075                     ___wmul@multiplicand:	
  1054                           ; 2 bytes @ 0x5
  1055                           
  1056  0075                     ___awmod@dividend:	
  1057                           ; 2 bytes @ 0x5
  1058                           
  1059  0075                     ___lwmod@dividend:	
  1060                           ; 2 bytes @ 0x5
  1061                           
  1062                           
  1063                           ; 2 bytes @ 0x5
  1064  0075                     	ds	1
  1065  0076                     ?_Lcd_Write_String:
  1066  0076                     Lcd_Cmd@a:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069  0076                     Lcd_Write_String@a:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x6
  1074  0076                     	ds	1
  1075  0077                     ??_Lcd_Init:
  1076  0077                     ??_Lcd_Clear:	
  1077                           ; 1 bytes @ 0x7
  1078                           
  1079  0077                     ?_Lcd_Set_Cursor:	
  1080                           ; 1 bytes @ 0x7
  1081                           
  1082  0077                     ??___wmul:	
  1083                           ; 1 bytes @ 0x7
  1084                           
  1085  0077                     ??___awmod:	
  1086                           ; 1 bytes @ 0x7
  1087                           
  1088  0077                     ??___flneg:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  0077                     ??___lwmod:	
  1092                           ; 1 bytes @ 0x7
  1093                           
  1094  0077                     ??___xxtofl:	
  1095                           ; 1 bytes @ 0x7
  1096                           
  1097  0077                     Lcd_Set_Cursor@b:	
  1098                           ; 1 bytes @ 0x7
  1099                           
  1100  0077                     envio_caract@st:	
  1101                           ; 1 bytes @ 0x7
  1102                           
  1103  0077                     ___wmul@product:	
  1104                           ; 1 bytes @ 0x7
  1105                           
  1106  0077                     ___lldiv@dividend:	
  1107                           ; 2 bytes @ 0x7
  1108                           
  1109  0077                     __div_to_l_@f2:	
  1110                           ; 4 bytes @ 0x7
  1111                           
  1112  0077                     ___fleq@ff2:	
  1113                           ; 4 bytes @ 0x7
  1114                           
  1115  0077                     ___flge@ff2:	
  1116                           ; 4 bytes @ 0x7
  1117                           
  1118  0077                     __tdiv_to_l_@f2:	
  1119                           ; 4 bytes @ 0x7
  1120                           
  1121  0077                     ___llmod@dividend:	
  1122                           ; 4 bytes @ 0x7
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0x7
  1126  0077                     	ds	1
  1127  0078                     ??_Lcd_Set_Cursor:
  1128  0078                     ??_Lcd_Write_String:	
  1129                           ; 1 bytes @ 0x8
  1130                           
  1131  0078                     ___awmod@counter:	
  1132                           ; 1 bytes @ 0x8
  1133                           
  1134  0078                     ___lwmod@counter:	
  1135                           ; 1 bytes @ 0x8
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x8
  1139  0078                     	ds	1
  1140  0079                     ??___lwdiv:
  1141  0079                     Lcd_Set_Cursor@a:	
  1142                           ; 1 bytes @ 0x9
  1143                           
  1144  0079                     ___awmod@sign:	
  1145                           ; 1 bytes @ 0x9
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x9
  1149  0079                     	ds	1
  1150  007A                     ??___awdiv:
  1151  007A                     Lcd_Set_Cursor@temp:	
  1152                           ; 1 bytes @ 0xA
  1153                           
  1154                           
  1155                           ; 1 bytes @ 0xA
  1156  007A                     	ds	1
  1157  007B                     ??___flsub:
  1158                           
  1159                           	psect	cstackBANK0
  1160  0020                     __pcstackBANK0:	
  1161                           ; 1 bytes @ 0xB
  1162                           
  1163  0020                     ??__tdiv_to_l_:
  1164  0020                     ??__div_to_l_:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0020                     ??___lldiv:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0020                     ??___fleq:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0020                     ??___flge:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0020                     ??___llmod:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0020                     ?___awdiv:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0020                     ?___lwdiv:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185  0020                     ___xxtofl@sign:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188  0020                     Lcd_Write_String@i:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0020                     ___awdiv@divisor:	
  1192                           ; 2 bytes @ 0x0
  1193                           
  1194  0020                     ___lwdiv@divisor:	
  1195                           ; 2 bytes @ 0x0
  1196                           
  1197  0020                     __Umul8_16@product:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200                           
  1201                           ; 2 bytes @ 0x0
  1202  0020                     	ds	1
  1203  0021                     ___llmod@counter:
  1204  0021                     ___xxtofl@exp:	
  1205                           ; 1 bytes @ 0x1
  1206                           
  1207  0021                     ___lldiv@quotient:	
  1208                           ; 1 bytes @ 0x1
  1209                           
  1210  0021                     __div_to_l_@quot:	
  1211                           ; 4 bytes @ 0x1
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x1
  1215  0021                     	ds	1
  1216  0022                     ___awdiv@dividend:
  1217  0022                     ___lwdiv@dividend:	
  1218                           ; 2 bytes @ 0x2
  1219                           
  1220  0022                     __Umul8_16@word_mpld:	
  1221                           ; 2 bytes @ 0x2
  1222                           
  1223  0022                     ___xxtofl@arg:	
  1224                           ; 2 bytes @ 0x2
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x2
  1228  0022                     	ds	2
  1229  0024                     ___awdiv@counter:
  1230  0024                     __Umul8_16@multiplier:	
  1231                           ; 1 bytes @ 0x4
  1232                           
  1233  0024                     ___lwdiv@quotient:	
  1234                           ; 1 bytes @ 0x4
  1235                           
  1236  0024                     __tdiv_to_l_@quot:	
  1237                           ; 2 bytes @ 0x4
  1238                           
  1239                           
  1240                           ; 4 bytes @ 0x4
  1241  0024                     	ds	1
  1242  0025                     ___lldiv@counter:
  1243  0025                     ___awdiv@sign:	
  1244                           ; 1 bytes @ 0x5
  1245                           
  1246  0025                     __div_to_l_@cntr:	
  1247                           ; 1 bytes @ 0x5
  1248                           
  1249                           
  1250                           ; 1 bytes @ 0x5
  1251  0025                     	ds	1
  1252  0026                     __div_to_l_@exp1:
  1253  0026                     ___lwdiv@counter:	
  1254                           ; 1 bytes @ 0x6
  1255                           
  1256  0026                     ___awdiv@quotient:	
  1257                           ; 1 bytes @ 0x6
  1258                           
  1259                           
  1260                           ; 2 bytes @ 0x6
  1261  0026                     	ds	2
  1262  0028                     ?___flmul:
  1263  0028                     __tdiv_to_l_@cntr:	
  1264                           ; 4 bytes @ 0x8
  1265                           
  1266  0028                     ___flmul@b:	
  1267                           ; 1 bytes @ 0x8
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0x8
  1271  0028                     	ds	1
  1272  0029                     __tdiv_to_l_@exp1:
  1273                           
  1274                           ; 1 bytes @ 0x9
  1275  0029                     	ds	3
  1276  002C                     ___flmul@a:
  1277                           
  1278                           ; 4 bytes @ 0xC
  1279  002C                     	ds	4
  1280  0030                     ??___flmul:
  1281                           
  1282                           ; 1 bytes @ 0x10
  1283  0030                     	ds	5
  1284  0035                     ___flmul@sign:
  1285                           
  1286                           ; 1 bytes @ 0x15
  1287  0035                     	ds	1
  1288  0036                     ___flmul@grs:
  1289                           
  1290                           ; 4 bytes @ 0x16
  1291  0036                     	ds	4
  1292  003A                     ___flmul@aexp:
  1293                           
  1294                           ; 1 bytes @ 0x1A
  1295  003A                     	ds	1
  1296  003B                     ___flmul@bexp:
  1297                           
  1298                           ; 1 bytes @ 0x1B
  1299  003B                     	ds	1
  1300  003C                     ___flmul@prod:
  1301                           
  1302                           ; 4 bytes @ 0x1C
  1303  003C                     	ds	4
  1304  0040                     ___flmul@temp:
  1305                           
  1306                           ; 2 bytes @ 0x20
  1307  0040                     	ds	2
  1308  0042                     ?_conversion:
  1309  0042                     ?_fround:	
  1310                           ; 4 bytes @ 0x22
  1311                           
  1312  0042                     ?_scale:	
  1313                           ; 4 bytes @ 0x22
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x22
  1317  0042                     	ds	4
  1318  0046                     ??_conversion:
  1319  0046                     ??_fround:	
  1320                           ; 1 bytes @ 0x26
  1321                           
  1322  0046                     ??_scale:	
  1323                           ; 1 bytes @ 0x26
  1324                           
  1325                           
  1326                           ; 1 bytes @ 0x26
  1327  0046                     	ds	4
  1328  004A                     conversion@valor:
  1329                           
  1330                           ; 4 bytes @ 0x2A
  1331  004A                     	ds	3
  1332  004D                     _fround$1176:
  1333                           
  1334                           ; 4 bytes @ 0x2D
  1335  004D                     	ds	1
  1336  004E                     conversion@var:
  1337                           
  1338                           ; 1 bytes @ 0x2E
  1339  004E                     	ds	2
  1340  0050                     _scale$1177:
  1341                           
  1342                           ; 4 bytes @ 0x30
  1343  0050                     	ds	1
  1344  0051                     _fround$1175:
  1345                           
  1346                           ; 4 bytes @ 0x31
  1347  0051                     	ds	3
  1348  0054                     scale@scl:
  1349                           
  1350                           ; 1 bytes @ 0x34
  1351  0054                     	ds	1
  1352  0055                     ?___fltol:
  1353  0055                     fround@prec:	
  1354                           ; 4 bytes @ 0x35
  1355                           
  1356  0055                     ___fltol@f1:	
  1357                           ; 1 bytes @ 0x35
  1358                           
  1359                           
  1360                           ; 4 bytes @ 0x35
  1361  0055                     	ds	1
  1362  0056                     ?___fladd:
  1363  0056                     ___fladd@b:	
  1364                           ; 4 bytes @ 0x36
  1365                           
  1366                           
  1367                           ; 4 bytes @ 0x36
  1368  0056                     	ds	3
  1369  0059                     ??___fltol:
  1370                           
  1371                           ; 1 bytes @ 0x39
  1372  0059                     	ds	1
  1373  005A                     ___fladd@a:
  1374                           
  1375                           ; 4 bytes @ 0x3A
  1376  005A                     	ds	4
  1377  005E                     ??___fladd:
  1378  005E                     ___fltol@sign1:	
  1379                           ; 1 bytes @ 0x3E
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x3E
  1383  005E                     	ds	1
  1384  005F                     ___fltol@exp1:
  1385                           
  1386                           ; 1 bytes @ 0x3F
  1387  005F                     	ds	7
  1388  0066                     ___fladd@signs:
  1389                           
  1390                           ; 1 bytes @ 0x46
  1391  0066                     	ds	1
  1392  0067                     ___fladd@aexp:
  1393                           
  1394                           ; 1 bytes @ 0x47
  1395  0067                     	ds	1
  1396  0068                     ___fladd@bexp:
  1397                           
  1398                           ; 1 bytes @ 0x48
  1399  0068                     	ds	1
  1400  0069                     ___fladd@grs:
  1401                           
  1402                           ; 1 bytes @ 0x49
  1403  0069                     	ds	1
  1404  006A                     ??_sprintf:
  1405                           
  1406                           ; 1 bytes @ 0x4A
  1407  006A                     	ds	5
  1408                           
  1409                           	psect	maintext
  1410  1084                     __pmaintext:	
  1411 ;;
  1412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1413 ;;
  1414 ;; *************** function _main *****************
  1415 ;; Defined at:
  1416 ;;		line 71 in file "main.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : B00/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0
  1432 ;;      Temps:          0       0       3       0       0
  1433 ;;      Totals:         0       0       3       0       0
  1434 ;;Total ram usage:        3 bytes
  1435 ;; Hardware stack levels required when called:    5
  1436 ;; This function calls:
  1437 ;;		_ADC
  1438 ;;		_Lcd_Clear
  1439 ;;		_Lcd_Init
  1440 ;;		_Lcd_Set_Cursor
  1441 ;;		_Lcd_Write_String
  1442 ;;		___fladd
  1443 ;;		___flsub
  1444 ;;		_conversion
  1445 ;;		_envio_caract
  1446 ;;		_setup
  1447 ;;		_sprintf
  1448 ;; This function is called by:
  1449 ;;		Startup code after reset
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _main
  1455  1084                     _main:
  1456  1084                     l3884:	
  1457                           ;incstack = 0
  1458                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1459                           
  1460                           
  1461                           ;main.c: 72: 
  1462  1084  160A  158A  2312  160A  118A  	fcall	_setup
  1463                           
  1464                           ;main.c: 73:         TXREG = '\f';
  1465  1089  160A  158A  2245  160A  118A  	fcall	_Lcd_Init
  1466                           
  1467                           ;main.c: 74:         envio_caract(cadena1);
  1468  108E  160A  158A  20FC  160A  118A  	fcall	_Lcd_Clear
  1469  1093                     l101:	
  1470                           ;main.c: 78: 
  1471                           
  1472                           
  1473                           ;main.c: 79:          _delay((unsigned long)((100)*(8000000/4000.0)));
  1474  1093  01F7               	clrf	Lcd_Set_Cursor@b
  1475  1094  0AF7               	incf	Lcd_Set_Cursor@b,f
  1476  1095  3001               	movlw	1
  1477  1096  160A  158A  2182  160A  118A  	fcall	_Lcd_Set_Cursor
  1478  109B                     l3886:
  1479                           
  1480                           ;main.c: 80: 
  1481  109B  30B5               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1482  109C  00F6               	movwf	Lcd_Write_String@a
  1483  109D  3080               	movlw	128
  1484  109E  00F7               	movwf	Lcd_Write_String@a+1
  1485  109F  160A  158A  2286  160A  118A  	fcall	_Lcd_Write_String
  1486  10A4                     l3888:
  1487                           
  1488                           ;main.c: 81:         if (ADCON0bits.GO == 0){
  1489  10A4  1683               	bsf	3,5	;RP0=1, select bank1
  1490  10A5  1303               	bcf	3,6	;RP1=0, select bank1
  1491  10A6  0859               	movf	_valor1^(0+128),w
  1492  10A7  160A  158A  2205  160A  118A  	fcall	_conversion
  1493  10AC  1283               	bcf	3,5	;RP0=0, select bank0
  1494  10AD  1303               	bcf	3,6	;RP1=0, select bank0
  1495  10AE  0845               	movf	?_conversion+3,w
  1496  10AF  1683               	bsf	3,5	;RP0=1, select bank1
  1497  10B0  1303               	bcf	3,6	;RP1=0, select bank1
  1498  10B1  00D3               	movwf	(_vol1+3)^(0+128)
  1499  10B2  1283               	bcf	3,5	;RP0=0, select bank0
  1500  10B3  1303               	bcf	3,6	;RP1=0, select bank0
  1501  10B4  0844               	movf	?_conversion+2,w
  1502  10B5  1683               	bsf	3,5	;RP0=1, select bank1
  1503  10B6  1303               	bcf	3,6	;RP1=0, select bank1
  1504  10B7  00D2               	movwf	(_vol1+2)^(0+128)
  1505  10B8  1283               	bcf	3,5	;RP0=0, select bank0
  1506  10B9  1303               	bcf	3,6	;RP1=0, select bank0
  1507  10BA  0843               	movf	?_conversion+1,w
  1508  10BB  1683               	bsf	3,5	;RP0=1, select bank1
  1509  10BC  1303               	bcf	3,6	;RP1=0, select bank1
  1510  10BD  00D1               	movwf	(_vol1+1)^(0+128)
  1511  10BE  1283               	bcf	3,5	;RP0=0, select bank0
  1512  10BF  1303               	bcf	3,6	;RP1=0, select bank0
  1513  10C0  0842               	movf	?_conversion,w
  1514  10C1  1683               	bsf	3,5	;RP0=1, select bank1
  1515  10C2  1303               	bcf	3,6	;RP1=0, select bank1
  1516  10C3  00D0               	movwf	_vol1^(0+128)
  1517  10C4                     l3890:
  1518                           
  1519                           ;main.c: 82: 
  1520  10C4  0858               	movf	_valor2^(0+128),w
  1521  10C5  160A  158A  2205  160A  118A  	fcall	_conversion
  1522  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  1523  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  1524  10CC  0845               	movf	?_conversion+3,w
  1525  10CD  1683               	bsf	3,5	;RP0=1, select bank1
  1526  10CE  1303               	bcf	3,6	;RP1=0, select bank1
  1527  10CF  00CF               	movwf	(_vol2+3)^(0+128)
  1528  10D0  1283               	bcf	3,5	;RP0=0, select bank0
  1529  10D1  1303               	bcf	3,6	;RP1=0, select bank0
  1530  10D2  0844               	movf	?_conversion+2,w
  1531  10D3  1683               	bsf	3,5	;RP0=1, select bank1
  1532  10D4  1303               	bcf	3,6	;RP1=0, select bank1
  1533  10D5  00CE               	movwf	(_vol2+2)^(0+128)
  1534  10D6  1283               	bcf	3,5	;RP0=0, select bank0
  1535  10D7  1303               	bcf	3,6	;RP1=0, select bank0
  1536  10D8  0843               	movf	?_conversion+1,w
  1537  10D9  1683               	bsf	3,5	;RP0=1, select bank1
  1538  10DA  1303               	bcf	3,6	;RP1=0, select bank1
  1539  10DB  00CD               	movwf	(_vol2+1)^(0+128)
  1540  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  1541  10DD  1303               	bcf	3,6	;RP1=0, select bank0
  1542  10DE  0842               	movf	?_conversion,w
  1543  10DF  1683               	bsf	3,5	;RP0=1, select bank1
  1544  10E0  1303               	bcf	3,6	;RP1=0, select bank1
  1545  10E1  00CC               	movwf	_vol2^(0+128)
  1546  10E2                     l3892:
  1547                           
  1548                           ;main.c: 85:                 ADCON0bits.CHS = 1;
  1549  10E2  01F7               	clrf	Lcd_Set_Cursor@b
  1550  10E3  0AF7               	incf	Lcd_Set_Cursor@b,f
  1551  10E4  3002               	movlw	2
  1552  10E5  160A  158A  2182  160A  118A  	fcall	_Lcd_Set_Cursor
  1553                           
  1554                           ;main.c: 86:             }
  1555  10EA  30DB               	movlw	(low (_v1| 0))& (0+255)
  1556  10EB  1683               	bsf	3,5	;RP0=1, select bank1
  1557  10EC  1303               	bcf	3,6	;RP1=0, select bank1
  1558  10ED  00A8               	movwf	sprintf@sp^(0+128)
  1559  10EE  3000               	movlw	0
  1560  10EF  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1561  10F0  309C               	movlw	(low (((STR_5+11)-__stringbase)| (0+32768)))& (0+255)
  1562  10F1  00C9               	movwf	??_main^(0+128)
  1563  10F2  0849               	movf	??_main^(0+128),w
  1564  10F3  00AA               	movwf	sprintf@f^(0+128)
  1565  10F4  0853               	movf	(_vol1+3)^(0+128),w
  1566  10F5  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1567  10F6  0852               	movf	(_vol1+2)^(0+128),w
  1568  10F7  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1569  10F8  0851               	movf	(_vol1+1)^(0+128),w
  1570  10F9  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1571  10FA  0850               	movf	_vol1^(0+128),w
  1572  10FB  00AB               	movwf	(?_sprintf^(0+128)+3)
  1573  10FC  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1574                           
  1575                           ;main.c: 87:             else if(ADCON0bits.CHS == 1){
  1576  1101  30DB               	movlw	(low (_v1| 0))& (0+255)
  1577  1102  00F6               	movwf	Lcd_Write_String@a
  1578  1103  3000               	movlw	0
  1579  1104  00F7               	movwf	Lcd_Write_String@a+1
  1580  1105  160A  158A  2286  160A  118A  	fcall	_Lcd_Write_String
  1581  110A                     l3894:
  1582                           
  1583                           ;main.c: 90:             }
  1584  110A  3007               	movlw	7
  1585  110B  1683               	bsf	3,5	;RP0=1, select bank1
  1586  110C  1303               	bcf	3,6	;RP1=0, select bank1
  1587  110D  00C9               	movwf	??_main^(0+128)
  1588  110E  0849               	movf	??_main^(0+128),w
  1589  110F  00F7               	movwf	Lcd_Set_Cursor@b
  1590  1110  3002               	movlw	2
  1591  1111  160A  158A  2182  160A  118A  	fcall	_Lcd_Set_Cursor
  1592  1116                     l3896:
  1593                           
  1594                           ;main.c: 91:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  1595  1116  30DB               	movlw	(low (_v1| 0))& (0+255)
  1596  1117  1683               	bsf	3,5	;RP0=1, select bank1
  1597  1118  1303               	bcf	3,6	;RP1=0, select bank1
  1598  1119  00A8               	movwf	sprintf@sp^(0+128)
  1599  111A  3000               	movlw	0
  1600  111B  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1601  111C  309C               	movlw	(low (((STR_5+11)-__stringbase)| (0+32768)))& (0+255)
  1602  111D  00C9               	movwf	??_main^(0+128)
  1603  111E  0849               	movf	??_main^(0+128),w
  1604  111F  00AA               	movwf	sprintf@f^(0+128)
  1605  1120  084F               	movf	(_vol2+3)^(0+128),w
  1606  1121  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1607  1122  084E               	movf	(_vol2+2)^(0+128),w
  1608  1123  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1609  1124  084D               	movf	(_vol2+1)^(0+128),w
  1610  1125  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1611  1126  084C               	movf	_vol2^(0+128),w
  1612  1127  00AB               	movwf	(?_sprintf^(0+128)+3)
  1613  1128  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1614  112D                     l3898:
  1615                           
  1616                           ;main.c: 92:             ADCON0bits.GO = 1;
  1617  112D  30DB               	movlw	(low (_v1| 0))& (0+255)
  1618  112E  00F6               	movwf	Lcd_Write_String@a
  1619  112F  3000               	movlw	0
  1620  1130  00F7               	movwf	Lcd_Write_String@a+1
  1621  1131  160A  158A  2286  160A  118A  	fcall	_Lcd_Write_String
  1622  1136                     l3900:
  1623                           
  1624                           ;main.c: 95: 
  1625  1136  300E               	movlw	14
  1626  1137  1683               	bsf	3,5	;RP0=1, select bank1
  1627  1138  1303               	bcf	3,6	;RP1=0, select bank1
  1628  1139  00C9               	movwf	??_main^(0+128)
  1629  113A  0849               	movf	??_main^(0+128),w
  1630  113B  00F7               	movwf	Lcd_Set_Cursor@b
  1631  113C  3002               	movlw	2
  1632  113D  160A  158A  2182  160A  118A  	fcall	_Lcd_Set_Cursor
  1633                           
  1634                           ;main.c: 96: }
  1635  1142  30DB               	movlw	(low (_v1| 0))& (0+255)
  1636  1143  1683               	bsf	3,5	;RP0=1, select bank1
  1637  1144  1303               	bcf	3,6	;RP1=0, select bank1
  1638  1145  00A8               	movwf	sprintf@sp^(0+128)
  1639  1146  3000               	movlw	0
  1640  1147  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1641  1148  30C5               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1642  1149  00C9               	movwf	??_main^(0+128)
  1643  114A  0849               	movf	??_main^(0+128),w
  1644  114B  00AA               	movwf	sprintf@f^(0+128)
  1645  114C  0857               	movf	(_c+3)^(0+128),w
  1646  114D  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1647  114E  0856               	movf	(_c+2)^(0+128),w
  1648  114F  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1649  1150  0855               	movf	(_c+1)^(0+128),w
  1650  1151  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1651  1152  0854               	movf	_c^(0+128),w
  1652  1153  00AB               	movwf	(?_sprintf^(0+128)+3)
  1653  1154  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1654                           
  1655                           ;main.c: 97: 
  1656  1159  30DB               	movlw	(low (_v1| 0))& (0+255)
  1657  115A  00F6               	movwf	Lcd_Write_String@a
  1658  115B  3000               	movlw	0
  1659  115C  00F7               	movwf	Lcd_Write_String@a+1
  1660  115D  160A  158A  2286  160A  118A  	fcall	_Lcd_Write_String
  1661                           
  1662                           ;main.c: 100: 
  1663  1162  30CC               	movlw	(low (_cadena1| (0+256)))& (0+255)
  1664  1163  1683               	bsf	3,5	;RP0=1, select bank1
  1665  1164  1303               	bcf	3,6	;RP1=0, select bank1
  1666  1165  00A8               	movwf	sprintf@sp^(0+128)
  1667  1166  3001               	movlw	1
  1668  1167  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1669  1168  3091               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1670  1169  00C9               	movwf	??_main^(0+128)
  1671  116A  0849               	movf	??_main^(0+128),w
  1672  116B  00AA               	movwf	sprintf@f^(0+128)
  1673  116C  0853               	movf	(_vol1+3)^(0+128),w
  1674  116D  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1675  116E  0852               	movf	(_vol1+2)^(0+128),w
  1676  116F  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1677  1170  0851               	movf	(_vol1+1)^(0+128),w
  1678  1171  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1679  1172  0850               	movf	_vol1^(0+128),w
  1680  1173  00AB               	movwf	(?_sprintf^(0+128)+3)
  1681  1174  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1682                           
  1683                           ;main.c: 101: 
  1684  1179  30AE               	movlw	(low (_cadena2| (0+256)))& (0+255)
  1685  117A  1683               	bsf	3,5	;RP0=1, select bank1
  1686  117B  1303               	bcf	3,6	;RP1=0, select bank1
  1687  117C  00A8               	movwf	sprintf@sp^(0+128)
  1688  117D  3001               	movlw	1
  1689  117E  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1690  117F  30A3               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1691  1180  00C9               	movwf	??_main^(0+128)
  1692  1181  0849               	movf	??_main^(0+128),w
  1693  1182  00AA               	movwf	sprintf@f^(0+128)
  1694  1183  084F               	movf	(_vol2+3)^(0+128),w
  1695  1184  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1696  1185  084E               	movf	(_vol2+2)^(0+128),w
  1697  1186  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1698  1187  084D               	movf	(_vol2+1)^(0+128),w
  1699  1188  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1700  1189  084C               	movf	_vol2^(0+128),w
  1701  118A  00AB               	movwf	(?_sprintf^(0+128)+3)
  1702  118B  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1703  1190                     l3902:
  1704                           
  1705                           ;main.c: 104:     ANSEL = 0x03;
  1706  1190  302B               	movlw	43
  1707  1191  1283               	bcf	3,5	;RP0=0, select bank0
  1708  1192  1303               	bcf	3,6	;RP1=0, select bank0
  1709  1193  066F               	xorwf	_dato,w
  1710  1194  1D03               	btfss	3,2
  1711  1195  2997               	goto	u6141
  1712  1196  2998               	goto	u6140
  1713  1197                     u6141:
  1714  1197  29D9               	goto	l3908
  1715  1198                     u6140:
  1716  1198                     l3904:
  1717                           
  1718                           ;main.c: 105:     ANSELH = 0x00;
  1719  1198  303F               	movlw	63
  1720  1199  00D9               	movwf	___fladd@b+3
  1721  119A  3080               	movlw	128
  1722  119B  00D8               	movwf	___fladd@b+2
  1723  119C  3000               	movlw	0
  1724  119D  00D7               	movwf	___fladd@b+1
  1725  119E  3000               	movlw	0
  1726  119F  00D6               	movwf	___fladd@b
  1727  11A0  1683               	bsf	3,5	;RP0=1, select bank1
  1728  11A1  1303               	bcf	3,6	;RP1=0, select bank1
  1729  11A2  0857               	movf	(_c+3)^(0+128),w
  1730  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  1731  11A4  1303               	bcf	3,6	;RP1=0, select bank0
  1732  11A5  00DD               	movwf	___fladd@a+3
  1733  11A6  1683               	bsf	3,5	;RP0=1, select bank1
  1734  11A7  1303               	bcf	3,6	;RP1=0, select bank1
  1735  11A8  0856               	movf	(_c+2)^(0+128),w
  1736  11A9  1283               	bcf	3,5	;RP0=0, select bank0
  1737  11AA  1303               	bcf	3,6	;RP1=0, select bank0
  1738  11AB  00DC               	movwf	___fladd@a+2
  1739  11AC  1683               	bsf	3,5	;RP0=1, select bank1
  1740  11AD  1303               	bcf	3,6	;RP1=0, select bank1
  1741  11AE  0855               	movf	(_c+1)^(0+128),w
  1742  11AF  1283               	bcf	3,5	;RP0=0, select bank0
  1743  11B0  1303               	bcf	3,6	;RP1=0, select bank0
  1744  11B1  00DB               	movwf	___fladd@a+1
  1745  11B2  1683               	bsf	3,5	;RP0=1, select bank1
  1746  11B3  1303               	bcf	3,6	;RP1=0, select bank1
  1747  11B4  0854               	movf	_c^(0+128),w
  1748  11B5  1283               	bcf	3,5	;RP0=0, select bank0
  1749  11B6  1303               	bcf	3,6	;RP1=0, select bank0
  1750  11B7  00DA               	movwf	___fladd@a
  1751  11B8  160A  118A  2273  160A  118A  	fcall	___fladd
  1752  11BD  1283               	bcf	3,5	;RP0=0, select bank0
  1753  11BE  1303               	bcf	3,6	;RP1=0, select bank0
  1754  11BF  0859               	movf	?___fladd+3,w
  1755  11C0  1683               	bsf	3,5	;RP0=1, select bank1
  1756  11C1  1303               	bcf	3,6	;RP1=0, select bank1
  1757  11C2  00D7               	movwf	(_c+3)^(0+128)
  1758  11C3  1283               	bcf	3,5	;RP0=0, select bank0
  1759  11C4  1303               	bcf	3,6	;RP1=0, select bank0
  1760  11C5  0858               	movf	?___fladd+2,w
  1761  11C6  1683               	bsf	3,5	;RP0=1, select bank1
  1762  11C7  1303               	bcf	3,6	;RP1=0, select bank1
  1763  11C8  00D6               	movwf	(_c+2)^(0+128)
  1764  11C9  1283               	bcf	3,5	;RP0=0, select bank0
  1765  11CA  1303               	bcf	3,6	;RP1=0, select bank0
  1766  11CB  0857               	movf	?___fladd+1,w
  1767  11CC  1683               	bsf	3,5	;RP0=1, select bank1
  1768  11CD  1303               	bcf	3,6	;RP1=0, select bank1
  1769  11CE  00D5               	movwf	(_c+1)^(0+128)
  1770  11CF  1283               	bcf	3,5	;RP0=0, select bank0
  1771  11D0  1303               	bcf	3,6	;RP1=0, select bank0
  1772  11D1  0856               	movf	?___fladd,w
  1773  11D2  1683               	bsf	3,5	;RP0=1, select bank1
  1774  11D3  1303               	bcf	3,6	;RP1=0, select bank1
  1775  11D4  00D4               	movwf	_c^(0+128)
  1776  11D5                     l3906:
  1777                           
  1778                           ;main.c: 106: 
  1779  11D5  1283               	bcf	3,5	;RP0=0, select bank0
  1780  11D6  1303               	bcf	3,6	;RP1=0, select bank0
  1781  11D7  01EF               	clrf	_dato
  1782                           
  1783                           ;main.c: 107:     TRISA = 0x03;
  1784  11D8  2A01               	goto	l3914
  1785  11D9                     l3908:
  1786  11D9  302D               	movlw	45
  1787  11DA  066F               	xorwf	_dato,w
  1788  11DB  1D03               	btfss	3,2
  1789  11DC  29DE               	goto	u6151
  1790  11DD  29DF               	goto	u6150
  1791  11DE                     u6151:
  1792  11DE  2A01               	goto	l3914
  1793  11DF                     u6150:
  1794  11DF                     l3910:
  1795                           
  1796                           ;main.c: 109:     TRISC = 0x80;
  1797  11DF  303F               	movlw	63
  1798  11E0  1683               	bsf	3,5	;RP0=1, select bank1
  1799  11E1  1303               	bcf	3,6	;RP1=0, select bank1
  1800  11E2  00A3               	movwf	(___flsub@a+3)^(0+128)
  1801  11E3  3080               	movlw	128
  1802  11E4  00A2               	movwf	(___flsub@a+2)^(0+128)
  1803  11E5  3000               	movlw	0
  1804  11E6  00A1               	movwf	(___flsub@a+1)^(0+128)
  1805  11E7  3000               	movlw	0
  1806  11E8  00A0               	movwf	___flsub@a^(0+128)
  1807  11E9  0857               	movf	(_c+3)^(0+128),w
  1808  11EA  00A7               	movwf	(___flsub@b+3)^(0+128)
  1809  11EB  0856               	movf	(_c+2)^(0+128),w
  1810  11EC  00A6               	movwf	(___flsub@b+2)^(0+128)
  1811  11ED  0855               	movf	(_c+1)^(0+128),w
  1812  11EE  00A5               	movwf	(___flsub@b+1)^(0+128)
  1813  11EF  0854               	movf	_c^(0+128),w
  1814  11F0  00A4               	movwf	___flsub@b^(0+128)
  1815  11F1  160A  158A  23AE  160A  118A  	fcall	___flsub
  1816  11F6  1683               	bsf	3,5	;RP0=1, select bank1
  1817  11F7  1303               	bcf	3,6	;RP1=0, select bank1
  1818  11F8  0823               	movf	(?___flsub+3)^(0+128),w
  1819  11F9  00D7               	movwf	(_c+3)^(0+128)
  1820  11FA  0822               	movf	(?___flsub+2)^(0+128),w
  1821  11FB  00D6               	movwf	(_c+2)^(0+128)
  1822  11FC  0821               	movf	(?___flsub+1)^(0+128),w
  1823  11FD  00D5               	movwf	(_c+1)^(0+128)
  1824  11FE  0820               	movf	?___flsub^(0+128),w
  1825  11FF  00D4               	movwf	_c^(0+128)
  1826  1200  29D5               	goto	l3906
  1827  1201                     l3914:
  1828                           
  1829                           ;main.c: 114:     PORTC = 0x00;
  1830  1201  300C               	movlw	12
  1831  1202  0099               	movwf	25	;volatile
  1832  1203                     l3916:
  1833                           
  1834                           ;main.c: 115:     PORTD = 0x00;
  1835  1203  30CC               	movlw	(low (_cadena1| (0+256)))& (0+255)
  1836  1204  160A  158A  2161  160A  118A  	fcall	_envio_caract
  1837  1209                     l3918:
  1838                           
  1839                           ;main.c: 116:     PORTE = 0x00;
  1840  1209  300D               	movlw	13
  1841  120A  1283               	bcf	3,5	;RP0=0, select bank0
  1842  120B  1303               	bcf	3,6	;RP1=0, select bank0
  1843  120C  0099               	movwf	25	;volatile
  1844  120D                     l3920:
  1845                           
  1846                           ;main.c: 117: 
  1847  120D  30AE               	movlw	(low (_cadena2| (0+256)))& (0+255)
  1848  120E  160A  158A  2161  160A  118A  	fcall	_envio_caract
  1849  1213                     l3922:
  1850                           
  1851                           ;main.c: 118: 
  1852  1213  300D               	movlw	13
  1853  1214  1283               	bcf	3,5	;RP0=0, select bank0
  1854  1215  1303               	bcf	3,6	;RP1=0, select bank0
  1855  1216  0099               	movwf	25	;volatile
  1856  1217                     l3924:
  1857                           
  1858                           ;main.c: 120:     OSCCONbits.IRCF1 = 1;
  1859  1217  3002               	movlw	2
  1860  1218  1683               	bsf	3,5	;RP0=1, select bank1
  1861  1219  1303               	bcf	3,6	;RP1=0, select bank1
  1862  121A  00CB               	movwf	(??_main^(0+128)+2)
  1863  121B  3004               	movlw	4
  1864  121C  00CA               	movwf	(??_main^(0+128)+1)
  1865  121D  30B9               	movlw	185
  1866  121E  00C9               	movwf	??_main^(0+128)
  1867  121F                     u6197:
  1868  121F  0BC9               	decfsz	??_main^(0+128),f
  1869  1220  2A1F               	goto	u6197
  1870  1221  0BCA               	decfsz	(??_main^(0+128)+1),f
  1871  1222  2A1F               	goto	u6197
  1872  1223  0BCB               	decfsz	(??_main^(0+128)+2),f
  1873  1224  2A1F               	goto	u6197
  1874  1225  2A26               	nop2
  1875  1226                     l3926:
  1876                           
  1877                           ;main.c: 122:     OSCCONbits.SCS = 1;
  1878  1226  1283               	bcf	3,5	;RP0=0, select bank0
  1879  1227  1303               	bcf	3,6	;RP1=0, select bank0
  1880  1228  189F               	btfsc	31,1	;volatile
  1881  1229  2A2B               	goto	u6161
  1882  122A  2A2C               	goto	u6160
  1883  122B                     u6161:
  1884  122B  2893               	goto	l101
  1885  122C                     u6160:
  1886  122C                     l3928:
  1887                           
  1888                           ;main.c: 124: 
  1889  122C  0C1F               	rrf	31,w	;volatile
  1890  122D  1683               	bsf	3,5	;RP0=1, select bank1
  1891  122E  1303               	bcf	3,6	;RP1=0, select bank1
  1892  122F  00C9               	movwf	??_main^(0+128)
  1893  1230  0C49               	rrf	??_main^(0+128),w
  1894  1231  390F               	andlw	15
  1895  1232  3A00               	xorlw	0
  1896  1233  1D03               	skipz
  1897  1234  2A36               	goto	u6171
  1898  1235  2A37               	goto	u6170
  1899  1236                     u6171:
  1900  1236  2A49               	goto	l3934
  1901  1237                     u6170:
  1902  1237                     l3930:
  1903                           
  1904                           ;main.c: 125:     INTCONbits.PEIE = 1;
  1905  1237  3000               	movlw	0
  1906  1238  120A  158A  20DB  160A  118A  	fcall	_ADC
  1907  123D  1683               	bsf	3,5	;RP0=1, select bank1
  1908  123E  1303               	bcf	3,6	;RP1=0, select bank1
  1909  123F  00C9               	movwf	??_main^(0+128)
  1910  1240  0849               	movf	??_main^(0+128),w
  1911  1241  00D9               	movwf	_valor1^(0+128)
  1912  1242                     l3932:
  1913                           
  1914                           ;main.c: 126:     PIE1bits.RCIE = 1;
  1915  1242  1283               	bcf	3,5	;RP0=0, select bank0
  1916  1243  1303               	bcf	3,6	;RP1=0, select bank0
  1917  1244  081F               	movf	31,w	;volatile
  1918  1245  39C3               	andlw	-61
  1919  1246  3804               	iorlw	4
  1920  1247  009F               	movwf	31	;volatile
  1921                           
  1922                           ;main.c: 127:     PIR1bits.RCIF = 0;
  1923  1248  2A65               	goto	l3940
  1924  1249                     l3934:
  1925  1249  1283               	bcf	3,5	;RP0=0, select bank0
  1926  124A  1303               	bcf	3,6	;RP1=0, select bank0
  1927  124B  0C1F               	rrf	31,w	;volatile
  1928  124C  1683               	bsf	3,5	;RP0=1, select bank1
  1929  124D  1303               	bcf	3,6	;RP1=0, select bank1
  1930  124E  00C9               	movwf	??_main^(0+128)
  1931  124F  0C49               	rrf	??_main^(0+128),w
  1932  1250  390F               	andlw	15
  1933  1251  3A01               	xorlw	1
  1934  1252  1D03               	skipz
  1935  1253  2A55               	goto	u6181
  1936  1254  2A56               	goto	u6180
  1937  1255                     u6181:
  1938  1255  2A65               	goto	l3940
  1939  1256                     u6180:
  1940  1256                     l3936:
  1941                           
  1942                           ;main.c: 129: 
  1943  1256  3000               	movlw	0
  1944  1257  120A  158A  20DB  160A  118A  	fcall	_ADC
  1945  125C  1683               	bsf	3,5	;RP0=1, select bank1
  1946  125D  1303               	bcf	3,6	;RP1=0, select bank1
  1947  125E  00C9               	movwf	??_main^(0+128)
  1948  125F  0849               	movf	??_main^(0+128),w
  1949  1260  00D8               	movwf	_valor2^(0+128)
  1950  1261                     l3938:
  1951                           
  1952                           ;main.c: 130: 
  1953  1261  30C3               	movlw	-61
  1954  1262  1283               	bcf	3,5	;RP0=0, select bank0
  1955  1263  1303               	bcf	3,6	;RP1=0, select bank0
  1956  1264  059F               	andwf	31,f	;volatile
  1957  1265                     l3940:
  1958                           
  1959                           ;main.c: 132:     ADCON1bits.ADFM = 0;
  1960  1265  3020               	movlw	32
  1961  1266  1683               	bsf	3,5	;RP0=1, select bank1
  1962  1267  1303               	bcf	3,6	;RP1=0, select bank1
  1963  1268  00C9               	movwf	??_main^(0+128)
  1964  1269                     u6207:
  1965  1269  0BC9               	decfsz	??_main^(0+128),f
  1966  126A  2A69               	goto	u6207
  1967  126B  0000               	nop
  1968  126C                     l3942:
  1969                           
  1970                           ;main.c: 133:     ADCON0bits.GO = 1;
  1971  126C  1283               	bcf	3,5	;RP0=0, select bank0
  1972  126D  1303               	bcf	3,6	;RP1=0, select bank0
  1973  126E  149F               	bsf	31,1	;volatile
  1974  126F  2893               	goto	l101
  1975  1270  120A  118A  280C   	ljmp	start
  1976  1273                     __end_of_main:
  1977                           
  1978                           	psect	text1
  1979  14FB                     __ptext1:	
  1980 ;; *************** function _sprintf *****************
  1981 ;; Defined at:
  1982 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  sp              2    8[BANK1 ] PTR unsigned char 
  1985 ;;		 -> cadena2(30), cadena1(30), v1(10), 
  1986 ;;  f               1   10[BANK1 ] PTR const unsigned char 
  1987 ;;		 -> STR_6(18), STR_5(18), STR_4(6), STR_3(7), 
  1988 ;;		 -> STR_2(7), 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  fval            4   34[BANK1 ] PTR const unsigned char 
  1991 ;;  tmpval          4   28[BANK1 ] struct .
  1992 ;;  val             4   20[BANK1 ] unsigned long 
  1993 ;;  prec            2   38[BANK1 ] int 
  1994 ;;  eexp            2   32[BANK1 ] int 
  1995 ;;  width           2   26[BANK1 ] int 
  1996 ;;  flag            2   24[BANK1 ] unsigned short 
  1997 ;;  cp              2    0        PTR const unsigned char 
  1998 ;;  len             2    0        unsigned int 
  1999 ;;  c               1   40[BANK1 ] unsigned char 
  2000 ;;  ap              1   19[BANK1 ] PTR void [1]
  2001 ;;		 -> ?_sprintf(2), 
  2002 ;;  d               1    0        unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  2    8[BANK1 ] int 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0       0       7       0       0
  2013 ;;      Locals:         0       0      26       0       0
  2014 ;;      Temps:          0       5       0       0       0
  2015 ;;      Totals:         0       5      33       0       0
  2016 ;;Total ram usage:       38 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    4
  2019 ;; This function calls:
  2020 ;;		___awdiv
  2021 ;;		___fladd
  2022 ;;		___fleq
  2023 ;;		___flge
  2024 ;;		___flmul
  2025 ;;		___flneg
  2026 ;;		___flsub
  2027 ;;		___fltol
  2028 ;;		___lldiv
  2029 ;;		___llmod
  2030 ;;		___wmul
  2031 ;;		___xxtofl
  2032 ;;		__div_to_l_
  2033 ;;		__tdiv_to_l_
  2034 ;;		_fround
  2035 ;;		_isdigit
  2036 ;;		_scale
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _sprintf
  2044  14FB                     _sprintf:
  2045  14FB                     l3620:	
  2046                           ;incstack = 0
  2047                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2048                           
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2051  14FB  30AB               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2052  14FC  1283               	bcf	3,5	;RP0=0, select bank0
  2053  14FD  1303               	bcf	3,6	;RP1=0, select bank0
  2054  14FE  00EA               	movwf	??_sprintf
  2055  14FF  086A               	movf	??_sprintf,w
  2056  1500  1683               	bsf	3,5	;RP0=1, select bank1
  2057  1501  1303               	bcf	3,6	;RP1=0, select bank1
  2058  1502  00B3               	movwf	sprintf@ap^(0+128)
  2059  1503                     L1:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2062  1503  120A  118A  2D9E   	goto	l3874
  2063  1506                     l3622:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2066  1506  3025               	movlw	37
  2067  1507  0648               	xorwf	sprintf@c^(0+128),w
  2068  1508  1903               	btfsc	3,2
  2069  1509  2D0B               	goto	u5671
  2070  150A  2D0C               	goto	u5670
  2071  150B                     u5671:
  2072  150B  2D24               	goto	l3628
  2073  150C                     u5670:
  2074  150C                     l3624:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2077  150C  0848               	movf	sprintf@c^(0+128),w
  2078  150D  1283               	bcf	3,5	;RP0=0, select bank0
  2079  150E  1303               	bcf	3,6	;RP1=0, select bank0
  2080  150F  00EA               	movwf	??_sprintf
  2081  1510  1683               	bsf	3,5	;RP0=1, select bank1
  2082  1511  1303               	bcf	3,6	;RP1=0, select bank1
  2083  1512  0828               	movf	sprintf@sp^(0+128),w
  2084  1513  0084               	movwf	4
  2085  1514  1783               	bsf	3,7
  2086  1515  1C29               	btfss	(sprintf@sp+1)^(0+128),0
  2087  1516  1383               	bcf	3,7
  2088  1517  1283               	bcf	3,5	;RP0=0, select bank0
  2089  1518  1303               	bcf	3,6	;RP1=0, select bank0
  2090  1519  086A               	movf	??_sprintf,w
  2091  151A  0080               	movwf	0
  2092  151B                     l3626:
  2093  151B  3001               	movlw	1
  2094  151C  1683               	bsf	3,5	;RP0=1, select bank1
  2095  151D  1303               	bcf	3,6	;RP1=0, select bank1
  2096  151E  07A8               	addwf	sprintf@sp^(0+128),f
  2097  151F  1803               	skipnc
  2098  1520  0AA9               	incf	(sprintf@sp+1)^(0+128),f
  2099  1521  3000               	movlw	0
  2100  1522  07A9               	addwf	(sprintf@sp+1)^(0+128),f
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2103  1523  2D03               	goto	L1
  2104  1524                     l3628:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2107  1524  01BA               	clrf	sprintf@width^(0+128)
  2108  1525  01BB               	clrf	(sprintf@width+1)^(0+128)
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2111  1526  01B8               	clrf	sprintf@flag^(0+128)
  2112  1527  01B9               	clrf	(sprintf@flag+1)^(0+128)
  2113  1528                     l3630:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2116  1528  082A               	movf	sprintf@f^(0+128),w
  2117  1529  0084               	movwf	4
  2118  152A  120A  158A  200A  160A  118A  	fcall	stringdir
  2119  152F  160A  158A  211A  160A  118A  	fcall	_isdigit
  2120  1534  1C03               	btfss	3,0
  2121  1535  2D37               	goto	u5681
  2122  1536  2D38               	goto	u5680
  2123  1537                     u5681:
  2124  1537  2D84               	goto	l3642
  2125  1538                     u5680:
  2126  1538                     l3632:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2129  1538  1683               	bsf	3,5	;RP0=1, select bank1
  2130  1539  1303               	bcf	3,6	;RP1=0, select bank1
  2131  153A  01BA               	clrf	sprintf@width^(0+128)
  2132  153B  01BB               	clrf	(sprintf@width+1)^(0+128)
  2133  153C                     l3634:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2136  153C  300A               	movlw	10
  2137  153D  00F3               	movwf	___wmul@multiplier
  2138  153E  3000               	movlw	0
  2139  153F  00F4               	movwf	___wmul@multiplier+1
  2140  1540  1683               	bsf	3,5	;RP0=1, select bank1
  2141  1541  1303               	bcf	3,6	;RP1=0, select bank1
  2142  1542  083B               	movf	(sprintf@width+1)^(0+128),w
  2143  1543  00F6               	movwf	___wmul@multiplicand+1
  2144  1544  083A               	movf	sprintf@width^(0+128),w
  2145  1545  00F5               	movwf	___wmul@multiplicand
  2146  1546  160A  158A  21A6  160A  118A  	fcall	___wmul
  2147  154B  0874               	movf	?___wmul+1,w
  2148  154C  1683               	bsf	3,5	;RP0=1, select bank1
  2149  154D  1303               	bcf	3,6	;RP1=0, select bank1
  2150  154E  00BB               	movwf	(sprintf@width+1)^(0+128)
  2151  154F  0873               	movf	?___wmul,w
  2152  1550  00BA               	movwf	sprintf@width^(0+128)
  2153  1551                     l3636:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2156  1551  082A               	movf	sprintf@f^(0+128),w
  2157  1552  0084               	movwf	4
  2158  1553  120A  158A  200A  160A  118A  	fcall	stringdir
  2159  1558  3ED0               	addlw	208
  2160  1559  1283               	bcf	3,5	;RP0=0, select bank0
  2161  155A  1303               	bcf	3,6	;RP1=0, select bank0
  2162  155B  00EA               	movwf	??_sprintf
  2163  155C  30FF               	movlw	255
  2164  155D  1803               	skipnc
  2165  155E  3000               	movlw	0
  2166  155F  00EB               	movwf	??_sprintf+1
  2167  1560  086A               	movf	??_sprintf,w
  2168  1561  1683               	bsf	3,5	;RP0=1, select bank1
  2169  1562  1303               	bcf	3,6	;RP1=0, select bank1
  2170  1563  07BA               	addwf	sprintf@width^(0+128),f
  2171  1564  1803               	skipnc
  2172  1565  0ABB               	incf	(sprintf@width+1)^(0+128),f
  2173  1566  1283               	bcf	3,5	;RP0=0, select bank0
  2174  1567  1303               	bcf	3,6	;RP1=0, select bank0
  2175  1568  086B               	movf	??_sprintf+1,w
  2176  1569  1683               	bsf	3,5	;RP0=1, select bank1
  2177  156A  1303               	bcf	3,6	;RP1=0, select bank1
  2178  156B  07BB               	addwf	(sprintf@width+1)^(0+128),f
  2179  156C                     l3638:
  2180  156C  3001               	movlw	1
  2181  156D  1283               	bcf	3,5	;RP0=0, select bank0
  2182  156E  1303               	bcf	3,6	;RP1=0, select bank0
  2183  156F  00EA               	movwf	??_sprintf
  2184  1570  086A               	movf	??_sprintf,w
  2185  1571  1683               	bsf	3,5	;RP0=1, select bank1
  2186  1572  1303               	bcf	3,6	;RP1=0, select bank1
  2187  1573  07AA               	addwf	sprintf@f^(0+128),f
  2188  1574                     l3640:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2191  1574  082A               	movf	sprintf@f^(0+128),w
  2192  1575  0084               	movwf	4
  2193  1576  120A  158A  200A  160A  118A  	fcall	stringdir
  2194  157B  160A  158A  211A  160A  118A  	fcall	_isdigit
  2195  1580  1803               	btfsc	3,0
  2196  1581  2D83               	goto	u5691
  2197  1582  2D84               	goto	u5690
  2198  1583                     u5691:
  2199  1583  2D3C               	goto	l3634
  2200  1584                     u5690:
  2201  1584                     l3642:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2204  1584  1683               	bsf	3,5	;RP0=1, select bank1
  2205  1585  1303               	bcf	3,6	;RP1=0, select bank1
  2206  1586  082A               	movf	sprintf@f^(0+128),w
  2207  1587  0084               	movwf	4
  2208  1588  120A  158A  200A  160A  118A  	fcall	stringdir
  2209  158D  3A2E               	xorlw	46
  2210  158E  1D03               	skipz
  2211  158F  2D91               	goto	u5701
  2212  1590  2D92               	goto	u5700
  2213  1591                     u5701:
  2214  1591  2DE7               	goto	l3658
  2215  1592                     u5700:
  2216  1592                     l3644:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2219  1592  1739               	bsf	(sprintf@flag^(0+128)+1),6
  2220  1593                     l3646:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2223  1593  3001               	movlw	1
  2224  1594  1283               	bcf	3,5	;RP0=0, select bank0
  2225  1595  1303               	bcf	3,6	;RP1=0, select bank0
  2226  1596  00EA               	movwf	??_sprintf
  2227  1597  086A               	movf	??_sprintf,w
  2228  1598  1683               	bsf	3,5	;RP0=1, select bank1
  2229  1599  1303               	bcf	3,6	;RP1=0, select bank1
  2230  159A  07AA               	addwf	sprintf@f^(0+128),f
  2231  159B                     l3648:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2234  159B  01C6               	clrf	sprintf@prec^(0+128)
  2235  159C  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2238  159D  2DD6               	goto	l3656
  2239  159E                     l3650:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2242  159E  300A               	movlw	10
  2243  159F  00F3               	movwf	___wmul@multiplier
  2244  15A0  3000               	movlw	0
  2245  15A1  00F4               	movwf	___wmul@multiplier+1
  2246  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  2247  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  2248  15A4  0847               	movf	(sprintf@prec+1)^(0+128),w
  2249  15A5  00F6               	movwf	___wmul@multiplicand+1
  2250  15A6  0846               	movf	sprintf@prec^(0+128),w
  2251  15A7  00F5               	movwf	___wmul@multiplicand
  2252  15A8  160A  158A  21A6  160A  118A  	fcall	___wmul
  2253  15AD  0874               	movf	?___wmul+1,w
  2254  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2255  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2256  15B0  00C7               	movwf	(sprintf@prec+1)^(0+128)
  2257  15B1  0873               	movf	?___wmul,w
  2258  15B2  00C6               	movwf	sprintf@prec^(0+128)
  2259  15B3                     l3652:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2262  15B3  082A               	movf	sprintf@f^(0+128),w
  2263  15B4  0084               	movwf	4
  2264  15B5  120A  158A  200A  160A  118A  	fcall	stringdir
  2265  15BA  3ED0               	addlw	208
  2266  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  2267  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  2268  15BD  00EA               	movwf	??_sprintf
  2269  15BE  30FF               	movlw	255
  2270  15BF  1803               	skipnc
  2271  15C0  3000               	movlw	0
  2272  15C1  00EB               	movwf	??_sprintf+1
  2273  15C2  086A               	movf	??_sprintf,w
  2274  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  2275  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  2276  15C5  07C6               	addwf	sprintf@prec^(0+128),f
  2277  15C6  1803               	skipnc
  2278  15C7  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  2279  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  2280  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  2281  15CA  086B               	movf	??_sprintf+1,w
  2282  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  2283  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  2284  15CD  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  2285  15CE                     l3654:
  2286  15CE  3001               	movlw	1
  2287  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  2288  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  2289  15D1  00EA               	movwf	??_sprintf
  2290  15D2  086A               	movf	??_sprintf,w
  2291  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  2292  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  2293  15D5  07AA               	addwf	sprintf@f^(0+128),f
  2294  15D6                     l3656:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2297  15D6  082A               	movf	sprintf@f^(0+128),w
  2298  15D7  0084               	movwf	4
  2299  15D8  120A  158A  200A  160A  118A  	fcall	stringdir
  2300  15DD  160A  158A  211A  160A  118A  	fcall	_isdigit
  2301  15E2  1803               	btfsc	3,0
  2302  15E3  2DE5               	goto	u5711
  2303  15E4  2DE6               	goto	u5710
  2304  15E5                     u5711:
  2305  15E5  2D9E               	goto	l3650
  2306  15E6                     u5710:
  2307  15E6  2DEF               	goto	l3664
  2308  15E7                     l3658:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2311  15E7  01C6               	clrf	sprintf@prec^(0+128)
  2312  15E8  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2313  15E9                     l3660:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2316  15E9  1639               	bsf	(sprintf@flag^(0+128)+1),4
  2317  15EA  2DEF               	goto	l3664
  2318  15EB                     l302:	
  2319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2320                           
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2323  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  2324  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  2325  15ED  1539               	bsf	(sprintf@flag^(0+128)+1),2
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2328  15EE  2E0D               	goto	l3666
  2329  15EF                     l3664:
  2330  15EF  3001               	movlw	1
  2331  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  2332  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  2333  15F2  07AA               	addwf	sprintf@f^(0+128),f
  2334  15F3  30FF               	movlw	-1
  2335  15F4  072A               	addwf	sprintf@f^(0+128),w
  2336  15F5  0084               	movwf	4
  2337  15F6  120A  158A  200A  160A  118A  	fcall	stringdir
  2338  15FB  00C8               	movwf	sprintf@c^(0+128)
  2339  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  2340  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  2341  15FE  00EA               	movwf	??_sprintf
  2342  15FF  01EB               	clrf	??_sprintf+1
  2343                           
  2344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2345                           ; Switch size 1, requested type "simple"
  2346                           ; Number of cases is 1, Range of values is 0 to 0
  2347                           ; switch strategies available:
  2348                           ; Name         Instructions Cycles
  2349                           ; simple_byte            4     3 (average)
  2350                           ; direct_byte           11     8 (fixed)
  2351                           ; jumptable            260     6 (fixed)
  2352                           ;	Chosen strategy is simple_byte
  2353  1600  086B               	movf	??_sprintf+1,w
  2354  1601  3A00               	xorlw	0	; case 0
  2355  1602  1903               	skipnz
  2356  1603  2E05               	goto	l3964
  2357  1604  2D03               	goto	L1
  2358  1605                     l3964:
  2359                           
  2360                           ; Switch size 1, requested type "simple"
  2361                           ; Number of cases is 2, Range of values is 0 to 102
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte            7     4 (average)
  2365                           ; jumptable            260     6 (fixed)
  2366                           ;	Chosen strategy is simple_byte
  2367  1605  086A               	movf	??_sprintf,w
  2368  1606  3A00               	xorlw	0	; case 0
  2369  1607  1903               	skipnz
  2370  1608  2FFD               	goto	L3
  2371  1609  3A66               	xorlw	102	; case 102
  2372  160A  1903               	skipnz
  2373  160B  2DEB               	goto	l302
  2374  160C  2D03               	goto	L1
  2375  160D                     l3666:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2378  160D  3000               	movlw	0
  2379  160E  0538               	andwf	sprintf@flag^(0+128),w
  2380  160F  1283               	bcf	3,5	;RP0=0, select bank0
  2381  1610  1303               	bcf	3,6	;RP1=0, select bank0
  2382  1611  00EA               	movwf	??_sprintf
  2383  1612  3007               	movlw	7
  2384  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2385  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2386  1615  0539               	andwf	(sprintf@flag+1)^(0+128),w
  2387  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2388  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2389  1618  00EB               	movwf	??_sprintf+1
  2390  1619  086A               	movf	??_sprintf,w
  2391  161A  046B               	iorwf	??_sprintf+1,w
  2392  161B  1903               	btfsc	3,2
  2393  161C  2E1E               	goto	u5721
  2394  161D  2E21               	goto	u5720
  2395  161E                     u5721:
  2396  161E  120A  118A  2C95   	goto	l3828
  2397  1621                     u5720:
  2398  1621                     l3668:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2401  1621  1683               	bsf	3,5	;RP0=1, select bank1
  2402  1622  1303               	bcf	3,6	;RP1=0, select bank1
  2403  1623  1E39               	btfss	(sprintf@flag+1)^(0+128),4
  2404  1624  2E26               	goto	u5731
  2405  1625  2E27               	goto	u5730
  2406  1626                     u5731:
  2407  1626  2E2B               	goto	l3672
  2408  1627                     u5730:
  2409  1627                     l3670:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2412  1627  3006               	movlw	6
  2413  1628  00C6               	movwf	sprintf@prec^(0+128)
  2414  1629  3000               	movlw	0
  2415  162A  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2416  162B                     l3672:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2419  162B  0833               	movf	sprintf@ap^(0+128),w
  2420  162C  0084               	movwf	4
  2421  162D  1383               	bcf	3,7	;select IRP bank0
  2422  162E  0800               	movf	0,w
  2423  162F  00C2               	movwf	sprintf@fval^(0+128)
  2424  1630  0A84               	incf	4,f
  2425  1631  0800               	movf	0,w
  2426  1632  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2427  1633  0A84               	incf	4,f
  2428  1634  0800               	movf	0,w
  2429  1635  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2430  1636  0A84               	incf	4,f
  2431  1637  0800               	movf	0,w
  2432  1638  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2433  1639                     l3674:
  2434  1639  3004               	movlw	4
  2435  163A  1283               	bcf	3,5	;RP0=0, select bank0
  2436  163B  1303               	bcf	3,6	;RP1=0, select bank0
  2437  163C  00EA               	movwf	??_sprintf
  2438  163D  086A               	movf	??_sprintf,w
  2439  163E  1683               	bsf	3,5	;RP0=1, select bank1
  2440  163F  1303               	bcf	3,6	;RP1=0, select bank1
  2441  1640  07B3               	addwf	sprintf@ap^(0+128),f
  2442  1641                     l3676:
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2445  1641  0845               	movf	(sprintf@fval+3)^(0+128),w
  2446  1642  00F6               	movwf	___flge@ff1+3
  2447  1643  0844               	movf	(sprintf@fval+2)^(0+128),w
  2448  1644  00F5               	movwf	___flge@ff1+2
  2449  1645  0843               	movf	(sprintf@fval+1)^(0+128),w
  2450  1646  00F4               	movwf	___flge@ff1+1
  2451  1647  0842               	movf	sprintf@fval^(0+128),w
  2452  1648  00F3               	movwf	___flge@ff1
  2453  1649  3000               	movlw	0
  2454  164A  00FA               	movwf	___flge@ff2+3
  2455  164B  3000               	movlw	0
  2456  164C  00F9               	movwf	___flge@ff2+2
  2457  164D  3000               	movlw	0
  2458  164E  00F8               	movwf	___flge@ff2+1
  2459  164F  3000               	movlw	0
  2460  1650  00F7               	movwf	___flge@ff2
  2461  1651  160A  158A  2525  160A  118A  	fcall	___flge
  2462  1656  1803               	btfsc	3,0
  2463  1657  2E59               	goto	u5741
  2464  1658  2E5A               	goto	u5740
  2465  1659                     u5741:
  2466  1659  2E77               	goto	l3682
  2467  165A                     u5740:
  2468  165A                     l3678:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2471  165A  1683               	bsf	3,5	;RP0=1, select bank1
  2472  165B  1303               	bcf	3,6	;RP1=0, select bank1
  2473  165C  0845               	movf	(sprintf@fval+3)^(0+128),w
  2474  165D  00F6               	movwf	___flneg@f1+3
  2475  165E  0844               	movf	(sprintf@fval+2)^(0+128),w
  2476  165F  00F5               	movwf	___flneg@f1+2
  2477  1660  0843               	movf	(sprintf@fval+1)^(0+128),w
  2478  1661  00F4               	movwf	___flneg@f1+1
  2479  1662  0842               	movf	sprintf@fval^(0+128),w
  2480  1663  00F3               	movwf	___flneg@f1
  2481  1664  160A  158A  20F1  160A  118A  	fcall	___flneg
  2482  1669  0876               	movf	?___flneg+3,w
  2483  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2484  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2485  166C  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2486  166D  0875               	movf	?___flneg+2,w
  2487  166E  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2488  166F  0874               	movf	?___flneg+1,w
  2489  1670  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2490  1671  0873               	movf	?___flneg,w
  2491  1672  00C2               	movwf	sprintf@fval^(0+128)
  2492  1673                     l3680:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2495  1673  3003               	movlw	3
  2496  1674  04B8               	iorwf	sprintf@flag^(0+128),f
  2497  1675  3000               	movlw	0
  2498  1676  04B9               	iorwf	(sprintf@flag+1)^(0+128),f
  2499  1677                     l3682:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2502  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2503  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2504  1679  01C0               	clrf	sprintf@eexp^(0+128)
  2505  167A  01C1               	clrf	(sprintf@eexp+1)^(0+128)
  2506  167B                     l3684:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2509  167B  0845               	movf	(sprintf@fval+3)^(0+128),w
  2510  167C  00F6               	movwf	___fleq@ff1+3
  2511  167D  0844               	movf	(sprintf@fval+2)^(0+128),w
  2512  167E  00F5               	movwf	___fleq@ff1+2
  2513  167F  0843               	movf	(sprintf@fval+1)^(0+128),w
  2514  1680  00F4               	movwf	___fleq@ff1+1
  2515  1681  0842               	movf	sprintf@fval^(0+128),w
  2516  1682  00F3               	movwf	___fleq@ff1
  2517  1683  3000               	movlw	0
  2518  1684  00FA               	movwf	___fleq@ff2+3
  2519  1685  3000               	movlw	0
  2520  1686  00F9               	movwf	___fleq@ff2+2
  2521  1687  3000               	movlw	0
  2522  1688  00F8               	movwf	___fleq@ff2+1
  2523  1689  3000               	movlw	0
  2524  168A  00F7               	movwf	___fleq@ff2
  2525  168B  160A  158A  235E  160A  118A  	fcall	___fleq
  2526  1690  1803               	btfsc	3,0
  2527  1691  2E93               	goto	u5751
  2528  1692  2E94               	goto	u5750
  2529  1693                     u5751:
  2530  1693  2F94               	goto	l3710
  2531  1694                     u5750:
  2532  1694                     l3686:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2535  1694  1003               	clrc
  2536  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2537  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2538  1697  0D44               	rlf	(sprintf@fval+2)^(0+128),w
  2539  1698  0D45               	rlf	(sprintf@fval+3)^(0+128),w
  2540  1699  3E82               	addlw	130
  2541  169A  00C0               	movwf	sprintf@eexp^(0+128)
  2542  169B  30FF               	movlw	255
  2543  169C  1803               	skipnc
  2544  169D  3000               	movlw	0
  2545  169E  00C1               	movwf	(sprintf@eexp^(0+128)+1)
  2546  169F                     l3688:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2549  169F  30FF               	movlw	255
  2550  16A0  07C0               	addwf	sprintf@eexp^(0+128),f
  2551  16A1  1803               	skipnc
  2552  16A2  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2553  16A3  30FF               	movlw	255
  2554  16A4  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2555  16A5                     l3690:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2558  16A5  3003               	movlw	3
  2559  16A6  00F3               	movwf	___wmul@multiplier
  2560  16A7  3000               	movlw	0
  2561  16A8  00F4               	movwf	___wmul@multiplier+1
  2562  16A9  0841               	movf	(sprintf@eexp+1)^(0+128),w
  2563  16AA  00F6               	movwf	___wmul@multiplicand+1
  2564  16AB  0840               	movf	sprintf@eexp^(0+128),w
  2565  16AC  00F5               	movwf	___wmul@multiplicand
  2566  16AD  160A  158A  21A6  160A  118A  	fcall	___wmul
  2567  16B2  0874               	movf	?___wmul+1,w
  2568  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2569  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2570  16B5  00C1               	movwf	(sprintf@eexp+1)^(0+128)
  2571  16B6  0873               	movf	?___wmul,w
  2572  16B7  00C0               	movwf	sprintf@eexp^(0+128)
  2573  16B8                     l3692:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2576  16B8  300A               	movlw	10
  2577  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2578  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2579  16BB  00A0               	movwf	___awdiv@divisor
  2580  16BC  3000               	movlw	0
  2581  16BD  00A1               	movwf	___awdiv@divisor+1
  2582  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2583  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2584  16C0  0841               	movf	(sprintf@eexp+1)^(0+128),w
  2585  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2586  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2587  16C3  00A3               	movwf	___awdiv@dividend+1
  2588  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2589  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2590  16C6  0840               	movf	sprintf@eexp^(0+128),w
  2591  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2592  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2593  16C9  00A2               	movwf	___awdiv@dividend
  2594  16CA  160A  158A  24BC  160A  118A  	fcall	___awdiv
  2595  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2596  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2597  16D1  0821               	movf	?___awdiv+1,w
  2598  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2599  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2600  16D4  00C1               	movwf	(sprintf@eexp+1)^(0+128)
  2601  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2602  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2603  16D7  0820               	movf	?___awdiv,w
  2604  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2605  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2606  16DA  00C0               	movwf	sprintf@eexp^(0+128)
  2607  16DB                     l3694:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2610  16DB  1FC1               	btfss	(sprintf@eexp+1)^(0+128),7
  2611  16DC  2EDE               	goto	u5761
  2612  16DD  2EDF               	goto	u5760
  2613  16DE                     u5761:
  2614  16DE  2EE5               	goto	l3698
  2615  16DF                     u5760:
  2616  16DF                     l3696:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2619  16DF  30FF               	movlw	255
  2620  16E0  07C0               	addwf	sprintf@eexp^(0+128),f
  2621  16E1  1803               	skipnc
  2622  16E2  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2623  16E3  30FF               	movlw	255
  2624  16E4  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2625  16E5                     l3698:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2628  16E5  0340               	decf	sprintf@eexp^(0+128),w
  2629  16E6  3AFF               	xorlw	255
  2630  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2631  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2632  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2633  16EE  0845               	movf	?_scale+3,w
  2634  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2635  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2636  16F1  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2637  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2638  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2639  16F4  0844               	movf	?_scale+2,w
  2640  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2641  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2642  16F7  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2643  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2644  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2645  16FA  0843               	movf	?_scale+1,w
  2646  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2647  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2648  16FD  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2649  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2650  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2651  1700  0842               	movf	?_scale,w
  2652  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2653  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2654  1703  00BC               	movwf	sprintf@tmpval^(0+128)
  2655  1704                     l3700:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2658  1704  0845               	movf	(sprintf@fval+3)^(0+128),w
  2659  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2660  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2661  1707  00AB               	movwf	___flmul@b+3
  2662  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2663  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2664  170A  0844               	movf	(sprintf@fval+2)^(0+128),w
  2665  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2666  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2667  170D  00AA               	movwf	___flmul@b+2
  2668  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2669  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2670  1710  0843               	movf	(sprintf@fval+1)^(0+128),w
  2671  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2672  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2673  1713  00A9               	movwf	___flmul@b+1
  2674  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2675  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2676  1716  0842               	movf	sprintf@fval^(0+128),w
  2677  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2678  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2679  1719  00A8               	movwf	___flmul@b
  2680  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2681  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2682  171C  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2683  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2684  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2685  171F  00AF               	movwf	___flmul@a+3
  2686  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2687  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2688  1722  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2689  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2690  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2691  1725  00AE               	movwf	___flmul@a+2
  2692  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2693  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2694  1728  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2695  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2696  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2697  172B  00AD               	movwf	___flmul@a+1
  2698  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2699  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2700  172E  083C               	movf	sprintf@tmpval^(0+128),w
  2701  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2702  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2703  1731  00AC               	movwf	___flmul@a
  2704  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2705  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2706  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2707  1739  082B               	movf	?___flmul+3,w
  2708  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2709  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2710  173C  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2711  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2712  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2713  173F  082A               	movf	?___flmul+2,w
  2714  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2715  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2716  1742  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2717  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2718  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2719  1745  0829               	movf	?___flmul+1,w
  2720  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2721  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2722  1748  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2723  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2724  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2725  174B  0828               	movf	?___flmul,w
  2726  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2727  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2728  174E  00BC               	movwf	sprintf@tmpval^(0+128)
  2729  174F                     l3702:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2732  174F  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2733  1750  00F6               	movwf	___flge@ff1+3
  2734  1751  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2735  1752  00F5               	movwf	___flge@ff1+2
  2736  1753  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2737  1754  00F4               	movwf	___flge@ff1+1
  2738  1755  083C               	movf	sprintf@tmpval^(0+128),w
  2739  1756  00F3               	movwf	___flge@ff1
  2740  1757  303F               	movlw	63
  2741  1758  00FA               	movwf	___flge@ff2+3
  2742  1759  3080               	movlw	128
  2743  175A  00F9               	movwf	___flge@ff2+2
  2744  175B  3000               	movlw	0
  2745  175C  00F8               	movwf	___flge@ff2+1
  2746  175D  3000               	movlw	0
  2747  175E  00F7               	movwf	___flge@ff2
  2748  175F  160A  158A  2525  160A  118A  	fcall	___flge
  2749  1764  1803               	btfsc	3,0
  2750  1765  2F67               	goto	u5771
  2751  1766  2F68               	goto	u5770
  2752  1767                     u5771:
  2753  1767  2F71               	goto	l3706
  2754  1768                     u5770:
  2755  1768                     l3704:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2758  1768  30FF               	movlw	255
  2759  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2760  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2761  176B  07C0               	addwf	sprintf@eexp^(0+128),f
  2762  176C  1803               	skipnc
  2763  176D  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2764  176E  30FF               	movlw	255
  2765  176F  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2766  1770  2F94               	goto	l3710
  2767  1771                     l3706:
  2768  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2769  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2770  1773  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2771  1774  00F6               	movwf	___flge@ff1+3
  2772  1775  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2773  1776  00F5               	movwf	___flge@ff1+2
  2774  1777  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2775  1778  00F4               	movwf	___flge@ff1+1
  2776  1779  083C               	movf	sprintf@tmpval^(0+128),w
  2777  177A  00F3               	movwf	___flge@ff1
  2778  177B  3041               	movlw	65
  2779  177C  00FA               	movwf	___flge@ff2+3
  2780  177D  3020               	movlw	32
  2781  177E  00F9               	movwf	___flge@ff2+2
  2782  177F  3000               	movlw	0
  2783  1780  00F8               	movwf	___flge@ff2+1
  2784  1781  3000               	movlw	0
  2785  1782  00F7               	movwf	___flge@ff2
  2786  1783  160A  158A  2525  160A  118A  	fcall	___flge
  2787  1788  1C03               	btfss	3,0
  2788  1789  2F8B               	goto	u5781
  2789  178A  2F8C               	goto	u5780
  2790  178B                     u5781:
  2791  178B  2F94               	goto	l3710
  2792  178C                     u5780:
  2793  178C                     l3708:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2796  178C  3001               	movlw	1
  2797  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2798  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2799  178F  07C0               	addwf	sprintf@eexp^(0+128),f
  2800  1790  1803               	skipnc
  2801  1791  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2802  1792  3000               	movlw	0
  2803  1793  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2804  1794                     l3710:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2807  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2808  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2809  1796  0847               	movf	(sprintf@prec+1)^(0+128),w
  2810  1797  3A80               	xorlw	128
  2811  1798  00FF               	movwf	btemp+1
  2812  1799  3080               	movlw	128
  2813  179A  027F               	subwf	btemp+1,w
  2814  179B  1D03               	skipz
  2815  179C  2F9F               	goto	u5795
  2816  179D  300D               	movlw	13
  2817  179E  0246               	subwf	sprintf@prec^(0+128),w
  2818  179F                     u5795:
  2819  179F  1803               	skipnc
  2820  17A0  2FA2               	goto	u5791
  2821  17A1  2FA3               	goto	u5790
  2822  17A2                     u5791:
  2823  17A2  2FEA               	goto	l3714
  2824  17A3                     u5790:
  2825  17A3                     l3712:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2828  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2829  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2830  17A5  0846               	movf	sprintf@prec^(0+128),w
  2831  17A6  120A  118A  25C1  160A  118A  	fcall	_fround
  2832  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2833  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2834  17AD  0845               	movf	?_fround+3,w
  2835  17AE  00D9               	movwf	___fladd@b+3
  2836  17AF  0844               	movf	?_fround+2,w
  2837  17B0  00D8               	movwf	___fladd@b+2
  2838  17B1  0843               	movf	?_fround+1,w
  2839  17B2  00D7               	movwf	___fladd@b+1
  2840  17B3  0842               	movf	?_fround,w
  2841  17B4  00D6               	movwf	___fladd@b
  2842  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2843  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2844  17B7  0845               	movf	(sprintf@fval+3)^(0+128),w
  2845  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2846  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2847  17BA  00DD               	movwf	___fladd@a+3
  2848  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2849  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2850  17BD  0844               	movf	(sprintf@fval+2)^(0+128),w
  2851  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2852  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2853  17C0  00DC               	movwf	___fladd@a+2
  2854  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2855  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2856  17C3  0843               	movf	(sprintf@fval+1)^(0+128),w
  2857  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2858  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2859  17C6  00DB               	movwf	___fladd@a+1
  2860  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2861  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2862  17C9  0842               	movf	sprintf@fval^(0+128),w
  2863  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2864  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2865  17CC  00DA               	movwf	___fladd@a
  2866  17CD  160A  118A  2273  160A  118A  	fcall	___fladd
  2867  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2868  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2869  17D4  0859               	movf	?___fladd+3,w
  2870  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2871  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2872  17D7  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2873  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2874  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2875  17DA  0858               	movf	?___fladd+2,w
  2876  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2877  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2878  17DD  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2879  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2880  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2881  17E0  0857               	movf	?___fladd+1,w
  2882  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2883  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2884  17E3  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2885  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2886  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2887  17E6  0856               	movf	?___fladd,w
  2888  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2889  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2890  17E9  00C2               	movwf	sprintf@fval^(0+128)
  2891  17EA                     l3714:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2894  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2895  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2896  17EC  0841               	movf	(sprintf@eexp+1)^(0+128),w
  2897  17ED  3A80               	xorlw	128
  2898  17EE  00FF               	movwf	btemp+1
  2899  17EF  3080               	movlw	128
  2900  17F0  027F               	subwf	btemp+1,w
  2901  17F1  1D03               	skipz
  2902  17F2  2FF5               	goto	u5805
  2903  17F3  300A               	movlw	10
  2904  17F4  0240               	subwf	sprintf@eexp^(0+128),w
  2905  17F5                     u5805:
  2906  17F5  1803               	skipnc
  2907  17F6  2FFA               	goto	u5801
  2908  17F7  120A  118A  2828   	goto	u5800
  2909  17FA                     u5801:
  2910  17FA  120A  118A  2879   	goto	l3722
  2911  17FD                     L3:
  2912  17FD                     L2:
  2913  17FD  120A  118A  2DB8   	ljmp	l3876
  2914                           
  2915                           	psect	text2
  2916  0C9D                     __ptext2:	
  2917 ;; *************** function _scale *****************
  2918 ;; Defined at:
  2919 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  scl             1    wreg     char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  scl             1   52[BANK0 ] char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  4   34[BANK0 ] char 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       4       0       0       0
  2934 ;;      Locals:         0       5       0       0       0
  2935 ;;      Temps:          0      10       0       0       0
  2936 ;;      Totals:         0      19       0       0       0
  2937 ;;Total ram usage:       19 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    3
  2940 ;; This function calls:
  2941 ;;		___awdiv
  2942 ;;		___awmod
  2943 ;;		___flmul
  2944 ;; This function is called by:
  2945 ;;		_sprintf
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _scale
  2951  0C9D                     _scale:
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2955                           ;scale@scl stored from wreg
  2956  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2958  0C9F  00D4               	movwf	scale@scl
  2959  0CA0                     l2812:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2962  0CA0  1FD4               	btfss	scale@scl,7
  2963  0CA1  2CA3               	goto	u4111
  2964  0CA2  2CA4               	goto	u4110
  2965  0CA3                     u4111:
  2966  0CA3  2E53               	goto	l2834
  2967  0CA4                     u4110:
  2968  0CA4                     l2814:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2971  0CA4  09D4               	comf	scale@scl,f
  2972  0CA5  0AD4               	incf	scale@scl,f
  2973  0CA6                     l2816:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2976  0CA6  0854               	movf	scale@scl,w
  2977  0CA7  3A80               	xorlw	128
  2978  0CA8  3E12               	addlw	-238
  2979  0CA9  1C03               	skipc
  2980  0CAA  2CAC               	goto	u4121
  2981  0CAB  2CAD               	goto	u4120
  2982  0CAC                     u4121:
  2983  0CAC  2D97               	goto	l2824
  2984  0CAD                     u4120:
  2985  0CAD                     l2818:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2988  0CAD  300A               	movlw	10
  2989  0CAE  00A0               	movwf	___awdiv@divisor
  2990  0CAF  3000               	movlw	0
  2991  0CB0  00A1               	movwf	___awdiv@divisor+1
  2992  0CB1  0854               	movf	scale@scl,w
  2993  0CB2  00F5               	movwf	___awmod@dividend
  2994  0CB3  01F6               	clrf	___awmod@dividend+1
  2995  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2996  0CB5  03F6               	decf	___awmod@dividend+1,f
  2997  0CB6  3064               	movlw	100
  2998  0CB7  00F3               	movwf	___awmod@divisor
  2999  0CB8  3000               	movlw	0
  3000  0CB9  00F4               	movwf	___awmod@divisor+1
  3001  0CBA  120A  158A  20E3  120A  158A  	fcall	___awmod
  3002  0CBF  0874               	movf	?___awmod+1,w
  3003  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0CC2  00A3               	movwf	___awdiv@dividend+1
  3006  0CC3  0873               	movf	?___awmod,w
  3007  0CC4  00A2               	movwf	___awdiv@dividend
  3008  0CC5  160A  158A  24BC  120A  158A  	fcall	___awdiv
  3009  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0CCC  0820               	movf	?___awdiv,w
  3012  0CCD  00C6               	movwf	??_scale
  3013  0CCE  3001               	movlw	1
  3014  0CCF                     u4135:
  3015  0CCF  1003               	clrc
  3016  0CD0  0DC6               	rlf	??_scale,f
  3017  0CD1  3EFF               	addlw	-1
  3018  0CD2  1D03               	skipz
  3019  0CD3  2CCF               	goto	u4135
  3020  0CD4  1003               	clrc
  3021  0CD5  0D46               	rlf	??_scale,w
  3022  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3023  0CD7  0084               	movwf	4
  3024  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  3025  0CDD  00C7               	movwf	??_scale+1
  3026  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  3027  0CE3  00C8               	movwf	??_scale+2
  3028  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  3029  0CE9  00C9               	movwf	??_scale+3
  3030  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  3031  0CEF  00CA               	movwf	??_scale+4
  3032  0CF0  084A               	movf	??_scale+4,w
  3033  0CF1  00AB               	movwf	___flmul@b+3
  3034  0CF2  0849               	movf	??_scale+3,w
  3035  0CF3  00AA               	movwf	___flmul@b+2
  3036  0CF4  0848               	movf	??_scale+2,w
  3037  0CF5  00A9               	movwf	___flmul@b+1
  3038  0CF6  0847               	movf	??_scale+1,w
  3039  0CF7  00A8               	movwf	___flmul@b
  3040  0CF8  3064               	movlw	100
  3041  0CF9  00A0               	movwf	___awdiv@divisor
  3042  0CFA  3000               	movlw	0
  3043  0CFB  00A1               	movwf	___awdiv@divisor+1
  3044  0CFC  0854               	movf	scale@scl,w
  3045  0CFD  00A2               	movwf	___awdiv@dividend
  3046  0CFE  01A3               	clrf	___awdiv@dividend+1
  3047  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3048  0D00  03A3               	decf	___awdiv@dividend+1,f
  3049  0D01  160A  158A  24BC  120A  158A  	fcall	___awdiv
  3050  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0D08  0820               	movf	?___awdiv,w
  3053  0D09  00CB               	movwf	??_scale+5
  3054  0D0A  3001               	movlw	1
  3055  0D0B                     u4145:
  3056  0D0B  1003               	clrc
  3057  0D0C  0DCB               	rlf	??_scale+5,f
  3058  0D0D  3EFF               	addlw	-1
  3059  0D0E  1D03               	skipz
  3060  0D0F  2D0B               	goto	u4145
  3061  0D10  1003               	clrc
  3062  0D11  0D4B               	rlf	??_scale+5,w
  3063  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3064  0D13  0084               	movwf	4
  3065  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  3066  0D19  00CC               	movwf	??_scale+6
  3067  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3068  0D1F  00CD               	movwf	??_scale+7
  3069  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  3070  0D25  00CE               	movwf	??_scale+8
  3071  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  3072  0D2B  00CF               	movwf	??_scale+9
  3073  0D2C  084F               	movf	??_scale+9,w
  3074  0D2D  00AF               	movwf	___flmul@a+3
  3075  0D2E  084E               	movf	??_scale+8,w
  3076  0D2F  00AE               	movwf	___flmul@a+2
  3077  0D30  084D               	movf	??_scale+7,w
  3078  0D31  00AD               	movwf	___flmul@a+1
  3079  0D32  084C               	movf	??_scale+6,w
  3080  0D33  00AC               	movwf	___flmul@a
  3081  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3082  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0D3B  082B               	movf	?___flmul+3,w
  3085  0D3C  00D3               	movwf	_scale$1177+3
  3086  0D3D  082A               	movf	?___flmul+2,w
  3087  0D3E  00D2               	movwf	_scale$1177+2
  3088  0D3F  0829               	movf	?___flmul+1,w
  3089  0D40  00D1               	movwf	_scale$1177+1
  3090  0D41  0828               	movf	?___flmul,w
  3091  0D42  00D0               	movwf	_scale$1177
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3094  0D43  300A               	movlw	10
  3095  0D44  00F3               	movwf	___awmod@divisor
  3096  0D45  3000               	movlw	0
  3097  0D46  00F4               	movwf	___awmod@divisor+1
  3098  0D47  0854               	movf	scale@scl,w
  3099  0D48  00F5               	movwf	___awmod@dividend
  3100  0D49  01F6               	clrf	___awmod@dividend+1
  3101  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3102  0D4B  03F6               	decf	___awmod@dividend+1,f
  3103  0D4C  120A  158A  20E3  120A  158A  	fcall	___awmod
  3104  0D51  0873               	movf	?___awmod,w
  3105  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0D54  00C6               	movwf	??_scale
  3108  0D55  3001               	movlw	1
  3109  0D56                     u4155:
  3110  0D56  1003               	clrc
  3111  0D57  0DC6               	rlf	??_scale,f
  3112  0D58  3EFF               	addlw	-1
  3113  0D59  1D03               	skipz
  3114  0D5A  2D56               	goto	u4155
  3115  0D5B  1003               	clrc
  3116  0D5C  0D46               	rlf	??_scale,w
  3117  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3118  0D5E  0084               	movwf	4
  3119  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  3120  0D64  00C7               	movwf	??_scale+1
  3121  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  3122  0D6A  00C8               	movwf	??_scale+2
  3123  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3124  0D70  00C9               	movwf	??_scale+3
  3125  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3126  0D76  00CA               	movwf	??_scale+4
  3127  0D77  084A               	movf	??_scale+4,w
  3128  0D78  00AB               	movwf	___flmul@b+3
  3129  0D79  0849               	movf	??_scale+3,w
  3130  0D7A  00AA               	movwf	___flmul@b+2
  3131  0D7B  0848               	movf	??_scale+2,w
  3132  0D7C  00A9               	movwf	___flmul@b+1
  3133  0D7D  0847               	movf	??_scale+1,w
  3134  0D7E  00A8               	movwf	___flmul@b
  3135  0D7F  0853               	movf	_scale$1177+3,w
  3136  0D80  00AF               	movwf	___flmul@a+3
  3137  0D81  0852               	movf	_scale$1177+2,w
  3138  0D82  00AE               	movwf	___flmul@a+2
  3139  0D83  0851               	movf	_scale$1177+1,w
  3140  0D84  00AD               	movwf	___flmul@a+1
  3141  0D85  0850               	movf	_scale$1177,w
  3142  0D86  00AC               	movwf	___flmul@a
  3143  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3144  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0D8E  082B               	movf	?___flmul+3,w
  3147  0D8F  00C5               	movwf	?_scale+3
  3148  0D90  082A               	movf	?___flmul+2,w
  3149  0D91  00C4               	movwf	?_scale+2
  3150  0D92  0829               	movf	?___flmul+1,w
  3151  0D93  00C3               	movwf	?_scale+1
  3152  0D94  0828               	movf	?___flmul,w
  3153  0D95  00C2               	movwf	?_scale
  3154  0D96  2FFF               	goto	l280
  3155  0D97                     l2824:
  3156  0D97  0854               	movf	scale@scl,w
  3157  0D98  3A80               	xorlw	128
  3158  0D99  3E75               	addlw	-139
  3159  0D9A  1C03               	skipc
  3160  0D9B  2D9D               	goto	u4161
  3161  0D9C  2D9E               	goto	u4160
  3162  0D9D                     u4161:
  3163  0D9D  2E26               	goto	l2830
  3164  0D9E                     u4160:
  3165  0D9E                     l2826:
  3166                           
  3167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3168  0D9E  300A               	movlw	10
  3169  0D9F  00F3               	movwf	___awmod@divisor
  3170  0DA0  3000               	movlw	0
  3171  0DA1  00F4               	movwf	___awmod@divisor+1
  3172  0DA2  0854               	movf	scale@scl,w
  3173  0DA3  00F5               	movwf	___awmod@dividend
  3174  0DA4  01F6               	clrf	___awmod@dividend+1
  3175  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3176  0DA6  03F6               	decf	___awmod@dividend+1,f
  3177  0DA7  120A  158A  20E3  120A  158A  	fcall	___awmod
  3178  0DAC  0873               	movf	?___awmod,w
  3179  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0DAF  00C6               	movwf	??_scale
  3182  0DB0  3001               	movlw	1
  3183  0DB1                     u4175:
  3184  0DB1  1003               	clrc
  3185  0DB2  0DC6               	rlf	??_scale,f
  3186  0DB3  3EFF               	addlw	-1
  3187  0DB4  1D03               	skipz
  3188  0DB5  2DB1               	goto	u4175
  3189  0DB6  1003               	clrc
  3190  0DB7  0D46               	rlf	??_scale,w
  3191  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3192  0DB9  0084               	movwf	4
  3193  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3194  0DBF  00C7               	movwf	??_scale+1
  3195  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3196  0DC5  00C8               	movwf	??_scale+2
  3197  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3198  0DCB  00C9               	movwf	??_scale+3
  3199  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3200  0DD1  00CA               	movwf	??_scale+4
  3201  0DD2  084A               	movf	??_scale+4,w
  3202  0DD3  00AB               	movwf	___flmul@b+3
  3203  0DD4  0849               	movf	??_scale+3,w
  3204  0DD5  00AA               	movwf	___flmul@b+2
  3205  0DD6  0848               	movf	??_scale+2,w
  3206  0DD7  00A9               	movwf	___flmul@b+1
  3207  0DD8  0847               	movf	??_scale+1,w
  3208  0DD9  00A8               	movwf	___flmul@b
  3209  0DDA  300A               	movlw	10
  3210  0DDB  00A0               	movwf	___awdiv@divisor
  3211  0DDC  3000               	movlw	0
  3212  0DDD  00A1               	movwf	___awdiv@divisor+1
  3213  0DDE  0854               	movf	scale@scl,w
  3214  0DDF  00A2               	movwf	___awdiv@dividend
  3215  0DE0  01A3               	clrf	___awdiv@dividend+1
  3216  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3217  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3218  0DE3  160A  158A  24BC  120A  158A  	fcall	___awdiv
  3219  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0DEA  0820               	movf	?___awdiv,w
  3222  0DEB  00CB               	movwf	??_scale+5
  3223  0DEC  3001               	movlw	1
  3224  0DED                     u4185:
  3225  0DED  1003               	clrc
  3226  0DEE  0DCB               	rlf	??_scale+5,f
  3227  0DEF  3EFF               	addlw	-1
  3228  0DF0  1D03               	skipz
  3229  0DF1  2DED               	goto	u4185
  3230  0DF2  1003               	clrc
  3231  0DF3  0D4B               	rlf	??_scale+5,w
  3232  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3233  0DF5  0084               	movwf	4
  3234  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3235  0DFB  00CC               	movwf	??_scale+6
  3236  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3237  0E01  00CD               	movwf	??_scale+7
  3238  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3239  0E07  00CE               	movwf	??_scale+8
  3240  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3241  0E0D  00CF               	movwf	??_scale+9
  3242  0E0E  084F               	movf	??_scale+9,w
  3243  0E0F  00AF               	movwf	___flmul@a+3
  3244  0E10  084E               	movf	??_scale+8,w
  3245  0E11  00AE               	movwf	___flmul@a+2
  3246  0E12  084D               	movf	??_scale+7,w
  3247  0E13  00AD               	movwf	___flmul@a+1
  3248  0E14  084C               	movf	??_scale+6,w
  3249  0E15  00AC               	movwf	___flmul@a
  3250  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3251  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0E1D  082B               	movf	?___flmul+3,w
  3254  0E1E  00C5               	movwf	?_scale+3
  3255  0E1F  082A               	movf	?___flmul+2,w
  3256  0E20  00C4               	movwf	?_scale+2
  3257  0E21  0829               	movf	?___flmul+1,w
  3258  0E22  00C3               	movwf	?_scale+1
  3259  0E23  0828               	movf	?___flmul,w
  3260  0E24  00C2               	movwf	?_scale
  3261  0E25  2FFF               	goto	l280
  3262  0E26                     l2830:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3265  0E26  0854               	movf	scale@scl,w
  3266  0E27  00C6               	movwf	??_scale
  3267  0E28  3001               	movlw	1
  3268  0E29                     u4195:
  3269  0E29  1003               	clrc
  3270  0E2A  0DC6               	rlf	??_scale,f
  3271  0E2B  3EFF               	addlw	-1
  3272  0E2C  1D03               	skipz
  3273  0E2D  2E29               	goto	u4195
  3274  0E2E  1003               	clrc
  3275  0E2F  0D46               	rlf	??_scale,w
  3276  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3277  0E31  0084               	movwf	4
  3278  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3279  0E37  00C7               	movwf	??_scale+1
  3280  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3281  0E3D  00C8               	movwf	??_scale+2
  3282  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3283  0E43  00C9               	movwf	??_scale+3
  3284  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3285  0E49  00CA               	movwf	??_scale+4
  3286  0E4A  084A               	movf	??_scale+4,w
  3287  0E4B  00C5               	movwf	?_scale+3
  3288  0E4C  0849               	movf	??_scale+3,w
  3289  0E4D  00C4               	movwf	?_scale+2
  3290  0E4E  0848               	movf	??_scale+2,w
  3291  0E4F  00C3               	movwf	?_scale+1
  3292  0E50  0847               	movf	??_scale+1,w
  3293  0E51  00C2               	movwf	?_scale
  3294  0E52  2FFF               	goto	l280
  3295  0E53                     l2834:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3298  0E53  0854               	movf	scale@scl,w
  3299  0E54  3A80               	xorlw	128
  3300  0E55  3E12               	addlw	-238
  3301  0E56  1C03               	skipc
  3302  0E57  2E59               	goto	u4201
  3303  0E58  2E5A               	goto	u4200
  3304  0E59                     u4201:
  3305  0E59  2F44               	goto	l2842
  3306  0E5A                     u4200:
  3307  0E5A                     l2836:
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3310  0E5A  300A               	movlw	10
  3311  0E5B  00A0               	movwf	___awdiv@divisor
  3312  0E5C  3000               	movlw	0
  3313  0E5D  00A1               	movwf	___awdiv@divisor+1
  3314  0E5E  0854               	movf	scale@scl,w
  3315  0E5F  00F5               	movwf	___awmod@dividend
  3316  0E60  01F6               	clrf	___awmod@dividend+1
  3317  0E61  1BF5               	btfsc	___awmod@dividend,7
  3318  0E62  03F6               	decf	___awmod@dividend+1,f
  3319  0E63  3064               	movlw	100
  3320  0E64  00F3               	movwf	___awmod@divisor
  3321  0E65  3000               	movlw	0
  3322  0E66  00F4               	movwf	___awmod@divisor+1
  3323  0E67  120A  158A  20E3  120A  158A  	fcall	___awmod
  3324  0E6C  0874               	movf	?___awmod+1,w
  3325  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0E6F  00A3               	movwf	___awdiv@dividend+1
  3328  0E70  0873               	movf	?___awmod,w
  3329  0E71  00A2               	movwf	___awdiv@dividend
  3330  0E72  160A  158A  24BC  120A  158A  	fcall	___awdiv
  3331  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0E79  0820               	movf	?___awdiv,w
  3334  0E7A  00C6               	movwf	??_scale
  3335  0E7B  3001               	movlw	1
  3336  0E7C                     u4215:
  3337  0E7C  1003               	clrc
  3338  0E7D  0DC6               	rlf	??_scale,f
  3339  0E7E  3EFF               	addlw	-1
  3340  0E7F  1D03               	skipz
  3341  0E80  2E7C               	goto	u4215
  3342  0E81  1003               	clrc
  3343  0E82  0D46               	rlf	??_scale,w
  3344  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3345  0E84  0084               	movwf	4
  3346  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3347  0E8A  00C7               	movwf	??_scale+1
  3348  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3349  0E90  00C8               	movwf	??_scale+2
  3350  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3351  0E96  00C9               	movwf	??_scale+3
  3352  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3353  0E9C  00CA               	movwf	??_scale+4
  3354  0E9D  084A               	movf	??_scale+4,w
  3355  0E9E  00AB               	movwf	___flmul@b+3
  3356  0E9F  0849               	movf	??_scale+3,w
  3357  0EA0  00AA               	movwf	___flmul@b+2
  3358  0EA1  0848               	movf	??_scale+2,w
  3359  0EA2  00A9               	movwf	___flmul@b+1
  3360  0EA3  0847               	movf	??_scale+1,w
  3361  0EA4  00A8               	movwf	___flmul@b
  3362  0EA5  3064               	movlw	100
  3363  0EA6  00A0               	movwf	___awdiv@divisor
  3364  0EA7  3000               	movlw	0
  3365  0EA8  00A1               	movwf	___awdiv@divisor+1
  3366  0EA9  0854               	movf	scale@scl,w
  3367  0EAA  00A2               	movwf	___awdiv@dividend
  3368  0EAB  01A3               	clrf	___awdiv@dividend+1
  3369  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3370  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3371  0EAE  160A  158A  24BC  120A  158A  	fcall	___awdiv
  3372  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0EB5  0820               	movf	?___awdiv,w
  3375  0EB6  00CB               	movwf	??_scale+5
  3376  0EB7  3001               	movlw	1
  3377  0EB8                     u4225:
  3378  0EB8  1003               	clrc
  3379  0EB9  0DCB               	rlf	??_scale+5,f
  3380  0EBA  3EFF               	addlw	-1
  3381  0EBB  1D03               	skipz
  3382  0EBC  2EB8               	goto	u4225
  3383  0EBD  1003               	clrc
  3384  0EBE  0D4B               	rlf	??_scale+5,w
  3385  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3386  0EC0  0084               	movwf	4
  3387  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  3388  0EC6  00CC               	movwf	??_scale+6
  3389  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  3390  0ECC  00CD               	movwf	??_scale+7
  3391  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  3392  0ED2  00CE               	movwf	??_scale+8
  3393  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  3394  0ED8  00CF               	movwf	??_scale+9
  3395  0ED9  084F               	movf	??_scale+9,w
  3396  0EDA  00AF               	movwf	___flmul@a+3
  3397  0EDB  084E               	movf	??_scale+8,w
  3398  0EDC  00AE               	movwf	___flmul@a+2
  3399  0EDD  084D               	movf	??_scale+7,w
  3400  0EDE  00AD               	movwf	___flmul@a+1
  3401  0EDF  084C               	movf	??_scale+6,w
  3402  0EE0  00AC               	movwf	___flmul@a
  3403  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3404  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0EE8  082B               	movf	?___flmul+3,w
  3407  0EE9  00D3               	movwf	_scale$1177+3
  3408  0EEA  082A               	movf	?___flmul+2,w
  3409  0EEB  00D2               	movwf	_scale$1177+2
  3410  0EEC  0829               	movf	?___flmul+1,w
  3411  0EED  00D1               	movwf	_scale$1177+1
  3412  0EEE  0828               	movf	?___flmul,w
  3413  0EEF  00D0               	movwf	_scale$1177
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3416  0EF0  300A               	movlw	10
  3417  0EF1  00F3               	movwf	___awmod@divisor
  3418  0EF2  3000               	movlw	0
  3419  0EF3  00F4               	movwf	___awmod@divisor+1
  3420  0EF4  0854               	movf	scale@scl,w
  3421  0EF5  00F5               	movwf	___awmod@dividend
  3422  0EF6  01F6               	clrf	___awmod@dividend+1
  3423  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3424  0EF8  03F6               	decf	___awmod@dividend+1,f
  3425  0EF9  120A  158A  20E3  120A  158A  	fcall	___awmod
  3426  0EFE  0873               	movf	?___awmod,w
  3427  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0F01  00C6               	movwf	??_scale
  3430  0F02  3001               	movlw	1
  3431  0F03                     u4235:
  3432  0F03  1003               	clrc
  3433  0F04  0DC6               	rlf	??_scale,f
  3434  0F05  3EFF               	addlw	-1
  3435  0F06  1D03               	skipz
  3436  0F07  2F03               	goto	u4235
  3437  0F08  1003               	clrc
  3438  0F09  0D46               	rlf	??_scale,w
  3439  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3440  0F0B  0084               	movwf	4
  3441  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3442  0F11  00C7               	movwf	??_scale+1
  3443  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  3444  0F17  00C8               	movwf	??_scale+2
  3445  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  3446  0F1D  00C9               	movwf	??_scale+3
  3447  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  3448  0F23  00CA               	movwf	??_scale+4
  3449  0F24  084A               	movf	??_scale+4,w
  3450  0F25  00AB               	movwf	___flmul@b+3
  3451  0F26  0849               	movf	??_scale+3,w
  3452  0F27  00AA               	movwf	___flmul@b+2
  3453  0F28  0848               	movf	??_scale+2,w
  3454  0F29  00A9               	movwf	___flmul@b+1
  3455  0F2A  0847               	movf	??_scale+1,w
  3456  0F2B  00A8               	movwf	___flmul@b
  3457  0F2C  0853               	movf	_scale$1177+3,w
  3458  0F2D  00AF               	movwf	___flmul@a+3
  3459  0F2E  0852               	movf	_scale$1177+2,w
  3460  0F2F  00AE               	movwf	___flmul@a+2
  3461  0F30  0851               	movf	_scale$1177+1,w
  3462  0F31  00AD               	movwf	___flmul@a+1
  3463  0F32  0850               	movf	_scale$1177,w
  3464  0F33  00AC               	movwf	___flmul@a
  3465  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3466  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0F3B  082B               	movf	?___flmul+3,w
  3469  0F3C  00C5               	movwf	?_scale+3
  3470  0F3D  082A               	movf	?___flmul+2,w
  3471  0F3E  00C4               	movwf	?_scale+2
  3472  0F3F  0829               	movf	?___flmul+1,w
  3473  0F40  00C3               	movwf	?_scale+1
  3474  0F41  0828               	movf	?___flmul,w
  3475  0F42  00C2               	movwf	?_scale
  3476  0F43  2FFF               	goto	l280
  3477  0F44                     l2842:
  3478  0F44  0854               	movf	scale@scl,w
  3479  0F45  3A80               	xorlw	128
  3480  0F46  3E75               	addlw	-139
  3481  0F47  1C03               	skipc
  3482  0F48  2F4A               	goto	u4241
  3483  0F49  2F4B               	goto	u4240
  3484  0F4A                     u4241:
  3485  0F4A  2FD3               	goto	l2848
  3486  0F4B                     u4240:
  3487  0F4B                     l2844:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3490  0F4B  300A               	movlw	10
  3491  0F4C  00F3               	movwf	___awmod@divisor
  3492  0F4D  3000               	movlw	0
  3493  0F4E  00F4               	movwf	___awmod@divisor+1
  3494  0F4F  0854               	movf	scale@scl,w
  3495  0F50  00F5               	movwf	___awmod@dividend
  3496  0F51  01F6               	clrf	___awmod@dividend+1
  3497  0F52  1BF5               	btfsc	___awmod@dividend,7
  3498  0F53  03F6               	decf	___awmod@dividend+1,f
  3499  0F54  120A  158A  20E3  120A  158A  	fcall	___awmod
  3500  0F59  0873               	movf	?___awmod,w
  3501  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0F5C  00C6               	movwf	??_scale
  3504  0F5D  3001               	movlw	1
  3505  0F5E                     u4255:
  3506  0F5E  1003               	clrc
  3507  0F5F  0DC6               	rlf	??_scale,f
  3508  0F60  3EFF               	addlw	-1
  3509  0F61  1D03               	skipz
  3510  0F62  2F5E               	goto	u4255
  3511  0F63  1003               	clrc
  3512  0F64  0D46               	rlf	??_scale,w
  3513  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3514  0F66  0084               	movwf	4
  3515  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  3516  0F6C  00C7               	movwf	??_scale+1
  3517  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3518  0F72  00C8               	movwf	??_scale+2
  3519  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  3520  0F78  00C9               	movwf	??_scale+3
  3521  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  3522  0F7E  00CA               	movwf	??_scale+4
  3523  0F7F  084A               	movf	??_scale+4,w
  3524  0F80  00AB               	movwf	___flmul@b+3
  3525  0F81  0849               	movf	??_scale+3,w
  3526  0F82  00AA               	movwf	___flmul@b+2
  3527  0F83  0848               	movf	??_scale+2,w
  3528  0F84  00A9               	movwf	___flmul@b+1
  3529  0F85  0847               	movf	??_scale+1,w
  3530  0F86  00A8               	movwf	___flmul@b
  3531  0F87  300A               	movlw	10
  3532  0F88  00A0               	movwf	___awdiv@divisor
  3533  0F89  3000               	movlw	0
  3534  0F8A  00A1               	movwf	___awdiv@divisor+1
  3535  0F8B  0854               	movf	scale@scl,w
  3536  0F8C  00A2               	movwf	___awdiv@dividend
  3537  0F8D  01A3               	clrf	___awdiv@dividend+1
  3538  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3539  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3540  0F90  160A  158A  24BC  120A  158A  	fcall	___awdiv
  3541  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0F97  0820               	movf	?___awdiv,w
  3544  0F98  00CB               	movwf	??_scale+5
  3545  0F99  3001               	movlw	1
  3546  0F9A                     u4265:
  3547  0F9A  1003               	clrc
  3548  0F9B  0DCB               	rlf	??_scale+5,f
  3549  0F9C  3EFF               	addlw	-1
  3550  0F9D  1D03               	skipz
  3551  0F9E  2F9A               	goto	u4265
  3552  0F9F  1003               	clrc
  3553  0FA0  0D4B               	rlf	??_scale+5,w
  3554  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3555  0FA2  0084               	movwf	4
  3556  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3557  0FA8  00CC               	movwf	??_scale+6
  3558  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3559  0FAE  00CD               	movwf	??_scale+7
  3560  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  3561  0FB4  00CE               	movwf	??_scale+8
  3562  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  3563  0FBA  00CF               	movwf	??_scale+9
  3564  0FBB  084F               	movf	??_scale+9,w
  3565  0FBC  00AF               	movwf	___flmul@a+3
  3566  0FBD  084E               	movf	??_scale+8,w
  3567  0FBE  00AE               	movwf	___flmul@a+2
  3568  0FBF  084D               	movf	??_scale+7,w
  3569  0FC0  00AD               	movwf	___flmul@a+1
  3570  0FC1  084C               	movf	??_scale+6,w
  3571  0FC2  00AC               	movwf	___flmul@a
  3572  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3573  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0FCA  082B               	movf	?___flmul+3,w
  3576  0FCB  00C5               	movwf	?_scale+3
  3577  0FCC  082A               	movf	?___flmul+2,w
  3578  0FCD  00C4               	movwf	?_scale+2
  3579  0FCE  0829               	movf	?___flmul+1,w
  3580  0FCF  00C3               	movwf	?_scale+1
  3581  0FD0  0828               	movf	?___flmul,w
  3582  0FD1  00C2               	movwf	?_scale
  3583  0FD2  2FFF               	goto	l280
  3584  0FD3                     l2848:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3587  0FD3  0854               	movf	scale@scl,w
  3588  0FD4  00C6               	movwf	??_scale
  3589  0FD5  3001               	movlw	1
  3590  0FD6                     u4275:
  3591  0FD6  1003               	clrc
  3592  0FD7  0DC6               	rlf	??_scale,f
  3593  0FD8  3EFF               	addlw	-1
  3594  0FD9  1D03               	skipz
  3595  0FDA  2FD6               	goto	u4275
  3596  0FDB  1003               	clrc
  3597  0FDC  0D46               	rlf	??_scale,w
  3598  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3599  0FDE  0084               	movwf	4
  3600  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  3601  0FE4  00C7               	movwf	??_scale+1
  3602  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3603  0FEA  00C8               	movwf	??_scale+2
  3604  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  3605  0FF0  00C9               	movwf	??_scale+3
  3606  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  3607  0FF6  00CA               	movwf	??_scale+4
  3608  0FF7  084A               	movf	??_scale+4,w
  3609  0FF8  00C5               	movwf	?_scale+3
  3610  0FF9  0849               	movf	??_scale+3,w
  3611  0FFA  00C4               	movwf	?_scale+2
  3612  0FFB  0848               	movf	??_scale+2,w
  3613  0FFC  00C3               	movwf	?_scale+1
  3614  0FFD  0847               	movf	??_scale+1,w
  3615  0FFE  00C2               	movwf	?_scale
  3616  0FFF                     l280:
  3617  0FFF  0008               	return
  3618  1000                     __end_of_scale:
  3619                           
  3620                           	psect	text3
  3621  08E3                     __ptext3:	
  3622 ;; *************** function ___awmod *****************
  3623 ;; Defined at:
  3624 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  divisor         2    3[COMMON] int 
  3627 ;;  dividend        2    5[COMMON] int 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  sign            1    9[COMMON] unsigned char 
  3630 ;;  counter         1    8[COMMON] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2    3[COMMON] int 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3640 ;;      Params:         4       0       0       0       0
  3641 ;;      Locals:         2       0       0       0       0
  3642 ;;      Temps:          1       0       0       0       0
  3643 ;;      Totals:         7       0       0       0       0
  3644 ;;Total ram usage:        7 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_scale
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           
  3655                           ;psect for function ___awmod
  3656  08E3                     ___awmod:
  3657  08E3                     l2348:	
  3658                           ;incstack = 0
  3659                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3660                           
  3661  08E3  01F9               	clrf	___awmod@sign
  3662  08E4                     l2350:
  3663  08E4  1FF6               	btfss	___awmod@dividend+1,7
  3664  08E5  28E7               	goto	u2971
  3665  08E6  28E8               	goto	u2970
  3666  08E7                     u2971:
  3667  08E7  28EF               	goto	l2356
  3668  08E8                     u2970:
  3669  08E8                     l2352:
  3670  08E8  09F5               	comf	___awmod@dividend,f
  3671  08E9  09F6               	comf	___awmod@dividend+1,f
  3672  08EA  0AF5               	incf	___awmod@dividend,f
  3673  08EB  1903               	skipnz
  3674  08EC  0AF6               	incf	___awmod@dividend+1,f
  3675  08ED                     l2354:
  3676  08ED  01F9               	clrf	___awmod@sign
  3677  08EE  0AF9               	incf	___awmod@sign,f
  3678  08EF                     l2356:
  3679  08EF  1FF4               	btfss	___awmod@divisor+1,7
  3680  08F0  28F2               	goto	u2981
  3681  08F1  28F3               	goto	u2980
  3682  08F2                     u2981:
  3683  08F2  28F8               	goto	l2360
  3684  08F3                     u2980:
  3685  08F3                     l2358:
  3686  08F3  09F3               	comf	___awmod@divisor,f
  3687  08F4  09F4               	comf	___awmod@divisor+1,f
  3688  08F5  0AF3               	incf	___awmod@divisor,f
  3689  08F6  1903               	skipnz
  3690  08F7  0AF4               	incf	___awmod@divisor+1,f
  3691  08F8                     l2360:
  3692  08F8  0873               	movf	___awmod@divisor,w
  3693  08F9  0474               	iorwf	___awmod@divisor+1,w
  3694  08FA  1903               	btfsc	3,2
  3695  08FB  28FD               	goto	u2991
  3696  08FC  28FE               	goto	u2990
  3697  08FD                     u2991:
  3698  08FD  292D               	goto	l2378
  3699  08FE                     u2990:
  3700  08FE                     l2362:
  3701  08FE  01F8               	clrf	___awmod@counter
  3702  08FF  0AF8               	incf	___awmod@counter,f
  3703  0900  290C               	goto	l2368
  3704  0901                     l2364:
  3705  0901  3001               	movlw	1
  3706  0902                     u3005:
  3707  0902  1003               	clrc
  3708  0903  0DF3               	rlf	___awmod@divisor,f
  3709  0904  0DF4               	rlf	___awmod@divisor+1,f
  3710  0905  3EFF               	addlw	-1
  3711  0906  1D03               	skipz
  3712  0907  2902               	goto	u3005
  3713  0908                     l2366:
  3714  0908  3001               	movlw	1
  3715  0909  00F7               	movwf	??___awmod
  3716  090A  0877               	movf	??___awmod,w
  3717  090B  07F8               	addwf	___awmod@counter,f
  3718  090C                     l2368:
  3719  090C  1FF4               	btfss	___awmod@divisor+1,7
  3720  090D  290F               	goto	u3011
  3721  090E  2910               	goto	u3010
  3722  090F                     u3011:
  3723  090F  2901               	goto	l2364
  3724  0910                     u3010:
  3725  0910                     l2370:
  3726  0910  0874               	movf	___awmod@divisor+1,w
  3727  0911  0276               	subwf	___awmod@dividend+1,w
  3728  0912  1D03               	skipz
  3729  0913  2916               	goto	u3025
  3730  0914  0873               	movf	___awmod@divisor,w
  3731  0915  0275               	subwf	___awmod@dividend,w
  3732  0916                     u3025:
  3733  0916  1C03               	skipc
  3734  0917  2919               	goto	u3021
  3735  0918  291A               	goto	u3020
  3736  0919                     u3021:
  3737  0919  2920               	goto	l2374
  3738  091A                     u3020:
  3739  091A                     l2372:
  3740  091A  0873               	movf	___awmod@divisor,w
  3741  091B  02F5               	subwf	___awmod@dividend,f
  3742  091C  0874               	movf	___awmod@divisor+1,w
  3743  091D  1C03               	skipc
  3744  091E  03F6               	decf	___awmod@dividend+1,f
  3745  091F  02F6               	subwf	___awmod@dividend+1,f
  3746  0920                     l2374:
  3747  0920  3001               	movlw	1
  3748  0921                     u3035:
  3749  0921  1003               	clrc
  3750  0922  0CF4               	rrf	___awmod@divisor+1,f
  3751  0923  0CF3               	rrf	___awmod@divisor,f
  3752  0924  3EFF               	addlw	-1
  3753  0925  1D03               	skipz
  3754  0926  2921               	goto	u3035
  3755  0927                     l2376:
  3756  0927  3001               	movlw	1
  3757  0928  02F8               	subwf	___awmod@counter,f
  3758  0929  1D03               	btfss	3,2
  3759  092A  292C               	goto	u3041
  3760  092B  292D               	goto	u3040
  3761  092C                     u3041:
  3762  092C  2910               	goto	l2370
  3763  092D                     u3040:
  3764  092D                     l2378:
  3765  092D  0879               	movf	___awmod@sign,w
  3766  092E  1903               	btfsc	3,2
  3767  092F  2931               	goto	u3051
  3768  0930  2932               	goto	u3050
  3769  0931                     u3051:
  3770  0931  2937               	goto	l2382
  3771  0932                     u3050:
  3772  0932                     l2380:
  3773  0932  09F5               	comf	___awmod@dividend,f
  3774  0933  09F6               	comf	___awmod@dividend+1,f
  3775  0934  0AF5               	incf	___awmod@dividend,f
  3776  0935  1903               	skipnz
  3777  0936  0AF6               	incf	___awmod@dividend+1,f
  3778  0937                     l2382:
  3779  0937  0876               	movf	___awmod@dividend+1,w
  3780  0938  00F4               	movwf	?___awmod+1
  3781  0939  0875               	movf	___awmod@dividend,w
  3782  093A  00F3               	movwf	?___awmod
  3783  093B                     l533:
  3784  093B  0008               	return
  3785  093C                     __end_of___awmod:
  3786                           
  3787                           	psect	text4
  3788  1CBC                     __ptext4:	
  3789 ;; *************** function ___awdiv *****************
  3790 ;; Defined at:
  3791 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  divisor         2    0[BANK0 ] int 
  3794 ;;  dividend        2    2[BANK0 ] int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  quotient        2    6[BANK0 ] int 
  3797 ;;  sign            1    5[BANK0 ] unsigned char 
  3798 ;;  counter         1    4[BANK0 ] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2    0[BANK0 ] int 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3808 ;;      Params:         0       4       0       0       0
  3809 ;;      Locals:         0       4       0       0       0
  3810 ;;      Temps:          1       0       0       0       0
  3811 ;;      Totals:         1       8       0       0       0
  3812 ;;Total ram usage:        9 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    1
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_scale
  3819 ;;		_sprintf
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           
  3824                           ;psect for function ___awdiv
  3825  1CBC                     ___awdiv:
  3826  1CBC                     l2304:	
  3827                           ;incstack = 0
  3828                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3829                           
  3830  1CBC  1283               	bcf	3,5	;RP0=0, select bank0
  3831  1CBD  1303               	bcf	3,6	;RP1=0, select bank0
  3832  1CBE  01A5               	clrf	___awdiv@sign
  3833  1CBF                     l2306:
  3834  1CBF  1FA1               	btfss	___awdiv@divisor+1,7
  3835  1CC0  2CC2               	goto	u2871
  3836  1CC1  2CC3               	goto	u2870
  3837  1CC2                     u2871:
  3838  1CC2  2CCA               	goto	l2312
  3839  1CC3                     u2870:
  3840  1CC3                     l2308:
  3841  1CC3  09A0               	comf	___awdiv@divisor,f
  3842  1CC4  09A1               	comf	___awdiv@divisor+1,f
  3843  1CC5  0AA0               	incf	___awdiv@divisor,f
  3844  1CC6  1903               	skipnz
  3845  1CC7  0AA1               	incf	___awdiv@divisor+1,f
  3846  1CC8                     l2310:
  3847  1CC8  01A5               	clrf	___awdiv@sign
  3848  1CC9  0AA5               	incf	___awdiv@sign,f
  3849  1CCA                     l2312:
  3850  1CCA  1FA3               	btfss	___awdiv@dividend+1,7
  3851  1CCB  2CCD               	goto	u2881
  3852  1CCC  2CCE               	goto	u2880
  3853  1CCD                     u2881:
  3854  1CCD  2CD7               	goto	l2318
  3855  1CCE                     u2880:
  3856  1CCE                     l2314:
  3857  1CCE  09A2               	comf	___awdiv@dividend,f
  3858  1CCF  09A3               	comf	___awdiv@dividend+1,f
  3859  1CD0  0AA2               	incf	___awdiv@dividend,f
  3860  1CD1  1903               	skipnz
  3861  1CD2  0AA3               	incf	___awdiv@dividend+1,f
  3862  1CD3                     l2316:
  3863  1CD3  3001               	movlw	1
  3864  1CD4  00FA               	movwf	??___awdiv
  3865  1CD5  087A               	movf	??___awdiv,w
  3866  1CD6  06A5               	xorwf	___awdiv@sign,f
  3867  1CD7                     l2318:
  3868  1CD7  01A6               	clrf	___awdiv@quotient
  3869  1CD8  01A7               	clrf	___awdiv@quotient+1
  3870  1CD9                     l2320:
  3871  1CD9  0820               	movf	___awdiv@divisor,w
  3872  1CDA  0421               	iorwf	___awdiv@divisor+1,w
  3873  1CDB  1903               	btfsc	3,2
  3874  1CDC  2CDE               	goto	u2891
  3875  1CDD  2CDF               	goto	u2890
  3876  1CDE                     u2891:
  3877  1CDE  2D16               	goto	l2340
  3878  1CDF                     u2890:
  3879  1CDF                     l2322:
  3880  1CDF  01A4               	clrf	___awdiv@counter
  3881  1CE0  0AA4               	incf	___awdiv@counter,f
  3882  1CE1  2CED               	goto	l2328
  3883  1CE2                     l2324:
  3884  1CE2  3001               	movlw	1
  3885  1CE3                     u2905:
  3886  1CE3  1003               	clrc
  3887  1CE4  0DA0               	rlf	___awdiv@divisor,f
  3888  1CE5  0DA1               	rlf	___awdiv@divisor+1,f
  3889  1CE6  3EFF               	addlw	-1
  3890  1CE7  1D03               	skipz
  3891  1CE8  2CE3               	goto	u2905
  3892  1CE9                     l2326:
  3893  1CE9  3001               	movlw	1
  3894  1CEA  00FA               	movwf	??___awdiv
  3895  1CEB  087A               	movf	??___awdiv,w
  3896  1CEC  07A4               	addwf	___awdiv@counter,f
  3897  1CED                     l2328:
  3898  1CED  1FA1               	btfss	___awdiv@divisor+1,7
  3899  1CEE  2CF0               	goto	u2911
  3900  1CEF  2CF1               	goto	u2910
  3901  1CF0                     u2911:
  3902  1CF0  2CE2               	goto	l2324
  3903  1CF1                     u2910:
  3904  1CF1                     l2330:
  3905  1CF1  3001               	movlw	1
  3906  1CF2                     u2925:
  3907  1CF2  1003               	clrc
  3908  1CF3  0DA6               	rlf	___awdiv@quotient,f
  3909  1CF4  0DA7               	rlf	___awdiv@quotient+1,f
  3910  1CF5  3EFF               	addlw	-1
  3911  1CF6  1D03               	skipz
  3912  1CF7  2CF2               	goto	u2925
  3913  1CF8  0821               	movf	___awdiv@divisor+1,w
  3914  1CF9  0223               	subwf	___awdiv@dividend+1,w
  3915  1CFA  1D03               	skipz
  3916  1CFB  2CFE               	goto	u2935
  3917  1CFC  0820               	movf	___awdiv@divisor,w
  3918  1CFD  0222               	subwf	___awdiv@dividend,w
  3919  1CFE                     u2935:
  3920  1CFE  1C03               	skipc
  3921  1CFF  2D01               	goto	u2931
  3922  1D00  2D02               	goto	u2930
  3923  1D01                     u2931:
  3924  1D01  2D09               	goto	l2336
  3925  1D02                     u2930:
  3926  1D02                     l2332:
  3927  1D02  0820               	movf	___awdiv@divisor,w
  3928  1D03  02A2               	subwf	___awdiv@dividend,f
  3929  1D04  0821               	movf	___awdiv@divisor+1,w
  3930  1D05  1C03               	skipc
  3931  1D06  03A3               	decf	___awdiv@dividend+1,f
  3932  1D07  02A3               	subwf	___awdiv@dividend+1,f
  3933  1D08                     l2334:
  3934  1D08  1426               	bsf	___awdiv@quotient,0
  3935  1D09                     l2336:
  3936  1D09  3001               	movlw	1
  3937  1D0A                     u2945:
  3938  1D0A  1003               	clrc
  3939  1D0B  0CA1               	rrf	___awdiv@divisor+1,f
  3940  1D0C  0CA0               	rrf	___awdiv@divisor,f
  3941  1D0D  3EFF               	addlw	-1
  3942  1D0E  1D03               	skipz
  3943  1D0F  2D0A               	goto	u2945
  3944  1D10                     l2338:
  3945  1D10  3001               	movlw	1
  3946  1D11  02A4               	subwf	___awdiv@counter,f
  3947  1D12  1D03               	btfss	3,2
  3948  1D13  2D15               	goto	u2951
  3949  1D14  2D16               	goto	u2950
  3950  1D15                     u2951:
  3951  1D15  2CF1               	goto	l2330
  3952  1D16                     u2950:
  3953  1D16                     l2340:
  3954  1D16  0825               	movf	___awdiv@sign,w
  3955  1D17  1903               	btfsc	3,2
  3956  1D18  2D1A               	goto	u2961
  3957  1D19  2D1B               	goto	u2960
  3958  1D1A                     u2961:
  3959  1D1A  2D20               	goto	l2344
  3960  1D1B                     u2960:
  3961  1D1B                     l2342:
  3962  1D1B  09A6               	comf	___awdiv@quotient,f
  3963  1D1C  09A7               	comf	___awdiv@quotient+1,f
  3964  1D1D  0AA6               	incf	___awdiv@quotient,f
  3965  1D1E  1903               	skipnz
  3966  1D1F  0AA7               	incf	___awdiv@quotient+1,f
  3967  1D20                     l2344:
  3968  1D20  0827               	movf	___awdiv@quotient+1,w
  3969  1D21  00A1               	movwf	?___awdiv+1
  3970  1D22  0826               	movf	___awdiv@quotient,w
  3971  1D23  00A0               	movwf	?___awdiv
  3972  1D24                     l520:
  3973  1D24  0008               	return
  3974  1D25                     __end_of___awdiv:
  3975                           
  3976                           	psect	text5
  3977  191A                     __ptext5:	
  3978 ;; *************** function _isdigit *****************
  3979 ;; Defined at:
  3980 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  c               1    wreg     unsigned char 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  c               1    4[COMMON] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;		None               void
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3994 ;;      Params:         0       0       0       0       0
  3995 ;;      Locals:         2       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0
  3997 ;;      Totals:         2       0       0       0       0
  3998 ;;Total ram usage:        2 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    1
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_sprintf
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _isdigit
  4010  191A                     _isdigit:
  4011                           
  4012                           ;incstack = 0
  4013                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4014                           ;isdigit@c stored from wreg
  4015  191A  00F4               	movwf	isdigit@c
  4016  191B                     l2852:
  4017  191B  01F3               	clrf	_isdigit$998
  4018  191C                     l2854:
  4019  191C  303A               	movlw	58
  4020  191D  0274               	subwf	isdigit@c,w
  4021  191E  1803               	skipnc
  4022  191F  2921               	goto	u4281
  4023  1920  2922               	goto	u4280
  4024  1921                     u4281:
  4025  1921  292A               	goto	l2860
  4026  1922                     u4280:
  4027  1922                     l2856:
  4028  1922  3030               	movlw	48
  4029  1923  0274               	subwf	isdigit@c,w
  4030  1924  1C03               	skipc
  4031  1925  2927               	goto	u4291
  4032  1926  2928               	goto	u4290
  4033  1927                     u4291:
  4034  1927  292A               	goto	l2860
  4035  1928                     u4290:
  4036  1928                     l2858:
  4037  1928  01F3               	clrf	_isdigit$998
  4038  1929  0AF3               	incf	_isdigit$998,f
  4039  192A                     l2860:
  4040  192A  0C73               	rrf	_isdigit$998,w
  4041  192B                     l854:
  4042  192B  0008               	return
  4043  192C                     __end_of_isdigit:
  4044                           
  4045                           	psect	text6
  4046  05C1                     __ptext6:	
  4047 ;; *************** function _fround *****************
  4048 ;; Defined at:
  4049 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  prec            1    wreg     unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  prec            1   53[BANK0 ] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  4   34[BANK0 ] unsigned char 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         0       4       0       0       0
  4064 ;;      Locals:         0       9       0       0       0
  4065 ;;      Temps:          0       7       0       0       0
  4066 ;;      Totals:         0      20       0       0       0
  4067 ;;Total ram usage:       20 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    3
  4070 ;; This function calls:
  4071 ;;		___flmul
  4072 ;;		___lwdiv
  4073 ;;		___lwmod
  4074 ;; This function is called by:
  4075 ;;		_sprintf
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           
  4080                           ;psect for function _fround
  4081  05C1                     _fround:
  4082                           
  4083                           ;incstack = 0
  4084                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4085                           ;fround@prec stored from wreg
  4086  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  4087  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  4088  05C3  00D5               	movwf	fround@prec
  4089  05C4                     l2794:
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4092  05C4  306E               	movlw	110
  4093  05C5  0255               	subwf	fround@prec,w
  4094  05C6  1C03               	skipc
  4095  05C7  2DC9               	goto	u4031
  4096  05C8  2DCA               	goto	u4030
  4097  05C9                     u4031:
  4098  05C9  2ED9               	goto	l2802
  4099  05CA                     u4030:
  4100  05CA                     l2796:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4103  05CA  303F               	movlw	63
  4104  05CB  00AB               	movwf	___flmul@b+3
  4105  05CC  3000               	movlw	0
  4106  05CD  00AA               	movwf	___flmul@b+2
  4107  05CE  3000               	movlw	0
  4108  05CF  00A9               	movwf	___flmul@b+1
  4109  05D0  3000               	movlw	0
  4110  05D1  00A8               	movwf	___flmul@b
  4111  05D2  3064               	movlw	100
  4112  05D3  00A0               	movwf	___lwdiv@divisor
  4113  05D4  3000               	movlw	0
  4114  05D5  00A1               	movwf	___lwdiv@divisor+1
  4115  05D6  0855               	movf	fround@prec,w
  4116  05D7  00C6               	movwf	??_fround
  4117  05D8  01C7               	clrf	??_fround+1
  4118  05D9  0846               	movf	??_fround,w
  4119  05DA  00A2               	movwf	___lwdiv@dividend
  4120  05DB  0847               	movf	??_fround+1,w
  4121  05DC  00A3               	movwf	___lwdiv@dividend+1
  4122  05DD  160A  158A  22CC  120A  118A  	fcall	___lwdiv
  4123  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  4124  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  4125  05E4  0820               	movf	?___lwdiv,w
  4126  05E5  00C8               	movwf	??_fround+2
  4127  05E6  3001               	movlw	1
  4128  05E7                     u4045:
  4129  05E7  1003               	clrc
  4130  05E8  0DC8               	rlf	??_fround+2,f
  4131  05E9  3EFF               	addlw	-1
  4132  05EA  1D03               	skipz
  4133  05EB  2DE7               	goto	u4045
  4134  05EC  1003               	clrc
  4135  05ED  0D48               	rlf	??_fround+2,w
  4136  05EE  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4137  05EF  0084               	movwf	4
  4138  05F0  120A  158A  200A  120A  118A  	fcall	stringdir
  4139  05F5  00C9               	movwf	??_fround+3
  4140  05F6  120A  158A  200A  120A  118A  	fcall	stringdir
  4141  05FB  00CA               	movwf	??_fround+4
  4142  05FC  120A  158A  200A  120A  118A  	fcall	stringdir
  4143  0601  00CB               	movwf	??_fround+5
  4144  0602  120A  158A  200A  120A  118A  	fcall	stringdir
  4145  0607  00CC               	movwf	??_fround+6
  4146  0608  084C               	movf	??_fround+6,w
  4147  0609  00AF               	movwf	___flmul@a+3
  4148  060A  084B               	movf	??_fround+5,w
  4149  060B  00AE               	movwf	___flmul@a+2
  4150  060C  084A               	movf	??_fround+4,w
  4151  060D  00AD               	movwf	___flmul@a+1
  4152  060E  0849               	movf	??_fround+3,w
  4153  060F  00AC               	movwf	___flmul@a
  4154  0610  120A  158A  213C  120A  118A  	fcall	___flmul
  4155  0615  1283               	bcf	3,5	;RP0=0, select bank0
  4156  0616  1303               	bcf	3,6	;RP1=0, select bank0
  4157  0617  082B               	movf	?___flmul+3,w
  4158  0618  00D4               	movwf	_fround$1175+3
  4159  0619  082A               	movf	?___flmul+2,w
  4160  061A  00D3               	movwf	_fround$1175+2
  4161  061B  0829               	movf	?___flmul+1,w
  4162  061C  00D2               	movwf	_fround$1175+1
  4163  061D  0828               	movf	?___flmul,w
  4164  061E  00D1               	movwf	_fround$1175
  4165                           
  4166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4167  061F  300A               	movlw	10
  4168  0620  00A0               	movwf	___lwdiv@divisor
  4169  0621  3000               	movlw	0
  4170  0622  00A1               	movwf	___lwdiv@divisor+1
  4171  0623  0855               	movf	fround@prec,w
  4172  0624  00C6               	movwf	??_fround
  4173  0625  01C7               	clrf	??_fround+1
  4174  0626  0846               	movf	??_fround,w
  4175  0627  00F5               	movwf	___lwmod@dividend
  4176  0628  0847               	movf	??_fround+1,w
  4177  0629  00F6               	movwf	___lwmod@dividend+1
  4178  062A  3064               	movlw	100
  4179  062B  00F3               	movwf	___lwmod@divisor
  4180  062C  3000               	movlw	0
  4181  062D  00F4               	movwf	___lwmod@divisor+1
  4182  062E  160A  158A  21CB  120A  118A  	fcall	___lwmod
  4183  0633  0874               	movf	?___lwmod+1,w
  4184  0634  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0635  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0636  00A3               	movwf	___lwdiv@dividend+1
  4187  0637  0873               	movf	?___lwmod,w
  4188  0638  00A2               	movwf	___lwdiv@dividend
  4189  0639  160A  158A  22CC  120A  118A  	fcall	___lwdiv
  4190  063E  1283               	bcf	3,5	;RP0=0, select bank0
  4191  063F  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0640  0820               	movf	?___lwdiv,w
  4193  0641  00C8               	movwf	??_fround+2
  4194  0642  3001               	movlw	1
  4195  0643                     u4055:
  4196  0643  1003               	clrc
  4197  0644  0DC8               	rlf	??_fround+2,f
  4198  0645  3EFF               	addlw	-1
  4199  0646  1D03               	skipz
  4200  0647  2E43               	goto	u4055
  4201  0648  1003               	clrc
  4202  0649  0D48               	rlf	??_fround+2,w
  4203  064A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4204  064B  0084               	movwf	4
  4205  064C  120A  158A  200A  120A  118A  	fcall	stringdir
  4206  0651  00C9               	movwf	??_fround+3
  4207  0652  120A  158A  200A  120A  118A  	fcall	stringdir
  4208  0657  00CA               	movwf	??_fround+4
  4209  0658  120A  158A  200A  120A  118A  	fcall	stringdir
  4210  065D  00CB               	movwf	??_fround+5
  4211  065E  120A  158A  200A  120A  118A  	fcall	stringdir
  4212  0663  00CC               	movwf	??_fround+6
  4213  0664  084C               	movf	??_fround+6,w
  4214  0665  00AB               	movwf	___flmul@b+3
  4215  0666  084B               	movf	??_fround+5,w
  4216  0667  00AA               	movwf	___flmul@b+2
  4217  0668  084A               	movf	??_fround+4,w
  4218  0669  00A9               	movwf	___flmul@b+1
  4219  066A  0849               	movf	??_fround+3,w
  4220  066B  00A8               	movwf	___flmul@b
  4221  066C  0854               	movf	_fround$1175+3,w
  4222  066D  00AF               	movwf	___flmul@a+3
  4223  066E  0853               	movf	_fround$1175+2,w
  4224  066F  00AE               	movwf	___flmul@a+2
  4225  0670  0852               	movf	_fround$1175+1,w
  4226  0671  00AD               	movwf	___flmul@a+1
  4227  0672  0851               	movf	_fround$1175,w
  4228  0673  00AC               	movwf	___flmul@a
  4229  0674  120A  158A  213C  120A  118A  	fcall	___flmul
  4230  0679  1283               	bcf	3,5	;RP0=0, select bank0
  4231  067A  1303               	bcf	3,6	;RP1=0, select bank0
  4232  067B  082B               	movf	?___flmul+3,w
  4233  067C  00D0               	movwf	_fround$1176+3
  4234  067D  082A               	movf	?___flmul+2,w
  4235  067E  00CF               	movwf	_fround$1176+2
  4236  067F  0829               	movf	?___flmul+1,w
  4237  0680  00CE               	movwf	_fround$1176+1
  4238  0681  0828               	movf	?___flmul,w
  4239  0682  00CD               	movwf	_fround$1176
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4242  0683  300A               	movlw	10
  4243  0684  00F3               	movwf	___lwmod@divisor
  4244  0685  3000               	movlw	0
  4245  0686  00F4               	movwf	___lwmod@divisor+1
  4246  0687  0855               	movf	fround@prec,w
  4247  0688  00C6               	movwf	??_fround
  4248  0689  01C7               	clrf	??_fround+1
  4249  068A  0846               	movf	??_fround,w
  4250  068B  00F5               	movwf	___lwmod@dividend
  4251  068C  0847               	movf	??_fround+1,w
  4252  068D  00F6               	movwf	___lwmod@dividend+1
  4253  068E  160A  158A  21CB  120A  118A  	fcall	___lwmod
  4254  0693  0873               	movf	?___lwmod,w
  4255  0694  1283               	bcf	3,5	;RP0=0, select bank0
  4256  0695  1303               	bcf	3,6	;RP1=0, select bank0
  4257  0696  00C8               	movwf	??_fround+2
  4258  0697  3001               	movlw	1
  4259  0698                     u4065:
  4260  0698  1003               	clrc
  4261  0699  0DC8               	rlf	??_fround+2,f
  4262  069A  3EFF               	addlw	-1
  4263  069B  1D03               	skipz
  4264  069C  2E98               	goto	u4065
  4265  069D  1003               	clrc
  4266  069E  0D48               	rlf	??_fround+2,w
  4267  069F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4268  06A0  0084               	movwf	4
  4269  06A1  120A  158A  200A  120A  118A  	fcall	stringdir
  4270  06A6  00C9               	movwf	??_fround+3
  4271  06A7  120A  158A  200A  120A  118A  	fcall	stringdir
  4272  06AC  00CA               	movwf	??_fround+4
  4273  06AD  120A  158A  200A  120A  118A  	fcall	stringdir
  4274  06B2  00CB               	movwf	??_fround+5
  4275  06B3  120A  158A  200A  120A  118A  	fcall	stringdir
  4276  06B8  00CC               	movwf	??_fround+6
  4277  06B9  084C               	movf	??_fround+6,w
  4278  06BA  00AB               	movwf	___flmul@b+3
  4279  06BB  084B               	movf	??_fround+5,w
  4280  06BC  00AA               	movwf	___flmul@b+2
  4281  06BD  084A               	movf	??_fround+4,w
  4282  06BE  00A9               	movwf	___flmul@b+1
  4283  06BF  0849               	movf	??_fround+3,w
  4284  06C0  00A8               	movwf	___flmul@b
  4285  06C1  0850               	movf	_fround$1176+3,w
  4286  06C2  00AF               	movwf	___flmul@a+3
  4287  06C3  084F               	movf	_fround$1176+2,w
  4288  06C4  00AE               	movwf	___flmul@a+2
  4289  06C5  084E               	movf	_fround$1176+1,w
  4290  06C6  00AD               	movwf	___flmul@a+1
  4291  06C7  084D               	movf	_fround$1176,w
  4292  06C8  00AC               	movwf	___flmul@a
  4293  06C9  120A  158A  213C  120A  118A  	fcall	___flmul
  4294  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  4295  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  4296  06D0  082B               	movf	?___flmul+3,w
  4297  06D1  00C5               	movwf	?_fround+3
  4298  06D2  082A               	movf	?___flmul+2,w
  4299  06D3  00C4               	movwf	?_fround+2
  4300  06D4  0829               	movf	?___flmul+1,w
  4301  06D5  00C3               	movwf	?_fround+1
  4302  06D6  0828               	movf	?___flmul,w
  4303  06D7  00C2               	movwf	?_fround
  4304  06D8  2FCD               	goto	l273
  4305  06D9                     l2802:
  4306  06D9  300B               	movlw	11
  4307  06DA  0255               	subwf	fround@prec,w
  4308  06DB  1C03               	skipc
  4309  06DC  2EDE               	goto	u4071
  4310  06DD  2EDF               	goto	u4070
  4311  06DE                     u4071:
  4312  06DE  2F8A               	goto	l2808
  4313  06DF                     u4070:
  4314  06DF                     l2804:
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4317  06DF  303F               	movlw	63
  4318  06E0  00AB               	movwf	___flmul@b+3
  4319  06E1  3000               	movlw	0
  4320  06E2  00AA               	movwf	___flmul@b+2
  4321  06E3  3000               	movlw	0
  4322  06E4  00A9               	movwf	___flmul@b+1
  4323  06E5  3000               	movlw	0
  4324  06E6  00A8               	movwf	___flmul@b
  4325  06E7  300A               	movlw	10
  4326  06E8  00A0               	movwf	___lwdiv@divisor
  4327  06E9  3000               	movlw	0
  4328  06EA  00A1               	movwf	___lwdiv@divisor+1
  4329  06EB  0855               	movf	fround@prec,w
  4330  06EC  00C6               	movwf	??_fround
  4331  06ED  01C7               	clrf	??_fround+1
  4332  06EE  0846               	movf	??_fround,w
  4333  06EF  00A2               	movwf	___lwdiv@dividend
  4334  06F0  0847               	movf	??_fround+1,w
  4335  06F1  00A3               	movwf	___lwdiv@dividend+1
  4336  06F2  160A  158A  22CC  120A  118A  	fcall	___lwdiv
  4337  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4338  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  4339  06F9  0820               	movf	?___lwdiv,w
  4340  06FA  00C8               	movwf	??_fround+2
  4341  06FB  3001               	movlw	1
  4342  06FC                     u4085:
  4343  06FC  1003               	clrc
  4344  06FD  0DC8               	rlf	??_fround+2,f
  4345  06FE  3EFF               	addlw	-1
  4346  06FF  1D03               	skipz
  4347  0700  2EFC               	goto	u4085
  4348  0701  1003               	clrc
  4349  0702  0D48               	rlf	??_fround+2,w
  4350  0703  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4351  0704  0084               	movwf	4
  4352  0705  120A  158A  200A  120A  118A  	fcall	stringdir
  4353  070A  00C9               	movwf	??_fround+3
  4354  070B  120A  158A  200A  120A  118A  	fcall	stringdir
  4355  0710  00CA               	movwf	??_fround+4
  4356  0711  120A  158A  200A  120A  118A  	fcall	stringdir
  4357  0716  00CB               	movwf	??_fround+5
  4358  0717  120A  158A  200A  120A  118A  	fcall	stringdir
  4359  071C  00CC               	movwf	??_fround+6
  4360  071D  084C               	movf	??_fround+6,w
  4361  071E  00AF               	movwf	___flmul@a+3
  4362  071F  084B               	movf	??_fround+5,w
  4363  0720  00AE               	movwf	___flmul@a+2
  4364  0721  084A               	movf	??_fround+4,w
  4365  0722  00AD               	movwf	___flmul@a+1
  4366  0723  0849               	movf	??_fround+3,w
  4367  0724  00AC               	movwf	___flmul@a
  4368  0725  120A  158A  213C  120A  118A  	fcall	___flmul
  4369  072A  1283               	bcf	3,5	;RP0=0, select bank0
  4370  072B  1303               	bcf	3,6	;RP1=0, select bank0
  4371  072C  082B               	movf	?___flmul+3,w
  4372  072D  00D4               	movwf	_fround$1175+3
  4373  072E  082A               	movf	?___flmul+2,w
  4374  072F  00D3               	movwf	_fround$1175+2
  4375  0730  0829               	movf	?___flmul+1,w
  4376  0731  00D2               	movwf	_fround$1175+1
  4377  0732  0828               	movf	?___flmul,w
  4378  0733  00D1               	movwf	_fround$1175
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4381  0734  300A               	movlw	10
  4382  0735  00F3               	movwf	___lwmod@divisor
  4383  0736  3000               	movlw	0
  4384  0737  00F4               	movwf	___lwmod@divisor+1
  4385  0738  0855               	movf	fround@prec,w
  4386  0739  00C6               	movwf	??_fround
  4387  073A  01C7               	clrf	??_fround+1
  4388  073B  0846               	movf	??_fround,w
  4389  073C  00F5               	movwf	___lwmod@dividend
  4390  073D  0847               	movf	??_fround+1,w
  4391  073E  00F6               	movwf	___lwmod@dividend+1
  4392  073F  160A  158A  21CB  120A  118A  	fcall	___lwmod
  4393  0744  0873               	movf	?___lwmod,w
  4394  0745  1283               	bcf	3,5	;RP0=0, select bank0
  4395  0746  1303               	bcf	3,6	;RP1=0, select bank0
  4396  0747  00C8               	movwf	??_fround+2
  4397  0748  3001               	movlw	1
  4398  0749                     u4095:
  4399  0749  1003               	clrc
  4400  074A  0DC8               	rlf	??_fround+2,f
  4401  074B  3EFF               	addlw	-1
  4402  074C  1D03               	skipz
  4403  074D  2F49               	goto	u4095
  4404  074E  1003               	clrc
  4405  074F  0D48               	rlf	??_fround+2,w
  4406  0750  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4407  0751  0084               	movwf	4
  4408  0752  120A  158A  200A  120A  118A  	fcall	stringdir
  4409  0757  00C9               	movwf	??_fround+3
  4410  0758  120A  158A  200A  120A  118A  	fcall	stringdir
  4411  075D  00CA               	movwf	??_fround+4
  4412  075E  120A  158A  200A  120A  118A  	fcall	stringdir
  4413  0763  00CB               	movwf	??_fround+5
  4414  0764  120A  158A  200A  120A  118A  	fcall	stringdir
  4415  0769  00CC               	movwf	??_fround+6
  4416  076A  084C               	movf	??_fround+6,w
  4417  076B  00AB               	movwf	___flmul@b+3
  4418  076C  084B               	movf	??_fround+5,w
  4419  076D  00AA               	movwf	___flmul@b+2
  4420  076E  084A               	movf	??_fround+4,w
  4421  076F  00A9               	movwf	___flmul@b+1
  4422  0770  0849               	movf	??_fround+3,w
  4423  0771  00A8               	movwf	___flmul@b
  4424  0772  0854               	movf	_fround$1175+3,w
  4425  0773  00AF               	movwf	___flmul@a+3
  4426  0774  0853               	movf	_fround$1175+2,w
  4427  0775  00AE               	movwf	___flmul@a+2
  4428  0776  0852               	movf	_fround$1175+1,w
  4429  0777  00AD               	movwf	___flmul@a+1
  4430  0778  0851               	movf	_fround$1175,w
  4431  0779  00AC               	movwf	___flmul@a
  4432  077A  120A  158A  213C  120A  118A  	fcall	___flmul
  4433  077F  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0780  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0781  082B               	movf	?___flmul+3,w
  4436  0782  00C5               	movwf	?_fround+3
  4437  0783  082A               	movf	?___flmul+2,w
  4438  0784  00C4               	movwf	?_fround+2
  4439  0785  0829               	movf	?___flmul+1,w
  4440  0786  00C3               	movwf	?_fround+1
  4441  0787  0828               	movf	?___flmul,w
  4442  0788  00C2               	movwf	?_fround
  4443  0789  2FCD               	goto	l273
  4444  078A                     l2808:
  4445                           
  4446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4447  078A  303F               	movlw	63
  4448  078B  00AB               	movwf	___flmul@b+3
  4449  078C  3000               	movlw	0
  4450  078D  00AA               	movwf	___flmul@b+2
  4451  078E  3000               	movlw	0
  4452  078F  00A9               	movwf	___flmul@b+1
  4453  0790  3000               	movlw	0
  4454  0791  00A8               	movwf	___flmul@b
  4455  0792  0855               	movf	fround@prec,w
  4456  0793  00C6               	movwf	??_fround
  4457  0794  3001               	movlw	1
  4458  0795                     u4105:
  4459  0795  1003               	clrc
  4460  0796  0DC6               	rlf	??_fround,f
  4461  0797  3EFF               	addlw	-1
  4462  0798  1D03               	skipz
  4463  0799  2F95               	goto	u4105
  4464  079A  1003               	clrc
  4465  079B  0D46               	rlf	??_fround,w
  4466  079C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4467  079D  0084               	movwf	4
  4468  079E  120A  158A  200A  120A  118A  	fcall	stringdir
  4469  07A3  00C7               	movwf	??_fround+1
  4470  07A4  120A  158A  200A  120A  118A  	fcall	stringdir
  4471  07A9  00C8               	movwf	??_fround+2
  4472  07AA  120A  158A  200A  120A  118A  	fcall	stringdir
  4473  07AF  00C9               	movwf	??_fround+3
  4474  07B0  120A  158A  200A  120A  118A  	fcall	stringdir
  4475  07B5  00CA               	movwf	??_fround+4
  4476  07B6  084A               	movf	??_fround+4,w
  4477  07B7  00AF               	movwf	___flmul@a+3
  4478  07B8  0849               	movf	??_fround+3,w
  4479  07B9  00AE               	movwf	___flmul@a+2
  4480  07BA  0848               	movf	??_fround+2,w
  4481  07BB  00AD               	movwf	___flmul@a+1
  4482  07BC  0847               	movf	??_fround+1,w
  4483  07BD  00AC               	movwf	___flmul@a
  4484  07BE  120A  158A  213C  120A  118A  	fcall	___flmul
  4485  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  4486  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  4487  07C5  082B               	movf	?___flmul+3,w
  4488  07C6  00C5               	movwf	?_fround+3
  4489  07C7  082A               	movf	?___flmul+2,w
  4490  07C8  00C4               	movwf	?_fround+2
  4491  07C9  0829               	movf	?___flmul+1,w
  4492  07CA  00C3               	movwf	?_fround+1
  4493  07CB  0828               	movf	?___flmul,w
  4494  07CC  00C2               	movwf	?_fround
  4495  07CD                     l273:
  4496  07CD  0008               	return
  4497  07CE                     __end_of_fround:
  4498                           
  4499                           	psect	text7
  4500  19CB                     __ptext7:	
  4501 ;; *************** function ___lwmod *****************
  4502 ;; Defined at:
  4503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  divisor         2    3[COMMON] unsigned int 
  4506 ;;  dividend        2    5[COMMON] unsigned int 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  counter         1    8[COMMON] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  2    3[COMMON] unsigned int 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4518 ;;      Params:         4       0       0       0       0
  4519 ;;      Locals:         1       0       0       0       0
  4520 ;;      Temps:          1       0       0       0       0
  4521 ;;      Totals:         6       0       0       0       0
  4522 ;;Total ram usage:        6 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    1
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_fround
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           
  4533                           ;psect for function ___lwmod
  4534  19CB                     ___lwmod:
  4535  19CB                     l2412:	
  4536                           ;incstack = 0
  4537                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4538                           
  4539  19CB  0873               	movf	___lwmod@divisor,w
  4540  19CC  0474               	iorwf	___lwmod@divisor+1,w
  4541  19CD  1903               	btfsc	3,2
  4542  19CE  29D0               	goto	u3131
  4543  19CF  29D1               	goto	u3130
  4544  19D0                     u3131:
  4545  19D0  2A00               	goto	l2430
  4546  19D1                     u3130:
  4547  19D1                     l2414:
  4548  19D1  01F8               	clrf	___lwmod@counter
  4549  19D2  0AF8               	incf	___lwmod@counter,f
  4550  19D3  29DF               	goto	l2420
  4551  19D4                     l2416:
  4552  19D4  3001               	movlw	1
  4553  19D5                     u3145:
  4554  19D5  1003               	clrc
  4555  19D6  0DF3               	rlf	___lwmod@divisor,f
  4556  19D7  0DF4               	rlf	___lwmod@divisor+1,f
  4557  19D8  3EFF               	addlw	-1
  4558  19D9  1D03               	skipz
  4559  19DA  29D5               	goto	u3145
  4560  19DB                     l2418:
  4561  19DB  3001               	movlw	1
  4562  19DC  00F7               	movwf	??___lwmod
  4563  19DD  0877               	movf	??___lwmod,w
  4564  19DE  07F8               	addwf	___lwmod@counter,f
  4565  19DF                     l2420:
  4566  19DF  1FF4               	btfss	___lwmod@divisor+1,7
  4567  19E0  29E2               	goto	u3151
  4568  19E1  29E3               	goto	u3150
  4569  19E2                     u3151:
  4570  19E2  29D4               	goto	l2416
  4571  19E3                     u3150:
  4572  19E3                     l2422:
  4573  19E3  0874               	movf	___lwmod@divisor+1,w
  4574  19E4  0276               	subwf	___lwmod@dividend+1,w
  4575  19E5  1D03               	skipz
  4576  19E6  29E9               	goto	u3165
  4577  19E7  0873               	movf	___lwmod@divisor,w
  4578  19E8  0275               	subwf	___lwmod@dividend,w
  4579  19E9                     u3165:
  4580  19E9  1C03               	skipc
  4581  19EA  29EC               	goto	u3161
  4582  19EB  29ED               	goto	u3160
  4583  19EC                     u3161:
  4584  19EC  29F3               	goto	l2426
  4585  19ED                     u3160:
  4586  19ED                     l2424:
  4587  19ED  0873               	movf	___lwmod@divisor,w
  4588  19EE  02F5               	subwf	___lwmod@dividend,f
  4589  19EF  0874               	movf	___lwmod@divisor+1,w
  4590  19F0  1C03               	skipc
  4591  19F1  03F6               	decf	___lwmod@dividend+1,f
  4592  19F2  02F6               	subwf	___lwmod@dividend+1,f
  4593  19F3                     l2426:
  4594  19F3  3001               	movlw	1
  4595  19F4                     u3175:
  4596  19F4  1003               	clrc
  4597  19F5  0CF4               	rrf	___lwmod@divisor+1,f
  4598  19F6  0CF3               	rrf	___lwmod@divisor,f
  4599  19F7  3EFF               	addlw	-1
  4600  19F8  1D03               	skipz
  4601  19F9  29F4               	goto	u3175
  4602  19FA                     l2428:
  4603  19FA  3001               	movlw	1
  4604  19FB  02F8               	subwf	___lwmod@counter,f
  4605  19FC  1D03               	btfss	3,2
  4606  19FD  29FF               	goto	u3181
  4607  19FE  2A00               	goto	u3180
  4608  19FF                     u3181:
  4609  19FF  29E3               	goto	l2422
  4610  1A00                     u3180:
  4611  1A00                     l2430:
  4612  1A00  0876               	movf	___lwmod@dividend+1,w
  4613  1A01  00F4               	movwf	?___lwmod+1
  4614  1A02  0875               	movf	___lwmod@dividend,w
  4615  1A03  00F3               	movwf	?___lwmod
  4616  1A04                     l683:
  4617  1A04  0008               	return
  4618  1A05                     __end_of___lwmod:
  4619                           
  4620                           	psect	text8
  4621  1ACC                     __ptext8:	
  4622 ;; *************** function ___lwdiv *****************
  4623 ;; Defined at:
  4624 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  divisor         2    0[BANK0 ] unsigned int 
  4627 ;;  dividend        2    2[BANK0 ] unsigned int 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  quotient        2    4[BANK0 ] unsigned int 
  4630 ;;  counter         1    6[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  2    0[BANK0 ] unsigned int 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       4       0       0       0
  4641 ;;      Locals:         0       3       0       0       0
  4642 ;;      Temps:          1       0       0       0       0
  4643 ;;      Totals:         1       7       0       0       0
  4644 ;;Total ram usage:        8 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    1
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_fround
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           
  4655                           ;psect for function ___lwdiv
  4656  1ACC                     ___lwdiv:
  4657  1ACC                     l2386:	
  4658                           ;incstack = 0
  4659                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4660                           
  4661  1ACC  1283               	bcf	3,5	;RP0=0, select bank0
  4662  1ACD  1303               	bcf	3,6	;RP1=0, select bank0
  4663  1ACE  01A4               	clrf	___lwdiv@quotient
  4664  1ACF  01A5               	clrf	___lwdiv@quotient+1
  4665  1AD0                     l2388:
  4666  1AD0  0820               	movf	___lwdiv@divisor,w
  4667  1AD1  0421               	iorwf	___lwdiv@divisor+1,w
  4668  1AD2  1903               	btfsc	3,2
  4669  1AD3  2AD5               	goto	u3061
  4670  1AD4  2AD6               	goto	u3060
  4671  1AD5                     u3061:
  4672  1AD5  2B0D               	goto	l2408
  4673  1AD6                     u3060:
  4674  1AD6                     l2390:
  4675  1AD6  01A6               	clrf	___lwdiv@counter
  4676  1AD7  0AA6               	incf	___lwdiv@counter,f
  4677  1AD8  2AE4               	goto	l2396
  4678  1AD9                     l2392:
  4679  1AD9  3001               	movlw	1
  4680  1ADA                     u3075:
  4681  1ADA  1003               	clrc
  4682  1ADB  0DA0               	rlf	___lwdiv@divisor,f
  4683  1ADC  0DA1               	rlf	___lwdiv@divisor+1,f
  4684  1ADD  3EFF               	addlw	-1
  4685  1ADE  1D03               	skipz
  4686  1ADF  2ADA               	goto	u3075
  4687  1AE0                     l2394:
  4688  1AE0  3001               	movlw	1
  4689  1AE1  00F9               	movwf	??___lwdiv
  4690  1AE2  0879               	movf	??___lwdiv,w
  4691  1AE3  07A6               	addwf	___lwdiv@counter,f
  4692  1AE4                     l2396:
  4693  1AE4  1FA1               	btfss	___lwdiv@divisor+1,7
  4694  1AE5  2AE7               	goto	u3081
  4695  1AE6  2AE8               	goto	u3080
  4696  1AE7                     u3081:
  4697  1AE7  2AD9               	goto	l2392
  4698  1AE8                     u3080:
  4699  1AE8                     l2398:
  4700  1AE8  3001               	movlw	1
  4701  1AE9                     u3095:
  4702  1AE9  1003               	clrc
  4703  1AEA  0DA4               	rlf	___lwdiv@quotient,f
  4704  1AEB  0DA5               	rlf	___lwdiv@quotient+1,f
  4705  1AEC  3EFF               	addlw	-1
  4706  1AED  1D03               	skipz
  4707  1AEE  2AE9               	goto	u3095
  4708  1AEF  0821               	movf	___lwdiv@divisor+1,w
  4709  1AF0  0223               	subwf	___lwdiv@dividend+1,w
  4710  1AF1  1D03               	skipz
  4711  1AF2  2AF5               	goto	u3105
  4712  1AF3  0820               	movf	___lwdiv@divisor,w
  4713  1AF4  0222               	subwf	___lwdiv@dividend,w
  4714  1AF5                     u3105:
  4715  1AF5  1C03               	skipc
  4716  1AF6  2AF8               	goto	u3101
  4717  1AF7  2AF9               	goto	u3100
  4718  1AF8                     u3101:
  4719  1AF8  2B00               	goto	l2404
  4720  1AF9                     u3100:
  4721  1AF9                     l2400:
  4722  1AF9  0820               	movf	___lwdiv@divisor,w
  4723  1AFA  02A2               	subwf	___lwdiv@dividend,f
  4724  1AFB  0821               	movf	___lwdiv@divisor+1,w
  4725  1AFC  1C03               	skipc
  4726  1AFD  03A3               	decf	___lwdiv@dividend+1,f
  4727  1AFE  02A3               	subwf	___lwdiv@dividend+1,f
  4728  1AFF                     l2402:
  4729  1AFF  1424               	bsf	___lwdiv@quotient,0
  4730  1B00                     l2404:
  4731  1B00  3001               	movlw	1
  4732  1B01                     u3115:
  4733  1B01  1003               	clrc
  4734  1B02  0CA1               	rrf	___lwdiv@divisor+1,f
  4735  1B03  0CA0               	rrf	___lwdiv@divisor,f
  4736  1B04  3EFF               	addlw	-1
  4737  1B05  1D03               	skipz
  4738  1B06  2B01               	goto	u3115
  4739  1B07                     l2406:
  4740  1B07  3001               	movlw	1
  4741  1B08  02A6               	subwf	___lwdiv@counter,f
  4742  1B09  1D03               	btfss	3,2
  4743  1B0A  2B0C               	goto	u3121
  4744  1B0B  2B0D               	goto	u3120
  4745  1B0C                     u3121:
  4746  1B0C  2AE8               	goto	l2398
  4747  1B0D                     u3120:
  4748  1B0D                     l2408:
  4749  1B0D  0825               	movf	___lwdiv@quotient+1,w
  4750  1B0E  00A1               	movwf	?___lwdiv+1
  4751  1B0F  0824               	movf	___lwdiv@quotient,w
  4752  1B10  00A0               	movwf	?___lwdiv
  4753  1B11                     l673:
  4754  1B11  0008               	return
  4755  1B12                     __end_of___lwdiv:
  4756                           
  4757                           	psect	text9
  4758  1E85                     __ptext9:	
  4759 ;; *************** function __tdiv_to_l_ *****************
  4760 ;; Defined at:
  4761 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  f1              4    3[COMMON] float 
  4764 ;;  f2              4    7[COMMON] float 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  quot            4    4[BANK0 ] unsigned long 
  4767 ;;  exp1            1    9[BANK0 ] unsigned char 
  4768 ;;  cntr            1    8[BANK0 ] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  4    3[COMMON] unsigned long 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4778 ;;      Params:         8       0       0       0       0
  4779 ;;      Locals:         0       6       0       0       0
  4780 ;;      Temps:          0       4       0       0       0
  4781 ;;      Totals:         8      10       0       0       0
  4782 ;;Total ram usage:       18 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_sprintf
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function __tdiv_to_l_
  4794  1E85                     __tdiv_to_l_:
  4795  1E85                     l2864:	
  4796                           ;incstack = 0
  4797                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4798                           
  4799  1E85  0873               	movf	__tdiv_to_l_@f1,w
  4800  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  4801  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  4802  1E88  00A0               	movwf	??__tdiv_to_l_
  4803  1E89  0874               	movf	__tdiv_to_l_@f1+1,w
  4804  1E8A  00A1               	movwf	??__tdiv_to_l_+1
  4805  1E8B  0875               	movf	__tdiv_to_l_@f1+2,w
  4806  1E8C  00A2               	movwf	??__tdiv_to_l_+2
  4807  1E8D  1003               	clrc
  4808  1E8E  0D21               	rlf	??__tdiv_to_l_+1,w
  4809  1E8F  0D22               	rlf	??__tdiv_to_l_+2,w
  4810  1E90  00A3               	movwf	??__tdiv_to_l_+3
  4811  1E91  0823               	movf	??__tdiv_to_l_+3,w
  4812  1E92  00A9               	movwf	__tdiv_to_l_@exp1
  4813  1E93  0829               	movf	__tdiv_to_l_@exp1,w
  4814  1E94  1D03               	btfss	3,2
  4815  1E95  2E97               	goto	u4301
  4816  1E96  2E98               	goto	u4300
  4817  1E97                     u4301:
  4818  1E97  2EA1               	goto	l2870
  4819  1E98                     u4300:
  4820  1E98                     l2866:
  4821  1E98  3000               	movlw	0
  4822  1E99  00F6               	movwf	?__tdiv_to_l_+3
  4823  1E9A  3000               	movlw	0
  4824  1E9B  00F5               	movwf	?__tdiv_to_l_+2
  4825  1E9C  3000               	movlw	0
  4826  1E9D  00F4               	movwf	?__tdiv_to_l_+1
  4827  1E9E  3000               	movlw	0
  4828  1E9F  00F3               	movwf	?__tdiv_to_l_
  4829  1EA0  2F41               	goto	l584
  4830  1EA1                     l2870:
  4831  1EA1  0877               	movf	__tdiv_to_l_@f2,w
  4832  1EA2  00A0               	movwf	??__tdiv_to_l_
  4833  1EA3  0878               	movf	__tdiv_to_l_@f2+1,w
  4834  1EA4  00A1               	movwf	??__tdiv_to_l_+1
  4835  1EA5  0879               	movf	__tdiv_to_l_@f2+2,w
  4836  1EA6  00A2               	movwf	??__tdiv_to_l_+2
  4837  1EA7  1003               	clrc
  4838  1EA8  0D21               	rlf	??__tdiv_to_l_+1,w
  4839  1EA9  0D22               	rlf	??__tdiv_to_l_+2,w
  4840  1EAA  00A3               	movwf	??__tdiv_to_l_+3
  4841  1EAB  0823               	movf	??__tdiv_to_l_+3,w
  4842  1EAC  00A8               	movwf	__tdiv_to_l_@cntr
  4843  1EAD  0828               	movf	__tdiv_to_l_@cntr,w
  4844  1EAE  1D03               	btfss	3,2
  4845  1EAF  2EB1               	goto	u4311
  4846  1EB0  2EB2               	goto	u4310
  4847  1EB1                     u4311:
  4848  1EB1  2EB3               	goto	l585
  4849  1EB2                     u4310:
  4850  1EB2  2E98               	goto	l2866
  4851  1EB3                     l585:
  4852  1EB3  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4853  1EB4                     l2876:
  4854  1EB4  30FF               	movlw	255
  4855  1EB5  05F3               	andwf	__tdiv_to_l_@f1,f
  4856  1EB6  30FF               	movlw	255
  4857  1EB7  05F4               	andwf	__tdiv_to_l_@f1+1,f
  4858  1EB8  3000               	movlw	0
  4859  1EB9  05F5               	andwf	__tdiv_to_l_@f1+2,f
  4860  1EBA                     l2878:
  4861  1EBA  17F8               	bsf	__tdiv_to_l_@f2+1,7
  4862  1EBB  30FF               	movlw	255
  4863  1EBC  05F7               	andwf	__tdiv_to_l_@f2,f
  4864  1EBD  30FF               	movlw	255
  4865  1EBE  05F8               	andwf	__tdiv_to_l_@f2+1,f
  4866  1EBF  3000               	movlw	0
  4867  1EC0  05F9               	andwf	__tdiv_to_l_@f2+2,f
  4868  1EC1  3000               	movlw	0
  4869  1EC2  00A7               	movwf	__tdiv_to_l_@quot+3
  4870  1EC3  3000               	movlw	0
  4871  1EC4  00A6               	movwf	__tdiv_to_l_@quot+2
  4872  1EC5  3000               	movlw	0
  4873  1EC6  00A5               	movwf	__tdiv_to_l_@quot+1
  4874  1EC7  3000               	movlw	0
  4875  1EC8  00A4               	movwf	__tdiv_to_l_@quot
  4876  1EC9                     l2880:
  4877  1EC9  307F               	movlw	127
  4878  1ECA  02A9               	subwf	__tdiv_to_l_@exp1,f
  4879  1ECB                     l2882:
  4880  1ECB  3098               	movlw	152
  4881  1ECC  0728               	addwf	__tdiv_to_l_@cntr,w
  4882  1ECD  00A0               	movwf	??__tdiv_to_l_
  4883  1ECE  0820               	movf	??__tdiv_to_l_,w
  4884  1ECF  02A9               	subwf	__tdiv_to_l_@exp1,f
  4885  1ED0  3018               	movlw	24
  4886  1ED1  00A0               	movwf	??__tdiv_to_l_
  4887  1ED2  0820               	movf	??__tdiv_to_l_,w
  4888  1ED3  00A8               	movwf	__tdiv_to_l_@cntr
  4889  1ED4                     l2884:
  4890  1ED4  3001               	movlw	1
  4891  1ED5  00A0               	movwf	??__tdiv_to_l_
  4892  1ED6                     u4325:
  4893  1ED6  1003               	clrc
  4894  1ED7  0DA4               	rlf	__tdiv_to_l_@quot,f
  4895  1ED8  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4896  1ED9  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4897  1EDA  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4898  1EDB  0BA0               	decfsz	??__tdiv_to_l_,f
  4899  1EDC  2ED6               	goto	u4325
  4900  1EDD                     l2886:
  4901  1EDD  0879               	movf	__tdiv_to_l_@f2+2,w
  4902  1EDE  0275               	subwf	__tdiv_to_l_@f1+2,w
  4903  1EDF  1D03               	skipz
  4904  1EE0  2EE7               	goto	u4335
  4905  1EE1  0878               	movf	__tdiv_to_l_@f2+1,w
  4906  1EE2  0274               	subwf	__tdiv_to_l_@f1+1,w
  4907  1EE3  1D03               	skipz
  4908  1EE4  2EE7               	goto	u4335
  4909  1EE5  0877               	movf	__tdiv_to_l_@f2,w
  4910  1EE6  0273               	subwf	__tdiv_to_l_@f1,w
  4911  1EE7                     u4335:
  4912  1EE7  1C03               	skipc
  4913  1EE8  2EEA               	goto	u4331
  4914  1EE9  2EEB               	goto	u4330
  4915  1EEA                     u4331:
  4916  1EEA  2EF6               	goto	l2892
  4917  1EEB                     u4330:
  4918  1EEB                     l2888:
  4919  1EEB  0877               	movf	__tdiv_to_l_@f2,w
  4920  1EEC  02F3               	subwf	__tdiv_to_l_@f1,f
  4921  1EED  0878               	movf	__tdiv_to_l_@f2+1,w
  4922  1EEE  1C03               	skipc
  4923  1EEF  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  4924  1EF0  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4925  1EF1  0879               	movf	__tdiv_to_l_@f2+2,w
  4926  1EF2  1C03               	skipc
  4927  1EF3  0A79               	incf	__tdiv_to_l_@f2+2,w
  4928  1EF4  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4929  1EF5                     l2890:
  4930  1EF5  1424               	bsf	__tdiv_to_l_@quot,0
  4931  1EF6                     l2892:
  4932  1EF6  3001               	movlw	1
  4933  1EF7                     u4345:
  4934  1EF7  1003               	clrc
  4935  1EF8  0DF3               	rlf	__tdiv_to_l_@f1,f
  4936  1EF9  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4937  1EFA  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4938  1EFB  3EFF               	addlw	-1
  4939  1EFC  1D03               	skipz
  4940  1EFD  2EF7               	goto	u4345
  4941  1EFE                     l2894:
  4942  1EFE  3001               	movlw	1
  4943  1EFF  02A8               	subwf	__tdiv_to_l_@cntr,f
  4944  1F00  1D03               	btfss	3,2
  4945  1F01  2F03               	goto	u4351
  4946  1F02  2F04               	goto	u4350
  4947  1F03                     u4351:
  4948  1F03  2ED4               	goto	l2884
  4949  1F04                     u4350:
  4950  1F04                     l588:
  4951  1F04  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4952  1F05  2F07               	goto	u4361
  4953  1F06  2F08               	goto	u4360
  4954  1F07                     u4361:
  4955  1F07  2F22               	goto	l2904
  4956  1F08                     u4360:
  4957  1F08                     l2896:
  4958  1F08  0829               	movf	__tdiv_to_l_@exp1,w
  4959  1F09  3A80               	xorlw	128
  4960  1F0A  3E97               	addlw	151
  4961  1F0B  1803               	skipnc
  4962  1F0C  2F0E               	goto	u4371
  4963  1F0D  2F0F               	goto	u4370
  4964  1F0E                     u4371:
  4965  1F0E  2F10               	goto	l2902
  4966  1F0F                     u4370:
  4967  1F0F  2E98               	goto	l2866
  4968  1F10                     l2902:
  4969  1F10  3001               	movlw	1
  4970  1F11                     u4385:
  4971  1F11  1003               	clrc
  4972  1F12  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4973  1F13  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4974  1F14  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4975  1F15  0CA4               	rrf	__tdiv_to_l_@quot,f
  4976  1F16  3EFF               	addlw	-1
  4977  1F17  1D03               	skipz
  4978  1F18  2F11               	goto	u4385
  4979  1F19  3001               	movlw	1
  4980  1F1A  00A0               	movwf	??__tdiv_to_l_
  4981  1F1B  0820               	movf	??__tdiv_to_l_,w
  4982  1F1C  07A9               	addwf	__tdiv_to_l_@exp1,f
  4983  1F1D  1D03               	btfss	3,2
  4984  1F1E  2F20               	goto	u4391
  4985  1F1F  2F21               	goto	u4390
  4986  1F20                     u4391:
  4987  1F20  2F10               	goto	l2902
  4988  1F21                     u4390:
  4989  1F21  2F39               	goto	l2912
  4990  1F22                     l2904:
  4991  1F22  3018               	movlw	24
  4992  1F23  0229               	subwf	__tdiv_to_l_@exp1,w
  4993  1F24  1C03               	skipc
  4994  1F25  2F27               	goto	u4401
  4995  1F26  2F28               	goto	u4400
  4996  1F27                     u4401:
  4997  1F27  2F34               	goto	l595
  4998  1F28                     u4400:
  4999  1F28  2E98               	goto	l2866
  5000  1F29                     l2910:
  5001  1F29  3001               	movlw	1
  5002  1F2A  00A0               	movwf	??__tdiv_to_l_
  5003  1F2B                     u4415:
  5004  1F2B  1003               	clrc
  5005  1F2C  0DA4               	rlf	__tdiv_to_l_@quot,f
  5006  1F2D  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5007  1F2E  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5008  1F2F  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5009  1F30  0BA0               	decfsz	??__tdiv_to_l_,f
  5010  1F31  2F2B               	goto	u4415
  5011  1F32  3001               	movlw	1
  5012  1F33  02A9               	subwf	__tdiv_to_l_@exp1,f
  5013  1F34                     l595:
  5014  1F34  0829               	movf	__tdiv_to_l_@exp1,w
  5015  1F35  1D03               	btfss	3,2
  5016  1F36  2F38               	goto	u4421
  5017  1F37  2F39               	goto	u4420
  5018  1F38                     u4421:
  5019  1F38  2F29               	goto	l2910
  5020  1F39                     u4420:
  5021  1F39                     l2912:
  5022  1F39  0827               	movf	__tdiv_to_l_@quot+3,w
  5023  1F3A  00F6               	movwf	?__tdiv_to_l_+3
  5024  1F3B  0826               	movf	__tdiv_to_l_@quot+2,w
  5025  1F3C  00F5               	movwf	?__tdiv_to_l_+2
  5026  1F3D  0825               	movf	__tdiv_to_l_@quot+1,w
  5027  1F3E  00F4               	movwf	?__tdiv_to_l_+1
  5028  1F3F  0824               	movf	__tdiv_to_l_@quot,w
  5029  1F40  00F3               	movwf	?__tdiv_to_l_
  5030  1F41                     l584:
  5031  1F41  0008               	return
  5032  1F42                     __end_of__tdiv_to_l_:
  5033                           
  5034                           	psect	text10
  5035  1F42                     __ptext10:	
  5036 ;; *************** function __div_to_l_ *****************
  5037 ;; Defined at:
  5038 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  f1              4    3[COMMON] unsigned long 
  5041 ;;  f2              4    7[COMMON] unsigned long 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  quot            4    1[BANK0 ] unsigned long 
  5044 ;;  exp1            1    6[BANK0 ] unsigned char 
  5045 ;;  cntr            1    5[BANK0 ] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  4    3[COMMON] unsigned long 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5055 ;;      Params:         8       0       0       0       0
  5056 ;;      Locals:         0       6       0       0       0
  5057 ;;      Temps:          0       1       0       0       0
  5058 ;;      Totals:         8       7       0       0       0
  5059 ;;Total ram usage:       15 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    1
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_sprintf
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function __div_to_l_
  5071  1F42                     __div_to_l_:
  5072  1F42                     l2916:	
  5073                           ;incstack = 0
  5074                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5075                           
  5076  1F42  1003               	clrc
  5077  1F43  0D75               	rlf	__div_to_l_@f1+2,w
  5078  1F44  0D76               	rlf	__div_to_l_@f1+3,w
  5079  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  5080  1F46  1303               	bcf	3,6	;RP1=0, select bank0
  5081  1F47  00A0               	movwf	??__div_to_l_
  5082  1F48  0820               	movf	??__div_to_l_,w
  5083  1F49  00A6               	movwf	__div_to_l_@exp1
  5084  1F4A  0826               	movf	__div_to_l_@exp1,w
  5085  1F4B  1D03               	btfss	3,2
  5086  1F4C  2F4E               	goto	u4431
  5087  1F4D  2F4F               	goto	u4430
  5088  1F4E                     u4431:
  5089  1F4E  2F58               	goto	l2922
  5090  1F4F                     u4430:
  5091  1F4F                     l2918:
  5092  1F4F  3000               	movlw	0
  5093  1F50  00F6               	movwf	?__div_to_l_+3
  5094  1F51  3000               	movlw	0
  5095  1F52  00F5               	movwf	?__div_to_l_+2
  5096  1F53  3000               	movlw	0
  5097  1F54  00F4               	movwf	?__div_to_l_+1
  5098  1F55  3000               	movlw	0
  5099  1F56  00F3               	movwf	?__div_to_l_
  5100  1F57  2FFF               	goto	l537
  5101  1F58                     l2922:
  5102  1F58  1003               	clrc
  5103  1F59  0D79               	rlf	__div_to_l_@f2+2,w
  5104  1F5A  0D7A               	rlf	__div_to_l_@f2+3,w
  5105  1F5B  00A0               	movwf	??__div_to_l_
  5106  1F5C  0820               	movf	??__div_to_l_,w
  5107  1F5D  00A5               	movwf	__div_to_l_@cntr
  5108  1F5E  0825               	movf	__div_to_l_@cntr,w
  5109  1F5F  1D03               	btfss	3,2
  5110  1F60  2F62               	goto	u4441
  5111  1F61  2F63               	goto	u4440
  5112  1F62                     u4441:
  5113  1F62  2F64               	goto	l538
  5114  1F63                     u4440:
  5115  1F63  2F4F               	goto	l2918
  5116  1F64                     l538:
  5117  1F64  17F5               	bsf	__div_to_l_@f1+2,7
  5118  1F65                     l2928:
  5119  1F65  30FF               	movlw	255
  5120  1F66  05F3               	andwf	__div_to_l_@f1,f
  5121  1F67  30FF               	movlw	255
  5122  1F68  05F4               	andwf	__div_to_l_@f1+1,f
  5123  1F69  30FF               	movlw	255
  5124  1F6A  05F5               	andwf	__div_to_l_@f1+2,f
  5125  1F6B  3000               	movlw	0
  5126  1F6C  05F6               	andwf	__div_to_l_@f1+3,f
  5127  1F6D                     l2930:
  5128  1F6D  17F9               	bsf	__div_to_l_@f2+2,7
  5129  1F6E  30FF               	movlw	255
  5130  1F6F  05F7               	andwf	__div_to_l_@f2,f
  5131  1F70  30FF               	movlw	255
  5132  1F71  05F8               	andwf	__div_to_l_@f2+1,f
  5133  1F72  30FF               	movlw	255
  5134  1F73  05F9               	andwf	__div_to_l_@f2+2,f
  5135  1F74  3000               	movlw	0
  5136  1F75  05FA               	andwf	__div_to_l_@f2+3,f
  5137  1F76  3000               	movlw	0
  5138  1F77  00A4               	movwf	__div_to_l_@quot+3
  5139  1F78  3000               	movlw	0
  5140  1F79  00A3               	movwf	__div_to_l_@quot+2
  5141  1F7A  3000               	movlw	0
  5142  1F7B  00A2               	movwf	__div_to_l_@quot+1
  5143  1F7C  3000               	movlw	0
  5144  1F7D  00A1               	movwf	__div_to_l_@quot
  5145  1F7E                     l2932:
  5146  1F7E  307F               	movlw	127
  5147  1F7F  02A6               	subwf	__div_to_l_@exp1,f
  5148  1F80                     l2934:
  5149  1F80  30A0               	movlw	160
  5150  1F81  0725               	addwf	__div_to_l_@cntr,w
  5151  1F82  00A0               	movwf	??__div_to_l_
  5152  1F83  0820               	movf	??__div_to_l_,w
  5153  1F84  02A6               	subwf	__div_to_l_@exp1,f
  5154  1F85  3020               	movlw	32
  5155  1F86  00A0               	movwf	??__div_to_l_
  5156  1F87  0820               	movf	??__div_to_l_,w
  5157  1F88  00A5               	movwf	__div_to_l_@cntr
  5158  1F89                     l2936:
  5159  1F89  3001               	movlw	1
  5160  1F8A  00A0               	movwf	??__div_to_l_
  5161  1F8B                     u4455:
  5162  1F8B  1003               	clrc
  5163  1F8C  0DA1               	rlf	__div_to_l_@quot,f
  5164  1F8D  0DA2               	rlf	__div_to_l_@quot+1,f
  5165  1F8E  0DA3               	rlf	__div_to_l_@quot+2,f
  5166  1F8F  0DA4               	rlf	__div_to_l_@quot+3,f
  5167  1F90  0BA0               	decfsz	??__div_to_l_,f
  5168  1F91  2F8B               	goto	u4455
  5169  1F92                     l2938:
  5170  1F92  087A               	movf	__div_to_l_@f2+3,w
  5171  1F93  0276               	subwf	__div_to_l_@f1+3,w
  5172  1F94  1D03               	skipz
  5173  1F95  2FA0               	goto	u4465
  5174  1F96  0879               	movf	__div_to_l_@f2+2,w
  5175  1F97  0275               	subwf	__div_to_l_@f1+2,w
  5176  1F98  1D03               	skipz
  5177  1F99  2FA0               	goto	u4465
  5178  1F9A  0878               	movf	__div_to_l_@f2+1,w
  5179  1F9B  0274               	subwf	__div_to_l_@f1+1,w
  5180  1F9C  1D03               	skipz
  5181  1F9D  2FA0               	goto	u4465
  5182  1F9E  0877               	movf	__div_to_l_@f2,w
  5183  1F9F  0273               	subwf	__div_to_l_@f1,w
  5184  1FA0                     u4465:
  5185  1FA0  1C03               	skipc
  5186  1FA1  2FA3               	goto	u4461
  5187  1FA2  2FA4               	goto	u4460
  5188  1FA3                     u4461:
  5189  1FA3  2FB3               	goto	l2944
  5190  1FA4                     u4460:
  5191  1FA4                     l2940:
  5192  1FA4  0877               	movf	__div_to_l_@f2,w
  5193  1FA5  02F3               	subwf	__div_to_l_@f1,f
  5194  1FA6  0878               	movf	__div_to_l_@f2+1,w
  5195  1FA7  1C03               	skipc
  5196  1FA8  0F78               	incfsz	__div_to_l_@f2+1,w
  5197  1FA9  02F4               	subwf	__div_to_l_@f1+1,f
  5198  1FAA  0879               	movf	__div_to_l_@f2+2,w
  5199  1FAB  1C03               	skipc
  5200  1FAC  0F79               	incfsz	__div_to_l_@f2+2,w
  5201  1FAD  02F5               	subwf	__div_to_l_@f1+2,f
  5202  1FAE  087A               	movf	__div_to_l_@f2+3,w
  5203  1FAF  1C03               	skipc
  5204  1FB0  0F7A               	incfsz	__div_to_l_@f2+3,w
  5205  1FB1  02F6               	subwf	__div_to_l_@f1+3,f
  5206  1FB2                     l2942:
  5207  1FB2  1421               	bsf	__div_to_l_@quot,0
  5208  1FB3                     l2944:
  5209  1FB3  3001               	movlw	1
  5210  1FB4  00A0               	movwf	??__div_to_l_
  5211  1FB5                     u4475:
  5212  1FB5  1003               	clrc
  5213  1FB6  0DF3               	rlf	__div_to_l_@f1,f
  5214  1FB7  0DF4               	rlf	__div_to_l_@f1+1,f
  5215  1FB8  0DF5               	rlf	__div_to_l_@f1+2,f
  5216  1FB9  0DF6               	rlf	__div_to_l_@f1+3,f
  5217  1FBA  0BA0               	decfsz	??__div_to_l_,f
  5218  1FBB  2FB5               	goto	u4475
  5219  1FBC                     l2946:
  5220  1FBC  3001               	movlw	1
  5221  1FBD  02A5               	subwf	__div_to_l_@cntr,f
  5222  1FBE  1D03               	btfss	3,2
  5223  1FBF  2FC1               	goto	u4481
  5224  1FC0  2FC2               	goto	u4480
  5225  1FC1                     u4481:
  5226  1FC1  2F89               	goto	l2936
  5227  1FC2                     u4480:
  5228  1FC2                     l541:
  5229  1FC2  1FA6               	btfss	__div_to_l_@exp1,7
  5230  1FC3  2FC5               	goto	u4491
  5231  1FC4  2FC6               	goto	u4490
  5232  1FC5                     u4491:
  5233  1FC5  2FE0               	goto	l2956
  5234  1FC6                     u4490:
  5235  1FC6                     l2948:
  5236  1FC6  0826               	movf	__div_to_l_@exp1,w
  5237  1FC7  3A80               	xorlw	128
  5238  1FC8  3E9F               	addlw	159
  5239  1FC9  1803               	skipnc
  5240  1FCA  2FCC               	goto	u4501
  5241  1FCB  2FCD               	goto	u4500
  5242  1FCC                     u4501:
  5243  1FCC  2FCE               	goto	l2954
  5244  1FCD                     u4500:
  5245  1FCD  2F4F               	goto	l2918
  5246  1FCE                     l2954:
  5247  1FCE  3001               	movlw	1
  5248  1FCF                     u4515:
  5249  1FCF  1003               	clrc
  5250  1FD0  0CA4               	rrf	__div_to_l_@quot+3,f
  5251  1FD1  0CA3               	rrf	__div_to_l_@quot+2,f
  5252  1FD2  0CA2               	rrf	__div_to_l_@quot+1,f
  5253  1FD3  0CA1               	rrf	__div_to_l_@quot,f
  5254  1FD4  3EFF               	addlw	-1
  5255  1FD5  1D03               	skipz
  5256  1FD6  2FCF               	goto	u4515
  5257  1FD7  3001               	movlw	1
  5258  1FD8  00A0               	movwf	??__div_to_l_
  5259  1FD9  0820               	movf	??__div_to_l_,w
  5260  1FDA  07A6               	addwf	__div_to_l_@exp1,f
  5261  1FDB  1D03               	btfss	3,2
  5262  1FDC  2FDE               	goto	u4521
  5263  1FDD  2FDF               	goto	u4520
  5264  1FDE                     u4521:
  5265  1FDE  2FCE               	goto	l2954
  5266  1FDF                     u4520:
  5267  1FDF  2FF7               	goto	l2964
  5268  1FE0                     l2956:
  5269  1FE0  3020               	movlw	32
  5270  1FE1  0226               	subwf	__div_to_l_@exp1,w
  5271  1FE2  1C03               	skipc
  5272  1FE3  2FE5               	goto	u4531
  5273  1FE4  2FE6               	goto	u4530
  5274  1FE5                     u4531:
  5275  1FE5  2FF2               	goto	l548
  5276  1FE6                     u4530:
  5277  1FE6  2F4F               	goto	l2918
  5278  1FE7                     l2962:
  5279  1FE7  3001               	movlw	1
  5280  1FE8  00A0               	movwf	??__div_to_l_
  5281  1FE9                     u4545:
  5282  1FE9  1003               	clrc
  5283  1FEA  0DA1               	rlf	__div_to_l_@quot,f
  5284  1FEB  0DA2               	rlf	__div_to_l_@quot+1,f
  5285  1FEC  0DA3               	rlf	__div_to_l_@quot+2,f
  5286  1FED  0DA4               	rlf	__div_to_l_@quot+3,f
  5287  1FEE  0BA0               	decfsz	??__div_to_l_,f
  5288  1FEF  2FE9               	goto	u4545
  5289  1FF0  3001               	movlw	1
  5290  1FF1  02A6               	subwf	__div_to_l_@exp1,f
  5291  1FF2                     l548:
  5292  1FF2  0826               	movf	__div_to_l_@exp1,w
  5293  1FF3  1D03               	btfss	3,2
  5294  1FF4  2FF6               	goto	u4551
  5295  1FF5  2FF7               	goto	u4550
  5296  1FF6                     u4551:
  5297  1FF6  2FE7               	goto	l2962
  5298  1FF7                     u4550:
  5299  1FF7                     l2964:
  5300  1FF7  0824               	movf	__div_to_l_@quot+3,w
  5301  1FF8  00F6               	movwf	?__div_to_l_+3
  5302  1FF9  0823               	movf	__div_to_l_@quot+2,w
  5303  1FFA  00F5               	movwf	?__div_to_l_+2
  5304  1FFB  0822               	movf	__div_to_l_@quot+1,w
  5305  1FFC  00F4               	movwf	?__div_to_l_+1
  5306  1FFD  0821               	movf	__div_to_l_@quot,w
  5307  1FFE  00F3               	movwf	?__div_to_l_
  5308  1FFF                     l537:
  5309  1FFF  0008               	return
  5310  2000                     __end_of__div_to_l_:
  5311                           
  5312                           	psect	text11
  5313  19A6                     __ptext11:	
  5314 ;; *************** function ___wmul *****************
  5315 ;; Defined at:
  5316 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  multiplier      2    3[COMMON] unsigned int 
  5319 ;;  multiplicand    2    5[COMMON] unsigned int 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  product         2    7[COMMON] unsigned int 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  2    3[COMMON] unsigned int 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5331 ;;      Params:         4       0       0       0       0
  5332 ;;      Locals:         2       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0
  5334 ;;      Totals:         6       0       0       0       0
  5335 ;;Total ram usage:        6 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_sprintf
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function ___wmul
  5347  19A6                     ___wmul:
  5348  19A6                     l2968:	
  5349                           ;incstack = 0
  5350                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5351                           
  5352  19A6  01F7               	clrf	___wmul@product
  5353  19A7  01F8               	clrf	___wmul@product+1
  5354  19A8                     l2970:
  5355  19A8  1C73               	btfss	___wmul@multiplier,0
  5356  19A9  29AB               	goto	u4561
  5357  19AA  29AC               	goto	u4560
  5358  19AB                     u4561:
  5359  19AB  29B2               	goto	l367
  5360  19AC                     u4560:
  5361  19AC                     l2972:
  5362  19AC  0875               	movf	___wmul@multiplicand,w
  5363  19AD  07F7               	addwf	___wmul@product,f
  5364  19AE  1803               	skipnc
  5365  19AF  0AF8               	incf	___wmul@product+1,f
  5366  19B0  0876               	movf	___wmul@multiplicand+1,w
  5367  19B1  07F8               	addwf	___wmul@product+1,f
  5368  19B2                     l367:
  5369  19B2  3001               	movlw	1
  5370  19B3                     u4575:
  5371  19B3  1003               	clrc
  5372  19B4  0DF5               	rlf	___wmul@multiplicand,f
  5373  19B5  0DF6               	rlf	___wmul@multiplicand+1,f
  5374  19B6  3EFF               	addlw	-1
  5375  19B7  1D03               	skipz
  5376  19B8  29B3               	goto	u4575
  5377  19B9                     l2974:
  5378  19B9  3001               	movlw	1
  5379  19BA                     u4585:
  5380  19BA  1003               	clrc
  5381  19BB  0CF4               	rrf	___wmul@multiplier+1,f
  5382  19BC  0CF3               	rrf	___wmul@multiplier,f
  5383  19BD  3EFF               	addlw	-1
  5384  19BE  1D03               	skipz
  5385  19BF  29BA               	goto	u4585
  5386  19C0                     l2976:
  5387  19C0  0873               	movf	___wmul@multiplier,w
  5388  19C1  0474               	iorwf	___wmul@multiplier+1,w
  5389  19C2  1D03               	btfss	3,2
  5390  19C3  29C5               	goto	u4591
  5391  19C4  29C6               	goto	u4590
  5392  19C5                     u4591:
  5393  19C5  29A8               	goto	l2970
  5394  19C6                     u4590:
  5395  19C6                     l2978:
  5396  19C6  0878               	movf	___wmul@product+1,w
  5397  19C7  00F4               	movwf	?___wmul+1
  5398  19C8  0877               	movf	___wmul@product,w
  5399  19C9  00F3               	movwf	?___wmul
  5400  19CA                     l369:
  5401  19CA  0008               	return
  5402  19CB                     __end_of___wmul:
  5403                           
  5404                           	psect	text12
  5405  1BFE                     __ptext12:	
  5406 ;; *************** function ___llmod *****************
  5407 ;; Defined at:
  5408 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  divisor         4    3[COMMON] unsigned long 
  5411 ;;  dividend        4    7[COMMON] unsigned long 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  counter         1    1[BANK0 ] unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  4    3[COMMON] unsigned long 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5423 ;;      Params:         8       0       0       0       0
  5424 ;;      Locals:         0       1       0       0       0
  5425 ;;      Temps:          0       1       0       0       0
  5426 ;;      Totals:         8       2       0       0       0
  5427 ;;Total ram usage:       10 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:    1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_sprintf
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           
  5438                           ;psect for function ___llmod
  5439  1BFE                     ___llmod:
  5440  1BFE                     l3082:	
  5441                           ;incstack = 0
  5442                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5443                           
  5444  1BFE  0876               	movf	___llmod@divisor+3,w
  5445  1BFF  0475               	iorwf	___llmod@divisor+2,w
  5446  1C00  0474               	iorwf	___llmod@divisor+1,w
  5447  1C01  0473               	iorwf	___llmod@divisor,w
  5448  1C02  1903               	skipnz
  5449  1C03  2C05               	goto	u4881
  5450  1C04  2C06               	goto	u4880
  5451  1C05                     u4881:
  5452  1C05  2C4B               	goto	l3098
  5453  1C06                     u4880:
  5454  1C06                     l3084:
  5455  1C06  1283               	bcf	3,5	;RP0=0, select bank0
  5456  1C07  1303               	bcf	3,6	;RP1=0, select bank0
  5457  1C08  01A1               	clrf	___llmod@counter
  5458  1C09  0AA1               	incf	___llmod@counter,f
  5459  1C0A  2C18               	goto	l3088
  5460  1C0B                     l3086:
  5461  1C0B  3001               	movlw	1
  5462  1C0C  00A0               	movwf	??___llmod
  5463  1C0D                     u4895:
  5464  1C0D  1003               	clrc
  5465  1C0E  0DF3               	rlf	___llmod@divisor,f
  5466  1C0F  0DF4               	rlf	___llmod@divisor+1,f
  5467  1C10  0DF5               	rlf	___llmod@divisor+2,f
  5468  1C11  0DF6               	rlf	___llmod@divisor+3,f
  5469  1C12  0BA0               	decfsz	??___llmod,f
  5470  1C13  2C0D               	goto	u4895
  5471  1C14  3001               	movlw	1
  5472  1C15  00A0               	movwf	??___llmod
  5473  1C16  0820               	movf	??___llmod,w
  5474  1C17  07A1               	addwf	___llmod@counter,f
  5475  1C18                     l3088:
  5476  1C18  1FF6               	btfss	___llmod@divisor+3,7
  5477  1C19  2C1B               	goto	u4901
  5478  1C1A  2C1C               	goto	u4900
  5479  1C1B                     u4901:
  5480  1C1B  2C0B               	goto	l3086
  5481  1C1C                     u4900:
  5482  1C1C                     l3090:
  5483  1C1C  0876               	movf	___llmod@divisor+3,w
  5484  1C1D  027A               	subwf	___llmod@dividend+3,w
  5485  1C1E  1D03               	skipz
  5486  1C1F  2C2A               	goto	u4915
  5487  1C20  0875               	movf	___llmod@divisor+2,w
  5488  1C21  0279               	subwf	___llmod@dividend+2,w
  5489  1C22  1D03               	skipz
  5490  1C23  2C2A               	goto	u4915
  5491  1C24  0874               	movf	___llmod@divisor+1,w
  5492  1C25  0278               	subwf	___llmod@dividend+1,w
  5493  1C26  1D03               	skipz
  5494  1C27  2C2A               	goto	u4915
  5495  1C28  0873               	movf	___llmod@divisor,w
  5496  1C29  0277               	subwf	___llmod@dividend,w
  5497  1C2A                     u4915:
  5498  1C2A  1C03               	skipc
  5499  1C2B  2C2D               	goto	u4911
  5500  1C2C  2C2E               	goto	u4910
  5501  1C2D                     u4911:
  5502  1C2D  2C3C               	goto	l3094
  5503  1C2E                     u4910:
  5504  1C2E                     l3092:
  5505  1C2E  0873               	movf	___llmod@divisor,w
  5506  1C2F  02F7               	subwf	___llmod@dividend,f
  5507  1C30  0874               	movf	___llmod@divisor+1,w
  5508  1C31  1C03               	skipc
  5509  1C32  0F74               	incfsz	___llmod@divisor+1,w
  5510  1C33  02F8               	subwf	___llmod@dividend+1,f
  5511  1C34  0875               	movf	___llmod@divisor+2,w
  5512  1C35  1C03               	skipc
  5513  1C36  0F75               	incfsz	___llmod@divisor+2,w
  5514  1C37  02F9               	subwf	___llmod@dividend+2,f
  5515  1C38  0876               	movf	___llmod@divisor+3,w
  5516  1C39  1C03               	skipc
  5517  1C3A  0F76               	incfsz	___llmod@divisor+3,w
  5518  1C3B  02FA               	subwf	___llmod@dividend+3,f
  5519  1C3C                     l3094:
  5520  1C3C  3001               	movlw	1
  5521  1C3D                     u4925:
  5522  1C3D  1003               	clrc
  5523  1C3E  0CF6               	rrf	___llmod@divisor+3,f
  5524  1C3F  0CF5               	rrf	___llmod@divisor+2,f
  5525  1C40  0CF4               	rrf	___llmod@divisor+1,f
  5526  1C41  0CF3               	rrf	___llmod@divisor,f
  5527  1C42  3EFF               	addlw	-1
  5528  1C43  1D03               	skipz
  5529  1C44  2C3D               	goto	u4925
  5530  1C45                     l3096:
  5531  1C45  3001               	movlw	1
  5532  1C46  02A1               	subwf	___llmod@counter,f
  5533  1C47  1D03               	btfss	3,2
  5534  1C48  2C4A               	goto	u4931
  5535  1C49  2C4B               	goto	u4930
  5536  1C4A                     u4931:
  5537  1C4A  2C1C               	goto	l3090
  5538  1C4B                     u4930:
  5539  1C4B                     l3098:
  5540  1C4B  087A               	movf	___llmod@dividend+3,w
  5541  1C4C  00F6               	movwf	?___llmod+3
  5542  1C4D  0879               	movf	___llmod@dividend+2,w
  5543  1C4E  00F5               	movwf	?___llmod+2
  5544  1C4F  0878               	movf	___llmod@dividend+1,w
  5545  1C50  00F4               	movwf	?___llmod+1
  5546  1C51  0877               	movf	___llmod@dividend,w
  5547  1C52  00F3               	movwf	?___llmod
  5548  1C53                     l623:
  5549  1C53  0008               	return
  5550  1C54                     __end_of___llmod:
  5551                           
  5552                           	psect	text13
  5553  1C54                     __ptext13:	
  5554 ;; *************** function ___lldiv *****************
  5555 ;; Defined at:
  5556 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  divisor         4    3[COMMON] unsigned long 
  5559 ;;  dividend        4    7[COMMON] unsigned long 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  quotient        4    1[BANK0 ] unsigned long 
  5562 ;;  counter         1    5[BANK0 ] unsigned char 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  4    3[COMMON] unsigned long 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, status,0
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5572 ;;      Params:         8       0       0       0       0
  5573 ;;      Locals:         0       5       0       0       0
  5574 ;;      Temps:          0       1       0       0       0
  5575 ;;      Totals:         8       6       0       0       0
  5576 ;;Total ram usage:       14 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_sprintf
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function ___lldiv
  5588  1C54                     ___lldiv:
  5589  1C54                     l2982:	
  5590                           ;incstack = 0
  5591                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5592                           
  5593  1C54  3000               	movlw	0
  5594  1C55  1283               	bcf	3,5	;RP0=0, select bank0
  5595  1C56  1303               	bcf	3,6	;RP1=0, select bank0
  5596  1C57  00A4               	movwf	___lldiv@quotient+3
  5597  1C58  3000               	movlw	0
  5598  1C59  00A3               	movwf	___lldiv@quotient+2
  5599  1C5A  3000               	movlw	0
  5600  1C5B  00A2               	movwf	___lldiv@quotient+1
  5601  1C5C  3000               	movlw	0
  5602  1C5D  00A1               	movwf	___lldiv@quotient
  5603  1C5E  0876               	movf	___lldiv@divisor+3,w
  5604  1C5F  0475               	iorwf	___lldiv@divisor+2,w
  5605  1C60  0474               	iorwf	___lldiv@divisor+1,w
  5606  1C61  0473               	iorwf	___lldiv@divisor,w
  5607  1C62  1903               	skipnz
  5608  1C63  2C65               	goto	u4601
  5609  1C64  2C66               	goto	u4600
  5610  1C65                     u4601:
  5611  1C65  2CB3               	goto	l3002
  5612  1C66                     u4600:
  5613  1C66                     l2984:
  5614  1C66  01A5               	clrf	___lldiv@counter
  5615  1C67  0AA5               	incf	___lldiv@counter,f
  5616  1C68  2C76               	goto	l2988
  5617  1C69                     l2986:
  5618  1C69  3001               	movlw	1
  5619  1C6A  00A0               	movwf	??___lldiv
  5620  1C6B                     u4615:
  5621  1C6B  1003               	clrc
  5622  1C6C  0DF3               	rlf	___lldiv@divisor,f
  5623  1C6D  0DF4               	rlf	___lldiv@divisor+1,f
  5624  1C6E  0DF5               	rlf	___lldiv@divisor+2,f
  5625  1C6F  0DF6               	rlf	___lldiv@divisor+3,f
  5626  1C70  0BA0               	decfsz	??___lldiv,f
  5627  1C71  2C6B               	goto	u4615
  5628  1C72  3001               	movlw	1
  5629  1C73  00A0               	movwf	??___lldiv
  5630  1C74  0820               	movf	??___lldiv,w
  5631  1C75  07A5               	addwf	___lldiv@counter,f
  5632  1C76                     l2988:
  5633  1C76  1FF6               	btfss	___lldiv@divisor+3,7
  5634  1C77  2C79               	goto	u4621
  5635  1C78  2C7A               	goto	u4620
  5636  1C79                     u4621:
  5637  1C79  2C69               	goto	l2986
  5638  1C7A                     u4620:
  5639  1C7A                     l2990:
  5640  1C7A  3001               	movlw	1
  5641  1C7B  00A0               	movwf	??___lldiv
  5642  1C7C                     u4635:
  5643  1C7C  1003               	clrc
  5644  1C7D  0DA1               	rlf	___lldiv@quotient,f
  5645  1C7E  0DA2               	rlf	___lldiv@quotient+1,f
  5646  1C7F  0DA3               	rlf	___lldiv@quotient+2,f
  5647  1C80  0DA4               	rlf	___lldiv@quotient+3,f
  5648  1C81  0BA0               	decfsz	??___lldiv,f
  5649  1C82  2C7C               	goto	u4635
  5650  1C83                     l2992:
  5651  1C83  0876               	movf	___lldiv@divisor+3,w
  5652  1C84  027A               	subwf	___lldiv@dividend+3,w
  5653  1C85  1D03               	skipz
  5654  1C86  2C91               	goto	u4645
  5655  1C87  0875               	movf	___lldiv@divisor+2,w
  5656  1C88  0279               	subwf	___lldiv@dividend+2,w
  5657  1C89  1D03               	skipz
  5658  1C8A  2C91               	goto	u4645
  5659  1C8B  0874               	movf	___lldiv@divisor+1,w
  5660  1C8C  0278               	subwf	___lldiv@dividend+1,w
  5661  1C8D  1D03               	skipz
  5662  1C8E  2C91               	goto	u4645
  5663  1C8F  0873               	movf	___lldiv@divisor,w
  5664  1C90  0277               	subwf	___lldiv@dividend,w
  5665  1C91                     u4645:
  5666  1C91  1C03               	skipc
  5667  1C92  2C94               	goto	u4641
  5668  1C93  2C95               	goto	u4640
  5669  1C94                     u4641:
  5670  1C94  2CA4               	goto	l2998
  5671  1C95                     u4640:
  5672  1C95                     l2994:
  5673  1C95  0873               	movf	___lldiv@divisor,w
  5674  1C96  02F7               	subwf	___lldiv@dividend,f
  5675  1C97  0874               	movf	___lldiv@divisor+1,w
  5676  1C98  1C03               	skipc
  5677  1C99  0F74               	incfsz	___lldiv@divisor+1,w
  5678  1C9A  02F8               	subwf	___lldiv@dividend+1,f
  5679  1C9B  0875               	movf	___lldiv@divisor+2,w
  5680  1C9C  1C03               	skipc
  5681  1C9D  0F75               	incfsz	___lldiv@divisor+2,w
  5682  1C9E  02F9               	subwf	___lldiv@dividend+2,f
  5683  1C9F  0876               	movf	___lldiv@divisor+3,w
  5684  1CA0  1C03               	skipc
  5685  1CA1  0F76               	incfsz	___lldiv@divisor+3,w
  5686  1CA2  02FA               	subwf	___lldiv@dividend+3,f
  5687  1CA3                     l2996:
  5688  1CA3  1421               	bsf	___lldiv@quotient,0
  5689  1CA4                     l2998:
  5690  1CA4  3001               	movlw	1
  5691  1CA5                     u4655:
  5692  1CA5  1003               	clrc
  5693  1CA6  0CF6               	rrf	___lldiv@divisor+3,f
  5694  1CA7  0CF5               	rrf	___lldiv@divisor+2,f
  5695  1CA8  0CF4               	rrf	___lldiv@divisor+1,f
  5696  1CA9  0CF3               	rrf	___lldiv@divisor,f
  5697  1CAA  3EFF               	addlw	-1
  5698  1CAB  1D03               	skipz
  5699  1CAC  2CA5               	goto	u4655
  5700  1CAD                     l3000:
  5701  1CAD  3001               	movlw	1
  5702  1CAE  02A5               	subwf	___lldiv@counter,f
  5703  1CAF  1D03               	btfss	3,2
  5704  1CB0  2CB2               	goto	u4661
  5705  1CB1  2CB3               	goto	u4660
  5706  1CB2                     u4661:
  5707  1CB2  2C7A               	goto	l2990
  5708  1CB3                     u4660:
  5709  1CB3                     l3002:
  5710  1CB3  0824               	movf	___lldiv@quotient+3,w
  5711  1CB4  00F6               	movwf	?___lldiv+3
  5712  1CB5  0823               	movf	___lldiv@quotient+2,w
  5713  1CB6  00F5               	movwf	?___lldiv+2
  5714  1CB7  0822               	movf	___lldiv@quotient+1,w
  5715  1CB8  00F4               	movwf	?___lldiv+1
  5716  1CB9  0821               	movf	___lldiv@quotient,w
  5717  1CBA  00F3               	movwf	?___lldiv
  5718  1CBB                     l403:
  5719  1CBB  0008               	return
  5720  1CBC                     __end_of___lldiv:
  5721                           
  5722                           	psect	text14
  5723  1008                     __ptext14:	
  5724 ;; *************** function ___fltol *****************
  5725 ;; Defined at:
  5726 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  f1              4   53[BANK0 ] unsigned long 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  exp1            1   63[BANK0 ] unsigned char 
  5731 ;;  sign1           1   62[BANK0 ] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  4   53[BANK0 ] long 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5741 ;;      Params:         0       4       0       0       0
  5742 ;;      Locals:         0       2       0       0       0
  5743 ;;      Temps:          0       5       0       0       0
  5744 ;;      Totals:         0      11       0       0       0
  5745 ;;Total ram usage:       11 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    1
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_sprintf
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           
  5756                           ;psect for function ___fltol
  5757  1008                     ___fltol:
  5758  1008                     l3046:	
  5759                           ;incstack = 0
  5760                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5761                           
  5762  1008  1003               	clrc
  5763  1009  1283               	bcf	3,5	;RP0=0, select bank0
  5764  100A  1303               	bcf	3,6	;RP1=0, select bank0
  5765  100B  0D57               	rlf	___fltol@f1+2,w
  5766  100C  0D58               	rlf	___fltol@f1+3,w
  5767  100D  00D9               	movwf	??___fltol
  5768  100E  0859               	movf	??___fltol,w
  5769  100F  00DF               	movwf	___fltol@exp1
  5770  1010  085F               	movf	___fltol@exp1,w
  5771  1011  1D03               	btfss	3,2
  5772  1012  2814               	goto	u4781
  5773  1013  2815               	goto	u4780
  5774  1014                     u4781:
  5775  1014  281E               	goto	l3052
  5776  1015                     u4780:
  5777  1015                     l3048:
  5778  1015  3000               	movlw	0
  5779  1016  00D8               	movwf	?___fltol+3
  5780  1017  3000               	movlw	0
  5781  1018  00D7               	movwf	?___fltol+2
  5782  1019  3000               	movlw	0
  5783  101A  00D6               	movwf	?___fltol+1
  5784  101B  3000               	movlw	0
  5785  101C  00D5               	movwf	?___fltol
  5786  101D  2883               	goto	l570
  5787  101E                     l3052:
  5788  101E  0855               	movf	___fltol@f1,w
  5789  101F  00D9               	movwf	??___fltol
  5790  1020  0856               	movf	___fltol@f1+1,w
  5791  1021  00DA               	movwf	??___fltol+1
  5792  1022  0857               	movf	___fltol@f1+2,w
  5793  1023  00DB               	movwf	??___fltol+2
  5794  1024  0858               	movf	___fltol@f1+3,w
  5795  1025  00DC               	movwf	??___fltol+3
  5796  1026  301F               	movlw	31
  5797  1027                     u4795:
  5798  1027  1003               	clrc
  5799  1028  0CDC               	rrf	??___fltol+3,f
  5800  1029  0CDB               	rrf	??___fltol+2,f
  5801  102A  0CDA               	rrf	??___fltol+1,f
  5802  102B  0CD9               	rrf	??___fltol,f
  5803  102C                     u4790:
  5804  102C  3EFF               	addlw	-1
  5805  102D  1D03               	skipz
  5806  102E  2827               	goto	u4795
  5807  102F  0859               	movf	??___fltol,w
  5808  1030  00DD               	movwf	??___fltol+4
  5809  1031  085D               	movf	??___fltol+4,w
  5810  1032  00DE               	movwf	___fltol@sign1
  5811  1033                     l3054:
  5812  1033  17D7               	bsf	___fltol@f1+2,7
  5813  1034                     l3056:
  5814  1034  30FF               	movlw	255
  5815  1035  05D5               	andwf	___fltol@f1,f
  5816  1036  30FF               	movlw	255
  5817  1037  05D6               	andwf	___fltol@f1+1,f
  5818  1038  30FF               	movlw	255
  5819  1039  05D7               	andwf	___fltol@f1+2,f
  5820  103A  3000               	movlw	0
  5821  103B  05D8               	andwf	___fltol@f1+3,f
  5822  103C                     l3058:
  5823  103C  3096               	movlw	150
  5824  103D  02DF               	subwf	___fltol@exp1,f
  5825  103E                     l3060:
  5826  103E  1FDF               	btfss	___fltol@exp1,7
  5827  103F  2841               	goto	u4801
  5828  1040  2842               	goto	u4800
  5829  1041                     u4801:
  5830  1041  285C               	goto	l3070
  5831  1042                     u4800:
  5832  1042                     l3062:
  5833  1042  085F               	movf	___fltol@exp1,w
  5834  1043  3A80               	xorlw	128
  5835  1044  3E97               	addlw	151
  5836  1045  1803               	skipnc
  5837  1046  2848               	goto	u4811
  5838  1047  2849               	goto	u4810
  5839  1048                     u4811:
  5840  1048  284A               	goto	l3068
  5841  1049                     u4810:
  5842  1049  2815               	goto	l3048
  5843  104A                     l3068:
  5844  104A  3001               	movlw	1
  5845  104B                     u4825:
  5846  104B  1003               	clrc
  5847  104C  0CD8               	rrf	___fltol@f1+3,f
  5848  104D  0CD7               	rrf	___fltol@f1+2,f
  5849  104E  0CD6               	rrf	___fltol@f1+1,f
  5850  104F  0CD5               	rrf	___fltol@f1,f
  5851  1050  3EFF               	addlw	-1
  5852  1051  1D03               	skipz
  5853  1052  284B               	goto	u4825
  5854  1053  3001               	movlw	1
  5855  1054  00D9               	movwf	??___fltol
  5856  1055  0859               	movf	??___fltol,w
  5857  1056  07DF               	addwf	___fltol@exp1,f
  5858  1057  1D03               	btfss	3,2
  5859  1058  285A               	goto	u4831
  5860  1059  285B               	goto	u4830
  5861  105A                     u4831:
  5862  105A  284A               	goto	l3068
  5863  105B                     u4830:
  5864  105B  2873               	goto	l3078
  5865  105C                     l3070:
  5866  105C  3020               	movlw	32
  5867  105D  025F               	subwf	___fltol@exp1,w
  5868  105E  1C03               	skipc
  5869  105F  2861               	goto	u4841
  5870  1060  2862               	goto	u4840
  5871  1061                     u4841:
  5872  1061  286E               	goto	l577
  5873  1062                     u4840:
  5874  1062  2815               	goto	l3048
  5875  1063                     l3076:
  5876  1063  3001               	movlw	1
  5877  1064  00D9               	movwf	??___fltol
  5878  1065                     u4855:
  5879  1065  1003               	clrc
  5880  1066  0DD5               	rlf	___fltol@f1,f
  5881  1067  0DD6               	rlf	___fltol@f1+1,f
  5882  1068  0DD7               	rlf	___fltol@f1+2,f
  5883  1069  0DD8               	rlf	___fltol@f1+3,f
  5884  106A  0BD9               	decfsz	??___fltol,f
  5885  106B  2865               	goto	u4855
  5886  106C  3001               	movlw	1
  5887  106D  02DF               	subwf	___fltol@exp1,f
  5888  106E                     l577:
  5889  106E  085F               	movf	___fltol@exp1,w
  5890  106F  1D03               	btfss	3,2
  5891  1070  2872               	goto	u4861
  5892  1071  2873               	goto	u4860
  5893  1072                     u4861:
  5894  1072  2863               	goto	l3076
  5895  1073                     u4860:
  5896  1073                     l3078:
  5897  1073  085E               	movf	___fltol@sign1,w
  5898  1074  1903               	btfsc	3,2
  5899  1075  2877               	goto	u4871
  5900  1076  2878               	goto	u4870
  5901  1077                     u4871:
  5902  1077  2883               	goto	l580
  5903  1078                     u4870:
  5904  1078                     l3080:
  5905  1078  09D5               	comf	___fltol@f1,f
  5906  1079  09D6               	comf	___fltol@f1+1,f
  5907  107A  09D7               	comf	___fltol@f1+2,f
  5908  107B  09D8               	comf	___fltol@f1+3,f
  5909  107C  0AD5               	incf	___fltol@f1,f
  5910  107D  1903               	skipnz
  5911  107E  0AD6               	incf	___fltol@f1+1,f
  5912  107F  1903               	skipnz
  5913  1080  0AD7               	incf	___fltol@f1+2,f
  5914  1081  1903               	skipnz
  5915  1082  0AD8               	incf	___fltol@f1+3,f
  5916  1083                     l580:
  5917  1083                     l570:
  5918  1083  0008               	return
  5919  1084                     __end_of___fltol:
  5920                           
  5921                           	psect	text15
  5922  1BAE                     __ptext15:	
  5923 ;; *************** function ___flsub *****************
  5924 ;; Defined at:
  5925 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  a               4    0[BANK1 ] long 
  5928 ;;  b               4    4[BANK1 ] long 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  4    0[BANK1 ] long 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5940 ;;      Params:         0       0       8       0       0
  5941 ;;      Locals:         0       0       0       0       0
  5942 ;;      Temps:          0       0       0       0       0
  5943 ;;      Totals:         0       0       8       0       0
  5944 ;;Total ram usage:        8 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    2
  5947 ;; This function calls:
  5948 ;;		___fladd
  5949 ;; This function is called by:
  5950 ;;		_main
  5951 ;;		_sprintf
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           
  5956                           ;psect for function ___flsub
  5957  1BAE                     ___flsub:
  5958  1BAE                     l3102:	
  5959                           ;incstack = 0
  5960                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5961                           
  5962  1BAE  3080               	movlw	128
  5963  1BAF  1683               	bsf	3,5	;RP0=1, select bank1
  5964  1BB0  1303               	bcf	3,6	;RP1=0, select bank1
  5965  1BB1  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5966  1BB2                     l3104:
  5967  1BB2  0827               	movf	(___flsub@b+3)^(0+128),w
  5968  1BB3  1283               	bcf	3,5	;RP0=0, select bank0
  5969  1BB4  1303               	bcf	3,6	;RP1=0, select bank0
  5970  1BB5  00D9               	movwf	___fladd@b+3
  5971  1BB6  1683               	bsf	3,5	;RP0=1, select bank1
  5972  1BB7  1303               	bcf	3,6	;RP1=0, select bank1
  5973  1BB8  0826               	movf	(___flsub@b+2)^(0+128),w
  5974  1BB9  1283               	bcf	3,5	;RP0=0, select bank0
  5975  1BBA  1303               	bcf	3,6	;RP1=0, select bank0
  5976  1BBB  00D8               	movwf	___fladd@b+2
  5977  1BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5978  1BBD  1303               	bcf	3,6	;RP1=0, select bank1
  5979  1BBE  0825               	movf	(___flsub@b+1)^(0+128),w
  5980  1BBF  1283               	bcf	3,5	;RP0=0, select bank0
  5981  1BC0  1303               	bcf	3,6	;RP1=0, select bank0
  5982  1BC1  00D7               	movwf	___fladd@b+1
  5983  1BC2  1683               	bsf	3,5	;RP0=1, select bank1
  5984  1BC3  1303               	bcf	3,6	;RP1=0, select bank1
  5985  1BC4  0824               	movf	___flsub@b^(0+128),w
  5986  1BC5  1283               	bcf	3,5	;RP0=0, select bank0
  5987  1BC6  1303               	bcf	3,6	;RP1=0, select bank0
  5988  1BC7  00D6               	movwf	___fladd@b
  5989  1BC8  1683               	bsf	3,5	;RP0=1, select bank1
  5990  1BC9  1303               	bcf	3,6	;RP1=0, select bank1
  5991  1BCA  0823               	movf	(___flsub@a+3)^(0+128),w
  5992  1BCB  1283               	bcf	3,5	;RP0=0, select bank0
  5993  1BCC  1303               	bcf	3,6	;RP1=0, select bank0
  5994  1BCD  00DD               	movwf	___fladd@a+3
  5995  1BCE  1683               	bsf	3,5	;RP0=1, select bank1
  5996  1BCF  1303               	bcf	3,6	;RP1=0, select bank1
  5997  1BD0  0822               	movf	(___flsub@a+2)^(0+128),w
  5998  1BD1  1283               	bcf	3,5	;RP0=0, select bank0
  5999  1BD2  1303               	bcf	3,6	;RP1=0, select bank0
  6000  1BD3  00DC               	movwf	___fladd@a+2
  6001  1BD4  1683               	bsf	3,5	;RP0=1, select bank1
  6002  1BD5  1303               	bcf	3,6	;RP1=0, select bank1
  6003  1BD6  0821               	movf	(___flsub@a+1)^(0+128),w
  6004  1BD7  1283               	bcf	3,5	;RP0=0, select bank0
  6005  1BD8  1303               	bcf	3,6	;RP1=0, select bank0
  6006  1BD9  00DB               	movwf	___fladd@a+1
  6007  1BDA  1683               	bsf	3,5	;RP0=1, select bank1
  6008  1BDB  1303               	bcf	3,6	;RP1=0, select bank1
  6009  1BDC  0820               	movf	___flsub@a^(0+128),w
  6010  1BDD  1283               	bcf	3,5	;RP0=0, select bank0
  6011  1BDE  1303               	bcf	3,6	;RP1=0, select bank0
  6012  1BDF  00DA               	movwf	___fladd@a
  6013  1BE0  160A  118A  2273  160A  158A  	fcall	___fladd
  6014  1BE5  1283               	bcf	3,5	;RP0=0, select bank0
  6015  1BE6  1303               	bcf	3,6	;RP1=0, select bank0
  6016  1BE7  0859               	movf	?___fladd+3,w
  6017  1BE8  1683               	bsf	3,5	;RP0=1, select bank1
  6018  1BE9  1303               	bcf	3,6	;RP1=0, select bank1
  6019  1BEA  00A3               	movwf	(?___flsub+3)^(0+128)
  6020  1BEB  1283               	bcf	3,5	;RP0=0, select bank0
  6021  1BEC  1303               	bcf	3,6	;RP1=0, select bank0
  6022  1BED  0858               	movf	?___fladd+2,w
  6023  1BEE  1683               	bsf	3,5	;RP0=1, select bank1
  6024  1BEF  1303               	bcf	3,6	;RP1=0, select bank1
  6025  1BF0  00A2               	movwf	(?___flsub+2)^(0+128)
  6026  1BF1  1283               	bcf	3,5	;RP0=0, select bank0
  6027  1BF2  1303               	bcf	3,6	;RP1=0, select bank0
  6028  1BF3  0857               	movf	?___fladd+1,w
  6029  1BF4  1683               	bsf	3,5	;RP0=1, select bank1
  6030  1BF5  1303               	bcf	3,6	;RP1=0, select bank1
  6031  1BF6  00A1               	movwf	(?___flsub+1)^(0+128)
  6032  1BF7  1283               	bcf	3,5	;RP0=0, select bank0
  6033  1BF8  1303               	bcf	3,6	;RP1=0, select bank0
  6034  1BF9  0856               	movf	?___fladd,w
  6035  1BFA  1683               	bsf	3,5	;RP0=1, select bank1
  6036  1BFB  1303               	bcf	3,6	;RP1=0, select bank1
  6037  1BFC  00A0               	movwf	?___flsub^(0+128)
  6038  1BFD                     l740:
  6039  1BFD  0008               	return
  6040  1BFE                     __end_of___flsub:
  6041                           
  6042                           	psect	text16
  6043  1273                     __ptext16:	
  6044 ;; *************** function ___fladd *****************
  6045 ;; Defined at:
  6046 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  b               4   54[BANK0 ] long 
  6049 ;;  a               4   58[BANK0 ] long 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  grs             1   73[BANK0 ] unsigned char 
  6052 ;;  bexp            1   72[BANK0 ] unsigned char 
  6053 ;;  aexp            1   71[BANK0 ] unsigned char 
  6054 ;;  signs           1   70[BANK0 ] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  4   54[BANK0 ] unsigned char 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0, btemp+1
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6064 ;;      Params:         0       8       0       0       0
  6065 ;;      Locals:         0       4       0       0       0
  6066 ;;      Temps:          0       8       0       0       0
  6067 ;;      Totals:         0      20       0       0       0
  6068 ;;Total ram usage:       20 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    1
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_main
  6075 ;;		_sprintf
  6076 ;;		___flsub
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function ___fladd
  6082  1273                     ___fladd:
  6083  1273                     l2434:	
  6084                           ;incstack = 0
  6085                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6086                           
  6087  1273  1283               	bcf	3,5	;RP0=0, select bank0
  6088  1274  1303               	bcf	3,6	;RP1=0, select bank0
  6089  1275  0859               	movf	___fladd@b+3,w
  6090  1276  3980               	andlw	128
  6091  1277  00DE               	movwf	??___fladd
  6092  1278  085E               	movf	??___fladd,w
  6093  1279  00E6               	movwf	___fladd@signs
  6094  127A                     l2436:
  6095  127A  0859               	movf	___fladd@b+3,w
  6096  127B  00DE               	movwf	??___fladd
  6097  127C  075E               	addwf	??___fladd,w
  6098  127D  00DF               	movwf	??___fladd+1
  6099  127E  085F               	movf	??___fladd+1,w
  6100  127F  00E8               	movwf	___fladd@bexp
  6101  1280                     l2438:
  6102  1280  1FD8               	btfss	___fladd@b+2,7
  6103  1281  2A83               	goto	u3191
  6104  1282  2A84               	goto	u3190
  6105  1283                     u3191:
  6106  1283  2A85               	goto	l2442
  6107  1284                     u3190:
  6108  1284                     l2440:
  6109  1284  1468               	bsf	___fladd@bexp,0
  6110  1285                     l2442:
  6111  1285  0868               	movf	___fladd@bexp,w
  6112  1286  1903               	btfsc	3,2
  6113  1287  2A89               	goto	u3201
  6114  1288  2A8A               	goto	u3200
  6115  1289                     u3201:
  6116  1289  2A9A               	goto	l2452
  6117  128A                     u3200:
  6118  128A                     l2444:
  6119  128A  0A68               	incf	___fladd@bexp,w
  6120  128B  1D03               	btfss	3,2
  6121  128C  2A8E               	goto	u3211
  6122  128D  2A8F               	goto	u3210
  6123  128E                     u3211:
  6124  128E  2A97               	goto	l2448
  6125  128F                     u3210:
  6126  128F                     l2446:
  6127  128F  3000               	movlw	0
  6128  1290  00D9               	movwf	___fladd@b+3
  6129  1291  3000               	movlw	0
  6130  1292  00D8               	movwf	___fladd@b+2
  6131  1293  3000               	movlw	0
  6132  1294  00D7               	movwf	___fladd@b+1
  6133  1295  3000               	movlw	0
  6134  1296  00D6               	movwf	___fladd@b
  6135  1297                     l2448:
  6136  1297  17D8               	bsf	___fladd@b+2,7
  6137  1298                     l2450:
  6138  1298  01D9               	clrf	___fladd@b+3
  6139  1299  2AA2               	goto	l2454
  6140  129A                     l2452:
  6141  129A  3000               	movlw	0
  6142  129B  00D9               	movwf	___fladd@b+3
  6143  129C  3000               	movlw	0
  6144  129D  00D8               	movwf	___fladd@b+2
  6145  129E  3000               	movlw	0
  6146  129F  00D7               	movwf	___fladd@b+1
  6147  12A0  3000               	movlw	0
  6148  12A1  00D6               	movwf	___fladd@b
  6149  12A2                     l2454:
  6150  12A2  085D               	movf	___fladd@a+3,w
  6151  12A3  3980               	andlw	128
  6152  12A4  00DE               	movwf	??___fladd
  6153  12A5  085E               	movf	??___fladd,w
  6154  12A6  00E7               	movwf	___fladd@aexp
  6155  12A7                     l2456:
  6156  12A7  0867               	movf	___fladd@aexp,w
  6157  12A8  0666               	xorwf	___fladd@signs,w
  6158  12A9  1903               	skipnz
  6159  12AA  2AAC               	goto	u3221
  6160  12AB  2AAD               	goto	u3220
  6161  12AC                     u3221:
  6162  12AC  2AAE               	goto	l2460
  6163  12AD                     u3220:
  6164  12AD                     l2458:
  6165  12AD  1766               	bsf	___fladd@signs,6
  6166  12AE                     l2460:
  6167  12AE  085D               	movf	___fladd@a+3,w
  6168  12AF  00DE               	movwf	??___fladd
  6169  12B0  075E               	addwf	??___fladd,w
  6170  12B1  00DF               	movwf	??___fladd+1
  6171  12B2  085F               	movf	??___fladd+1,w
  6172  12B3  00E7               	movwf	___fladd@aexp
  6173  12B4                     l2462:
  6174  12B4  1FDC               	btfss	___fladd@a+2,7
  6175  12B5  2AB7               	goto	u3231
  6176  12B6  2AB8               	goto	u3230
  6177  12B7                     u3231:
  6178  12B7  2AB9               	goto	l2466
  6179  12B8                     u3230:
  6180  12B8                     l2464:
  6181  12B8  1467               	bsf	___fladd@aexp,0
  6182  12B9                     l2466:
  6183  12B9  0867               	movf	___fladd@aexp,w
  6184  12BA  1903               	btfsc	3,2
  6185  12BB  2ABD               	goto	u3241
  6186  12BC  2ABE               	goto	u3240
  6187  12BD                     u3241:
  6188  12BD  2ACE               	goto	l2476
  6189  12BE                     u3240:
  6190  12BE                     l2468:
  6191  12BE  0A67               	incf	___fladd@aexp,w
  6192  12BF  1D03               	btfss	3,2
  6193  12C0  2AC2               	goto	u3251
  6194  12C1  2AC3               	goto	u3250
  6195  12C2                     u3251:
  6196  12C2  2ACB               	goto	l2472
  6197  12C3                     u3250:
  6198  12C3                     l2470:
  6199  12C3  3000               	movlw	0
  6200  12C4  00DD               	movwf	___fladd@a+3
  6201  12C5  3000               	movlw	0
  6202  12C6  00DC               	movwf	___fladd@a+2
  6203  12C7  3000               	movlw	0
  6204  12C8  00DB               	movwf	___fladd@a+1
  6205  12C9  3000               	movlw	0
  6206  12CA  00DA               	movwf	___fladd@a
  6207  12CB                     l2472:
  6208  12CB  17DC               	bsf	___fladd@a+2,7
  6209  12CC                     l2474:
  6210  12CC  01DD               	clrf	___fladd@a+3
  6211  12CD  2AD6               	goto	l694
  6212  12CE                     l2476:
  6213  12CE  3000               	movlw	0
  6214  12CF  00DD               	movwf	___fladd@a+3
  6215  12D0  3000               	movlw	0
  6216  12D1  00DC               	movwf	___fladd@a+2
  6217  12D2  3000               	movlw	0
  6218  12D3  00DB               	movwf	___fladd@a+1
  6219  12D4  3000               	movlw	0
  6220  12D5  00DA               	movwf	___fladd@a
  6221  12D6                     l694:
  6222  12D6  0868               	movf	___fladd@bexp,w
  6223  12D7  0267               	subwf	___fladd@aexp,w
  6224  12D8  1803               	skipnc
  6225  12D9  2ADB               	goto	u3261
  6226  12DA  2ADC               	goto	u3260
  6227  12DB                     u3261:
  6228  12DB  2B20               	goto	l2512
  6229  12DC                     u3260:
  6230  12DC                     l2478:
  6231  12DC  1F66               	btfss	___fladd@signs,6
  6232  12DD  2ADF               	goto	u3271
  6233  12DE  2AE0               	goto	u3270
  6234  12DF                     u3271:
  6235  12DF  2AE4               	goto	l2482
  6236  12E0                     u3270:
  6237  12E0                     l2480:
  6238  12E0  3080               	movlw	128
  6239  12E1  00DE               	movwf	??___fladd
  6240  12E2  085E               	movf	??___fladd,w
  6241  12E3  06E6               	xorwf	___fladd@signs,f
  6242  12E4                     l2482:
  6243  12E4  0868               	movf	___fladd@bexp,w
  6244  12E5  00DE               	movwf	??___fladd
  6245  12E6  085E               	movf	??___fladd,w
  6246  12E7  00E9               	movwf	___fladd@grs
  6247  12E8                     l2484:
  6248  12E8  0867               	movf	___fladd@aexp,w
  6249  12E9  00DE               	movwf	??___fladd
  6250  12EA  085E               	movf	??___fladd,w
  6251  12EB  00E8               	movwf	___fladd@bexp
  6252  12EC                     l2486:
  6253  12EC  0869               	movf	___fladd@grs,w
  6254  12ED  00DE               	movwf	??___fladd
  6255  12EE  085E               	movf	??___fladd,w
  6256  12EF  00E7               	movwf	___fladd@aexp
  6257  12F0                     l2488:
  6258  12F0  0856               	movf	___fladd@b,w
  6259  12F1  00DE               	movwf	??___fladd
  6260  12F2  085E               	movf	??___fladd,w
  6261  12F3  00E9               	movwf	___fladd@grs
  6262  12F4                     l2490:
  6263  12F4  085A               	movf	___fladd@a,w
  6264  12F5  00DE               	movwf	??___fladd
  6265  12F6  085E               	movf	??___fladd,w
  6266  12F7  00D6               	movwf	___fladd@b
  6267  12F8                     l2492:
  6268  12F8  0869               	movf	___fladd@grs,w
  6269  12F9  00DE               	movwf	??___fladd
  6270  12FA  085E               	movf	??___fladd,w
  6271  12FB  00DA               	movwf	___fladd@a
  6272  12FC                     l2494:
  6273  12FC  0857               	movf	___fladd@b+1,w
  6274  12FD  00DE               	movwf	??___fladd
  6275  12FE  085E               	movf	??___fladd,w
  6276  12FF  00E9               	movwf	___fladd@grs
  6277  1300                     l2496:
  6278  1300  085B               	movf	___fladd@a+1,w
  6279  1301  00DE               	movwf	??___fladd
  6280  1302  085E               	movf	??___fladd,w
  6281  1303  00D7               	movwf	___fladd@b+1
  6282  1304                     l2498:
  6283  1304  0869               	movf	___fladd@grs,w
  6284  1305  00DE               	movwf	??___fladd
  6285  1306  085E               	movf	??___fladd,w
  6286  1307  00DB               	movwf	___fladd@a+1
  6287  1308                     l2500:
  6288  1308  0858               	movf	___fladd@b+2,w
  6289  1309  00DE               	movwf	??___fladd
  6290  130A  085E               	movf	??___fladd,w
  6291  130B  00E9               	movwf	___fladd@grs
  6292  130C                     l2502:
  6293  130C  085C               	movf	___fladd@a+2,w
  6294  130D  00DE               	movwf	??___fladd
  6295  130E  085E               	movf	??___fladd,w
  6296  130F  00D8               	movwf	___fladd@b+2
  6297  1310                     l2504:
  6298  1310  0869               	movf	___fladd@grs,w
  6299  1311  00DE               	movwf	??___fladd
  6300  1312  085E               	movf	??___fladd,w
  6301  1313  00DC               	movwf	___fladd@a+2
  6302  1314                     l2506:
  6303  1314  0859               	movf	___fladd@b+3,w
  6304  1315  00DE               	movwf	??___fladd
  6305  1316  085E               	movf	??___fladd,w
  6306  1317  00E9               	movwf	___fladd@grs
  6307  1318                     l2508:
  6308  1318  085D               	movf	___fladd@a+3,w
  6309  1319  00DE               	movwf	??___fladd
  6310  131A  085E               	movf	??___fladd,w
  6311  131B  00D9               	movwf	___fladd@b+3
  6312  131C                     l2510:
  6313  131C  0869               	movf	___fladd@grs,w
  6314  131D  00DE               	movwf	??___fladd
  6315  131E  085E               	movf	??___fladd,w
  6316  131F  00DD               	movwf	___fladd@a+3
  6317  1320                     l2512:
  6318  1320  01E9               	clrf	___fladd@grs
  6319  1321                     l2514:
  6320  1321  0867               	movf	___fladd@aexp,w
  6321  1322  00DE               	movwf	??___fladd
  6322  1323  01DF               	clrf	??___fladd+1
  6323  1324  085F               	movf	??___fladd+1,w
  6324  1325  00E1               	movwf	??___fladd+3
  6325  1326  0868               	movf	___fladd@bexp,w
  6326  1327  025E               	subwf	??___fladd,w
  6327  1328  00E0               	movwf	??___fladd+2
  6328  1329  1C03               	skipc
  6329  132A  03E1               	decf	??___fladd+3,f
  6330  132B  0861               	movf	??___fladd+3,w
  6331  132C  3A80               	xorlw	128
  6332  132D  00FF               	movwf	btemp+1
  6333  132E  3080               	movlw	128
  6334  132F  027F               	subwf	btemp+1,w
  6335  1330  1D03               	skipz
  6336  1331  2B34               	goto	u3285
  6337  1332  301A               	movlw	26
  6338  1333  0260               	subwf	??___fladd+2,w
  6339  1334                     u3285:
  6340  1334  1C03               	skipc
  6341  1335  2B37               	goto	u3281
  6342  1336  2B38               	goto	u3280
  6343  1337                     u3281:
  6344  1337  2B75               	goto	l2530
  6345  1338                     u3280:
  6346  1338                     l2516:
  6347  1338  1283               	bcf	3,5	;RP0=0, select bank0
  6348  1339  1303               	bcf	3,6	;RP1=0, select bank0
  6349  133A  0859               	movf	___fladd@b+3,w
  6350  133B  0458               	iorwf	___fladd@b+2,w
  6351  133C  0457               	iorwf	___fladd@b+1,w
  6352  133D  0456               	iorwf	___fladd@b,w
  6353  133E  1D03               	skipz
  6354  133F  2B41               	goto	u3291
  6355  1340  2B43               	goto	u3290
  6356  1341                     u3291:
  6357  1341  3001               	movlw	1
  6358  1342  2B44               	goto	u3300
  6359  1343                     u3290:
  6360  1343  3000               	movlw	0
  6361  1344                     u3300:
  6362  1344  00DE               	movwf	??___fladd
  6363  1345  085E               	movf	??___fladd,w
  6364  1346  00E9               	movwf	___fladd@grs
  6365  1347  3000               	movlw	0
  6366  1348  00D9               	movwf	___fladd@b+3
  6367  1349  3000               	movlw	0
  6368  134A  00D8               	movwf	___fladd@b+2
  6369  134B  3000               	movlw	0
  6370  134C  00D7               	movwf	___fladd@b+1
  6371  134D  3000               	movlw	0
  6372  134E  00D6               	movwf	___fladd@b
  6373  134F  0867               	movf	___fladd@aexp,w
  6374  1350  00DE               	movwf	??___fladd
  6375  1351  085E               	movf	??___fladd,w
  6376  1352  00E8               	movwf	___fladd@bexp
  6377  1353  2B7D               	goto	l698
  6378  1354                     l700:
  6379  1354  1C69               	btfss	___fladd@grs,0
  6380  1355  2B57               	goto	u3311
  6381  1356  2B58               	goto	u3310
  6382  1357                     u3311:
  6383  1357  2B61               	goto	l2520
  6384  1358                     u3310:
  6385  1358                     l2518:
  6386  1358  0869               	movf	___fladd@grs,w
  6387  1359  00DE               	movwf	??___fladd
  6388  135A  1003               	clrc
  6389  135B  0C5E               	rrf	??___fladd,w
  6390  135C  3801               	iorlw	1
  6391  135D  00DF               	movwf	??___fladd+1
  6392  135E  085F               	movf	??___fladd+1,w
  6393  135F  00E9               	movwf	___fladd@grs
  6394  1360  2B63               	goto	l2522
  6395  1361                     l2520:
  6396  1361  1003               	clrc
  6397  1362  0CE9               	rrf	___fladd@grs,f
  6398  1363                     l2522:
  6399  1363  1C56               	btfss	___fladd@b,0
  6400  1364  2B66               	goto	u3321
  6401  1365  2B67               	goto	u3320
  6402  1366                     u3321:
  6403  1366  2B68               	goto	l2526
  6404  1367                     u3320:
  6405  1367                     l2524:
  6406  1367  17E9               	bsf	___fladd@grs,7
  6407  1368                     l2526:
  6408  1368  3001               	movlw	1
  6409  1369  00DE               	movwf	??___fladd
  6410  136A                     u3335:
  6411  136A  0D59               	rlf	___fladd@b+3,w
  6412  136B  0CD9               	rrf	___fladd@b+3,f
  6413  136C  0CD8               	rrf	___fladd@b+2,f
  6414  136D  0CD7               	rrf	___fladd@b+1,f
  6415  136E  0CD6               	rrf	___fladd@b,f
  6416  136F  0BDE               	decfsz	??___fladd& (0+127),f
  6417  1370  2B6A               	goto	u3335
  6418  1371                     l2528:
  6419  1371  3001               	movlw	1
  6420  1372  00DE               	movwf	??___fladd
  6421  1373  085E               	movf	??___fladd,w
  6422  1374  07E8               	addwf	___fladd@bexp,f
  6423  1375                     l2530:
  6424  1375  1283               	bcf	3,5	;RP0=0, select bank0
  6425  1376  1303               	bcf	3,6	;RP1=0, select bank0
  6426  1377  0867               	movf	___fladd@aexp,w
  6427  1378  0268               	subwf	___fladd@bexp,w
  6428  1379  1C03               	skipc
  6429  137A  2B7C               	goto	u3341
  6430  137B  2B7D               	goto	u3340
  6431  137C                     u3341:
  6432  137C  2B54               	goto	l700
  6433  137D                     u3340:
  6434  137D                     l698:
  6435  137D  1B66               	btfsc	___fladd@signs,6
  6436  137E  2B80               	goto	u3351
  6437  137F  2B81               	goto	u3350
  6438  1380                     u3351:
  6439  1380  2BCC               	goto	l2556
  6440  1381                     u3350:
  6441  1381                     l2532:
  6442  1381  0868               	movf	___fladd@bexp,w
  6443  1382  1D03               	btfss	3,2
  6444  1383  2B85               	goto	u3361
  6445  1384  2B86               	goto	u3360
  6446  1385                     u3361:
  6447  1385  2B8F               	goto	l2538
  6448  1386                     u3360:
  6449  1386                     l2534:
  6450  1386  3000               	movlw	0
  6451  1387  00D9               	movwf	?___fladd+3
  6452  1388  3000               	movlw	0
  6453  1389  00D8               	movwf	?___fladd+2
  6454  138A  3000               	movlw	0
  6455  138B  00D7               	movwf	?___fladd+1
  6456  138C  3000               	movlw	0
  6457  138D  00D6               	movwf	?___fladd
  6458  138E  2CFA               	goto	l707
  6459  138F                     l2538:
  6460  138F  085A               	movf	___fladd@a,w
  6461  1390  07D6               	addwf	___fladd@b,f
  6462  1391  085B               	movf	___fladd@a+1,w
  6463  1392  1103               	clrz
  6464  1393  1803               	skipnc
  6465  1394  3E01               	addlw	1
  6466  1395  1903               	skipnz
  6467  1396  2B98               	goto	u3371
  6468  1397  07D7               	addwf	___fladd@b+1,f
  6469  1398                     u3371:
  6470  1398  085C               	movf	___fladd@a+2,w
  6471  1399  1103               	clrz
  6472  139A  1803               	skipnc
  6473  139B  3E01               	addlw	1
  6474  139C  1903               	skipnz
  6475  139D  2B9F               	goto	u3372
  6476  139E  07D8               	addwf	___fladd@b+2,f
  6477  139F                     u3372:
  6478  139F  085D               	movf	___fladd@a+3,w
  6479  13A0  1103               	clrz
  6480  13A1  1803               	skipnc
  6481  13A2  3E01               	addlw	1
  6482  13A3  1903               	skipnz
  6483  13A4  2BA6               	goto	u3373
  6484  13A5  07D9               	addwf	___fladd@b+3,f
  6485  13A6                     u3373:
  6486  13A6                     l2540:
  6487  13A6  1C59               	btfss	___fladd@b+3,0
  6488  13A7  2BA9               	goto	u3381
  6489  13A8  2BAA               	goto	u3380
  6490  13A9                     u3381:
  6491  13A9  2C80               	goto	l2590
  6492  13AA                     u3380:
  6493  13AA                     l2542:
  6494  13AA  1C69               	btfss	___fladd@grs,0
  6495  13AB  2BAD               	goto	u3391
  6496  13AC  2BAE               	goto	u3390
  6497  13AD                     u3391:
  6498  13AD  2BB7               	goto	l2546
  6499  13AE                     u3390:
  6500  13AE                     l2544:
  6501  13AE  0869               	movf	___fladd@grs,w
  6502  13AF  00DE               	movwf	??___fladd
  6503  13B0  1003               	clrc
  6504  13B1  0C5E               	rrf	??___fladd,w
  6505  13B2  3801               	iorlw	1
  6506  13B3  00DF               	movwf	??___fladd+1
  6507  13B4  085F               	movf	??___fladd+1,w
  6508  13B5  00E9               	movwf	___fladd@grs
  6509  13B6  2BB9               	goto	l2548
  6510  13B7                     l2546:
  6511  13B7  1003               	clrc
  6512  13B8  0CE9               	rrf	___fladd@grs,f
  6513  13B9                     l2548:
  6514  13B9  1C56               	btfss	___fladd@b,0
  6515  13BA  2BBC               	goto	u3401
  6516  13BB  2BBD               	goto	u3400
  6517  13BC                     u3401:
  6518  13BC  2BBE               	goto	l2552
  6519  13BD                     u3400:
  6520  13BD                     l2550:
  6521  13BD  17E9               	bsf	___fladd@grs,7
  6522  13BE                     l2552:
  6523  13BE  3001               	movlw	1
  6524  13BF  00DE               	movwf	??___fladd
  6525  13C0                     u3415:
  6526  13C0  0D59               	rlf	___fladd@b+3,w
  6527  13C1  0CD9               	rrf	___fladd@b+3,f
  6528  13C2  0CD8               	rrf	___fladd@b+2,f
  6529  13C3  0CD7               	rrf	___fladd@b+1,f
  6530  13C4  0CD6               	rrf	___fladd@b,f
  6531  13C5  0BDE               	decfsz	??___fladd& (0+127),f
  6532  13C6  2BC0               	goto	u3415
  6533  13C7                     l2554:
  6534  13C7  3001               	movlw	1
  6535  13C8  00DE               	movwf	??___fladd
  6536  13C9  085E               	movf	??___fladd,w
  6537  13CA  07E8               	addwf	___fladd@bexp,f
  6538  13CB  2C80               	goto	l2590
  6539  13CC                     l2556:
  6540  13CC  0859               	movf	___fladd@b+3,w
  6541  13CD  3A80               	xorlw	128
  6542  13CE  00FF               	movwf	btemp+1
  6543  13CF  085D               	movf	___fladd@a+3,w
  6544  13D0  3A80               	xorlw	128
  6545  13D1  027F               	subwf	btemp+1,w
  6546  13D2  1D03               	skipz
  6547  13D3  2BDE               	goto	u3423
  6548  13D4  085C               	movf	___fladd@a+2,w
  6549  13D5  0258               	subwf	___fladd@b+2,w
  6550  13D6  1D03               	skipz
  6551  13D7  2BDE               	goto	u3423
  6552  13D8  085B               	movf	___fladd@a+1,w
  6553  13D9  0257               	subwf	___fladd@b+1,w
  6554  13DA  1D03               	skipz
  6555  13DB  2BDE               	goto	u3423
  6556  13DC  085A               	movf	___fladd@a,w
  6557  13DD  0256               	subwf	___fladd@b,w
  6558  13DE                     u3423:
  6559  13DE  1803               	skipnc
  6560  13DF  2BE1               	goto	u3421
  6561  13E0  2BE2               	goto	u3420
  6562  13E1                     u3421:
  6563  13E1  2C3A               	goto	l2566
  6564  13E2                     u3420:
  6565  13E2                     l2558:
  6566  13E2  30FF               	movlw	255
  6567  13E3  00DE               	movwf	??___fladd
  6568  13E4  30FF               	movlw	255
  6569  13E5  00DF               	movwf	??___fladd+1
  6570  13E6  30FF               	movlw	255
  6571  13E7  00E0               	movwf	??___fladd+2
  6572  13E8  30FF               	movlw	255
  6573  13E9  00E1               	movwf	??___fladd+3
  6574  13EA  085A               	movf	___fladd@a,w
  6575  13EB  00E2               	movwf	??___fladd+4
  6576  13EC  085B               	movf	___fladd@a+1,w
  6577  13ED  00E3               	movwf	??___fladd+5
  6578  13EE  085C               	movf	___fladd@a+2,w
  6579  13EF  00E4               	movwf	??___fladd+6
  6580  13F0  085D               	movf	___fladd@a+3,w
  6581  13F1  00E5               	movwf	??___fladd+7
  6582  13F2  0856               	movf	___fladd@b,w
  6583  13F3  02E2               	subwf	??___fladd+4,f
  6584  13F4  0857               	movf	___fladd@b+1,w
  6585  13F5  1C03               	skipc
  6586  13F6  0F57               	incfsz	___fladd@b+1,w
  6587  13F7  2BF9               	goto	u3431
  6588  13F8  2BFA               	goto	u3432
  6589  13F9                     u3431:
  6590  13F9  02E3               	subwf	??___fladd+5,f
  6591  13FA                     u3432:
  6592  13FA  0858               	movf	___fladd@b+2,w
  6593  13FB  1C03               	skipc
  6594  13FC  0F58               	incfsz	___fladd@b+2,w
  6595  13FD  2BFF               	goto	u3433
  6596  13FE  2C00               	goto	u3434
  6597  13FF                     u3433:
  6598  13FF  02E4               	subwf	??___fladd+6,f
  6599  1400                     u3434:
  6600  1400  0859               	movf	___fladd@b+3,w
  6601  1401  1C03               	skipc
  6602  1402  0F59               	incfsz	___fladd@b+3,w
  6603  1403  2C05               	goto	u3435
  6604  1404  2C06               	goto	u3436
  6605  1405                     u3435:
  6606  1405  02E5               	subwf	??___fladd+7,f
  6607  1406                     u3436:
  6608  1406  0862               	movf	??___fladd+4,w
  6609  1407  07DE               	addwf	??___fladd,f
  6610  1408  0863               	movf	??___fladd+5,w
  6611  1409  1803               	skipnc
  6612  140A  0F63               	incfsz	??___fladd+5,w
  6613  140B  2C0D               	goto	u3440
  6614  140C  2C0E               	goto	u3441
  6615  140D                     u3440:
  6616  140D  07DF               	addwf	??___fladd+1,f
  6617  140E                     u3441:
  6618  140E  0864               	movf	??___fladd+6,w
  6619  140F  1803               	skipnc
  6620  1410  0F64               	incfsz	??___fladd+6,w
  6621  1411  2C13               	goto	u3442
  6622  1412  2C14               	goto	u3443
  6623  1413                     u3442:
  6624  1413  07E0               	addwf	??___fladd+2,f
  6625  1414                     u3443:
  6626  1414  0865               	movf	??___fladd+7,w
  6627  1415  1803               	skipnc
  6628  1416  0A65               	incf	??___fladd+7,w
  6629  1417  07E1               	addwf	??___fladd+3,f
  6630  1418  0861               	movf	??___fladd+3,w
  6631  1419  00D9               	movwf	___fladd@b+3
  6632  141A  0860               	movf	??___fladd+2,w
  6633  141B  00D8               	movwf	___fladd@b+2
  6634  141C  085F               	movf	??___fladd+1,w
  6635  141D  00D7               	movwf	___fladd@b+1
  6636  141E  085E               	movf	??___fladd,w
  6637  141F  00D6               	movwf	___fladd@b
  6638  1420                     l2560:
  6639  1420  3080               	movlw	128
  6640  1421  00DE               	movwf	??___fladd
  6641  1422  085E               	movf	??___fladd,w
  6642  1423  06E6               	xorwf	___fladd@signs,f
  6643  1424  09E9               	comf	___fladd@grs,f
  6644  1425  0AE9               	incf	___fladd@grs,f
  6645  1426                     l2562:
  6646  1426  0869               	movf	___fladd@grs,w
  6647  1427  1D03               	btfss	3,2
  6648  1428  2C2A               	goto	u3451
  6649  1429  2C2B               	goto	u3450
  6650  142A                     u3451:
  6651  142A  2C48               	goto	l715
  6652  142B                     u3450:
  6653  142B                     l2564:
  6654  142B  3001               	movlw	1
  6655  142C  07D6               	addwf	___fladd@b,f
  6656  142D  3000               	movlw	0
  6657  142E  1803               	skipnc
  6658  142F  3001               	movlw	1
  6659  1430  07D7               	addwf	___fladd@b+1,f
  6660  1431  3000               	movlw	0
  6661  1432  1803               	skipnc
  6662  1433  3001               	movlw	1
  6663  1434  07D8               	addwf	___fladd@b+2,f
  6664  1435  3000               	movlw	0
  6665  1436  1803               	skipnc
  6666  1437  3001               	movlw	1
  6667  1438  07D9               	addwf	___fladd@b+3,f
  6668  1439  2C48               	goto	l715
  6669  143A                     l2566:
  6670  143A  085A               	movf	___fladd@a,w
  6671  143B  02D6               	subwf	___fladd@b,f
  6672  143C  085B               	movf	___fladd@a+1,w
  6673  143D  1C03               	skipc
  6674  143E  0F5B               	incfsz	___fladd@a+1,w
  6675  143F  02D7               	subwf	___fladd@b+1,f
  6676  1440  085C               	movf	___fladd@a+2,w
  6677  1441  1C03               	skipc
  6678  1442  0F5C               	incfsz	___fladd@a+2,w
  6679  1443  02D8               	subwf	___fladd@b+2,f
  6680  1444  085D               	movf	___fladd@a+3,w
  6681  1445  1C03               	skipc
  6682  1446  0F5D               	incfsz	___fladd@a+3,w
  6683  1447  02D9               	subwf	___fladd@b+3,f
  6684  1448                     l715:
  6685  1448  0859               	movf	___fladd@b+3,w
  6686  1449  0458               	iorwf	___fladd@b+2,w
  6687  144A  0457               	iorwf	___fladd@b+1,w
  6688  144B  0456               	iorwf	___fladd@b,w
  6689  144C  1D03               	skipz
  6690  144D  2C4F               	goto	u3461
  6691  144E  2C50               	goto	u3460
  6692  144F                     u3461:
  6693  144F  2C7C               	goto	l2588
  6694  1450                     u3460:
  6695  1450                     l2568:
  6696  1450  0869               	movf	___fladd@grs,w
  6697  1451  1D03               	btfss	3,2
  6698  1452  2C54               	goto	u3471
  6699  1453  2C55               	goto	u3470
  6700  1454                     u3471:
  6701  1454  2C7C               	goto	l2588
  6702  1455                     u3470:
  6703  1455                     l2570:
  6704  1455  3000               	movlw	0
  6705  1456  00D9               	movwf	?___fladd+3
  6706  1457  3000               	movlw	0
  6707  1458  00D8               	movwf	?___fladd+2
  6708  1459  3000               	movlw	0
  6709  145A  00D7               	movwf	?___fladd+1
  6710  145B  3000               	movlw	0
  6711  145C  00D6               	movwf	?___fladd
  6712  145D  2CFA               	goto	l707
  6713  145E                     l2574:
  6714  145E  3001               	movlw	1
  6715  145F  00DE               	movwf	??___fladd
  6716  1460                     u3485:
  6717  1460  1003               	clrc
  6718  1461  0DD6               	rlf	___fladd@b,f
  6719  1462  0DD7               	rlf	___fladd@b+1,f
  6720  1463  0DD8               	rlf	___fladd@b+2,f
  6721  1464  0DD9               	rlf	___fladd@b+3,f
  6722  1465  0BDE               	decfsz	??___fladd,f
  6723  1466  2C60               	goto	u3485
  6724  1467                     l2576:
  6725  1467  1FE9               	btfss	___fladd@grs,7
  6726  1468  2C6A               	goto	u3491
  6727  1469  2C6B               	goto	u3490
  6728  146A                     u3491:
  6729  146A  2C6C               	goto	l719
  6730  146B                     u3490:
  6731  146B                     l2578:
  6732  146B  1456               	bsf	___fladd@b,0
  6733  146C                     l719:
  6734  146C  1C69               	btfss	___fladd@grs,0
  6735  146D  2C6F               	goto	u3501
  6736  146E  2C70               	goto	u3500
  6737  146F                     u3501:
  6738  146F  2C73               	goto	l2582
  6739  1470                     u3500:
  6740  1470                     l2580:
  6741  1470  1403               	setc
  6742  1471  0DE9               	rlf	___fladd@grs,f
  6743  1472  2C75               	goto	l2584
  6744  1473                     l2582:
  6745  1473  1003               	clrc
  6746  1474  0DE9               	rlf	___fladd@grs,f
  6747  1475                     l2584:
  6748  1475  0868               	movf	___fladd@bexp,w
  6749  1476  1903               	btfsc	3,2
  6750  1477  2C79               	goto	u3511
  6751  1478  2C7A               	goto	u3510
  6752  1479                     u3511:
  6753  1479  2C7C               	goto	l2588
  6754  147A                     u3510:
  6755  147A                     l2586:
  6756  147A  3001               	movlw	1
  6757  147B  02E8               	subwf	___fladd@bexp,f
  6758  147C                     l2588:
  6759  147C  1FD8               	btfss	___fladd@b+2,7
  6760  147D  2C7F               	goto	u3521
  6761  147E  2C80               	goto	u3520
  6762  147F                     u3521:
  6763  147F  2C5E               	goto	l2574
  6764  1480                     u3520:
  6765  1480                     l2590:
  6766  1480  01E7               	clrf	___fladd@aexp
  6767  1481                     l2592:
  6768  1481  1FE9               	btfss	___fladd@grs,7
  6769  1482  2C84               	goto	u3531
  6770  1483  2C85               	goto	u3530
  6771  1484                     u3531:
  6772  1484  2C93               	goto	l2600
  6773  1485                     u3530:
  6774  1485                     l2594:
  6775  1485  0869               	movf	___fladd@grs,w
  6776  1486  397F               	andlw	127
  6777  1487  1903               	btfsc	3,2
  6778  1488  2C8A               	goto	u3541
  6779  1489  2C8B               	goto	u3540
  6780  148A                     u3541:
  6781  148A  2C8E               	goto	l725
  6782  148B                     u3540:
  6783  148B                     l2596:
  6784  148B  01E7               	clrf	___fladd@aexp
  6785  148C  0AE7               	incf	___fladd@aexp,f
  6786  148D  2C93               	goto	l2600
  6787  148E                     l725:
  6788  148E  1C56               	btfss	___fladd@b,0
  6789  148F  2C91               	goto	u3551
  6790  1490  2C92               	goto	u3550
  6791  1491                     u3551:
  6792  1491  2C93               	goto	l2600
  6793  1492                     u3550:
  6794  1492  2C8B               	goto	l2596
  6795  1493                     l2600:
  6796  1493  0867               	movf	___fladd@aexp,w
  6797  1494  1903               	btfsc	3,2
  6798  1495  2C97               	goto	u3561
  6799  1496  2C98               	goto	u3560
  6800  1497                     u3561:
  6801  1497  2CCC               	goto	l728
  6802  1498                     u3560:
  6803  1498                     l2602:
  6804  1498  3001               	movlw	1
  6805  1499  07D6               	addwf	___fladd@b,f
  6806  149A  3000               	movlw	0
  6807  149B  1803               	skipnc
  6808  149C  3001               	movlw	1
  6809  149D  07D7               	addwf	___fladd@b+1,f
  6810  149E  3000               	movlw	0
  6811  149F  1803               	skipnc
  6812  14A0  3001               	movlw	1
  6813  14A1  07D8               	addwf	___fladd@b+2,f
  6814  14A2  3000               	movlw	0
  6815  14A3  1803               	skipnc
  6816  14A4  3001               	movlw	1
  6817  14A5  07D9               	addwf	___fladd@b+3,f
  6818  14A6                     l2604:
  6819  14A6  1C59               	btfss	___fladd@b+3,0
  6820  14A7  2CA9               	goto	u3571
  6821  14A8  2CAA               	goto	u3570
  6822  14A9                     u3571:
  6823  14A9  2CCC               	goto	l728
  6824  14AA                     u3570:
  6825  14AA                     l2606:
  6826  14AA  0856               	movf	___fladd@b,w
  6827  14AB  00DE               	movwf	??___fladd
  6828  14AC  0857               	movf	___fladd@b+1,w
  6829  14AD  00DF               	movwf	??___fladd+1
  6830  14AE  0858               	movf	___fladd@b+2,w
  6831  14AF  00E0               	movwf	??___fladd+2
  6832  14B0  0859               	movf	___fladd@b+3,w
  6833  14B1  00E1               	movwf	??___fladd+3
  6834  14B2  3001               	movlw	1
  6835  14B3  00E2               	movwf	??___fladd+4
  6836  14B4                     u3585:
  6837  14B4  0D61               	rlf	??___fladd+3,w
  6838  14B5  0CE1               	rrf	??___fladd+3,f
  6839  14B6  0CE0               	rrf	??___fladd+2,f
  6840  14B7  0CDF               	rrf	??___fladd+1,f
  6841  14B8  0CDE               	rrf	??___fladd,f
  6842  14B9                     u3580:
  6843  14B9  0BE2               	decfsz	??___fladd+4,f
  6844  14BA  2CB4               	goto	u3585
  6845  14BB  0861               	movf	??___fladd+3,w
  6846  14BC  00D9               	movwf	___fladd@b+3
  6847  14BD  0860               	movf	??___fladd+2,w
  6848  14BE  00D8               	movwf	___fladd@b+2
  6849  14BF  085F               	movf	??___fladd+1,w
  6850  14C0  00D7               	movwf	___fladd@b+1
  6851  14C1  085E               	movf	??___fladd,w
  6852  14C2  00D6               	movwf	___fladd@b
  6853  14C3  0A68               	incf	___fladd@bexp,w
  6854  14C4  1903               	btfsc	3,2
  6855  14C5  2CC7               	goto	u3591
  6856  14C6  2CC8               	goto	u3590
  6857  14C7                     u3591:
  6858  14C7  2CCC               	goto	l728
  6859  14C8                     u3590:
  6860  14C8                     l2608:
  6861  14C8  3001               	movlw	1
  6862  14C9  00DE               	movwf	??___fladd
  6863  14CA  085E               	movf	??___fladd,w
  6864  14CB  07E8               	addwf	___fladd@bexp,f
  6865  14CC                     l728:
  6866  14CC  0A68               	incf	___fladd@bexp,w
  6867  14CD  1903               	btfsc	3,2
  6868  14CE  2CD0               	goto	u3601
  6869  14CF  2CD1               	goto	u3600
  6870  14D0                     u3601:
  6871  14D0  2CD6               	goto	l2612
  6872  14D1                     u3600:
  6873  14D1                     l2610:
  6874  14D1  0868               	movf	___fladd@bexp,w
  6875  14D2  1D03               	btfss	3,2
  6876  14D3  2CD5               	goto	u3611
  6877  14D4  2CD6               	goto	u3610
  6878  14D5                     u3611:
  6879  14D5  2CE4               	goto	l2618
  6880  14D6                     u3610:
  6881  14D6                     l2612:
  6882  14D6  3000               	movlw	0
  6883  14D7  00D9               	movwf	___fladd@b+3
  6884  14D8  3000               	movlw	0
  6885  14D9  00D8               	movwf	___fladd@b+2
  6886  14DA  3000               	movlw	0
  6887  14DB  00D7               	movwf	___fladd@b+1
  6888  14DC  3000               	movlw	0
  6889  14DD  00D6               	movwf	___fladd@b
  6890  14DE                     l2614:
  6891  14DE  0868               	movf	___fladd@bexp,w
  6892  14DF  1D03               	btfss	3,2
  6893  14E0  2CE2               	goto	u3621
  6894  14E1  2CE3               	goto	u3620
  6895  14E2                     u3621:
  6896  14E2  2CE4               	goto	l2618
  6897  14E3                     u3620:
  6898  14E3                     l2616:
  6899  14E3  01E6               	clrf	___fladd@signs
  6900  14E4                     l2618:
  6901  14E4  1C68               	btfss	___fladd@bexp,0
  6902  14E5  2CE7               	goto	u3631
  6903  14E6  2CE8               	goto	u3630
  6904  14E7                     u3631:
  6905  14E7  2CEA               	goto	l2622
  6906  14E8                     u3630:
  6907  14E8                     l2620:
  6908  14E8  17D8               	bsf	___fladd@b+2,7
  6909  14E9  2CEE               	goto	l736
  6910  14EA                     l2622:
  6911  14EA  307F               	movlw	127
  6912  14EB  00DE               	movwf	??___fladd
  6913  14EC  085E               	movf	??___fladd,w
  6914  14ED  05D8               	andwf	___fladd@b+2,f
  6915  14EE                     l736:
  6916  14EE  0868               	movf	___fladd@bexp,w
  6917  14EF  00DE               	movwf	??___fladd
  6918  14F0  1003               	clrc
  6919  14F1  0C5E               	rrf	??___fladd,w
  6920  14F2  00DF               	movwf	??___fladd+1
  6921  14F3  085F               	movf	??___fladd+1,w
  6922  14F4  00D9               	movwf	___fladd@b+3
  6923  14F5                     l2624:
  6924  14F5  1FE6               	btfss	___fladd@signs,7
  6925  14F6  2CF8               	goto	u3641
  6926  14F7  2CF9               	goto	u3640
  6927  14F8                     u3641:
  6928  14F8  2CFA               	goto	l737
  6929  14F9                     u3640:
  6930  14F9                     l2626:
  6931  14F9  17D9               	bsf	___fladd@b+3,7
  6932  14FA                     l737:
  6933  14FA                     l707:
  6934  14FA  0008               	return
  6935  14FB                     __end_of___fladd:
  6936                           
  6937                           	psect	text17
  6938  18F1                     __ptext17:	
  6939 ;; *************** function ___flneg *****************
  6940 ;; Defined at:
  6941 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  f1              4    3[COMMON] unsigned char 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  4    3[COMMON] unsigned char 
  6948 ;; Registers used:
  6949 ;;		wreg
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6955 ;;      Params:         4       0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0
  6958 ;;      Totals:         4       0       0       0       0
  6959 ;;Total ram usage:        4 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_sprintf
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           
  6970                           ;psect for function ___flneg
  6971  18F1                     ___flneg:
  6972  18F1                     l3038:	
  6973                           ;incstack = 0
  6974                           ; Regs used in ___flneg: [wreg]
  6975                           
  6976  18F1  0876               	movf	___flneg@f1+3,w
  6977  18F2  0475               	iorwf	___flneg@f1+2,w
  6978  18F3  0474               	iorwf	___flneg@f1+1,w
  6979  18F4  0473               	iorwf	___flneg@f1,w
  6980  18F5  1903               	skipnz
  6981  18F6  28F8               	goto	u4771
  6982  18F7  28F9               	goto	u4770
  6983  18F8                     u4771:
  6984  18F8  28FB               	goto	l3042
  6985  18F9                     u4770:
  6986  18F9                     l3040:
  6987  18F9  3080               	movlw	128
  6988  18FA  06F6               	xorwf	___flneg@f1+3,f
  6989  18FB                     l3042:
  6990  18FB                     l566:
  6991  18FB  0008               	return
  6992  18FC                     __end_of___flneg:
  6993                           
  6994                           	psect	text18
  6995  1D25                     __ptext18:	
  6996 ;; *************** function ___flge *****************
  6997 ;; Defined at:
  6998 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  ff1             4    3[COMMON] unsigned char 
  7001 ;;  ff2             4    7[COMMON] unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7013 ;;      Params:         8       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0
  7015 ;;      Temps:          0       4       0       0       0
  7016 ;;      Totals:         8       4       0       0       0
  7017 ;;Total ram usage:       12 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_sprintf
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           
  7028                           ;psect for function ___flge
  7029  1D25                     ___flge:
  7030  1D25                     l3018:	
  7031                           ;incstack = 0
  7032                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7033                           
  7034  1D25  3000               	movlw	0
  7035  1D26  0573               	andwf	___flge@ff1,w
  7036  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  7037  1D28  1303               	bcf	3,6	;RP1=0, select bank0
  7038  1D29  00A0               	movwf	??___flge
  7039  1D2A  3000               	movlw	0
  7040  1D2B  0574               	andwf	___flge@ff1+1,w
  7041  1D2C  00A1               	movwf	??___flge+1
  7042  1D2D  3080               	movlw	128
  7043  1D2E  0575               	andwf	___flge@ff1+2,w
  7044  1D2F  00A2               	movwf	??___flge+2
  7045  1D30  307F               	movlw	127
  7046  1D31  0576               	andwf	___flge@ff1+3,w
  7047  1D32  00A3               	movwf	??___flge+3
  7048  1D33  0823               	movf	??___flge+3,w
  7049  1D34  0422               	iorwf	??___flge+2,w
  7050  1D35  0421               	iorwf	??___flge+1,w
  7051  1D36  0420               	iorwf	??___flge,w
  7052  1D37  1D03               	skipz
  7053  1D38  2D3A               	goto	u4701
  7054  1D39  2D3B               	goto	u4700
  7055  1D3A                     u4701:
  7056  1D3A  2D43               	goto	l558
  7057  1D3B                     u4700:
  7058  1D3B                     l3020:
  7059  1D3B  3000               	movlw	0
  7060  1D3C  00F6               	movwf	___flge@ff1+3
  7061  1D3D  3000               	movlw	0
  7062  1D3E  00F5               	movwf	___flge@ff1+2
  7063  1D3F  3000               	movlw	0
  7064  1D40  00F4               	movwf	___flge@ff1+1
  7065  1D41  3000               	movlw	0
  7066  1D42  00F3               	movwf	___flge@ff1
  7067  1D43                     l558:
  7068  1D43  3000               	movlw	0
  7069  1D44  0577               	andwf	___flge@ff2,w
  7070  1D45  00A0               	movwf	??___flge
  7071  1D46  3000               	movlw	0
  7072  1D47  0578               	andwf	___flge@ff2+1,w
  7073  1D48  00A1               	movwf	??___flge+1
  7074  1D49  3080               	movlw	128
  7075  1D4A  0579               	andwf	___flge@ff2+2,w
  7076  1D4B  00A2               	movwf	??___flge+2
  7077  1D4C  307F               	movlw	127
  7078  1D4D  057A               	andwf	___flge@ff2+3,w
  7079  1D4E  00A3               	movwf	??___flge+3
  7080  1D4F  0823               	movf	??___flge+3,w
  7081  1D50  0422               	iorwf	??___flge+2,w
  7082  1D51  0421               	iorwf	??___flge+1,w
  7083  1D52  0420               	iorwf	??___flge,w
  7084  1D53  1D03               	skipz
  7085  1D54  2D56               	goto	u4711
  7086  1D55  2D57               	goto	u4710
  7087  1D56                     u4711:
  7088  1D56  2D5F               	goto	l3024
  7089  1D57                     u4710:
  7090  1D57                     l3022:
  7091  1D57  3000               	movlw	0
  7092  1D58  00FA               	movwf	___flge@ff2+3
  7093  1D59  3000               	movlw	0
  7094  1D5A  00F9               	movwf	___flge@ff2+2
  7095  1D5B  3000               	movlw	0
  7096  1D5C  00F8               	movwf	___flge@ff2+1
  7097  1D5D  3000               	movlw	0
  7098  1D5E  00F7               	movwf	___flge@ff2
  7099  1D5F                     l3024:
  7100  1D5F  1FF6               	btfss	___flge@ff1+3,7
  7101  1D60  2D62               	goto	u4721
  7102  1D61  2D63               	goto	u4720
  7103  1D62                     u4721:
  7104  1D62  2D87               	goto	l3028
  7105  1D63                     u4720:
  7106  1D63                     l3026:
  7107  1D63  3000               	movlw	0
  7108  1D64  00A0               	movwf	??___flge
  7109  1D65  3000               	movlw	0
  7110  1D66  00A1               	movwf	??___flge+1
  7111  1D67  3000               	movlw	0
  7112  1D68  00A2               	movwf	??___flge+2
  7113  1D69  3080               	movlw	128
  7114  1D6A  00A3               	movwf	??___flge+3
  7115  1D6B  0873               	movf	___flge@ff1,w
  7116  1D6C  02A0               	subwf	??___flge,f
  7117  1D6D  0874               	movf	___flge@ff1+1,w
  7118  1D6E  1C03               	skipc
  7119  1D6F  0F74               	incfsz	___flge@ff1+1,w
  7120  1D70  2D72               	goto	u4731
  7121  1D71  2D73               	goto	u4732
  7122  1D72                     u4731:
  7123  1D72  02A1               	subwf	??___flge+1,f
  7124  1D73                     u4732:
  7125  1D73  0875               	movf	___flge@ff1+2,w
  7126  1D74  1C03               	skipc
  7127  1D75  0F75               	incfsz	___flge@ff1+2,w
  7128  1D76  2D78               	goto	u4733
  7129  1D77  2D79               	goto	u4734
  7130  1D78                     u4733:
  7131  1D78  02A2               	subwf	??___flge+2,f
  7132  1D79                     u4734:
  7133  1D79  0876               	movf	___flge@ff1+3,w
  7134  1D7A  1C03               	skipc
  7135  1D7B  0F76               	incfsz	___flge@ff1+3,w
  7136  1D7C  2D7E               	goto	u4735
  7137  1D7D  2D7F               	goto	u4736
  7138  1D7E                     u4735:
  7139  1D7E  02A3               	subwf	??___flge+3,f
  7140  1D7F                     u4736:
  7141  1D7F  0823               	movf	??___flge+3,w
  7142  1D80  00F6               	movwf	___flge@ff1+3
  7143  1D81  0822               	movf	??___flge+2,w
  7144  1D82  00F5               	movwf	___flge@ff1+2
  7145  1D83  0821               	movf	??___flge+1,w
  7146  1D84  00F4               	movwf	___flge@ff1+1
  7147  1D85  0820               	movf	??___flge,w
  7148  1D86  00F3               	movwf	___flge@ff1
  7149  1D87                     l3028:
  7150  1D87  1FFA               	btfss	___flge@ff2+3,7
  7151  1D88  2D8A               	goto	u4741
  7152  1D89  2D8B               	goto	u4740
  7153  1D8A                     u4741:
  7154  1D8A  2DAF               	goto	l561
  7155  1D8B                     u4740:
  7156  1D8B                     l3030:
  7157  1D8B  3000               	movlw	0
  7158  1D8C  00A0               	movwf	??___flge
  7159  1D8D  3000               	movlw	0
  7160  1D8E  00A1               	movwf	??___flge+1
  7161  1D8F  3000               	movlw	0
  7162  1D90  00A2               	movwf	??___flge+2
  7163  1D91  3080               	movlw	128
  7164  1D92  00A3               	movwf	??___flge+3
  7165  1D93  0877               	movf	___flge@ff2,w
  7166  1D94  02A0               	subwf	??___flge,f
  7167  1D95  0878               	movf	___flge@ff2+1,w
  7168  1D96  1C03               	skipc
  7169  1D97  0F78               	incfsz	___flge@ff2+1,w
  7170  1D98  2D9A               	goto	u4751
  7171  1D99  2D9B               	goto	u4752
  7172  1D9A                     u4751:
  7173  1D9A  02A1               	subwf	??___flge+1,f
  7174  1D9B                     u4752:
  7175  1D9B  0879               	movf	___flge@ff2+2,w
  7176  1D9C  1C03               	skipc
  7177  1D9D  0F79               	incfsz	___flge@ff2+2,w
  7178  1D9E  2DA0               	goto	u4753
  7179  1D9F  2DA1               	goto	u4754
  7180  1DA0                     u4753:
  7181  1DA0  02A2               	subwf	??___flge+2,f
  7182  1DA1                     u4754:
  7183  1DA1  087A               	movf	___flge@ff2+3,w
  7184  1DA2  1C03               	skipc
  7185  1DA3  0F7A               	incfsz	___flge@ff2+3,w
  7186  1DA4  2DA6               	goto	u4755
  7187  1DA5  2DA7               	goto	u4756
  7188  1DA6                     u4755:
  7189  1DA6  02A3               	subwf	??___flge+3,f
  7190  1DA7                     u4756:
  7191  1DA7  0823               	movf	??___flge+3,w
  7192  1DA8  00FA               	movwf	___flge@ff2+3
  7193  1DA9  0822               	movf	??___flge+2,w
  7194  1DAA  00F9               	movwf	___flge@ff2+2
  7195  1DAB  0821               	movf	??___flge+1,w
  7196  1DAC  00F8               	movwf	___flge@ff2+1
  7197  1DAD  0820               	movf	??___flge,w
  7198  1DAE  00F7               	movwf	___flge@ff2
  7199  1DAF                     l561:
  7200  1DAF  3080               	movlw	128
  7201  1DB0  06F6               	xorwf	___flge@ff1+3,f
  7202  1DB1  3080               	movlw	128
  7203  1DB2  06FA               	xorwf	___flge@ff2+3,f
  7204  1DB3  087A               	movf	___flge@ff2+3,w
  7205  1DB4  0276               	subwf	___flge@ff1+3,w
  7206  1DB5  1D03               	skipz
  7207  1DB6  2DC1               	goto	u4765
  7208  1DB7  0879               	movf	___flge@ff2+2,w
  7209  1DB8  0275               	subwf	___flge@ff1+2,w
  7210  1DB9  1D03               	skipz
  7211  1DBA  2DC1               	goto	u4765
  7212  1DBB  0878               	movf	___flge@ff2+1,w
  7213  1DBC  0274               	subwf	___flge@ff1+1,w
  7214  1DBD  1D03               	skipz
  7215  1DBE  2DC1               	goto	u4765
  7216  1DBF  0877               	movf	___flge@ff2,w
  7217  1DC0  0273               	subwf	___flge@ff1,w
  7218  1DC1                     u4765:
  7219  1DC1  1803               	skipnc
  7220  1DC2  2DC4               	goto	u4761
  7221  1DC3  2DC5               	goto	u4760
  7222  1DC4                     u4761:
  7223  1DC4  2DC7               	goto	l3034
  7224  1DC5                     u4760:
  7225  1DC5                     l3032:
  7226  1DC5  1003               	clrc
  7227  1DC6  2DC8               	goto	l562
  7228  1DC7                     l3034:
  7229  1DC7  1403               	setc
  7230  1DC8                     l562:
  7231  1DC8  0008               	return
  7232  1DC9                     __end_of___flge:
  7233                           
  7234                           	psect	text19
  7235  1B5E                     __ptext19:	
  7236 ;; *************** function ___fleq *****************
  7237 ;; Defined at:
  7238 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  ff1             4    3[COMMON] unsigned char 
  7241 ;;  ff2             4    7[COMMON] unsigned char 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;		None               void
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7253 ;;      Params:         8       0       0       0       0
  7254 ;;      Locals:         0       0       0       0       0
  7255 ;;      Temps:          0       4       0       0       0
  7256 ;;      Totals:         8       4       0       0       0
  7257 ;;Total ram usage:       12 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    1
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_sprintf
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           
  7268                           ;psect for function ___fleq
  7269  1B5E                     ___fleq:
  7270  1B5E                     l3006:	
  7271                           ;incstack = 0
  7272                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7273                           
  7274  1B5E  3000               	movlw	0
  7275  1B5F  0573               	andwf	___fleq@ff1,w
  7276  1B60  1283               	bcf	3,5	;RP0=0, select bank0
  7277  1B61  1303               	bcf	3,6	;RP1=0, select bank0
  7278  1B62  00A0               	movwf	??___fleq
  7279  1B63  3000               	movlw	0
  7280  1B64  0574               	andwf	___fleq@ff1+1,w
  7281  1B65  00A1               	movwf	??___fleq+1
  7282  1B66  3080               	movlw	128
  7283  1B67  0575               	andwf	___fleq@ff1+2,w
  7284  1B68  00A2               	movwf	??___fleq+2
  7285  1B69  307F               	movlw	127
  7286  1B6A  0576               	andwf	___fleq@ff1+3,w
  7287  1B6B  00A3               	movwf	??___fleq+3
  7288  1B6C  0823               	movf	??___fleq+3,w
  7289  1B6D  0422               	iorwf	??___fleq+2,w
  7290  1B6E  0421               	iorwf	??___fleq+1,w
  7291  1B6F  0420               	iorwf	??___fleq,w
  7292  1B70  1D03               	skipz
  7293  1B71  2B73               	goto	u4671
  7294  1B72  2B74               	goto	u4670
  7295  1B73                     u4671:
  7296  1B73  2B7C               	goto	l553
  7297  1B74                     u4670:
  7298  1B74                     l3008:
  7299  1B74  3000               	movlw	0
  7300  1B75  00F6               	movwf	___fleq@ff1+3
  7301  1B76  3000               	movlw	0
  7302  1B77  00F5               	movwf	___fleq@ff1+2
  7303  1B78  3000               	movlw	0
  7304  1B79  00F4               	movwf	___fleq@ff1+1
  7305  1B7A  3000               	movlw	0
  7306  1B7B  00F3               	movwf	___fleq@ff1
  7307  1B7C                     l553:
  7308  1B7C  3000               	movlw	0
  7309  1B7D  0577               	andwf	___fleq@ff2,w
  7310  1B7E  00A0               	movwf	??___fleq
  7311  1B7F  3000               	movlw	0
  7312  1B80  0578               	andwf	___fleq@ff2+1,w
  7313  1B81  00A1               	movwf	??___fleq+1
  7314  1B82  3080               	movlw	128
  7315  1B83  0579               	andwf	___fleq@ff2+2,w
  7316  1B84  00A2               	movwf	??___fleq+2
  7317  1B85  307F               	movlw	127
  7318  1B86  057A               	andwf	___fleq@ff2+3,w
  7319  1B87  00A3               	movwf	??___fleq+3
  7320  1B88  0823               	movf	??___fleq+3,w
  7321  1B89  0422               	iorwf	??___fleq+2,w
  7322  1B8A  0421               	iorwf	??___fleq+1,w
  7323  1B8B  0420               	iorwf	??___fleq,w
  7324  1B8C  1D03               	skipz
  7325  1B8D  2B8F               	goto	u4681
  7326  1B8E  2B90               	goto	u4680
  7327  1B8F                     u4681:
  7328  1B8F  2B98               	goto	l554
  7329  1B90                     u4680:
  7330  1B90                     l3010:
  7331  1B90  3000               	movlw	0
  7332  1B91  00FA               	movwf	___fleq@ff2+3
  7333  1B92  3000               	movlw	0
  7334  1B93  00F9               	movwf	___fleq@ff2+2
  7335  1B94  3000               	movlw	0
  7336  1B95  00F8               	movwf	___fleq@ff2+1
  7337  1B96  3000               	movlw	0
  7338  1B97  00F7               	movwf	___fleq@ff2
  7339  1B98                     l554:
  7340  1B98  087A               	movf	___fleq@ff2+3,w
  7341  1B99  0676               	xorwf	___fleq@ff1+3,w
  7342  1B9A  1D03               	skipz
  7343  1B9B  2BA6               	goto	u4695
  7344  1B9C  0879               	movf	___fleq@ff2+2,w
  7345  1B9D  0675               	xorwf	___fleq@ff1+2,w
  7346  1B9E  1D03               	skipz
  7347  1B9F  2BA6               	goto	u4695
  7348  1BA0  0878               	movf	___fleq@ff2+1,w
  7349  1BA1  0674               	xorwf	___fleq@ff1+1,w
  7350  1BA2  1D03               	skipz
  7351  1BA3  2BA6               	goto	u4695
  7352  1BA4  0877               	movf	___fleq@ff2,w
  7353  1BA5  0673               	xorwf	___fleq@ff1,w
  7354  1BA6                     u4695:
  7355  1BA6  1903               	skipnz
  7356  1BA7  2BA9               	goto	u4691
  7357  1BA8  2BAA               	goto	u4690
  7358  1BA9                     u4691:
  7359  1BA9  2BAC               	goto	l3014
  7360  1BAA                     u4690:
  7361  1BAA                     l3012:
  7362  1BAA  1003               	clrc
  7363  1BAB  2BAD               	goto	l555
  7364  1BAC                     l3014:
  7365  1BAC  1403               	setc
  7366  1BAD                     l555:
  7367  1BAD  0008               	return
  7368  1BAE                     __end_of___fleq:
  7369                           
  7370                           	psect	text20
  7371  1B12                     __ptext20:	
  7372 ;; *************** function _setup *****************
  7373 ;; Defined at:
  7374 ;;		line 143 in file "main.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7388 ;;      Params:         0       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0
  7390 ;;      Temps:          1       0       0       0       0
  7391 ;;      Totals:         1       0       0       0       0
  7392 ;;Total ram usage:        1 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    1
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_main
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function _setup
  7404  1B12                     _setup:
  7405  1B12                     l3152:	
  7406                           ;incstack = 0
  7407                           ; Regs used in _setup: [wreg+status,2+status,0]
  7408                           
  7409                           
  7410                           ;main.c: 145: 
  7411  1B12  3003               	movlw	3
  7412  1B13  1683               	bsf	3,5	;RP0=1, select bank3
  7413  1B14  1703               	bsf	3,6	;RP1=1, select bank3
  7414  1B15  0088               	movwf	8	;volatile
  7415  1B16                     l3154:
  7416                           
  7417                           ;main.c: 146:     SPBRG = 51;
  7418  1B16  0189               	clrf	9	;volatile
  7419  1B17                     l3156:
  7420                           
  7421                           ;main.c: 148: 
  7422  1B17  3003               	movlw	3
  7423  1B18  1683               	bsf	3,5	;RP0=1, select bank1
  7424  1B19  1303               	bcf	3,6	;RP1=0, select bank1
  7425  1B1A  0085               	movwf	5	;volatile
  7426                           
  7427                           ;main.c: 149:     RCSTAbits.SPEN =1;
  7428  1B1B  0186               	clrf	6	;volatile
  7429  1B1C                     l3158:
  7430                           
  7431                           ;main.c: 150:     RCSTAbits.RX9 = 0;
  7432  1B1C  3080               	movlw	128
  7433  1B1D  0087               	movwf	7	;volatile
  7434  1B1E                     l3160:
  7435                           
  7436                           ;main.c: 151:     RCSTAbits.CREN = 1;
  7437  1B1E  0188               	clrf	8	;volatile
  7438  1B1F                     l3162:
  7439                           
  7440                           ;main.c: 152: 
  7441  1B1F  0189               	clrf	9	;volatile
  7442  1B20                     l3164:
  7443                           
  7444                           ;main.c: 154: }
  7445  1B20  1283               	bcf	3,5	;RP0=0, select bank0
  7446  1B21  1303               	bcf	3,6	;RP1=0, select bank0
  7447  1B22  0186               	clrf	6	;volatile
  7448  1B23                     l3166:
  7449                           
  7450                           ;main.c: 155: 
  7451  1B23  0187               	clrf	7	;volatile
  7452  1B24                     l3168:
  7453                           
  7454                           ;main.c: 156: 
  7455  1B24  0188               	clrf	8	;volatile
  7456  1B25                     l3170:
  7457                           
  7458                           ;main.c: 157: 
  7459  1B25  0189               	clrf	9	;volatile
  7460  1B26                     l3172:
  7461                           
  7462                           ;main.c: 160:     double valor;
  7463  1B26  1683               	bsf	3,5	;RP0=1, select bank1
  7464  1B27  1303               	bcf	3,6	;RP1=0, select bank1
  7465  1B28  170F               	bsf	15,6	;volatile
  7466  1B29                     l3174:
  7467                           
  7468                           ;main.c: 161:     valor = var * 0.0196 ;
  7469  1B29  168F               	bsf	15,5	;volatile
  7470  1B2A                     l3176:
  7471                           
  7472                           ;main.c: 162:     return valor;
  7473  1B2A  160F               	bsf	15,4	;volatile
  7474  1B2B                     l3178:
  7475                           
  7476                           ;main.c: 163: }
  7477  1B2B  140F               	bsf	15,0	;volatile
  7478  1B2C                     l3180:
  7479  1B2C  170B               	bsf	11,6	;volatile
  7480  1B2D                     l3182:
  7481  1B2D  168C               	bsf	12,5	;volatile
  7482  1B2E                     l3184:
  7483  1B2E  1283               	bcf	3,5	;RP0=0, select bank0
  7484  1B2F  1303               	bcf	3,6	;RP1=0, select bank0
  7485  1B30  128C               	bcf	12,5	;volatile
  7486  1B31                     l3186:
  7487  1B31  178B               	bsf	11,7	;volatile
  7488  1B32                     l3188:
  7489  1B32  141F               	bsf	31,0	;volatile
  7490  1B33                     l3190:
  7491  1B33  1683               	bsf	3,5	;RP0=1, select bank1
  7492  1B34  1303               	bcf	3,6	;RP1=0, select bank1
  7493  1B35  139F               	bcf	31,7	;volatile
  7494  1B36                     l3192:
  7495  1B36  1283               	bcf	3,5	;RP0=0, select bank0
  7496  1B37  1303               	bcf	3,6	;RP1=0, select bank0
  7497  1B38  149F               	bsf	31,1	;volatile
  7498  1B39                     l3194:
  7499  1B39  1683               	bsf	3,5	;RP0=1, select bank1
  7500  1B3A  1303               	bcf	3,6	;RP1=0, select bank1
  7501  1B3B  121F               	bcf	31,4	;volatile
  7502  1B3C                     l3196:
  7503  1B3C  129F               	bcf	31,5	;volatile
  7504  1B3D                     l3198:
  7505  1B3D  30C3               	movlw	-61
  7506  1B3E  1283               	bcf	3,5	;RP0=0, select bank0
  7507  1B3F  1303               	bcf	3,6	;RP1=0, select bank0
  7508  1B40  059F               	andwf	31,f	;volatile
  7509  1B41                     l3200:
  7510  1B41  081F               	movf	31,w	;volatile
  7511  1B42  393F               	andlw	-193
  7512  1B43  3840               	iorlw	64
  7513  1B44  009F               	movwf	31	;volatile
  7514  1B45                     l3202:
  7515  1B45  3021               	movlw	33
  7516  1B46  00F3               	movwf	??_setup
  7517  1B47                     u6217:
  7518  1B47  0BF3               	decfsz	??_setup,f
  7519  1B48  2B47               	goto	u6217
  7520  1B49                     l3204:
  7521  1B49  1683               	bsf	3,5	;RP0=1, select bank1
  7522  1B4A  1303               	bcf	3,6	;RP1=0, select bank1
  7523  1B4B  1218               	bcf	24,4	;volatile
  7524  1B4C                     l3206:
  7525  1B4C  1118               	bcf	24,2	;volatile
  7526  1B4D                     l3208:
  7527  1B4D  1683               	bsf	3,5	;RP0=1, select bank3
  7528  1B4E  1703               	bsf	3,6	;RP1=1, select bank3
  7529  1B4F  1587               	bsf	7,3	;volatile
  7530  1B50                     l3210:
  7531  1B50  3033               	movlw	51
  7532  1B51  1683               	bsf	3,5	;RP0=1, select bank1
  7533  1B52  1303               	bcf	3,6	;RP1=0, select bank1
  7534  1B53  0099               	movwf	25	;volatile
  7535  1B54                     l3212:
  7536  1B54  019A               	clrf	26	;volatile
  7537  1B55                     l3214:
  7538  1B55  1283               	bcf	3,5	;RP0=0, select bank0
  7539  1B56  1303               	bcf	3,6	;RP1=0, select bank0
  7540  1B57  1798               	bsf	24,7	;volatile
  7541  1B58                     l3216:
  7542  1B58  1318               	bcf	24,6	;volatile
  7543  1B59                     l3218:
  7544  1B59  1618               	bsf	24,4	;volatile
  7545  1B5A                     l3220:
  7546  1B5A  1683               	bsf	3,5	;RP0=1, select bank1
  7547  1B5B  1303               	bcf	3,6	;RP1=0, select bank1
  7548  1B5C  1698               	bsf	24,5	;volatile
  7549  1B5D                     l114:
  7550  1B5D  0008               	return
  7551  1B5E                     __end_of_setup:
  7552                           
  7553                           	psect	text21
  7554  1961                     __ptext21:	
  7555 ;; *************** function _envio_caract *****************
  7556 ;; Defined at:
  7557 ;;		line 24 in file "USART.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  st              1    wreg     PTR unsigned char 
  7560 ;;		 -> cadena2(30), cadena1(30), 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  st              1    7[COMMON] PTR unsigned char 
  7563 ;;		 -> cadena2(30), cadena1(30), 
  7564 ;;  i               2    5[COMMON] int 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7574 ;;      Params:         0       0       0       0       0
  7575 ;;      Locals:         3       0       0       0       0
  7576 ;;      Temps:          1       0       0       0       0
  7577 ;;      Totals:         4       0       0       0       0
  7578 ;;Total ram usage:        4 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    2
  7581 ;; This function calls:
  7582 ;;		_envio_char
  7583 ;; This function is called by:
  7584 ;;		_main
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           
  7589                           ;psect for function _envio_caract
  7590  1961                     _envio_caract:
  7591                           
  7592                           ;incstack = 0
  7593                           ; Regs used in _envio_caract: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7594                           ;envio_caract@st stored from wreg
  7595  1961  00F7               	movwf	envio_caract@st
  7596  1962                     l3524:
  7597                           
  7598                           ;USART.c: 25:     int i = 0;
  7599  1962  01F5               	clrf	envio_caract@i
  7600  1963  01F6               	clrf	envio_caract@i+1
  7601                           
  7602                           ;USART.c: 26:     while (st[i] != 0){
  7603  1964  2976               	goto	l3530
  7604  1965                     l3526:
  7605                           
  7606                           ;USART.c: 27:         envio_char(st[i]);
  7607  1965  0875               	movf	envio_caract@i,w
  7608  1966  0777               	addwf	envio_caract@st,w
  7609  1967  00F4               	movwf	??_envio_caract
  7610  1968  0874               	movf	??_envio_caract,w
  7611  1969  0084               	movwf	4
  7612  196A  0800               	movf	0,w
  7613  196B  160A  158A  20E7  160A  158A  	fcall	_envio_char
  7614  1970                     l3528:
  7615                           
  7616                           ;USART.c: 28:         i++;
  7617  1970  3001               	movlw	1
  7618  1971  07F5               	addwf	envio_caract@i,f
  7619  1972  1803               	skipnc
  7620  1973  0AF6               	incf	envio_caract@i+1,f
  7621  1974  3000               	movlw	0
  7622  1975  07F6               	addwf	envio_caract@i+1,f
  7623  1976                     l3530:
  7624                           
  7625                           ;USART.c: 26:     while (st[i] != 0){
  7626  1976  0875               	movf	envio_caract@i,w
  7627  1977  0777               	addwf	envio_caract@st,w
  7628  1978  00F4               	movwf	??_envio_caract
  7629  1979  0874               	movf	??_envio_caract,w
  7630  197A  0084               	movwf	4
  7631  197B  1783               	bsf	3,7	;select IRP bank2
  7632  197C  0800               	movf	0,w
  7633  197D  1D03               	btfss	3,2
  7634  197E  2980               	goto	u5601
  7635  197F  2981               	goto	u5600
  7636  1980                     u5601:
  7637  1980  2965               	goto	l3526
  7638  1981                     u5600:
  7639  1981                     l171:
  7640  1981  0008               	return
  7641  1982                     __end_of_envio_caract:
  7642                           
  7643                           	psect	text22
  7644  18E7                     __ptext22:	
  7645 ;; *************** function _envio_char *****************
  7646 ;; Defined at:
  7647 ;;		line 19 in file "USART.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  dato            1    wreg     unsigned char 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  dato            1    3[COMMON] unsigned char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  1    wreg      void 
  7654 ;; Registers used:
  7655 ;;		wreg
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7661 ;;      Params:         0       0       0       0       0
  7662 ;;      Locals:         1       0       0       0       0
  7663 ;;      Temps:          0       0       0       0       0
  7664 ;;      Totals:         1       0       0       0       0
  7665 ;;Total ram usage:        1 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    1
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_envio_caract
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           
  7676                           ;psect for function _envio_char
  7677  18E7                     _envio_char:
  7678                           
  7679                           ;incstack = 0
  7680                           ; Regs used in _envio_char: [wreg]
  7681                           ;envio_char@dato stored from wreg
  7682  18E7  00F3               	movwf	envio_char@dato
  7683  18E8                     l2790:
  7684  18E8                     l162:	
  7685                           ;USART.c: 20:     while(!TXIF);
  7686                           
  7687  18E8  1283               	bcf	3,5	;RP0=0, select bank0
  7688  18E9  1303               	bcf	3,6	;RP1=0, select bank0
  7689  18EA  1E0C               	btfss	12,4	;volatile
  7690  18EB  28ED               	goto	u4021
  7691  18EC  28EE               	goto	u4020
  7692  18ED                     u4021:
  7693  18ED  28E8               	goto	l162
  7694  18EE                     u4020:
  7695  18EE                     l2792:
  7696                           
  7697                           ;USART.c: 21:     TXREG = dato;
  7698  18EE  0873               	movf	envio_char@dato,w
  7699  18EF  0099               	movwf	25	;volatile
  7700  18F0                     l165:
  7701  18F0  0008               	return
  7702  18F1                     __end_of_envio_char:
  7703                           
  7704                           	psect	text23
  7705  1A05                     __ptext23:	
  7706 ;; *************** function _conversion *****************
  7707 ;; Defined at:
  7708 ;;		line 200 in file "main.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  var             1    wreg     unsigned char 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;  var             1   46[BANK0 ] unsigned char 
  7713 ;;  valor           4   42[BANK0 ] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  4   34[BANK0 ] unsigned char 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7723 ;;      Params:         0       4       0       0       0
  7724 ;;      Locals:         0       5       0       0       0
  7725 ;;      Temps:          0       4       0       0       0
  7726 ;;      Totals:         0      13       0       0       0
  7727 ;;Total ram usage:       13 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    3
  7730 ;; This function calls:
  7731 ;;		___flmul
  7732 ;;		___xxtofl
  7733 ;; This function is called by:
  7734 ;;		_main
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738                           
  7739                           ;psect for function _conversion
  7740  1A05                     _conversion:
  7741                           
  7742                           ;incstack = 0
  7743                           ; Regs used in _conversion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7744                           ;conversion@var stored from wreg
  7745  1A05  1283               	bcf	3,5	;RP0=0, select bank0
  7746  1A06  1303               	bcf	3,6	;RP1=0, select bank0
  7747  1A07  00CE               	movwf	conversion@var
  7748  1A08                     l3254:
  7749  1A08  303C               	movlw	60
  7750  1A09  00AB               	movwf	___flmul@b+3
  7751  1A0A  30A0               	movlw	160
  7752  1A0B  00AA               	movwf	___flmul@b+2
  7753  1A0C  3090               	movlw	144
  7754  1A0D  00A9               	movwf	___flmul@b+1
  7755  1A0E  302E               	movlw	46
  7756  1A0F  00A8               	movwf	___flmul@b
  7757  1A10  084E               	movf	conversion@var,w
  7758  1A11  00C6               	movwf	??_conversion
  7759  1A12  01C7               	clrf	??_conversion+1
  7760  1A13  01C8               	clrf	??_conversion+2
  7761  1A14  01C9               	clrf	??_conversion+3
  7762  1A15  0849               	movf	??_conversion+3,w
  7763  1A16  00F6               	movwf	___xxtofl@val+3
  7764  1A17  0848               	movf	??_conversion+2,w
  7765  1A18  00F5               	movwf	___xxtofl@val+2
  7766  1A19  0847               	movf	??_conversion+1,w
  7767  1A1A  00F4               	movwf	___xxtofl@val+1
  7768  1A1B  0846               	movf	??_conversion,w
  7769  1A1C  00F3               	movwf	___xxtofl@val
  7770  1A1D  3001               	movlw	1
  7771  1A1E  160A  158A  25C9  160A  158A  	fcall	___xxtofl
  7772  1A23  0876               	movf	?___xxtofl+3,w
  7773  1A24  1283               	bcf	3,5	;RP0=0, select bank0
  7774  1A25  1303               	bcf	3,6	;RP1=0, select bank0
  7775  1A26  00AF               	movwf	___flmul@a+3
  7776  1A27  0875               	movf	?___xxtofl+2,w
  7777  1A28  00AE               	movwf	___flmul@a+2
  7778  1A29  0874               	movf	?___xxtofl+1,w
  7779  1A2A  00AD               	movwf	___flmul@a+1
  7780  1A2B  0873               	movf	?___xxtofl,w
  7781  1A2C  00AC               	movwf	___flmul@a
  7782  1A2D  120A  158A  213C  160A  158A  	fcall	___flmul
  7783  1A32  1283               	bcf	3,5	;RP0=0, select bank0
  7784  1A33  1303               	bcf	3,6	;RP1=0, select bank0
  7785  1A34  082B               	movf	?___flmul+3,w
  7786  1A35  00CD               	movwf	conversion@valor+3
  7787  1A36  082A               	movf	?___flmul+2,w
  7788  1A37  00CC               	movwf	conversion@valor+2
  7789  1A38  0829               	movf	?___flmul+1,w
  7790  1A39  00CB               	movwf	conversion@valor+1
  7791  1A3A  0828               	movf	?___flmul,w
  7792  1A3B  00CA               	movwf	conversion@valor
  7793  1A3C                     l3256:
  7794  1A3C  084D               	movf	conversion@valor+3,w
  7795  1A3D  00C5               	movwf	?_conversion+3
  7796  1A3E  084C               	movf	conversion@valor+2,w
  7797  1A3F  00C4               	movwf	?_conversion+2
  7798  1A40  084B               	movf	conversion@valor+1,w
  7799  1A41  00C3               	movwf	?_conversion+1
  7800  1A42  084A               	movf	conversion@valor,w
  7801  1A43  00C2               	movwf	?_conversion
  7802  1A44                     l117:
  7803  1A44  0008               	return
  7804  1A45                     __end_of_conversion:
  7805                           
  7806                           	psect	text24
  7807  1DC9                     __ptext24:	
  7808 ;; *************** function ___xxtofl *****************
  7809 ;; Defined at:
  7810 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  sign            1    wreg     unsigned char 
  7813 ;;  val             4    3[COMMON] long 
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;  sign            1    0[BANK0 ] unsigned char 
  7816 ;;  arg             4    2[BANK0 ] unsigned long 
  7817 ;;  exp             1    1[BANK0 ] unsigned char 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  4    3[COMMON] unsigned char 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7827 ;;      Params:         4       0       0       0       0
  7828 ;;      Locals:         0       6       0       0       0
  7829 ;;      Temps:          4       0       0       0       0
  7830 ;;      Totals:         8       6       0       0       0
  7831 ;;Total ram usage:       14 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    1
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_conversion
  7838 ;;		_sprintf
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           
  7843                           ;psect for function ___xxtofl
  7844  1DC9                     ___xxtofl:
  7845                           
  7846                           ;incstack = 0
  7847                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7848                           ;___xxtofl@sign stored from wreg
  7849  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  7850  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  7851  1DCB  00A0               	movwf	___xxtofl@sign
  7852  1DCC                     l3108:
  7853  1DCC  0820               	movf	___xxtofl@sign,w
  7854  1DCD  1903               	btfsc	3,2
  7855  1DCE  2DD0               	goto	u4941
  7856  1DCF  2DD1               	goto	u4940
  7857  1DD0                     u4941:
  7858  1DD0  2DE5               	goto	l3114
  7859  1DD1                     u4940:
  7860  1DD1                     l3110:
  7861  1DD1  1FF6               	btfss	___xxtofl@val+3,7
  7862  1DD2  2DD4               	goto	u4951
  7863  1DD3  2DD5               	goto	u4950
  7864  1DD4                     u4951:
  7865  1DD4  2DE5               	goto	l3114
  7866  1DD5                     u4950:
  7867  1DD5                     l3112:
  7868  1DD5  0973               	comf	___xxtofl@val,w
  7869  1DD6  00A2               	movwf	___xxtofl@arg
  7870  1DD7  0974               	comf	___xxtofl@val+1,w
  7871  1DD8  00A3               	movwf	___xxtofl@arg+1
  7872  1DD9  0975               	comf	___xxtofl@val+2,w
  7873  1DDA  00A4               	movwf	___xxtofl@arg+2
  7874  1DDB  0976               	comf	___xxtofl@val+3,w
  7875  1DDC  00A5               	movwf	___xxtofl@arg+3
  7876  1DDD  0AA2               	incf	___xxtofl@arg,f
  7877  1DDE  1903               	skipnz
  7878  1DDF  0AA3               	incf	___xxtofl@arg+1,f
  7879  1DE0  1903               	skipnz
  7880  1DE1  0AA4               	incf	___xxtofl@arg+2,f
  7881  1DE2  1903               	skipnz
  7882  1DE3  0AA5               	incf	___xxtofl@arg+3,f
  7883  1DE4  2DED               	goto	l834
  7884  1DE5                     l3114:
  7885  1DE5  0876               	movf	___xxtofl@val+3,w
  7886  1DE6  00A5               	movwf	___xxtofl@arg+3
  7887  1DE7  0875               	movf	___xxtofl@val+2,w
  7888  1DE8  00A4               	movwf	___xxtofl@arg+2
  7889  1DE9  0874               	movf	___xxtofl@val+1,w
  7890  1DEA  00A3               	movwf	___xxtofl@arg+1
  7891  1DEB  0873               	movf	___xxtofl@val,w
  7892  1DEC  00A2               	movwf	___xxtofl@arg
  7893  1DED                     l834:
  7894  1DED  0876               	movf	___xxtofl@val+3,w
  7895  1DEE  0475               	iorwf	___xxtofl@val+2,w
  7896  1DEF  0474               	iorwf	___xxtofl@val+1,w
  7897  1DF0  0473               	iorwf	___xxtofl@val,w
  7898  1DF1  1D03               	skipz
  7899  1DF2  2DF4               	goto	u4961
  7900  1DF3  2DF5               	goto	u4960
  7901  1DF4                     u4961:
  7902  1DF4  2DFE               	goto	l3120
  7903  1DF5                     u4960:
  7904  1DF5                     l3116:
  7905  1DF5  3000               	movlw	0
  7906  1DF6  00F6               	movwf	?___xxtofl+3
  7907  1DF7  3000               	movlw	0
  7908  1DF8  00F5               	movwf	?___xxtofl+2
  7909  1DF9  3000               	movlw	0
  7910  1DFA  00F4               	movwf	?___xxtofl+1
  7911  1DFB  3000               	movlw	0
  7912  1DFC  00F3               	movwf	?___xxtofl
  7913  1DFD  2E84               	goto	l836
  7914  1DFE                     l3120:
  7915  1DFE  3096               	movlw	150
  7916  1DFF  00F7               	movwf	??___xxtofl
  7917  1E00  0877               	movf	??___xxtofl,w
  7918  1E01  00A1               	movwf	___xxtofl@exp
  7919  1E02  2E10               	goto	l3124
  7920  1E03                     l3122:
  7921  1E03  3001               	movlw	1
  7922  1E04  00F7               	movwf	??___xxtofl
  7923  1E05  0877               	movf	??___xxtofl,w
  7924  1E06  07A1               	addwf	___xxtofl@exp,f
  7925  1E07  3001               	movlw	1
  7926  1E08                     u4975:
  7927  1E08  1003               	clrc
  7928  1E09  0CA5               	rrf	___xxtofl@arg+3,f
  7929  1E0A  0CA4               	rrf	___xxtofl@arg+2,f
  7930  1E0B  0CA3               	rrf	___xxtofl@arg+1,f
  7931  1E0C  0CA2               	rrf	___xxtofl@arg,f
  7932  1E0D  3EFF               	addlw	-1
  7933  1E0E  1D03               	skipz
  7934  1E0F  2E08               	goto	u4975
  7935  1E10                     l3124:
  7936  1E10  30FE               	movlw	254
  7937  1E11  0525               	andwf	___xxtofl@arg+3,w
  7938  1E12  1D03               	btfss	3,2
  7939  1E13  2E15               	goto	u4981
  7940  1E14  2E16               	goto	u4980
  7941  1E15                     u4981:
  7942  1E15  2E03               	goto	l3122
  7943  1E16                     u4980:
  7944  1E16  2E32               	goto	l840
  7945  1E17                     l3126:
  7946  1E17  3001               	movlw	1
  7947  1E18  00F7               	movwf	??___xxtofl
  7948  1E19  0877               	movf	??___xxtofl,w
  7949  1E1A  07A1               	addwf	___xxtofl@exp,f
  7950  1E1B                     l3128:
  7951  1E1B  3001               	movlw	1
  7952  1E1C  07A2               	addwf	___xxtofl@arg,f
  7953  1E1D  3000               	movlw	0
  7954  1E1E  1803               	skipnc
  7955  1E1F  3001               	movlw	1
  7956  1E20  07A3               	addwf	___xxtofl@arg+1,f
  7957  1E21  3000               	movlw	0
  7958  1E22  1803               	skipnc
  7959  1E23  3001               	movlw	1
  7960  1E24  07A4               	addwf	___xxtofl@arg+2,f
  7961  1E25  3000               	movlw	0
  7962  1E26  1803               	skipnc
  7963  1E27  3001               	movlw	1
  7964  1E28  07A5               	addwf	___xxtofl@arg+3,f
  7965  1E29                     l3130:
  7966  1E29  3001               	movlw	1
  7967  1E2A                     u4995:
  7968  1E2A  1003               	clrc
  7969  1E2B  0CA5               	rrf	___xxtofl@arg+3,f
  7970  1E2C  0CA4               	rrf	___xxtofl@arg+2,f
  7971  1E2D  0CA3               	rrf	___xxtofl@arg+1,f
  7972  1E2E  0CA2               	rrf	___xxtofl@arg,f
  7973  1E2F  3EFF               	addlw	-1
  7974  1E30  1D03               	skipz
  7975  1E31  2E2A               	goto	u4995
  7976  1E32                     l840:
  7977  1E32  30FF               	movlw	255
  7978  1E33  0525               	andwf	___xxtofl@arg+3,w
  7979  1E34  1D03               	btfss	3,2
  7980  1E35  2E37               	goto	u5001
  7981  1E36  2E38               	goto	u5000
  7982  1E37                     u5001:
  7983  1E37  2E17               	goto	l3126
  7984  1E38                     u5000:
  7985  1E38  2E44               	goto	l3134
  7986  1E39                     l3132:
  7987  1E39  3001               	movlw	1
  7988  1E3A  02A1               	subwf	___xxtofl@exp,f
  7989  1E3B  3001               	movlw	1
  7990  1E3C  00F7               	movwf	??___xxtofl
  7991  1E3D                     u5015:
  7992  1E3D  1003               	clrc
  7993  1E3E  0DA2               	rlf	___xxtofl@arg,f
  7994  1E3F  0DA3               	rlf	___xxtofl@arg+1,f
  7995  1E40  0DA4               	rlf	___xxtofl@arg+2,f
  7996  1E41  0DA5               	rlf	___xxtofl@arg+3,f
  7997  1E42  0BF7               	decfsz	??___xxtofl,f
  7998  1E43  2E3D               	goto	u5015
  7999  1E44                     l3134:
  8000  1E44  1BA4               	btfsc	___xxtofl@arg+2,7
  8001  1E45  2E47               	goto	u5021
  8002  1E46  2E48               	goto	u5020
  8003  1E47                     u5021:
  8004  1E47  2E4E               	goto	l847
  8005  1E48                     u5020:
  8006  1E48                     l3136:
  8007  1E48  3002               	movlw	2
  8008  1E49  0221               	subwf	___xxtofl@exp,w
  8009  1E4A  1803               	skipnc
  8010  1E4B  2E4D               	goto	u5031
  8011  1E4C  2E4E               	goto	u5030
  8012  1E4D                     u5031:
  8013  1E4D  2E39               	goto	l3132
  8014  1E4E                     u5030:
  8015  1E4E                     l847:
  8016  1E4E  1821               	btfsc	___xxtofl@exp,0
  8017  1E4F  2E51               	goto	u5041
  8018  1E50  2E52               	goto	u5040
  8019  1E51                     u5041:
  8020  1E51  2E5A               	goto	l848
  8021  1E52                     u5040:
  8022  1E52                     l3138:
  8023  1E52  30FF               	movlw	255
  8024  1E53  05A2               	andwf	___xxtofl@arg,f
  8025  1E54  30FF               	movlw	255
  8026  1E55  05A3               	andwf	___xxtofl@arg+1,f
  8027  1E56  307F               	movlw	127
  8028  1E57  05A4               	andwf	___xxtofl@arg+2,f
  8029  1E58  30FF               	movlw	255
  8030  1E59  05A5               	andwf	___xxtofl@arg+3,f
  8031  1E5A                     l848:
  8032  1E5A  1003               	clrc
  8033  1E5B  0CA1               	rrf	___xxtofl@exp,f
  8034  1E5C                     l3140:
  8035  1E5C  0821               	movf	___xxtofl@exp,w
  8036  1E5D  00F7               	movwf	??___xxtofl
  8037  1E5E  01F8               	clrf	??___xxtofl+1
  8038  1E5F  01F9               	clrf	??___xxtofl+2
  8039  1E60  01FA               	clrf	??___xxtofl+3
  8040  1E61  3018               	movlw	24
  8041  1E62                     u5055:
  8042  1E62  1003               	clrc
  8043  1E63  0DF7               	rlf	??___xxtofl,f
  8044  1E64  0DF8               	rlf	??___xxtofl+1,f
  8045  1E65  0DF9               	rlf	??___xxtofl+2,f
  8046  1E66  0DFA               	rlf	??___xxtofl+3,f
  8047  1E67                     u5050:
  8048  1E67  3EFF               	addlw	-1
  8049  1E68  1D03               	skipz
  8050  1E69  2E62               	goto	u5055
  8051  1E6A  0877               	movf	??___xxtofl,w
  8052  1E6B  04A2               	iorwf	___xxtofl@arg,f
  8053  1E6C  0878               	movf	??___xxtofl+1,w
  8054  1E6D  04A3               	iorwf	___xxtofl@arg+1,f
  8055  1E6E  0879               	movf	??___xxtofl+2,w
  8056  1E6F  04A4               	iorwf	___xxtofl@arg+2,f
  8057  1E70  087A               	movf	??___xxtofl+3,w
  8058  1E71  04A5               	iorwf	___xxtofl@arg+3,f
  8059  1E72                     l3142:
  8060  1E72  0820               	movf	___xxtofl@sign,w
  8061  1E73  1903               	btfsc	3,2
  8062  1E74  2E76               	goto	u5061
  8063  1E75  2E77               	goto	u5060
  8064  1E76                     u5061:
  8065  1E76  2E7C               	goto	l3148
  8066  1E77                     u5060:
  8067  1E77                     l3144:
  8068  1E77  1FF6               	btfss	___xxtofl@val+3,7
  8069  1E78  2E7A               	goto	u5071
  8070  1E79  2E7B               	goto	u5070
  8071  1E7A                     u5071:
  8072  1E7A  2E7C               	goto	l3148
  8073  1E7B                     u5070:
  8074  1E7B                     l3146:
  8075  1E7B  17A5               	bsf	___xxtofl@arg+3,7
  8076  1E7C                     l3148:
  8077  1E7C  0825               	movf	___xxtofl@arg+3,w
  8078  1E7D  00F6               	movwf	?___xxtofl+3
  8079  1E7E  0824               	movf	___xxtofl@arg+2,w
  8080  1E7F  00F5               	movwf	?___xxtofl+2
  8081  1E80  0823               	movf	___xxtofl@arg+1,w
  8082  1E81  00F4               	movwf	?___xxtofl+1
  8083  1E82  0822               	movf	___xxtofl@arg,w
  8084  1E83  00F3               	movwf	?___xxtofl
  8085  1E84                     l836:
  8086  1E84  0008               	return
  8087  1E85                     __end_of___xxtofl:
  8088                           
  8089                           	psect	text25
  8090  093C                     __ptext25:	
  8091 ;; *************** function ___flmul *****************
  8092 ;; Defined at:
  8093 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  b               4    8[BANK0 ] unsigned char 
  8096 ;;  a               4   12[BANK0 ] unsigned char 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  prod            4   28[BANK0 ] struct .
  8099 ;;  grs             4   22[BANK0 ] unsigned long 
  8100 ;;  temp            2   32[BANK0 ] struct .
  8101 ;;  bexp            1   27[BANK0 ] unsigned char 
  8102 ;;  aexp            1   26[BANK0 ] unsigned char 
  8103 ;;  sign            1   21[BANK0 ] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  4    8[BANK0 ] unsigned char 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8113 ;;      Params:         0       8       0       0       0
  8114 ;;      Locals:         0      13       0       0       0
  8115 ;;      Temps:          0       5       0       0       0
  8116 ;;      Totals:         0      26       0       0       0
  8117 ;;Total ram usage:       26 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    2
  8120 ;; This function calls:
  8121 ;;		__Umul8_16
  8122 ;; This function is called by:
  8123 ;;		_conversion
  8124 ;;		_fround
  8125 ;;		_scale
  8126 ;;		_sprintf
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function ___flmul
  8132  093C                     ___flmul:
  8133  093C                     l2628:	
  8134                           ;incstack = 0
  8135                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8136                           
  8137  093C  1283               	bcf	3,5	;RP0=0, select bank0
  8138  093D  1303               	bcf	3,6	;RP1=0, select bank0
  8139  093E  082B               	movf	___flmul@b+3,w
  8140  093F  3980               	andlw	128
  8141  0940  00B0               	movwf	??___flmul
  8142  0941  0830               	movf	??___flmul,w
  8143  0942  00B5               	movwf	___flmul@sign
  8144  0943                     l2630:
  8145  0943  082B               	movf	___flmul@b+3,w
  8146  0944  00B0               	movwf	??___flmul
  8147  0945  0730               	addwf	??___flmul,w
  8148  0946  00B1               	movwf	??___flmul+1
  8149  0947  0831               	movf	??___flmul+1,w
  8150  0948  00BB               	movwf	___flmul@bexp
  8151  0949                     l2632:
  8152  0949  1FAA               	btfss	___flmul@b+2,7
  8153  094A  294C               	goto	u3651
  8154  094B  294D               	goto	u3650
  8155  094C                     u3651:
  8156  094C  294E               	goto	l2636
  8157  094D                     u3650:
  8158  094D                     l2634:
  8159  094D  143B               	bsf	___flmul@bexp,0
  8160  094E                     l2636:
  8161  094E  083B               	movf	___flmul@bexp,w
  8162  094F  1903               	btfsc	3,2
  8163  0950  2952               	goto	u3661
  8164  0951  2953               	goto	u3660
  8165  0952                     u3661:
  8166  0952  2962               	goto	l2644
  8167  0953                     u3660:
  8168  0953                     l2638:
  8169  0953  0A3B               	incf	___flmul@bexp,w
  8170  0954  1D03               	btfss	3,2
  8171  0955  2957               	goto	u3671
  8172  0956  2958               	goto	u3670
  8173  0957                     u3671:
  8174  0957  2960               	goto	l2642
  8175  0958                     u3670:
  8176  0958                     l2640:
  8177  0958  3000               	movlw	0
  8178  0959  00AB               	movwf	___flmul@b+3
  8179  095A  3000               	movlw	0
  8180  095B  00AA               	movwf	___flmul@b+2
  8181  095C  3000               	movlw	0
  8182  095D  00A9               	movwf	___flmul@b+1
  8183  095E  3000               	movlw	0
  8184  095F  00A8               	movwf	___flmul@b
  8185  0960                     l2642:
  8186  0960  17AA               	bsf	___flmul@b+2,7
  8187  0961  296A               	goto	l2646
  8188  0962                     l2644:
  8189  0962  3000               	movlw	0
  8190  0963  00AB               	movwf	___flmul@b+3
  8191  0964  3000               	movlw	0
  8192  0965  00AA               	movwf	___flmul@b+2
  8193  0966  3000               	movlw	0
  8194  0967  00A9               	movwf	___flmul@b+1
  8195  0968  3000               	movlw	0
  8196  0969  00A8               	movwf	___flmul@b
  8197  096A                     l2646:
  8198  096A  082F               	movf	___flmul@a+3,w
  8199  096B  3980               	andlw	128
  8200  096C  00B0               	movwf	??___flmul
  8201  096D  0830               	movf	??___flmul,w
  8202  096E  06B5               	xorwf	___flmul@sign,f
  8203  096F                     l2648:
  8204  096F  082F               	movf	___flmul@a+3,w
  8205  0970  00B0               	movwf	??___flmul
  8206  0971  0730               	addwf	??___flmul,w
  8207  0972  00B1               	movwf	??___flmul+1
  8208  0973  0831               	movf	??___flmul+1,w
  8209  0974  00BA               	movwf	___flmul@aexp
  8210  0975                     l2650:
  8211  0975  1FAE               	btfss	___flmul@a+2,7
  8212  0976  2978               	goto	u3681
  8213  0977  2979               	goto	u3680
  8214  0978                     u3681:
  8215  0978  297A               	goto	l2654
  8216  0979                     u3680:
  8217  0979                     l2652:
  8218  0979  143A               	bsf	___flmul@aexp,0
  8219  097A                     l2654:
  8220  097A  083A               	movf	___flmul@aexp,w
  8221  097B  1903               	btfsc	3,2
  8222  097C  297E               	goto	u3691
  8223  097D  297F               	goto	u3690
  8224  097E                     u3691:
  8225  097E  298E               	goto	l2662
  8226  097F                     u3690:
  8227  097F                     l2656:
  8228  097F  0A3A               	incf	___flmul@aexp,w
  8229  0980  1D03               	btfss	3,2
  8230  0981  2983               	goto	u3701
  8231  0982  2984               	goto	u3700
  8232  0983                     u3701:
  8233  0983  298C               	goto	l2660
  8234  0984                     u3700:
  8235  0984                     l2658:
  8236  0984  3000               	movlw	0
  8237  0985  00AF               	movwf	___flmul@a+3
  8238  0986  3000               	movlw	0
  8239  0987  00AE               	movwf	___flmul@a+2
  8240  0988  3000               	movlw	0
  8241  0989  00AD               	movwf	___flmul@a+1
  8242  098A  3000               	movlw	0
  8243  098B  00AC               	movwf	___flmul@a
  8244  098C                     l2660:
  8245  098C  17AE               	bsf	___flmul@a+2,7
  8246  098D  2996               	goto	l2664
  8247  098E                     l2662:
  8248  098E  3000               	movlw	0
  8249  098F  00AF               	movwf	___flmul@a+3
  8250  0990  3000               	movlw	0
  8251  0991  00AE               	movwf	___flmul@a+2
  8252  0992  3000               	movlw	0
  8253  0993  00AD               	movwf	___flmul@a+1
  8254  0994  3000               	movlw	0
  8255  0995  00AC               	movwf	___flmul@a
  8256  0996                     l2664:
  8257  0996  083A               	movf	___flmul@aexp,w
  8258  0997  1903               	btfsc	3,2
  8259  0998  299A               	goto	u3711
  8260  0999  299B               	goto	u3710
  8261  099A                     u3711:
  8262  099A  29A0               	goto	l2668
  8263  099B                     u3710:
  8264  099B                     l2666:
  8265  099B  083B               	movf	___flmul@bexp,w
  8266  099C  1D03               	btfss	3,2
  8267  099D  299F               	goto	u3721
  8268  099E  29A0               	goto	u3720
  8269  099F                     u3721:
  8270  099F  29A9               	goto	l2672
  8271  09A0                     u3720:
  8272  09A0                     l2668:
  8273  09A0  3000               	movlw	0
  8274  09A1  00AB               	movwf	?___flmul+3
  8275  09A2  3000               	movlw	0
  8276  09A3  00AA               	movwf	?___flmul+2
  8277  09A4  3000               	movlw	0
  8278  09A5  00A9               	movwf	?___flmul+1
  8279  09A6  3000               	movlw	0
  8280  09A7  00A8               	movwf	?___flmul
  8281  09A8  2C9C               	goto	l790
  8282  09A9                     l2672:
  8283  09A9  0828               	movf	___flmul@b,w
  8284  09AA  00B0               	movwf	??___flmul
  8285  09AB  0830               	movf	??___flmul,w
  8286  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8287  09AD  082E               	movf	___flmul@a+2,w
  8288  09AE  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8289  09B3  0874               	movf	?__Umul8_16+1,w
  8290  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8291  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8292  09B6  00C1               	movwf	___flmul@temp+1
  8293  09B7  0873               	movf	?__Umul8_16,w
  8294  09B8  00C0               	movwf	___flmul@temp
  8295  09B9                     l2674:
  8296  09B9  0840               	movf	___flmul@temp,w
  8297  09BA  00B0               	movwf	??___flmul
  8298  09BB  01B1               	clrf	??___flmul+1
  8299  09BC  01B2               	clrf	??___flmul+2
  8300  09BD  01B3               	clrf	??___flmul+3
  8301  09BE  0833               	movf	??___flmul+3,w
  8302  09BF  00B9               	movwf	___flmul@grs+3
  8303  09C0  0832               	movf	??___flmul+2,w
  8304  09C1  00B8               	movwf	___flmul@grs+2
  8305  09C2  0831               	movf	??___flmul+1,w
  8306  09C3  00B7               	movwf	___flmul@grs+1
  8307  09C4  0830               	movf	??___flmul,w
  8308  09C5  00B6               	movwf	___flmul@grs
  8309  09C6                     l2676:
  8310  09C6  0841               	movf	___flmul@temp+1,w
  8311  09C7  00B0               	movwf	??___flmul
  8312  09C8  01B1               	clrf	??___flmul+1
  8313  09C9  01B2               	clrf	??___flmul+2
  8314  09CA  01B3               	clrf	??___flmul+3
  8315  09CB  0833               	movf	??___flmul+3,w
  8316  09CC  00BF               	movwf	___flmul@prod+3
  8317  09CD  0832               	movf	??___flmul+2,w
  8318  09CE  00BE               	movwf	___flmul@prod+2
  8319  09CF  0831               	movf	??___flmul+1,w
  8320  09D0  00BD               	movwf	___flmul@prod+1
  8321  09D1  0830               	movf	??___flmul,w
  8322  09D2  00BC               	movwf	___flmul@prod
  8323  09D3  0829               	movf	___flmul@b+1,w
  8324  09D4  00B0               	movwf	??___flmul
  8325  09D5  0830               	movf	??___flmul,w
  8326  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8327  09D7  082D               	movf	___flmul@a+1,w
  8328  09D8  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8329  09DD  0874               	movf	?__Umul8_16+1,w
  8330  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8331  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8332  09E0  00C1               	movwf	___flmul@temp+1
  8333  09E1  0873               	movf	?__Umul8_16,w
  8334  09E2  00C0               	movwf	___flmul@temp
  8335  09E3                     l2678:
  8336  09E3  0840               	movf	___flmul@temp,w
  8337  09E4  00B0               	movwf	??___flmul
  8338  09E5  01B1               	clrf	??___flmul+1
  8339  09E6  01B2               	clrf	??___flmul+2
  8340  09E7  01B3               	clrf	??___flmul+3
  8341  09E8  0830               	movf	??___flmul,w
  8342  09E9  07B6               	addwf	___flmul@grs,f
  8343  09EA  0831               	movf	??___flmul+1,w
  8344  09EB  1103               	clrz
  8345  09EC  1803               	skipnc
  8346  09ED  3E01               	addlw	1
  8347  09EE  1903               	skipnz
  8348  09EF  29F1               	goto	u3731
  8349  09F0  07B7               	addwf	___flmul@grs+1,f
  8350  09F1                     u3731:
  8351  09F1  0832               	movf	??___flmul+2,w
  8352  09F2  1103               	clrz
  8353  09F3  1803               	skipnc
  8354  09F4  3E01               	addlw	1
  8355  09F5  1903               	skipnz
  8356  09F6  29F8               	goto	u3732
  8357  09F7  07B8               	addwf	___flmul@grs+2,f
  8358  09F8                     u3732:
  8359  09F8  0833               	movf	??___flmul+3,w
  8360  09F9  1103               	clrz
  8361  09FA  1803               	skipnc
  8362  09FB  3E01               	addlw	1
  8363  09FC  1903               	skipnz
  8364  09FD  29FF               	goto	u3733
  8365  09FE  07B9               	addwf	___flmul@grs+3,f
  8366  09FF                     u3733:
  8367  09FF                     l2680:
  8368  09FF  0841               	movf	___flmul@temp+1,w
  8369  0A00  00B0               	movwf	??___flmul
  8370  0A01  01B1               	clrf	??___flmul+1
  8371  0A02  01B2               	clrf	??___flmul+2
  8372  0A03  01B3               	clrf	??___flmul+3
  8373  0A04  0830               	movf	??___flmul,w
  8374  0A05  07BC               	addwf	___flmul@prod,f
  8375  0A06  0831               	movf	??___flmul+1,w
  8376  0A07  1103               	clrz
  8377  0A08  1803               	skipnc
  8378  0A09  3E01               	addlw	1
  8379  0A0A  1903               	skipnz
  8380  0A0B  2A0D               	goto	u3741
  8381  0A0C  07BD               	addwf	___flmul@prod+1,f
  8382  0A0D                     u3741:
  8383  0A0D  0832               	movf	??___flmul+2,w
  8384  0A0E  1103               	clrz
  8385  0A0F  1803               	skipnc
  8386  0A10  3E01               	addlw	1
  8387  0A11  1903               	skipnz
  8388  0A12  2A14               	goto	u3742
  8389  0A13  07BE               	addwf	___flmul@prod+2,f
  8390  0A14                     u3742:
  8391  0A14  0833               	movf	??___flmul+3,w
  8392  0A15  1103               	clrz
  8393  0A16  1803               	skipnc
  8394  0A17  3E01               	addlw	1
  8395  0A18  1903               	skipnz
  8396  0A19  2A1B               	goto	u3743
  8397  0A1A  07BF               	addwf	___flmul@prod+3,f
  8398  0A1B                     u3743:
  8399  0A1B  082A               	movf	___flmul@b+2,w
  8400  0A1C  00B0               	movwf	??___flmul
  8401  0A1D  0830               	movf	??___flmul,w
  8402  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8403  0A1F  082C               	movf	___flmul@a,w
  8404  0A20  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8405  0A25  0874               	movf	?__Umul8_16+1,w
  8406  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8408  0A28  00C1               	movwf	___flmul@temp+1
  8409  0A29  0873               	movf	?__Umul8_16,w
  8410  0A2A  00C0               	movwf	___flmul@temp
  8411  0A2B                     l2682:
  8412  0A2B  0840               	movf	___flmul@temp,w
  8413  0A2C  00B0               	movwf	??___flmul
  8414  0A2D  01B1               	clrf	??___flmul+1
  8415  0A2E  01B2               	clrf	??___flmul+2
  8416  0A2F  01B3               	clrf	??___flmul+3
  8417  0A30  0830               	movf	??___flmul,w
  8418  0A31  07B6               	addwf	___flmul@grs,f
  8419  0A32  0831               	movf	??___flmul+1,w
  8420  0A33  1103               	clrz
  8421  0A34  1803               	skipnc
  8422  0A35  3E01               	addlw	1
  8423  0A36  1903               	skipnz
  8424  0A37  2A39               	goto	u3751
  8425  0A38  07B7               	addwf	___flmul@grs+1,f
  8426  0A39                     u3751:
  8427  0A39  0832               	movf	??___flmul+2,w
  8428  0A3A  1103               	clrz
  8429  0A3B  1803               	skipnc
  8430  0A3C  3E01               	addlw	1
  8431  0A3D  1903               	skipnz
  8432  0A3E  2A40               	goto	u3752
  8433  0A3F  07B8               	addwf	___flmul@grs+2,f
  8434  0A40                     u3752:
  8435  0A40  0833               	movf	??___flmul+3,w
  8436  0A41  1103               	clrz
  8437  0A42  1803               	skipnc
  8438  0A43  3E01               	addlw	1
  8439  0A44  1903               	skipnz
  8440  0A45  2A47               	goto	u3753
  8441  0A46  07B9               	addwf	___flmul@grs+3,f
  8442  0A47                     u3753:
  8443  0A47                     l2684:
  8444  0A47  0841               	movf	___flmul@temp+1,w
  8445  0A48  00B0               	movwf	??___flmul
  8446  0A49  01B1               	clrf	??___flmul+1
  8447  0A4A  01B2               	clrf	??___flmul+2
  8448  0A4B  01B3               	clrf	??___flmul+3
  8449  0A4C  0830               	movf	??___flmul,w
  8450  0A4D  07BC               	addwf	___flmul@prod,f
  8451  0A4E  0831               	movf	??___flmul+1,w
  8452  0A4F  1103               	clrz
  8453  0A50  1803               	skipnc
  8454  0A51  3E01               	addlw	1
  8455  0A52  1903               	skipnz
  8456  0A53  2A55               	goto	u3761
  8457  0A54  07BD               	addwf	___flmul@prod+1,f
  8458  0A55                     u3761:
  8459  0A55  0832               	movf	??___flmul+2,w
  8460  0A56  1103               	clrz
  8461  0A57  1803               	skipnc
  8462  0A58  3E01               	addlw	1
  8463  0A59  1903               	skipnz
  8464  0A5A  2A5C               	goto	u3762
  8465  0A5B  07BE               	addwf	___flmul@prod+2,f
  8466  0A5C                     u3762:
  8467  0A5C  0833               	movf	??___flmul+3,w
  8468  0A5D  1103               	clrz
  8469  0A5E  1803               	skipnc
  8470  0A5F  3E01               	addlw	1
  8471  0A60  1903               	skipnz
  8472  0A61  2A63               	goto	u3763
  8473  0A62  07BF               	addwf	___flmul@prod+3,f
  8474  0A63                     u3763:
  8475  0A63                     l2686:
  8476  0A63  3008               	movlw	8
  8477  0A64  00B0               	movwf	??___flmul
  8478  0A65                     u3775:
  8479  0A65  1003               	clrc
  8480  0A66  0DB6               	rlf	___flmul@grs,f
  8481  0A67  0DB7               	rlf	___flmul@grs+1,f
  8482  0A68  0DB8               	rlf	___flmul@grs+2,f
  8483  0A69  0DB9               	rlf	___flmul@grs+3,f
  8484  0A6A  0BB0               	decfsz	??___flmul,f
  8485  0A6B  2A65               	goto	u3775
  8486  0A6C                     l2688:
  8487  0A6C  0829               	movf	___flmul@b+1,w
  8488  0A6D  00B0               	movwf	??___flmul
  8489  0A6E  0830               	movf	??___flmul,w
  8490  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8491  0A70  082C               	movf	___flmul@a,w
  8492  0A71  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8493  0A76  0874               	movf	?__Umul8_16+1,w
  8494  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8495  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8496  0A79  00C1               	movwf	___flmul@temp+1
  8497  0A7A  0873               	movf	?__Umul8_16,w
  8498  0A7B  00C0               	movwf	___flmul@temp
  8499  0A7C                     l2690:
  8500  0A7C  0840               	movf	___flmul@temp,w
  8501  0A7D  00B0               	movwf	??___flmul
  8502  0A7E  0841               	movf	___flmul@temp+1,w
  8503  0A7F  00B1               	movwf	??___flmul+1
  8504  0A80  01B2               	clrf	??___flmul+2
  8505  0A81  01B3               	clrf	??___flmul+3
  8506  0A82  0830               	movf	??___flmul,w
  8507  0A83  07B6               	addwf	___flmul@grs,f
  8508  0A84  0831               	movf	??___flmul+1,w
  8509  0A85  1103               	clrz
  8510  0A86  1803               	skipnc
  8511  0A87  3E01               	addlw	1
  8512  0A88  1903               	skipnz
  8513  0A89  2A8B               	goto	u3781
  8514  0A8A  07B7               	addwf	___flmul@grs+1,f
  8515  0A8B                     u3781:
  8516  0A8B  0832               	movf	??___flmul+2,w
  8517  0A8C  1103               	clrz
  8518  0A8D  1803               	skipnc
  8519  0A8E  3E01               	addlw	1
  8520  0A8F  1903               	skipnz
  8521  0A90  2A92               	goto	u3782
  8522  0A91  07B8               	addwf	___flmul@grs+2,f
  8523  0A92                     u3782:
  8524  0A92  0833               	movf	??___flmul+3,w
  8525  0A93  1103               	clrz
  8526  0A94  1803               	skipnc
  8527  0A95  3E01               	addlw	1
  8528  0A96  1903               	skipnz
  8529  0A97  2A99               	goto	u3783
  8530  0A98  07B9               	addwf	___flmul@grs+3,f
  8531  0A99                     u3783:
  8532  0A99                     l2692:
  8533  0A99  0828               	movf	___flmul@b,w
  8534  0A9A  00B0               	movwf	??___flmul
  8535  0A9B  0830               	movf	??___flmul,w
  8536  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8537  0A9D  082D               	movf	___flmul@a+1,w
  8538  0A9E  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8539  0AA3  0874               	movf	?__Umul8_16+1,w
  8540  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8541  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8542  0AA6  00C1               	movwf	___flmul@temp+1
  8543  0AA7  0873               	movf	?__Umul8_16,w
  8544  0AA8  00C0               	movwf	___flmul@temp
  8545  0AA9                     l2694:
  8546  0AA9  0840               	movf	___flmul@temp,w
  8547  0AAA  00B0               	movwf	??___flmul
  8548  0AAB  0841               	movf	___flmul@temp+1,w
  8549  0AAC  00B1               	movwf	??___flmul+1
  8550  0AAD  01B2               	clrf	??___flmul+2
  8551  0AAE  01B3               	clrf	??___flmul+3
  8552  0AAF  0830               	movf	??___flmul,w
  8553  0AB0  07B6               	addwf	___flmul@grs,f
  8554  0AB1  0831               	movf	??___flmul+1,w
  8555  0AB2  1103               	clrz
  8556  0AB3  1803               	skipnc
  8557  0AB4  3E01               	addlw	1
  8558  0AB5  1903               	skipnz
  8559  0AB6  2AB8               	goto	u3791
  8560  0AB7  07B7               	addwf	___flmul@grs+1,f
  8561  0AB8                     u3791:
  8562  0AB8  0832               	movf	??___flmul+2,w
  8563  0AB9  1103               	clrz
  8564  0ABA  1803               	skipnc
  8565  0ABB  3E01               	addlw	1
  8566  0ABC  1903               	skipnz
  8567  0ABD  2ABF               	goto	u3792
  8568  0ABE  07B8               	addwf	___flmul@grs+2,f
  8569  0ABF                     u3792:
  8570  0ABF  0833               	movf	??___flmul+3,w
  8571  0AC0  1103               	clrz
  8572  0AC1  1803               	skipnc
  8573  0AC2  3E01               	addlw	1
  8574  0AC3  1903               	skipnz
  8575  0AC4  2AC6               	goto	u3793
  8576  0AC5  07B9               	addwf	___flmul@grs+3,f
  8577  0AC6                     u3793:
  8578  0AC6                     l2696:
  8579  0AC6  3008               	movlw	8
  8580  0AC7  00B0               	movwf	??___flmul
  8581  0AC8                     u3805:
  8582  0AC8  1003               	clrc
  8583  0AC9  0DB6               	rlf	___flmul@grs,f
  8584  0ACA  0DB7               	rlf	___flmul@grs+1,f
  8585  0ACB  0DB8               	rlf	___flmul@grs+2,f
  8586  0ACC  0DB9               	rlf	___flmul@grs+3,f
  8587  0ACD  0BB0               	decfsz	??___flmul,f
  8588  0ACE  2AC8               	goto	u3805
  8589  0ACF  0828               	movf	___flmul@b,w
  8590  0AD0  00B0               	movwf	??___flmul
  8591  0AD1  0830               	movf	??___flmul,w
  8592  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8593  0AD3  082C               	movf	___flmul@a,w
  8594  0AD4  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8595  0AD9  0874               	movf	?__Umul8_16+1,w
  8596  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8597  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8598  0ADC  00C1               	movwf	___flmul@temp+1
  8599  0ADD  0873               	movf	?__Umul8_16,w
  8600  0ADE  00C0               	movwf	___flmul@temp
  8601  0ADF                     l2698:
  8602  0ADF  0840               	movf	___flmul@temp,w
  8603  0AE0  00B0               	movwf	??___flmul
  8604  0AE1  0841               	movf	___flmul@temp+1,w
  8605  0AE2  00B1               	movwf	??___flmul+1
  8606  0AE3  01B2               	clrf	??___flmul+2
  8607  0AE4  01B3               	clrf	??___flmul+3
  8608  0AE5  0830               	movf	??___flmul,w
  8609  0AE6  07B6               	addwf	___flmul@grs,f
  8610  0AE7  0831               	movf	??___flmul+1,w
  8611  0AE8  1103               	clrz
  8612  0AE9  1803               	skipnc
  8613  0AEA  3E01               	addlw	1
  8614  0AEB  1903               	skipnz
  8615  0AEC  2AEE               	goto	u3811
  8616  0AED  07B7               	addwf	___flmul@grs+1,f
  8617  0AEE                     u3811:
  8618  0AEE  0832               	movf	??___flmul+2,w
  8619  0AEF  1103               	clrz
  8620  0AF0  1803               	skipnc
  8621  0AF1  3E01               	addlw	1
  8622  0AF2  1903               	skipnz
  8623  0AF3  2AF5               	goto	u3812
  8624  0AF4  07B8               	addwf	___flmul@grs+2,f
  8625  0AF5                     u3812:
  8626  0AF5  0833               	movf	??___flmul+3,w
  8627  0AF6  1103               	clrz
  8628  0AF7  1803               	skipnc
  8629  0AF8  3E01               	addlw	1
  8630  0AF9  1903               	skipnz
  8631  0AFA  2AFC               	goto	u3813
  8632  0AFB  07B9               	addwf	___flmul@grs+3,f
  8633  0AFC                     u3813:
  8634  0AFC                     l2700:
  8635  0AFC  0829               	movf	___flmul@b+1,w
  8636  0AFD  00B0               	movwf	??___flmul
  8637  0AFE  0830               	movf	??___flmul,w
  8638  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8639  0B00  082E               	movf	___flmul@a+2,w
  8640  0B01  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8641  0B06  0874               	movf	?__Umul8_16+1,w
  8642  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8643  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8644  0B09  00C1               	movwf	___flmul@temp+1
  8645  0B0A  0873               	movf	?__Umul8_16,w
  8646  0B0B  00C0               	movwf	___flmul@temp
  8647  0B0C  0840               	movf	___flmul@temp,w
  8648  0B0D  00B0               	movwf	??___flmul
  8649  0B0E  0841               	movf	___flmul@temp+1,w
  8650  0B0F  00B1               	movwf	??___flmul+1
  8651  0B10  01B2               	clrf	??___flmul+2
  8652  0B11  01B3               	clrf	??___flmul+3
  8653  0B12  0830               	movf	??___flmul,w
  8654  0B13  07BC               	addwf	___flmul@prod,f
  8655  0B14  0831               	movf	??___flmul+1,w
  8656  0B15  1103               	clrz
  8657  0B16  1803               	skipnc
  8658  0B17  3E01               	addlw	1
  8659  0B18  1903               	skipnz
  8660  0B19  2B1B               	goto	u3821
  8661  0B1A  07BD               	addwf	___flmul@prod+1,f
  8662  0B1B                     u3821:
  8663  0B1B  0832               	movf	??___flmul+2,w
  8664  0B1C  1103               	clrz
  8665  0B1D  1803               	skipnc
  8666  0B1E  3E01               	addlw	1
  8667  0B1F  1903               	skipnz
  8668  0B20  2B22               	goto	u3822
  8669  0B21  07BE               	addwf	___flmul@prod+2,f
  8670  0B22                     u3822:
  8671  0B22  0833               	movf	??___flmul+3,w
  8672  0B23  1103               	clrz
  8673  0B24  1803               	skipnc
  8674  0B25  3E01               	addlw	1
  8675  0B26  1903               	skipnz
  8676  0B27  2B29               	goto	u3823
  8677  0B28  07BF               	addwf	___flmul@prod+3,f
  8678  0B29                     u3823:
  8679  0B29                     l2702:
  8680  0B29  082A               	movf	___flmul@b+2,w
  8681  0B2A  00B0               	movwf	??___flmul
  8682  0B2B  0830               	movf	??___flmul,w
  8683  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8684  0B2D  082D               	movf	___flmul@a+1,w
  8685  0B2E  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8686  0B33  0874               	movf	?__Umul8_16+1,w
  8687  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8688  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8689  0B36  00C1               	movwf	___flmul@temp+1
  8690  0B37  0873               	movf	?__Umul8_16,w
  8691  0B38  00C0               	movwf	___flmul@temp
  8692  0B39                     l2704:
  8693  0B39  0840               	movf	___flmul@temp,w
  8694  0B3A  00B0               	movwf	??___flmul
  8695  0B3B  0841               	movf	___flmul@temp+1,w
  8696  0B3C  00B1               	movwf	??___flmul+1
  8697  0B3D  01B2               	clrf	??___flmul+2
  8698  0B3E  01B3               	clrf	??___flmul+3
  8699  0B3F  0830               	movf	??___flmul,w
  8700  0B40  07BC               	addwf	___flmul@prod,f
  8701  0B41  0831               	movf	??___flmul+1,w
  8702  0B42  1103               	clrz
  8703  0B43  1803               	skipnc
  8704  0B44  3E01               	addlw	1
  8705  0B45  1903               	skipnz
  8706  0B46  2B48               	goto	u3831
  8707  0B47  07BD               	addwf	___flmul@prod+1,f
  8708  0B48                     u3831:
  8709  0B48  0832               	movf	??___flmul+2,w
  8710  0B49  1103               	clrz
  8711  0B4A  1803               	skipnc
  8712  0B4B  3E01               	addlw	1
  8713  0B4C  1903               	skipnz
  8714  0B4D  2B4F               	goto	u3832
  8715  0B4E  07BE               	addwf	___flmul@prod+2,f
  8716  0B4F                     u3832:
  8717  0B4F  0833               	movf	??___flmul+3,w
  8718  0B50  1103               	clrz
  8719  0B51  1803               	skipnc
  8720  0B52  3E01               	addlw	1
  8721  0B53  1903               	skipnz
  8722  0B54  2B56               	goto	u3833
  8723  0B55  07BF               	addwf	___flmul@prod+3,f
  8724  0B56                     u3833:
  8725  0B56  082A               	movf	___flmul@b+2,w
  8726  0B57  00B0               	movwf	??___flmul
  8727  0B58  0830               	movf	??___flmul,w
  8728  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8729  0B5A  082E               	movf	___flmul@a+2,w
  8730  0B5B  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  8731  0B60  0874               	movf	?__Umul8_16+1,w
  8732  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8733  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8734  0B63  00C1               	movwf	___flmul@temp+1
  8735  0B64  0873               	movf	?__Umul8_16,w
  8736  0B65  00C0               	movwf	___flmul@temp
  8737  0B66                     l2706:
  8738  0B66  0840               	movf	___flmul@temp,w
  8739  0B67  00B0               	movwf	??___flmul
  8740  0B68  0841               	movf	___flmul@temp+1,w
  8741  0B69  00B1               	movwf	??___flmul+1
  8742  0B6A  01B2               	clrf	??___flmul+2
  8743  0B6B  01B3               	clrf	??___flmul+3
  8744  0B6C  3008               	movlw	8
  8745  0B6D                     u3845:
  8746  0B6D  1003               	clrc
  8747  0B6E  0DB0               	rlf	??___flmul,f
  8748  0B6F  0DB1               	rlf	??___flmul+1,f
  8749  0B70  0DB2               	rlf	??___flmul+2,f
  8750  0B71  0DB3               	rlf	??___flmul+3,f
  8751  0B72                     u3840:
  8752  0B72  3EFF               	addlw	-1
  8753  0B73  1D03               	skipz
  8754  0B74  2B6D               	goto	u3845
  8755  0B75  0830               	movf	??___flmul,w
  8756  0B76  07BC               	addwf	___flmul@prod,f
  8757  0B77  0831               	movf	??___flmul+1,w
  8758  0B78  1103               	clrz
  8759  0B79  1803               	skipnc
  8760  0B7A  3E01               	addlw	1
  8761  0B7B  1903               	skipnz
  8762  0B7C  2B7E               	goto	u3851
  8763  0B7D  07BD               	addwf	___flmul@prod+1,f
  8764  0B7E                     u3851:
  8765  0B7E  0832               	movf	??___flmul+2,w
  8766  0B7F  1103               	clrz
  8767  0B80  1803               	skipnc
  8768  0B81  3E01               	addlw	1
  8769  0B82  1903               	skipnz
  8770  0B83  2B85               	goto	u3852
  8771  0B84  07BE               	addwf	___flmul@prod+2,f
  8772  0B85                     u3852:
  8773  0B85  0833               	movf	??___flmul+3,w
  8774  0B86  1103               	clrz
  8775  0B87  1803               	skipnc
  8776  0B88  3E01               	addlw	1
  8777  0B89  1903               	skipnz
  8778  0B8A  2B8C               	goto	u3853
  8779  0B8B  07BF               	addwf	___flmul@prod+3,f
  8780  0B8C                     u3853:
  8781  0B8C                     l2708:
  8782  0B8C  0836               	movf	___flmul@grs,w
  8783  0B8D  00B0               	movwf	??___flmul
  8784  0B8E  0837               	movf	___flmul@grs+1,w
  8785  0B8F  00B1               	movwf	??___flmul+1
  8786  0B90  0838               	movf	___flmul@grs+2,w
  8787  0B91  00B2               	movwf	??___flmul+2
  8788  0B92  0839               	movf	___flmul@grs+3,w
  8789  0B93  00B3               	movwf	??___flmul+3
  8790  0B94  3018               	movlw	24
  8791  0B95                     u3865:
  8792  0B95  1003               	clrc
  8793  0B96  0CB3               	rrf	??___flmul+3,f
  8794  0B97  0CB2               	rrf	??___flmul+2,f
  8795  0B98  0CB1               	rrf	??___flmul+1,f
  8796  0B99  0CB0               	rrf	??___flmul,f
  8797  0B9A                     u3860:
  8798  0B9A  3EFF               	addlw	-1
  8799  0B9B  1D03               	skipz
  8800  0B9C  2B95               	goto	u3865
  8801  0B9D  0830               	movf	??___flmul,w
  8802  0B9E  07BC               	addwf	___flmul@prod,f
  8803  0B9F  0831               	movf	??___flmul+1,w
  8804  0BA0  1103               	clrz
  8805  0BA1  1803               	skipnc
  8806  0BA2  3E01               	addlw	1
  8807  0BA3  1903               	skipnz
  8808  0BA4  2BA6               	goto	u3871
  8809  0BA5  07BD               	addwf	___flmul@prod+1,f
  8810  0BA6                     u3871:
  8811  0BA6  0832               	movf	??___flmul+2,w
  8812  0BA7  1103               	clrz
  8813  0BA8  1803               	skipnc
  8814  0BA9  3E01               	addlw	1
  8815  0BAA  1903               	skipnz
  8816  0BAB  2BAD               	goto	u3872
  8817  0BAC  07BE               	addwf	___flmul@prod+2,f
  8818  0BAD                     u3872:
  8819  0BAD  0833               	movf	??___flmul+3,w
  8820  0BAE  1103               	clrz
  8821  0BAF  1803               	skipnc
  8822  0BB0  3E01               	addlw	1
  8823  0BB1  1903               	skipnz
  8824  0BB2  2BB4               	goto	u3873
  8825  0BB3  07BF               	addwf	___flmul@prod+3,f
  8826  0BB4                     u3873:
  8827  0BB4                     l2710:
  8828  0BB4  3008               	movlw	8
  8829  0BB5  00B0               	movwf	??___flmul
  8830  0BB6                     u3885:
  8831  0BB6  1003               	clrc
  8832  0BB7  0DB6               	rlf	___flmul@grs,f
  8833  0BB8  0DB7               	rlf	___flmul@grs+1,f
  8834  0BB9  0DB8               	rlf	___flmul@grs+2,f
  8835  0BBA  0DB9               	rlf	___flmul@grs+3,f
  8836  0BBB  0BB0               	decfsz	??___flmul,f
  8837  0BBC  2BB6               	goto	u3885
  8838  0BBD                     l2712:
  8839  0BBD  083B               	movf	___flmul@bexp,w
  8840  0BBE  073A               	addwf	___flmul@aexp,w
  8841  0BBF  00B0               	movwf	??___flmul
  8842  0BC0  01B1               	clrf	??___flmul+1
  8843  0BC1  0DB1               	rlf	??___flmul+1,f
  8844  0BC2  0830               	movf	??___flmul,w
  8845  0BC3  3E82               	addlw	130
  8846  0BC4  00C0               	movwf	___flmul@temp
  8847  0BC5  0831               	movf	??___flmul+1,w
  8848  0BC6  1803               	skipnc
  8849  0BC7  3E01               	addlw	1
  8850  0BC8  3EFF               	addlw	255
  8851  0BC9  00C1               	movwf	___flmul@temp+1
  8852  0BCA  2BE8               	goto	l2724
  8853  0BCB                     l2714:
  8854  0BCB  3001               	movlw	1
  8855  0BCC  00B0               	movwf	??___flmul
  8856  0BCD                     u3895:
  8857  0BCD  1003               	clrc
  8858  0BCE  0DBC               	rlf	___flmul@prod,f
  8859  0BCF  0DBD               	rlf	___flmul@prod+1,f
  8860  0BD0  0DBE               	rlf	___flmul@prod+2,f
  8861  0BD1  0DBF               	rlf	___flmul@prod+3,f
  8862  0BD2  0BB0               	decfsz	??___flmul,f
  8863  0BD3  2BCD               	goto	u3895
  8864  0BD4                     l2716:
  8865  0BD4  1FB9               	btfss	___flmul@grs+3,7
  8866  0BD5  2BD7               	goto	u3901
  8867  0BD6  2BD8               	goto	u3900
  8868  0BD7                     u3901:
  8869  0BD7  2BD9               	goto	l2720
  8870  0BD8                     u3900:
  8871  0BD8                     l2718:
  8872  0BD8  143C               	bsf	___flmul@prod,0
  8873  0BD9                     l2720:
  8874  0BD9  3001               	movlw	1
  8875  0BDA  00B0               	movwf	??___flmul
  8876  0BDB                     u3915:
  8877  0BDB  1003               	clrc
  8878  0BDC  0DB6               	rlf	___flmul@grs,f
  8879  0BDD  0DB7               	rlf	___flmul@grs+1,f
  8880  0BDE  0DB8               	rlf	___flmul@grs+2,f
  8881  0BDF  0DB9               	rlf	___flmul@grs+3,f
  8882  0BE0  0BB0               	decfsz	??___flmul,f
  8883  0BE1  2BDB               	goto	u3915
  8884  0BE2                     l2722:
  8885  0BE2  30FF               	movlw	255
  8886  0BE3  07C0               	addwf	___flmul@temp,f
  8887  0BE4  1803               	skipnc
  8888  0BE5  0AC1               	incf	___flmul@temp+1,f
  8889  0BE6  30FF               	movlw	255
  8890  0BE7  07C1               	addwf	___flmul@temp+1,f
  8891  0BE8                     l2724:
  8892  0BE8  1FBE               	btfss	___flmul@prod+2,7
  8893  0BE9  2BEB               	goto	u3921
  8894  0BEA  2BEC               	goto	u3920
  8895  0BEB                     u3921:
  8896  0BEB  2BCB               	goto	l2714
  8897  0BEC                     u3920:
  8898  0BEC                     l2726:
  8899  0BEC  01BA               	clrf	___flmul@aexp
  8900  0BED                     l2728:
  8901  0BED  1FB9               	btfss	___flmul@grs+3,7
  8902  0BEE  2BF0               	goto	u3931
  8903  0BEF  2BF1               	goto	u3930
  8904  0BF0                     u3931:
  8905  0BF0  2C0D               	goto	l2736
  8906  0BF1                     u3930:
  8907  0BF1                     l2730:
  8908  0BF1  30FF               	movlw	255
  8909  0BF2  0536               	andwf	___flmul@grs,w
  8910  0BF3  00B0               	movwf	??___flmul
  8911  0BF4  30FF               	movlw	255
  8912  0BF5  0537               	andwf	___flmul@grs+1,w
  8913  0BF6  00B1               	movwf	??___flmul+1
  8914  0BF7  30FF               	movlw	255
  8915  0BF8  0538               	andwf	___flmul@grs+2,w
  8916  0BF9  00B2               	movwf	??___flmul+2
  8917  0BFA  307F               	movlw	127
  8918  0BFB  0539               	andwf	___flmul@grs+3,w
  8919  0BFC  00B3               	movwf	??___flmul+3
  8920  0BFD  0833               	movf	??___flmul+3,w
  8921  0BFE  0432               	iorwf	??___flmul+2,w
  8922  0BFF  0431               	iorwf	??___flmul+1,w
  8923  0C00  0430               	iorwf	??___flmul,w
  8924  0C01  1903               	skipnz
  8925  0C02  2C04               	goto	u3941
  8926  0C03  2C05               	goto	u3940
  8927  0C04                     u3941:
  8928  0C04  2C08               	goto	l796
  8929  0C05                     u3940:
  8930  0C05                     l2732:
  8931  0C05  01BA               	clrf	___flmul@aexp
  8932  0C06  0ABA               	incf	___flmul@aexp,f
  8933  0C07  2C0D               	goto	l2736
  8934  0C08                     l796:
  8935  0C08  1C3C               	btfss	___flmul@prod,0
  8936  0C09  2C0B               	goto	u3951
  8937  0C0A  2C0C               	goto	u3950
  8938  0C0B                     u3951:
  8939  0C0B  2C0D               	goto	l2736
  8940  0C0C                     u3950:
  8941  0C0C  2C05               	goto	l2732
  8942  0C0D                     l2736:
  8943  0C0D  083A               	movf	___flmul@aexp,w
  8944  0C0E  1903               	btfsc	3,2
  8945  0C0F  2C11               	goto	u3961
  8946  0C10  2C12               	goto	u3960
  8947  0C11                     u3961:
  8948  0C11  2C43               	goto	l2746
  8949  0C12                     u3960:
  8950  0C12                     l2738:
  8951  0C12  3001               	movlw	1
  8952  0C13  07BC               	addwf	___flmul@prod,f
  8953  0C14  3000               	movlw	0
  8954  0C15  1803               	skipnc
  8955  0C16  3001               	movlw	1
  8956  0C17  07BD               	addwf	___flmul@prod+1,f
  8957  0C18  3000               	movlw	0
  8958  0C19  1803               	skipnc
  8959  0C1A  3001               	movlw	1
  8960  0C1B  07BE               	addwf	___flmul@prod+2,f
  8961  0C1C  3000               	movlw	0
  8962  0C1D  1803               	skipnc
  8963  0C1E  3001               	movlw	1
  8964  0C1F  07BF               	addwf	___flmul@prod+3,f
  8965  0C20                     l2740:
  8966  0C20  1C3F               	btfss	___flmul@prod+3,0
  8967  0C21  2C23               	goto	u3971
  8968  0C22  2C24               	goto	u3970
  8969  0C23                     u3971:
  8970  0C23  2C43               	goto	l2746
  8971  0C24                     u3970:
  8972  0C24                     l2742:
  8973  0C24  083C               	movf	___flmul@prod,w
  8974  0C25  00B0               	movwf	??___flmul
  8975  0C26  083D               	movf	___flmul@prod+1,w
  8976  0C27  00B1               	movwf	??___flmul+1
  8977  0C28  083E               	movf	___flmul@prod+2,w
  8978  0C29  00B2               	movwf	??___flmul+2
  8979  0C2A  083F               	movf	___flmul@prod+3,w
  8980  0C2B  00B3               	movwf	??___flmul+3
  8981  0C2C  3001               	movlw	1
  8982  0C2D  00B4               	movwf	??___flmul+4
  8983  0C2E                     u3985:
  8984  0C2E  0D33               	rlf	??___flmul+3,w
  8985  0C2F  0CB3               	rrf	??___flmul+3,f
  8986  0C30  0CB2               	rrf	??___flmul+2,f
  8987  0C31  0CB1               	rrf	??___flmul+1,f
  8988  0C32  0CB0               	rrf	??___flmul,f
  8989  0C33                     u3980:
  8990  0C33  0BB4               	decfsz	??___flmul+4,f
  8991  0C34  2C2E               	goto	u3985
  8992  0C35  0833               	movf	??___flmul+3,w
  8993  0C36  00BF               	movwf	___flmul@prod+3
  8994  0C37  0832               	movf	??___flmul+2,w
  8995  0C38  00BE               	movwf	___flmul@prod+2
  8996  0C39  0831               	movf	??___flmul+1,w
  8997  0C3A  00BD               	movwf	___flmul@prod+1
  8998  0C3B  0830               	movf	??___flmul,w
  8999  0C3C  00BC               	movwf	___flmul@prod
  9000  0C3D                     l2744:
  9001  0C3D  3001               	movlw	1
  9002  0C3E  07C0               	addwf	___flmul@temp,f
  9003  0C3F  1803               	skipnc
  9004  0C40  0AC1               	incf	___flmul@temp+1,f
  9005  0C41  3000               	movlw	0
  9006  0C42  07C1               	addwf	___flmul@temp+1,f
  9007  0C43                     l2746:
  9008  0C43  0841               	movf	___flmul@temp+1,w
  9009  0C44  3A80               	xorlw	128
  9010  0C45  00FF               	movwf	btemp+1
  9011  0C46  3080               	movlw	128
  9012  0C47  027F               	subwf	btemp+1,w
  9013  0C48  1D03               	skipz
  9014  0C49  2C4C               	goto	u3995
  9015  0C4A  30FF               	movlw	255
  9016  0C4B  0240               	subwf	___flmul@temp,w
  9017  0C4C                     u3995:
  9018  0C4C  1C03               	skipc
  9019  0C4D  2C4F               	goto	u3991
  9020  0C4E  2C50               	goto	u3990
  9021  0C4F                     u3991:
  9022  0C4F  2C5B               	goto	l2750
  9023  0C50                     u3990:
  9024  0C50                     l2748:
  9025  0C50  307F               	movlw	127
  9026  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  9027  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  9028  0C53  00BF               	movwf	___flmul@prod+3
  9029  0C54  3080               	movlw	128
  9030  0C55  00BE               	movwf	___flmul@prod+2
  9031  0C56  3000               	movlw	0
  9032  0C57  00BD               	movwf	___flmul@prod+1
  9033  0C58  3000               	movlw	0
  9034  0C59  00BC               	movwf	___flmul@prod
  9035  0C5A  2C90               	goto	l802
  9036  0C5B                     l2750:
  9037  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  9038  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  9039  0C5D  0841               	movf	___flmul@temp+1,w
  9040  0C5E  3A80               	xorlw	128
  9041  0C5F  00FF               	movwf	btemp+1
  9042  0C60  3080               	movlw	128
  9043  0C61  027F               	subwf	btemp+1,w
  9044  0C62  1D03               	skipz
  9045  0C63  2C66               	goto	u4005
  9046  0C64  3001               	movlw	1
  9047  0C65  0240               	subwf	___flmul@temp,w
  9048  0C66                     u4005:
  9049  0C66  1803               	skipnc
  9050  0C67  2C69               	goto	u4001
  9051  0C68  2C6A               	goto	u4000
  9052  0C69                     u4001:
  9053  0C69  2C76               	goto	l2756
  9054  0C6A                     u4000:
  9055  0C6A                     l2752:
  9056  0C6A  3000               	movlw	0
  9057  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9058  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9059  0C6D  00BF               	movwf	___flmul@prod+3
  9060  0C6E  3000               	movlw	0
  9061  0C6F  00BE               	movwf	___flmul@prod+2
  9062  0C70  3000               	movlw	0
  9063  0C71  00BD               	movwf	___flmul@prod+1
  9064  0C72  3000               	movlw	0
  9065  0C73  00BC               	movwf	___flmul@prod
  9066  0C74                     l2754:
  9067  0C74  01B5               	clrf	___flmul@sign
  9068  0C75  2C90               	goto	l802
  9069  0C76                     l2756:
  9070  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  9071  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  9072  0C78  0840               	movf	___flmul@temp,w
  9073  0C79  00B0               	movwf	??___flmul
  9074  0C7A  0830               	movf	??___flmul,w
  9075  0C7B  00BB               	movwf	___flmul@bexp
  9076  0C7C  30FF               	movlw	255
  9077  0C7D  05BC               	andwf	___flmul@prod,f
  9078  0C7E  30FF               	movlw	255
  9079  0C7F  05BD               	andwf	___flmul@prod+1,f
  9080  0C80  307F               	movlw	127
  9081  0C81  05BE               	andwf	___flmul@prod+2,f
  9082  0C82  3000               	movlw	0
  9083  0C83  05BF               	andwf	___flmul@prod+3,f
  9084  0C84                     l2758:
  9085  0C84  1C3B               	btfss	___flmul@bexp,0
  9086  0C85  2C87               	goto	u4011
  9087  0C86  2C88               	goto	u4010
  9088  0C87                     u4011:
  9089  0C87  2C89               	goto	l2762
  9090  0C88                     u4010:
  9091  0C88                     l2760:
  9092  0C88  17BE               	bsf	___flmul@prod+2,7
  9093  0C89                     l2762:
  9094  0C89  083B               	movf	___flmul@bexp,w
  9095  0C8A  00B0               	movwf	??___flmul
  9096  0C8B  1003               	clrc
  9097  0C8C  0C30               	rrf	??___flmul,w
  9098  0C8D  00B1               	movwf	??___flmul+1
  9099  0C8E  0831               	movf	??___flmul+1,w
  9100  0C8F  00BF               	movwf	___flmul@prod+3
  9101  0C90                     l802:
  9102  0C90  0835               	movf	___flmul@sign,w
  9103  0C91  00B0               	movwf	??___flmul
  9104  0C92  0830               	movf	??___flmul,w
  9105  0C93  04BF               	iorwf	___flmul@prod+3,f
  9106  0C94                     l2764:
  9107  0C94  083F               	movf	___flmul@prod+3,w
  9108  0C95  00AB               	movwf	?___flmul+3
  9109  0C96  083E               	movf	___flmul@prod+2,w
  9110  0C97  00AA               	movwf	?___flmul+2
  9111  0C98  083D               	movf	___flmul@prod+1,w
  9112  0C99  00A9               	movwf	?___flmul+1
  9113  0C9A  083C               	movf	___flmul@prod,w
  9114  0C9B  00A8               	movwf	?___flmul
  9115  0C9C                     l790:
  9116  0C9C  0008               	return
  9117  0C9D                     __end_of___flmul:
  9118                           
  9119                           	psect	text26
  9120  07CE                     __ptext26:	
  9121 ;; *************** function __Umul8_16 *****************
  9122 ;; Defined at:
  9123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  multiplier      1    wreg     unsigned char 
  9126 ;;  multiplicand    1    3[COMMON] unsigned char 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9129 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9130 ;;  product         2    0[BANK0 ] unsigned int 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  2    3[COMMON] unsigned int 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9140 ;;      Params:         2       0       0       0       0
  9141 ;;      Locals:         0       5       0       0       0
  9142 ;;      Temps:          2       0       0       0       0
  9143 ;;      Totals:         4       5       0       0       0
  9144 ;;Total ram usage:        9 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    1
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		___flmul
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function __Umul8_16
  9156  07CE                     __Umul8_16:
  9157                           
  9158                           ;incstack = 0
  9159                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9160                           ;__Umul8_16@multiplier stored from wreg
  9161  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  9162  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  9163  07D0  00A4               	movwf	__Umul8_16@multiplier
  9164  07D1                     l2288:
  9165  07D1  01A0               	clrf	__Umul8_16@product
  9166  07D2  01A1               	clrf	__Umul8_16@product+1
  9167  07D3                     l2290:
  9168  07D3  0873               	movf	__Umul8_16@multiplicand,w
  9169  07D4  00F5               	movwf	??__Umul8_16
  9170  07D5  01F6               	clrf	??__Umul8_16+1
  9171  07D6  0875               	movf	??__Umul8_16,w
  9172  07D7  00A2               	movwf	__Umul8_16@word_mpld
  9173  07D8  0876               	movf	??__Umul8_16+1,w
  9174  07D9  00A3               	movwf	__Umul8_16@word_mpld+1
  9175  07DA                     l2292:
  9176  07DA  1C24               	btfss	__Umul8_16@multiplier,0
  9177  07DB  2FDD               	goto	u2841
  9178  07DC  2FDE               	goto	u2840
  9179  07DD                     u2841:
  9180  07DD  2FE4               	goto	l809
  9181  07DE                     u2840:
  9182  07DE                     l2294:
  9183  07DE  0822               	movf	__Umul8_16@word_mpld,w
  9184  07DF  07A0               	addwf	__Umul8_16@product,f
  9185  07E0  1803               	skipnc
  9186  07E1  0AA1               	incf	__Umul8_16@product+1,f
  9187  07E2  0823               	movf	__Umul8_16@word_mpld+1,w
  9188  07E3  07A1               	addwf	__Umul8_16@product+1,f
  9189  07E4                     l809:
  9190  07E4  3001               	movlw	1
  9191  07E5                     u2855:
  9192  07E5  1003               	clrc
  9193  07E6  0DA2               	rlf	__Umul8_16@word_mpld,f
  9194  07E7  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9195  07E8  3EFF               	addlw	-1
  9196  07E9  1D03               	skipz
  9197  07EA  2FE5               	goto	u2855
  9198  07EB  1003               	clrc
  9199  07EC  0CA4               	rrf	__Umul8_16@multiplier,f
  9200  07ED                     l2296:
  9201  07ED  0824               	movf	__Umul8_16@multiplier,w
  9202  07EE  1D03               	btfss	3,2
  9203  07EF  2FF1               	goto	u2861
  9204  07F0  2FF2               	goto	u2860
  9205  07F1                     u2861:
  9206  07F1  2FDA               	goto	l2292
  9207  07F2                     u2860:
  9208  07F2                     l2298:
  9209  07F2  0821               	movf	__Umul8_16@product+1,w
  9210  07F3  00F4               	movwf	?__Umul8_16+1
  9211  07F4  0820               	movf	__Umul8_16@product,w
  9212  07F5  00F3               	movwf	?__Umul8_16
  9213  07F6                     l811:
  9214  07F6  0008               	return
  9215  07F7                     __end_of__Umul8_16:
  9216                           
  9217                           	psect	text27
  9218  1A86                     __ptext27:	
  9219 ;; *************** function _Lcd_Write_String *****************
  9220 ;; Defined at:
  9221 ;;		line 68 in file "LCD.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  a               2    6[COMMON] PTR unsigned char 
  9224 ;;		 -> v1(10), STR_1(16), 
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  i               2    0[BANK0 ] int 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      void 
  9229 ;; Registers used:
  9230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9236 ;;      Params:         2       0       0       0       0
  9237 ;;      Locals:         0       2       0       0       0
  9238 ;;      Temps:          3       0       0       0       0
  9239 ;;      Totals:         5       2       0       0       0
  9240 ;;Total ram usage:        7 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:    3
  9243 ;; This function calls:
  9244 ;;		_Lcd_Write_Char
  9245 ;; This function is called by:
  9246 ;;		_main
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           
  9251                           ;psect for function _Lcd_Write_String
  9252  1A86                     _Lcd_Write_String:
  9253  1A86                     l3246:	
  9254                           ;incstack = 0
  9255                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9256                           
  9257                           
  9258                           ;LCD.c: 69:     int i;;LCD.c: 70:     for (i = 0; a[i] != '\0'; i++)
  9259  1A86  1283               	bcf	3,5	;RP0=0, select bank0
  9260  1A87  1303               	bcf	3,6	;RP1=0, select bank0
  9261  1A88  01A0               	clrf	Lcd_Write_String@i
  9262  1A89  01A1               	clrf	Lcd_Write_String@i+1
  9263  1A8A  2AAF               	goto	l3252
  9264  1A8B                     l3248:
  9265                           
  9266                           ;LCD.c: 71:         Lcd_Write_Char(a[i]);
  9267  1A8B  0820               	movf	Lcd_Write_String@i,w
  9268  1A8C  0776               	addwf	Lcd_Write_String@a,w
  9269  1A8D  00F9               	movwf	??_Lcd_Write_String+1
  9270  1A8E  0877               	movf	Lcd_Write_String@a+1,w
  9271  1A8F  00F8               	movwf	??_Lcd_Write_String
  9272  1A90  1803               	skipnc
  9273  1A91  0AF8               	incf	??_Lcd_Write_String,f
  9274  1A92  1FA0               	btfss	Lcd_Write_String@i,7
  9275  1A93  2A95               	goto	u5100
  9276  1A94  03F8               	decf	??_Lcd_Write_String,f
  9277  1A95                     u5100:
  9278  1A95  0878               	movf	??_Lcd_Write_String,w
  9279  1A96  00FA               	movwf	??_Lcd_Write_String+2
  9280  1A97  087A               	movf	??_Lcd_Write_String+2,w
  9281  1A98  1283               	bcf	3,5	;RP0=0, select bank0
  9282  1A99  1303               	bcf	3,6	;RP1=0, select bank0
  9283  1A9A  00FF               	movwf	btemp+1
  9284  1A9B  0879               	movf	??_Lcd_Write_String+1,w
  9285  1A9C  0084               	movwf	4
  9286  1A9D  120A  158A  2000  160A  158A  	fcall	stringtab
  9287  1AA2  160A  158A  2146  160A  158A  	fcall	_Lcd_Write_Char
  9288  1AA7                     l3250:
  9289  1AA7  3001               	movlw	1
  9290  1AA8  1283               	bcf	3,5	;RP0=0, select bank0
  9291  1AA9  1303               	bcf	3,6	;RP1=0, select bank0
  9292  1AAA  07A0               	addwf	Lcd_Write_String@i,f
  9293  1AAB  1803               	skipnc
  9294  1AAC  0AA1               	incf	Lcd_Write_String@i+1,f
  9295  1AAD  3000               	movlw	0
  9296  1AAE  07A1               	addwf	Lcd_Write_String@i+1,f
  9297  1AAF                     l3252:
  9298  1AAF  0820               	movf	Lcd_Write_String@i,w
  9299  1AB0  0776               	addwf	Lcd_Write_String@a,w
  9300  1AB1  00F9               	movwf	??_Lcd_Write_String+1
  9301  1AB2  0877               	movf	Lcd_Write_String@a+1,w
  9302  1AB3  00F8               	movwf	??_Lcd_Write_String
  9303  1AB4  1803               	skipnc
  9304  1AB5  0AF8               	incf	??_Lcd_Write_String,f
  9305  1AB6  1FA0               	btfss	Lcd_Write_String@i,7
  9306  1AB7  2AB9               	goto	u5110
  9307  1AB8  03F8               	decf	??_Lcd_Write_String,f
  9308  1AB9                     u5110:
  9309  1AB9  0878               	movf	??_Lcd_Write_String,w
  9310  1ABA  00FA               	movwf	??_Lcd_Write_String+2
  9311  1ABB  087A               	movf	??_Lcd_Write_String+2,w
  9312  1ABC  1283               	bcf	3,5	;RP0=0, select bank0
  9313  1ABD  1303               	bcf	3,6	;RP1=0, select bank0
  9314  1ABE  00FF               	movwf	btemp+1
  9315  1ABF  0879               	movf	??_Lcd_Write_String+1,w
  9316  1AC0  0084               	movwf	4
  9317  1AC1  120A  158A  2000  160A  158A  	fcall	stringtab
  9318  1AC6  3A00               	xorlw	0
  9319  1AC7  1D03               	skipz
  9320  1AC8  2ACA               	goto	u5121
  9321  1AC9  2ACB               	goto	u5120
  9322  1ACA                     u5121:
  9323  1ACA  2A8B               	goto	l3248
  9324  1ACB                     u5120:
  9325  1ACB                     l150:
  9326  1ACB  0008               	return
  9327  1ACC                     __end_of_Lcd_Write_String:
  9328                           
  9329                           	psect	text28
  9330  1946                     __ptext28:	
  9331 ;; *************** function _Lcd_Write_Char *****************
  9332 ;; Defined at:
  9333 ;;		line 59 in file "LCD.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;  a               1    wreg     unsigned char 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  a               1    5[COMMON] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0, pclath, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9347 ;;      Params:         0       0       0       0       0
  9348 ;;      Locals:         1       0       0       0       0
  9349 ;;      Temps:          1       0       0       0       0
  9350 ;;      Totals:         2       0       0       0       0
  9351 ;;Total ram usage:        2 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    2
  9354 ;; This function calls:
  9355 ;;		_Lcd_Port
  9356 ;; This function is called by:
  9357 ;;		_Lcd_Write_String
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           
  9362                           ;psect for function _Lcd_Write_Char
  9363  1946                     _Lcd_Write_Char:
  9364                           
  9365                           ;incstack = 0
  9366                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9367                           ;Lcd_Write_Char@a stored from wreg
  9368  1946  00F5               	movwf	Lcd_Write_Char@a
  9369  1947                     l2778:
  9370                           
  9371                           ;LCD.c: 60:     PORTCbits.RC4 = 1;
  9372  1947  1283               	bcf	3,5	;RP0=0, select bank0
  9373  1948  1303               	bcf	3,6	;RP1=0, select bank0
  9374  1949  1607               	bsf	7,4	;volatile
  9375  194A                     l2780:
  9376                           
  9377                           ;LCD.c: 61:     Lcd_Port(a);
  9378  194A  0875               	movf	Lcd_Write_Char@a,w
  9379  194B  160A  118A  2002  160A  158A  	fcall	_Lcd_Port
  9380  1950                     l2782:
  9381                           
  9382                           ;LCD.c: 62:     PORTCbits.RC5 = 1;
  9383  1950  1283               	bcf	3,5	;RP0=0, select bank0
  9384  1951  1303               	bcf	3,6	;RP1=0, select bank0
  9385  1952  1687               	bsf	7,5	;volatile
  9386  1953                     l2784:
  9387                           
  9388                           ;LCD.c: 63:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9389  1953  301A               	movlw	26
  9390  1954  00F4               	movwf	??_Lcd_Write_Char
  9391  1955                     u6227:
  9392  1955  0BF4               	decfsz	??_Lcd_Write_Char,f
  9393  1956  2955               	goto	u6227
  9394  1957  0000               	nop
  9395  1958                     l2786:
  9396                           
  9397                           ;LCD.c: 64:     PORTCbits.RC5 = 0;
  9398  1958  1283               	bcf	3,5	;RP0=0, select bank0
  9399  1959  1303               	bcf	3,6	;RP1=0, select bank0
  9400  195A  1287               	bcf	7,5	;volatile
  9401  195B                     l2788:
  9402                           
  9403                           ;LCD.c: 65:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9404  195B  301A               	movlw	26
  9405  195C  00F4               	movwf	??_Lcd_Write_Char
  9406  195D                     u6237:
  9407  195D  0BF4               	decfsz	??_Lcd_Write_Char,f
  9408  195E  295D               	goto	u6237
  9409  195F  0000               	nop
  9410  1960                     l144:
  9411  1960  0008               	return
  9412  1961                     __end_of_Lcd_Write_Char:
  9413                           
  9414                           	psect	text29
  9415  1982                     __ptext29:	
  9416 ;; *************** function _Lcd_Set_Cursor *****************
  9417 ;; Defined at:
  9418 ;;		line 34 in file "LCD.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  a               1    wreg     unsigned char 
  9421 ;;  b               1    7[COMMON] unsigned char 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;  a               1    9[COMMON] unsigned char 
  9424 ;;  temp            1   10[COMMON] unsigned char 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0, pclath, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9434 ;;      Params:         1       0       0       0       0
  9435 ;;      Locals:         2       0       0       0       0
  9436 ;;      Temps:          1       0       0       0       0
  9437 ;;      Totals:         4       0       0       0       0
  9438 ;;Total ram usage:        4 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    3
  9441 ;; This function calls:
  9442 ;;		_Lcd_Cmd
  9443 ;; This function is called by:
  9444 ;;		_main
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           
  9449                           ;psect for function _Lcd_Set_Cursor
  9450  1982                     _Lcd_Set_Cursor:
  9451                           
  9452                           ;incstack = 0
  9453                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9454                           ;Lcd_Set_Cursor@a stored from wreg
  9455  1982  00F9               	movwf	Lcd_Set_Cursor@a
  9456  1983                     l3234:
  9457                           
  9458                           ;LCD.c: 35:     char temp;;LCD.c: 36:     if (a == 1) {
  9459  1983  0379               	decf	Lcd_Set_Cursor@a,w
  9460  1984  1D03               	btfss	3,2
  9461  1985  2987               	goto	u5081
  9462  1986  2988               	goto	u5080
  9463  1987                     u5081:
  9464  1987  2994               	goto	l3240
  9465  1988                     u5080:
  9466  1988                     l3236:
  9467                           
  9468                           ;LCD.c: 37:         temp = 0x80 + b - 1;
  9469  1988  0877               	movf	Lcd_Set_Cursor@b,w
  9470  1989  3E7F               	addlw	127
  9471  198A  00F8               	movwf	??_Lcd_Set_Cursor
  9472  198B  0878               	movf	??_Lcd_Set_Cursor,w
  9473  198C  00FA               	movwf	Lcd_Set_Cursor@temp
  9474  198D                     l3238:
  9475                           
  9476                           ;LCD.c: 38:         Lcd_Cmd(temp);
  9477  198D  087A               	movf	Lcd_Set_Cursor@temp,w
  9478  198E  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9479                           
  9480                           ;LCD.c: 39:     } else if (a == 2) {
  9481  1993  29A5               	goto	l138
  9482  1994                     l3240:
  9483  1994  3002               	movlw	2
  9484  1995  0679               	xorwf	Lcd_Set_Cursor@a,w
  9485  1996  1D03               	btfss	3,2
  9486  1997  2999               	goto	u5091
  9487  1998  299A               	goto	u5090
  9488  1999                     u5091:
  9489  1999  29A5               	goto	l138
  9490  199A                     u5090:
  9491  199A                     l3242:
  9492                           
  9493                           ;LCD.c: 40:         temp = 0xC0 + b - 1;
  9494  199A  0877               	movf	Lcd_Set_Cursor@b,w
  9495  199B  3EBF               	addlw	191
  9496  199C  00F8               	movwf	??_Lcd_Set_Cursor
  9497  199D  0878               	movf	??_Lcd_Set_Cursor,w
  9498  199E  00FA               	movwf	Lcd_Set_Cursor@temp
  9499  199F                     l3244:
  9500                           
  9501                           ;LCD.c: 41:         Lcd_Cmd(temp);
  9502  199F  087A               	movf	Lcd_Set_Cursor@temp,w
  9503  19A0  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9504  19A5                     l138:
  9505  19A5  0008               	return
  9506  19A6                     __end_of_Lcd_Set_Cursor:
  9507                           
  9508                           	psect	text30
  9509  1A45                     __ptext30:	
  9510 ;; *************** function _Lcd_Init *****************
  9511 ;; Defined at:
  9512 ;;		line 45 in file "LCD.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0, pclath, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9526 ;;      Params:         0       0       0       0       0
  9527 ;;      Locals:         0       0       0       0       0
  9528 ;;      Temps:          2       0       0       0       0
  9529 ;;      Totals:         2       0       0       0       0
  9530 ;;Total ram usage:        2 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    3
  9533 ;; This function calls:
  9534 ;;		_Lcd_Cmd
  9535 ;;		_Lcd_Port
  9536 ;; This function is called by:
  9537 ;;		_main
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           
  9542                           ;psect for function _Lcd_Init
  9543  1A45                     _Lcd_Init:
  9544  1A45                     l3222:	
  9545                           ;incstack = 0
  9546                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9547                           
  9548                           
  9549                           ;LCD.c: 46:     Lcd_Port(0x00);
  9550  1A45  3000               	movlw	0
  9551  1A46  160A  118A  2002  160A  158A  	fcall	_Lcd_Port
  9552  1A4B                     l3224:
  9553                           
  9554                           ;LCD.c: 47:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9555  1A4B  3034               	movlw	52
  9556  1A4C  00F8               	movwf	??_Lcd_Init+1
  9557  1A4D  30F1               	movlw	241
  9558  1A4E  00F7               	movwf	??_Lcd_Init
  9559  1A4F                     u6247:
  9560  1A4F  0BF7               	decfsz	??_Lcd_Init,f
  9561  1A50  2A4F               	goto	u6247
  9562  1A51  0BF8               	decfsz	??_Lcd_Init+1,f
  9563  1A52  2A4F               	goto	u6247
  9564  1A53  2A54               	nop2
  9565  1A54                     l3226:
  9566                           
  9567                           ;LCD.c: 48:     Lcd_Cmd(0x3F);
  9568  1A54  303F               	movlw	63
  9569  1A55  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9570                           
  9571                           ;LCD.c: 49:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9572  1A5A  301A               	movlw	26
  9573  1A5B  00F8               	movwf	??_Lcd_Init+1
  9574  1A5C  30F8               	movlw	248
  9575  1A5D  00F7               	movwf	??_Lcd_Init
  9576  1A5E                     u6257:
  9577  1A5E  0BF7               	decfsz	??_Lcd_Init,f
  9578  1A5F  2A5E               	goto	u6257
  9579  1A60  0BF8               	decfsz	??_Lcd_Init+1,f
  9580  1A61  2A5E               	goto	u6257
  9581  1A62  0000               	nop
  9582  1A63                     l3228:
  9583                           
  9584                           ;LCD.c: 50:     Lcd_Cmd(0x3F);
  9585  1A63  303F               	movlw	63
  9586  1A64  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9587  1A69                     l3230:
  9588                           
  9589                           ;LCD.c: 51:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9590  1A69  3085               	movlw	133
  9591  1A6A  00F7               	movwf	??_Lcd_Init
  9592  1A6B                     u6267:
  9593  1A6B  0BF7               	decfsz	??_Lcd_Init,f
  9594  1A6C  2A6B               	goto	u6267
  9595                           
  9596                           ;LCD.c: 52:     Lcd_Cmd(0x3F);
  9597  1A6D  303F               	movlw	63
  9598  1A6E  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9599                           
  9600                           ;LCD.c: 54:     Lcd_Cmd(0x38);
  9601  1A73  3038               	movlw	56
  9602  1A74  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9603                           
  9604                           ;LCD.c: 55:     Lcd_Cmd(0x0C);
  9605  1A79  300C               	movlw	12
  9606  1A7A  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9607                           
  9608                           ;LCD.c: 56:     Lcd_Cmd(0x06);
  9609  1A7F  3006               	movlw	6
  9610  1A80  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9611  1A85                     l141:
  9612  1A85  0008               	return
  9613  1A86                     __end_of_Lcd_Init:
  9614                           
  9615                           	psect	text31
  9616  18FC                     __ptext31:	
  9617 ;; *************** function _Lcd_Clear *****************
  9618 ;; Defined at:
  9619 ;;		line 29 in file "LCD.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, status,2, status,0, pclath, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9633 ;;      Params:         0       0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0
  9636 ;;      Totals:         0       0       0       0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    3
  9640 ;; This function calls:
  9641 ;;		_Lcd_Cmd
  9642 ;; This function is called by:
  9643 ;;		_main
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function _Lcd_Clear
  9649  18FC                     _Lcd_Clear:
  9650  18FC                     l3232:	
  9651                           ;incstack = 0
  9652                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9653                           
  9654                           
  9655                           ;LCD.c: 30:     Lcd_Cmd(0);
  9656  18FC  3000               	movlw	0
  9657  18FD  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9658                           
  9659                           ;LCD.c: 31:     Lcd_Cmd(1);
  9660  1902  3001               	movlw	1
  9661  1903  160A  158A  212C  160A  158A  	fcall	_Lcd_Cmd
  9662  1908                     l132:
  9663  1908  0008               	return
  9664  1909                     __end_of_Lcd_Clear:
  9665                           
  9666                           	psect	text32
  9667  192C                     __ptext32:	
  9668 ;; *************** function _Lcd_Cmd *****************
  9669 ;; Defined at:
  9670 ;;		line 21 in file "LCD.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  a               1    wreg     unsigned char 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  a               1    6[COMMON] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0, pclath, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9684 ;;      Params:         0       0       0       0       0
  9685 ;;      Locals:         1       0       0       0       0
  9686 ;;      Temps:          2       0       0       0       0
  9687 ;;      Totals:         3       0       0       0       0
  9688 ;;Total ram usage:        3 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; Hardware stack levels required when called:    2
  9691 ;; This function calls:
  9692 ;;		_Lcd_Port
  9693 ;; This function is called by:
  9694 ;;		_Lcd_Clear
  9695 ;;		_Lcd_Set_Cursor
  9696 ;;		_Lcd_Init
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           
  9701                           ;psect for function _Lcd_Cmd
  9702  192C                     _Lcd_Cmd:
  9703                           
  9704                           ;incstack = 0
  9705                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9706                           ;Lcd_Cmd@a stored from wreg
  9707  192C  00F6               	movwf	Lcd_Cmd@a
  9708  192D                     l2768:
  9709                           
  9710                           ;LCD.c: 22:     PORTCbits.RC4 = 0;
  9711  192D  1283               	bcf	3,5	;RP0=0, select bank0
  9712  192E  1303               	bcf	3,6	;RP1=0, select bank0
  9713  192F  1207               	bcf	7,4	;volatile
  9714  1930                     l2770:
  9715                           
  9716                           ;LCD.c: 23:     Lcd_Port(a);
  9717  1930  0876               	movf	Lcd_Cmd@a,w
  9718  1931  160A  118A  2002  160A  158A  	fcall	_Lcd_Port
  9719  1936                     l2772:
  9720                           
  9721                           ;LCD.c: 24:     PORTCbits.RC5 = 1;
  9722  1936  1283               	bcf	3,5	;RP0=0, select bank0
  9723  1937  1303               	bcf	3,6	;RP1=0, select bank0
  9724  1938  1687               	bsf	7,5	;volatile
  9725  1939                     l2774:
  9726                           
  9727                           ;LCD.c: 25:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9728  1939  300B               	movlw	11
  9729  193A  00F5               	movwf	??_Lcd_Cmd+1
  9730  193B  3062               	movlw	98
  9731  193C  00F4               	movwf	??_Lcd_Cmd
  9732  193D                     u6277:
  9733  193D  0BF4               	decfsz	??_Lcd_Cmd,f
  9734  193E  293D               	goto	u6277
  9735  193F  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9736  1940  293D               	goto	u6277
  9737  1941  0000               	nop
  9738  1942                     l2776:
  9739                           
  9740                           ;LCD.c: 26:     PORTCbits.RC5 = 0;
  9741  1942  1283               	bcf	3,5	;RP0=0, select bank0
  9742  1943  1303               	bcf	3,6	;RP1=0, select bank0
  9743  1944  1287               	bcf	7,5	;volatile
  9744  1945                     l129:
  9745  1945  0008               	return
  9746  1946                     __end_of_Lcd_Cmd:
  9747                           
  9748                           	psect	text33
  9749  1002                     __ptext33:	
  9750 ;; *************** function _Lcd_Port *****************
  9751 ;; Defined at:
  9752 ;;		line 17 in file "LCD.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  a               1    wreg     unsigned char 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  a               1    3[COMMON] unsigned char 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  1    wreg      void 
  9759 ;; Registers used:
  9760 ;;		wreg
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9766 ;;      Params:         0       0       0       0       0
  9767 ;;      Locals:         1       0       0       0       0
  9768 ;;      Temps:          0       0       0       0       0
  9769 ;;      Totals:         1       0       0       0       0
  9770 ;;Total ram usage:        1 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    1
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_Lcd_Cmd
  9777 ;;		_Lcd_Init
  9778 ;;		_Lcd_Write_Char
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           
  9783                           ;psect for function _Lcd_Port
  9784  1002                     _Lcd_Port:
  9785                           
  9786                           ;incstack = 0
  9787                           ; Regs used in _Lcd_Port: [wreg]
  9788                           ;Lcd_Port@a stored from wreg
  9789  1002  00F3               	movwf	Lcd_Port@a
  9790  1003                     l2302:
  9791                           
  9792                           ;LCD.c: 18:     PORTD = a;
  9793  1003  0873               	movf	Lcd_Port@a,w
  9794  1004  1283               	bcf	3,5	;RP0=0, select bank0
  9795  1005  1303               	bcf	3,6	;RP1=0, select bank0
  9796  1006  0088               	movwf	8	;volatile
  9797  1007                     l126:
  9798  1007  0008               	return
  9799  1008                     __end_of_Lcd_Port:
  9800                           
  9801                           	psect	text34
  9802  08DB                     __ptext34:	
  9803 ;; *************** function _ADC *****************
  9804 ;; Defined at:
  9805 ;;		line 16 in file "ADC.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  a               1    wreg     unsigned char 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  a               1    4[COMMON] unsigned char 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      unsigned char 
  9812 ;; Registers used:
  9813 ;;		wreg
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9819 ;;      Params:         0       0       0       0       0
  9820 ;;      Locals:         1       0       0       0       0
  9821 ;;      Temps:          1       0       0       0       0
  9822 ;;      Totals:         2       0       0       0       0
  9823 ;;Total ram usage:        2 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    1
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_main
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           
  9834                           ;psect for function _ADC
  9835  08DB                     _ADC:
  9836  08DB                     l3532:	
  9837                           ;incstack = 0
  9838                           ; Regs used in _ADC: [wreg]
  9839                           
  9840                           
  9841                           ;ADC.c: 17:     a = ADRESH;
  9842  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  9843  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  9844  08DD  081E               	movf	30,w	;volatile
  9845  08DE  00F3               	movwf	??_ADC
  9846  08DF  0873               	movf	??_ADC,w
  9847  08E0  00F4               	movwf	ADC@a
  9848                           
  9849                           ;ADC.c: 18:     return a;
  9850  08E1  0874               	movf	ADC@a,w
  9851  08E2                     l155:
  9852  08E2  0008               	return
  9853  08E3                     __end_of_ADC:
  9854                           
  9855                           	psect	text35
  9856  1909                     __ptext35:	
  9857 ;; *************** function _Interrupciones *****************
  9858 ;; Defined at:
  9859 ;;		line 62 in file "main.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9873 ;;      Params:         0       0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0
  9875 ;;      Temps:          3       0       0       0       0
  9876 ;;      Totals:         3       0       0       0       0
  9877 ;;Total ram usage:        3 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; This function calls:
  9880 ;;		Nothing
  9881 ;; This function is called by:
  9882 ;;		Interrupt level 1
  9883 ;; This function uses a non-reentrant model
  9884 ;;
  9885                           
  9886                           
  9887                           ;psect for function _Interrupciones
  9888  1909                     _Interrupciones:
  9889  1909                     i1l3536:
  9890                           
  9891                           ;main.c: 63:         if(dato == '+'){
  9892  1909  1283               	bcf	3,5	;RP0=0, select bank0
  9893  190A  1303               	bcf	3,6	;RP1=0, select bank0
  9894  190B  1E8C               	btfss	12,5	;volatile
  9895  190C  290E               	goto	u561_21
  9896  190D  290F               	goto	u561_20
  9897  190E                     u561_21:
  9898  190E  2913               	goto	i1l96
  9899  190F                     u561_20:
  9900  190F                     i1l3538:
  9901                           
  9902                           ;main.c: 64:             c++;
  9903  190F  081A               	movf	26,w	;volatile
  9904  1910  00F0               	movwf	??_Interrupciones
  9905  1911  0870               	movf	??_Interrupciones,w
  9906  1912  00EF               	movwf	_dato
  9907  1913                     i1l96:
  9908  1913  0872               	movf	??_Interrupciones+2,w
  9909  1914  008A               	movwf	10
  9910  1915  0E71               	swapf	??_Interrupciones+1,w
  9911  1916  0083               	movwf	3
  9912  1917  0EFE               	swapf	btemp,f
  9913  1918  0E7E               	swapf	btemp,w
  9914  1919  0009               	retfie
  9915  191A                     __end_of_Interrupciones:
  9916  007E                     btemp	set	126	;btemp
  9917  007E                     wtemp0	set	126
  9918                           
  9919                           	psect	intentry
  9920  0004                     __pintentry:	
  9921                           ;incstack = 0
  9922                           ; Regs used in _Interrupciones: [wreg]
  9923                           
  9924  0004                     interrupt_function:
  9925  007E                     saved_w	set	btemp
  9926  0004  00FE               	movwf	btemp
  9927  0005  0E03               	swapf	3,w
  9928  0006  00F1               	movwf	??_Interrupciones+1
  9929  0007  080A               	movf	10,w
  9930  0008  00F2               	movwf	??_Interrupciones+2
  9931  0009  160A  158A  2909   	ljmp	_Interrupciones
  9932                           
  9933                           	psect	config
  9934                           
  9935                           ;Config register CONFIG1 @ 0x2007
  9936                           ;	Oscillator Selection bits
  9937                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9938                           ;	Watchdog Timer Enable bit
  9939                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9940                           ;	Power-up Timer Enable bit
  9941                           ;	PWRTE = OFF, PWRT disabled
  9942                           ;	RE3/MCLR pin function select bit
  9943                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9944                           ;	Code Protection bit
  9945                           ;	CP = OFF, Program memory code protection is disabled
  9946                           ;	Data Code Protection bit
  9947                           ;	CPD = OFF, Data memory code protection is disabled
  9948                           ;	Brown Out Reset Selection bits
  9949                           ;	BOREN = OFF, BOR disabled
  9950                           ;	Internal External Switchover bit
  9951                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9952                           ;	Fail-Safe Clock Monitor Enabled bit
  9953                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9954                           ;	Low Voltage Programming Enable bit
  9955                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  9956                           ;	In-Circuit Debugger Mode bit
  9957                           ;	DEBUG = 0x1, unprogrammed default
  9958  2007                     	org	8199
  9959  2007  30D5               	dw	12501
  9960                           
  9961                           ;Config register CONFIG2 @ 0x2008
  9962                           ;	Brown-out Reset Selection bit
  9963                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9964                           ;	Flash Program Memory Self Write Enable bits
  9965                           ;	WRT = OFF, Write protection off
  9966  2008                     	org	8200
  9967  2008  3FFF               	dw	16383
  9968                           
  9969                           	psect	text1_split_1
  9970  0028                     u5800:
  9971  0028                     l3716:
  9972  0028  1683               	bsf	3,5	;RP0=1, select bank1
  9973  0029  1303               	bcf	3,6	;RP1=0, select bank1
  9974  002A  0845               	movf	(sprintf@fval+3)^(0+128),w
  9975  002B  00F6               	movwf	___fleq@ff1+3
  9976  002C  0844               	movf	(sprintf@fval+2)^(0+128),w
  9977  002D  00F5               	movwf	___fleq@ff1+2
  9978  002E  0843               	movf	(sprintf@fval+1)^(0+128),w
  9979  002F  00F4               	movwf	___fleq@ff1+1
  9980  0030  0842               	movf	sprintf@fval^(0+128),w
  9981  0031  00F3               	movwf	___fleq@ff1
  9982  0032  3000               	movlw	0
  9983  0033  00FA               	movwf	___fleq@ff2+3
  9984  0034  3000               	movlw	0
  9985  0035  00F9               	movwf	___fleq@ff2+2
  9986  0036  3000               	movlw	0
  9987  0037  00F8               	movwf	___fleq@ff2+1
  9988  0038  3000               	movlw	0
  9989  0039  00F7               	movwf	___fleq@ff2
  9990  003A  160A  158A  235E  120A  118A  	fcall	___fleq
  9991  003F  1803               	btfsc	3,0
  9992  0040  2842               	goto	u5811
  9993  0041  2843               	goto	u5810
  9994  0042                     u5811:
  9995  0042  28EB               	goto	l3736
  9996  0043                     u5810:
  9997  0043                     l3718:
  9998  0043  1683               	bsf	3,5	;RP0=1, select bank1
  9999  0044  1303               	bcf	3,6	;RP1=0, select bank1
 10000  0045  0845               	movf	(sprintf@fval+3)^(0+128),w
 10001  0046  1283               	bcf	3,5	;RP0=0, select bank0
 10002  0047  1303               	bcf	3,6	;RP1=0, select bank0
 10003  0048  00D8               	movwf	___fltol@f1+3
 10004  0049  1683               	bsf	3,5	;RP0=1, select bank1
 10005  004A  1303               	bcf	3,6	;RP1=0, select bank1
 10006  004B  0844               	movf	(sprintf@fval+2)^(0+128),w
 10007  004C  1283               	bcf	3,5	;RP0=0, select bank0
 10008  004D  1303               	bcf	3,6	;RP1=0, select bank0
 10009  004E  00D7               	movwf	___fltol@f1+2
 10010  004F  1683               	bsf	3,5	;RP0=1, select bank1
 10011  0050  1303               	bcf	3,6	;RP1=0, select bank1
 10012  0051  0843               	movf	(sprintf@fval+1)^(0+128),w
 10013  0052  1283               	bcf	3,5	;RP0=0, select bank0
 10014  0053  1303               	bcf	3,6	;RP1=0, select bank0
 10015  0054  00D6               	movwf	___fltol@f1+1
 10016  0055  1683               	bsf	3,5	;RP0=1, select bank1
 10017  0056  1303               	bcf	3,6	;RP1=0, select bank1
 10018  0057  0842               	movf	sprintf@fval^(0+128),w
 10019  0058  1283               	bcf	3,5	;RP0=0, select bank0
 10020  0059  1303               	bcf	3,6	;RP1=0, select bank0
 10021  005A  00D5               	movwf	___fltol@f1
 10022  005B  160A  118A  2008  120A  118A  	fcall	___fltol
 10023  0060  1283               	bcf	3,5	;RP0=0, select bank0
 10024  0061  1303               	bcf	3,6	;RP1=0, select bank0
 10025  0062  0858               	movf	?___fltol+3,w
 10026  0063  0457               	iorwf	?___fltol+2,w
 10027  0064  0456               	iorwf	?___fltol+1,w
 10028  0065  0455               	iorwf	?___fltol,w
 10029  0066  1D03               	skipz
 10030  0067  2869               	goto	u5821
 10031  0068  286A               	goto	u5820
 10032  0069                     u5821:
 10033  0069  28EB               	goto	l3736
 10034  006A                     u5820:
 10035  006A                     l3720:
 10036  006A  1683               	bsf	3,5	;RP0=1, select bank1
 10037  006B  1303               	bcf	3,6	;RP1=0, select bank1
 10038  006C  0841               	movf	(sprintf@eexp+1)^(0+128),w
 10039  006D  3A80               	xorlw	128
 10040  006E  00FF               	movwf	btemp+1
 10041  006F  3080               	movlw	128
 10042  0070  027F               	subwf	btemp+1,w
 10043  0071  1D03               	skipz
 10044  0072  2875               	goto	u5835
 10045  0073  3002               	movlw	2
 10046  0074  0240               	subwf	sprintf@eexp^(0+128),w
 10047  0075                     u5835:
 10048  0075  1C03               	skipc
 10049  0076  2878               	goto	u5831
 10050  0077  2879               	goto	u5830
 10051  0078                     u5831:
 10052  0078  28EB               	goto	l3736
 10053  0079                     u5830:
 10054  0079                     l3722:
 10055                           
 10056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10057  0079  1683               	bsf	3,5	;RP0=1, select bank1
 10058  007A  1303               	bcf	3,6	;RP1=0, select bank1
 10059  007B  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10060  007C  00F6               	movwf	___flge@ff1+3
 10061  007D  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10062  007E  00F5               	movwf	___flge@ff1+2
 10063  007F  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10064  0080  00F4               	movwf	___flge@ff1+1
 10065  0081  083C               	movf	sprintf@tmpval^(0+128),w
 10066  0082  00F3               	movwf	___flge@ff1
 10067  0083  3040               	movlw	64
 10068  0084  00FA               	movwf	___flge@ff2+3
 10069  0085  3089               	movlw	137
 10070  0086  00F9               	movwf	___flge@ff2+2
 10071  0087  3070               	movlw	112
 10072  0088  00F8               	movwf	___flge@ff2+1
 10073  0089  305F               	movlw	95
 10074  008A  00F7               	movwf	___flge@ff2
 10075  008B  160A  158A  2525  120A  118A  	fcall	___flge
 10076  0090  1803               	btfsc	3,0
 10077  0091  2893               	goto	u5841
 10078  0092  2894               	goto	u5840
 10079  0093                     u5841:
 10080  0093  289D               	goto	l3726
 10081  0094                     u5840:
 10082  0094                     l3724:
 10083                           
 10084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10085  0094  30F7               	movlw	247
 10086  0095  1683               	bsf	3,5	;RP0=1, select bank1
 10087  0096  1303               	bcf	3,6	;RP1=0, select bank1
 10088  0097  07C0               	addwf	sprintf@eexp^(0+128),f
 10089  0098  1803               	skipnc
 10090  0099  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
 10091  009A  30FF               	movlw	255
 10092  009B  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
 10093                           
 10094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10095  009C  28A5               	goto	l3728
 10096  009D                     l3726:
 10097                           
 10098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10099  009D  30F8               	movlw	248
 10100  009E  1683               	bsf	3,5	;RP0=1, select bank1
 10101  009F  1303               	bcf	3,6	;RP1=0, select bank1
 10102  00A0  07C0               	addwf	sprintf@eexp^(0+128),f
 10103  00A1  1803               	skipnc
 10104  00A2  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
 10105  00A3  30FF               	movlw	255
 10106  00A4  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
 10107  00A5                     l3728:
 10108                           
 10109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10110  00A5  0840               	movf	sprintf@eexp^(0+128),w
 10111  00A6  120A  158A  249D  120A  118A  	fcall	_scale
 10112  00AB  1283               	bcf	3,5	;RP0=0, select bank0
 10113  00AC  1303               	bcf	3,6	;RP1=0, select bank0
 10114  00AD  0845               	movf	?_scale+3,w
 10115  00AE  1683               	bsf	3,5	;RP0=1, select bank1
 10116  00AF  1303               	bcf	3,6	;RP1=0, select bank1
 10117  00B0  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10118  00B1  1283               	bcf	3,5	;RP0=0, select bank0
 10119  00B2  1303               	bcf	3,6	;RP1=0, select bank0
 10120  00B3  0844               	movf	?_scale+2,w
 10121  00B4  1683               	bsf	3,5	;RP0=1, select bank1
 10122  00B5  1303               	bcf	3,6	;RP1=0, select bank1
 10123  00B6  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10124  00B7  1283               	bcf	3,5	;RP0=0, select bank0
 10125  00B8  1303               	bcf	3,6	;RP1=0, select bank0
 10126  00B9  0843               	movf	?_scale+1,w
 10127  00BA  1683               	bsf	3,5	;RP0=1, select bank1
 10128  00BB  1303               	bcf	3,6	;RP1=0, select bank1
 10129  00BC  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10130  00BD  1283               	bcf	3,5	;RP0=0, select bank0
 10131  00BE  1303               	bcf	3,6	;RP1=0, select bank0
 10132  00BF  0842               	movf	?_scale,w
 10133  00C0  1683               	bsf	3,5	;RP0=1, select bank1
 10134  00C1  1303               	bcf	3,6	;RP1=0, select bank1
 10135  00C2  00BC               	movwf	sprintf@tmpval^(0+128)
 10136  00C3                     l3730:
 10137  00C3  0845               	movf	(sprintf@fval+3)^(0+128),w
 10138  00C4  00F6               	movwf	__div_to_l_@f1+3
 10139  00C5  0844               	movf	(sprintf@fval+2)^(0+128),w
 10140  00C6  00F5               	movwf	__div_to_l_@f1+2
 10141  00C7  0843               	movf	(sprintf@fval+1)^(0+128),w
 10142  00C8  00F4               	movwf	__div_to_l_@f1+1
 10143  00C9  0842               	movf	sprintf@fval^(0+128),w
 10144  00CA  00F3               	movwf	__div_to_l_@f1
 10145  00CB  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10146  00CC  00FA               	movwf	__div_to_l_@f2+3
 10147  00CD  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10148  00CE  00F9               	movwf	__div_to_l_@f2+2
 10149  00CF  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10150  00D0  00F8               	movwf	__div_to_l_@f2+1
 10151  00D1  083C               	movf	sprintf@tmpval^(0+128),w
 10152  00D2  00F7               	movwf	__div_to_l_@f2
 10153  00D3  160A  158A  2742  120A  118A  	fcall	__div_to_l_
 10154  00D8  0876               	movf	?__div_to_l_+3,w
 10155  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 10156  00DA  1303               	bcf	3,6	;RP1=0, select bank1
 10157  00DB  00B7               	movwf	(sprintf@val+3)^(0+128)
 10158  00DC  0875               	movf	?__div_to_l_+2,w
 10159  00DD  00B6               	movwf	(sprintf@val+2)^(0+128)
 10160  00DE  0874               	movf	?__div_to_l_+1,w
 10161  00DF  00B5               	movwf	(sprintf@val+1)^(0+128)
 10162  00E0  0873               	movf	?__div_to_l_,w
 10163  00E1  00B4               	movwf	sprintf@val^(0+128)
 10164  00E2                     l3734:
 10165                           
 10166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10167  00E2  3000               	movlw	0
 10168  00E3  00C5               	movwf	(sprintf@fval+3)^(0+128)
 10169  00E4  3000               	movlw	0
 10170  00E5  00C4               	movwf	(sprintf@fval+2)^(0+128)
 10171  00E6  3000               	movlw	0
 10172  00E7  00C3               	movwf	(sprintf@fval+1)^(0+128)
 10173  00E8  3000               	movlw	0
 10174  00E9  00C2               	movwf	sprintf@fval^(0+128)
 10175                           
 10176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10177  00EA  2951               	goto	l3742
 10178  00EB                     l3736:
 10179                           
 10180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10181  00EB  1683               	bsf	3,5	;RP0=1, select bank1
 10182  00EC  1303               	bcf	3,6	;RP1=0, select bank1
 10183  00ED  0845               	movf	(sprintf@fval+3)^(0+128),w
 10184  00EE  1283               	bcf	3,5	;RP0=0, select bank0
 10185  00EF  1303               	bcf	3,6	;RP1=0, select bank0
 10186  00F0  00D8               	movwf	___fltol@f1+3
 10187  00F1  1683               	bsf	3,5	;RP0=1, select bank1
 10188  00F2  1303               	bcf	3,6	;RP1=0, select bank1
 10189  00F3  0844               	movf	(sprintf@fval+2)^(0+128),w
 10190  00F4  1283               	bcf	3,5	;RP0=0, select bank0
 10191  00F5  1303               	bcf	3,6	;RP1=0, select bank0
 10192  00F6  00D7               	movwf	___fltol@f1+2
 10193  00F7  1683               	bsf	3,5	;RP0=1, select bank1
 10194  00F8  1303               	bcf	3,6	;RP1=0, select bank1
 10195  00F9  0843               	movf	(sprintf@fval+1)^(0+128),w
 10196  00FA  1283               	bcf	3,5	;RP0=0, select bank0
 10197  00FB  1303               	bcf	3,6	;RP1=0, select bank0
 10198  00FC  00D6               	movwf	___fltol@f1+1
 10199  00FD  1683               	bsf	3,5	;RP0=1, select bank1
 10200  00FE  1303               	bcf	3,6	;RP1=0, select bank1
 10201  00FF  0842               	movf	sprintf@fval^(0+128),w
 10202  0100  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0101  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0102  00D5               	movwf	___fltol@f1
 10205  0103  160A  118A  2008  120A  118A  	fcall	___fltol
 10206  0108  1283               	bcf	3,5	;RP0=0, select bank0
 10207  0109  1303               	bcf	3,6	;RP1=0, select bank0
 10208  010A  0858               	movf	?___fltol+3,w
 10209  010B  1683               	bsf	3,5	;RP0=1, select bank1
 10210  010C  1303               	bcf	3,6	;RP1=0, select bank1
 10211  010D  00B7               	movwf	(sprintf@val+3)^(0+128)
 10212  010E  1283               	bcf	3,5	;RP0=0, select bank0
 10213  010F  1303               	bcf	3,6	;RP1=0, select bank0
 10214  0110  0857               	movf	?___fltol+2,w
 10215  0111  1683               	bsf	3,5	;RP0=1, select bank1
 10216  0112  1303               	bcf	3,6	;RP1=0, select bank1
 10217  0113  00B6               	movwf	(sprintf@val+2)^(0+128)
 10218  0114  1283               	bcf	3,5	;RP0=0, select bank0
 10219  0115  1303               	bcf	3,6	;RP1=0, select bank0
 10220  0116  0856               	movf	?___fltol+1,w
 10221  0117  1683               	bsf	3,5	;RP0=1, select bank1
 10222  0118  1303               	bcf	3,6	;RP1=0, select bank1
 10223  0119  00B5               	movwf	(sprintf@val+1)^(0+128)
 10224  011A  1283               	bcf	3,5	;RP0=0, select bank0
 10225  011B  1303               	bcf	3,6	;RP1=0, select bank0
 10226  011C  0855               	movf	?___fltol,w
 10227  011D  1683               	bsf	3,5	;RP0=1, select bank1
 10228  011E  1303               	bcf	3,6	;RP1=0, select bank1
 10229  011F  00B4               	movwf	sprintf@val^(0+128)
 10230  0120                     l3738:
 10231                           
 10232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10233  0120  0837               	movf	(sprintf@val+3)^(0+128),w
 10234  0121  00F6               	movwf	___xxtofl@val+3
 10235  0122  0836               	movf	(sprintf@val+2)^(0+128),w
 10236  0123  00F5               	movwf	___xxtofl@val+2
 10237  0124  0835               	movf	(sprintf@val+1)^(0+128),w
 10238  0125  00F4               	movwf	___xxtofl@val+1
 10239  0126  0834               	movf	sprintf@val^(0+128),w
 10240  0127  00F3               	movwf	___xxtofl@val
 10241  0128  3000               	movlw	0
 10242  0129  160A  158A  25C9  120A  118A  	fcall	___xxtofl
 10243  012E  0876               	movf	?___xxtofl+3,w
 10244  012F  1683               	bsf	3,5	;RP0=1, select bank1
 10245  0130  1303               	bcf	3,6	;RP1=0, select bank1
 10246  0131  00A3               	movwf	(___flsub@a+3)^(0+128)
 10247  0132  0875               	movf	?___xxtofl+2,w
 10248  0133  00A2               	movwf	(___flsub@a+2)^(0+128)
 10249  0134  0874               	movf	?___xxtofl+1,w
 10250  0135  00A1               	movwf	(___flsub@a+1)^(0+128)
 10251  0136  0873               	movf	?___xxtofl,w
 10252  0137  00A0               	movwf	___flsub@a^(0+128)
 10253  0138  0845               	movf	(sprintf@fval+3)^(0+128),w
 10254  0139  00A7               	movwf	(___flsub@b+3)^(0+128)
 10255  013A  0844               	movf	(sprintf@fval+2)^(0+128),w
 10256  013B  00A6               	movwf	(___flsub@b+2)^(0+128)
 10257  013C  0843               	movf	(sprintf@fval+1)^(0+128),w
 10258  013D  00A5               	movwf	(___flsub@b+1)^(0+128)
 10259  013E  0842               	movf	sprintf@fval^(0+128),w
 10260  013F  00A4               	movwf	___flsub@b^(0+128)
 10261  0140  160A  158A  23AE  120A  118A  	fcall	___flsub
 10262  0145  1683               	bsf	3,5	;RP0=1, select bank1
 10263  0146  1303               	bcf	3,6	;RP1=0, select bank1
 10264  0147  0823               	movf	(?___flsub+3)^(0+128),w
 10265  0148  00C5               	movwf	(sprintf@fval+3)^(0+128)
 10266  0149  0822               	movf	(?___flsub+2)^(0+128),w
 10267  014A  00C4               	movwf	(sprintf@fval+2)^(0+128)
 10268  014B  0821               	movf	(?___flsub+1)^(0+128),w
 10269  014C  00C3               	movwf	(sprintf@fval+1)^(0+128)
 10270  014D  0820               	movf	?___flsub^(0+128),w
 10271  014E  00C2               	movwf	sprintf@fval^(0+128)
 10272  014F                     l3740:
 10273                           
 10274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10275  014F  01C0               	clrf	sprintf@eexp^(0+128)
 10276  0150  01C1               	clrf	(sprintf@eexp+1)^(0+128)
 10277  0151                     l3742:
 10278                           
 10279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10280  0151  01C8               	clrf	sprintf@c^(0+128)
 10281  0152  0AC8               	incf	sprintf@c^(0+128),f
 10282  0153                     l3748:
 10283                           
 10284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10285  0153  0848               	movf	sprintf@c^(0+128),w
 10286  0154  1283               	bcf	3,5	;RP0=0, select bank0
 10287  0155  1303               	bcf	3,6	;RP1=0, select bank0
 10288  0156  00EA               	movwf	??_sprintf
 10289  0157  3001               	movlw	1
 10290  0158                     u5855:
 10291  0158  1003               	clrc
 10292  0159  0DEA               	rlf	??_sprintf,f
 10293  015A  3EFF               	addlw	-1
 10294  015B  1D03               	skipz
 10295  015C  2958               	goto	u5855
 10296  015D  1003               	clrc
 10297  015E  0D6A               	rlf	??_sprintf,w
 10298  015F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10299  0160  0084               	movwf	4
 10300  0161  120A  158A  200A  120A  118A  	fcall	stringdir
 10301  0166  00EB               	movwf	??_sprintf+1
 10302  0167  120A  158A  200A  120A  118A  	fcall	stringdir
 10303  016C  00EC               	movwf	??_sprintf+2
 10304  016D  120A  158A  200A  120A  118A  	fcall	stringdir
 10305  0172  00ED               	movwf	??_sprintf+3
 10306  0173  120A  158A  200A  120A  118A  	fcall	stringdir
 10307  0178  00EE               	movwf	??_sprintf+4
 10308  0179  086E               	movf	??_sprintf+4,w
 10309  017A  1683               	bsf	3,5	;RP0=1, select bank1
 10310  017B  1303               	bcf	3,6	;RP1=0, select bank1
 10311  017C  0237               	subwf	(sprintf@val+3)^(0+128),w
 10312  017D  1D03               	skipz
 10313  017E  2995               	goto	u5865
 10314  017F  1283               	bcf	3,5	;RP0=0, select bank0
 10315  0180  1303               	bcf	3,6	;RP1=0, select bank0
 10316  0181  086D               	movf	??_sprintf+3,w
 10317  0182  1683               	bsf	3,5	;RP0=1, select bank1
 10318  0183  1303               	bcf	3,6	;RP1=0, select bank1
 10319  0184  0236               	subwf	(sprintf@val+2)^(0+128),w
 10320  0185  1D03               	skipz
 10321  0186  2995               	goto	u5865
 10322  0187  1283               	bcf	3,5	;RP0=0, select bank0
 10323  0188  1303               	bcf	3,6	;RP1=0, select bank0
 10324  0189  086C               	movf	??_sprintf+2,w
 10325  018A  1683               	bsf	3,5	;RP0=1, select bank1
 10326  018B  1303               	bcf	3,6	;RP1=0, select bank1
 10327  018C  0235               	subwf	(sprintf@val+1)^(0+128),w
 10328  018D  1D03               	skipz
 10329  018E  2995               	goto	u5865
 10330  018F  1283               	bcf	3,5	;RP0=0, select bank0
 10331  0190  1303               	bcf	3,6	;RP1=0, select bank0
 10332  0191  086B               	movf	??_sprintf+1,w
 10333  0192  1683               	bsf	3,5	;RP0=1, select bank1
 10334  0193  1303               	bcf	3,6	;RP1=0, select bank1
 10335  0194  0234               	subwf	sprintf@val^(0+128),w
 10336  0195                     u5865:
 10337  0195  1803               	skipnc
 10338  0196  2998               	goto	u5861
 10339  0197  2999               	goto	u5860
 10340  0198                     u5861:
 10341  0198  299A               	goto	l3752
 10342  0199                     u5860:
 10343  0199  29A8               	goto	l3754
 10344  019A                     l3752:
 10345  019A  3001               	movlw	1
 10346  019B  1283               	bcf	3,5	;RP0=0, select bank0
 10347  019C  1303               	bcf	3,6	;RP1=0, select bank0
 10348  019D  00EA               	movwf	??_sprintf
 10349  019E  086A               	movf	??_sprintf,w
 10350  019F  1683               	bsf	3,5	;RP0=1, select bank1
 10351  01A0  1303               	bcf	3,6	;RP1=0, select bank1
 10352  01A1  07C8               	addwf	sprintf@c^(0+128),f
 10353  01A2  300A               	movlw	10
 10354  01A3  0648               	xorwf	sprintf@c^(0+128),w
 10355  01A4  1D03               	btfss	3,2
 10356  01A5  29A7               	goto	u5871
 10357  01A6  29A8               	goto	u5870
 10358  01A7                     u5871:
 10359  01A7  2953               	goto	l3748
 10360  01A8                     u5870:
 10361  01A8                     l3754:
 10362                           
 10363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10364  01A8  0848               	movf	sprintf@c^(0+128),w
 10365  01A9  0746               	addwf	sprintf@prec^(0+128),w
 10366  01AA  1283               	bcf	3,5	;RP0=0, select bank0
 10367  01AB  1303               	bcf	3,6	;RP1=0, select bank0
 10368  01AC  00EA               	movwf	??_sprintf
 10369  01AD  1683               	bsf	3,5	;RP0=1, select bank1
 10370  01AE  1303               	bcf	3,6	;RP1=0, select bank1
 10371  01AF  0847               	movf	(sprintf@prec+1)^(0+128),w
 10372  01B0  1803               	skipnc
 10373  01B1  0A47               	incf	(sprintf@prec+1)^(0+128),w
 10374  01B2  1283               	bcf	3,5	;RP0=0, select bank0
 10375  01B3  1303               	bcf	3,6	;RP1=0, select bank0
 10376  01B4  00EB               	movwf	??_sprintf+1
 10377  01B5  1683               	bsf	3,5	;RP0=1, select bank1
 10378  01B6  1303               	bcf	3,6	;RP1=0, select bank1
 10379  01B7  0840               	movf	sprintf@eexp^(0+128),w
 10380  01B8  1283               	bcf	3,5	;RP0=0, select bank0
 10381  01B9  1303               	bcf	3,6	;RP1=0, select bank0
 10382  01BA  076A               	addwf	??_sprintf,w
 10383  01BB  00EC               	movwf	??_sprintf+2
 10384  01BC  1683               	bsf	3,5	;RP0=1, select bank1
 10385  01BD  1303               	bcf	3,6	;RP1=0, select bank1
 10386  01BE  0841               	movf	(sprintf@eexp+1)^(0+128),w
 10387  01BF  1803               	skipnc
 10388  01C0  0A41               	incf	(sprintf@eexp+1)^(0+128),w
 10389  01C1  1283               	bcf	3,5	;RP0=0, select bank0
 10390  01C2  1303               	bcf	3,6	;RP1=0, select bank0
 10391  01C3  076B               	addwf	??_sprintf+1,w
 10392  01C4  00ED               	movwf	??_sprintf+3
 10393  01C5  086C               	movf	??_sprintf+2,w
 10394  01C6  1683               	bsf	3,5	;RP0=1, select bank1
 10395  01C7  1303               	bcf	3,6	;RP1=0, select bank1
 10396  01C8  02BA               	subwf	sprintf@width^(0+128),f
 10397  01C9  1283               	bcf	3,5	;RP0=0, select bank0
 10398  01CA  1303               	bcf	3,6	;RP1=0, select bank0
 10399  01CB  086D               	movf	??_sprintf+3,w
 10400  01CC  1683               	bsf	3,5	;RP0=1, select bank1
 10401  01CD  1303               	bcf	3,6	;RP1=0, select bank1
 10402  01CE  1C03               	skipc
 10403  01CF  03BB               	decf	(sprintf@width+1)^(0+128),f
 10404  01D0  02BB               	subwf	(sprintf@width+1)^(0+128),f
 10405                           
 10406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10407  01D1  0846               	movf	sprintf@prec^(0+128),w
 10408  01D2  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 10409  01D3  1903               	btfsc	3,2
 10410  01D4  29D6               	goto	u5881
 10411  01D5  29D7               	goto	u5880
 10412  01D6                     u5881:
 10413  01D6  29DD               	goto	l3758
 10414  01D7                     u5880:
 10415  01D7                     l3756:
 10416                           
 10417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10418  01D7  30FF               	movlw	255
 10419  01D8  07BA               	addwf	sprintf@width^(0+128),f
 10420  01D9  1803               	skipnc
 10421  01DA  0ABB               	incf	(sprintf@width+1)^(0+128),f
 10422  01DB  30FF               	movlw	255
 10423  01DC  07BB               	addwf	(sprintf@width+1)^(0+128),f
 10424  01DD                     l3758:
 10425                           
 10426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10427  01DD  3003               	movlw	3
 10428  01DE  0538               	andwf	sprintf@flag^(0+128),w
 10429  01DF  1283               	bcf	3,5	;RP0=0, select bank0
 10430  01E0  1303               	bcf	3,6	;RP1=0, select bank0
 10431  01E1  00EA               	movwf	??_sprintf
 10432  01E2  3000               	movlw	0
 10433  01E3  1683               	bsf	3,5	;RP0=1, select bank1
 10434  01E4  1303               	bcf	3,6	;RP1=0, select bank1
 10435  01E5  0539               	andwf	(sprintf@flag+1)^(0+128),w
 10436  01E6  1283               	bcf	3,5	;RP0=0, select bank0
 10437  01E7  1303               	bcf	3,6	;RP1=0, select bank0
 10438  01E8  00EB               	movwf	??_sprintf+1
 10439  01E9  086A               	movf	??_sprintf,w
 10440  01EA  046B               	iorwf	??_sprintf+1,w
 10441  01EB  1903               	btfsc	3,2
 10442  01EC  29EE               	goto	u5891
 10443  01ED  29EF               	goto	u5890
 10444  01EE                     u5891:
 10445  01EE  2A10               	goto	l3768
 10446  01EF                     u5890:
 10447  01EF                     l3760:
 10448                           
 10449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10450  01EF  30FF               	movlw	255
 10451  01F0  1683               	bsf	3,5	;RP0=1, select bank1
 10452  01F1  1303               	bcf	3,6	;RP1=0, select bank1
 10453  01F2  07BA               	addwf	sprintf@width^(0+128),f
 10454  01F3  1803               	skipnc
 10455  01F4  0ABB               	incf	(sprintf@width+1)^(0+128),f
 10456  01F5  30FF               	movlw	255
 10457  01F6  07BB               	addwf	(sprintf@width+1)^(0+128),f
 10458  01F7  2A10               	goto	l3768
 10459  01F8                     l3762:
 10460                           
 10461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10462  01F8  3020               	movlw	32
 10463  01F9  1283               	bcf	3,5	;RP0=0, select bank0
 10464  01FA  1303               	bcf	3,6	;RP1=0, select bank0
 10465  01FB  00EA               	movwf	??_sprintf
 10466  01FC  1683               	bsf	3,5	;RP0=1, select bank1
 10467  01FD  1303               	bcf	3,6	;RP1=0, select bank1
 10468  01FE  0828               	movf	sprintf@sp^(0+128),w
 10469  01FF  0084               	movwf	4
 10470  0200  1783               	bsf	3,7
 10471  0201  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10472  0202  1383               	bcf	3,7
 10473  0203  1283               	bcf	3,5	;RP0=0, select bank0
 10474  0204  1303               	bcf	3,6	;RP1=0, select bank0
 10475  0205  086A               	movf	??_sprintf,w
 10476  0206  0080               	movwf	0
 10477  0207                     l3764:
 10478  0207  3001               	movlw	1
 10479  0208  1683               	bsf	3,5	;RP0=1, select bank1
 10480  0209  1303               	bcf	3,6	;RP1=0, select bank1
 10481  020A  07A8               	addwf	sprintf@sp^(0+128),f
 10482  020B  1803               	skipnc
 10483  020C  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10484  020D  3000               	movlw	0
 10485  020E  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10486  020F  29EF               	goto	l3760
 10487  0210                     l3768:
 10488                           
 10489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10490  0210  1683               	bsf	3,5	;RP0=1, select bank1
 10491  0211  1303               	bcf	3,6	;RP1=0, select bank1
 10492  0212  083B               	movf	(sprintf@width+1)^(0+128),w
 10493  0213  3A80               	xorlw	128
 10494  0214  00FF               	movwf	btemp+1
 10495  0215  3080               	movlw	128
 10496  0216  027F               	subwf	btemp+1,w
 10497  0217  1D03               	skipz
 10498  0218  2A1B               	goto	u5905
 10499  0219  3001               	movlw	1
 10500  021A  023A               	subwf	sprintf@width^(0+128),w
 10501  021B                     u5905:
 10502  021B  1803               	skipnc
 10503  021C  2A1E               	goto	u5901
 10504  021D  2A1F               	goto	u5900
 10505  021E                     u5901:
 10506  021E  29F8               	goto	l3762
 10507  021F                     u5900:
 10508  021F                     l3770:
 10509                           
 10510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10511  021F  3003               	movlw	3
 10512  0220  1683               	bsf	3,5	;RP0=1, select bank1
 10513  0221  1303               	bcf	3,6	;RP1=0, select bank1
 10514  0222  0538               	andwf	sprintf@flag^(0+128),w
 10515  0223  1283               	bcf	3,5	;RP0=0, select bank0
 10516  0224  1303               	bcf	3,6	;RP1=0, select bank0
 10517  0225  00EA               	movwf	??_sprintf
 10518  0226  3000               	movlw	0
 10519  0227  1683               	bsf	3,5	;RP0=1, select bank1
 10520  0228  1303               	bcf	3,6	;RP1=0, select bank1
 10521  0229  0539               	andwf	(sprintf@flag+1)^(0+128),w
 10522  022A  1283               	bcf	3,5	;RP0=0, select bank0
 10523  022B  1303               	bcf	3,6	;RP1=0, select bank0
 10524  022C  00EB               	movwf	??_sprintf+1
 10525  022D  086A               	movf	??_sprintf,w
 10526  022E  046B               	iorwf	??_sprintf+1,w
 10527  022F  1903               	btfsc	3,2
 10528  0230  2A32               	goto	u5911
 10529  0231  2A33               	goto	u5910
 10530  0232                     u5911:
 10531  0232  2AB8               	goto	l3784
 10532  0233                     u5910:
 10533  0233                     l3772:
 10534                           
 10535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10536  0233  302D               	movlw	45
 10537  0234  00EA               	movwf	??_sprintf
 10538  0235  1683               	bsf	3,5	;RP0=1, select bank1
 10539  0236  1303               	bcf	3,6	;RP1=0, select bank1
 10540  0237  0828               	movf	sprintf@sp^(0+128),w
 10541  0238  0084               	movwf	4
 10542  0239  1783               	bsf	3,7
 10543  023A  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10544  023B  1383               	bcf	3,7
 10545  023C  1283               	bcf	3,5	;RP0=0, select bank0
 10546  023D  1303               	bcf	3,6	;RP1=0, select bank0
 10547  023E  086A               	movf	??_sprintf,w
 10548  023F  0080               	movwf	0
 10549  0240                     l3774:
 10550  0240  3001               	movlw	1
 10551  0241  1683               	bsf	3,5	;RP0=1, select bank1
 10552  0242  1303               	bcf	3,6	;RP1=0, select bank1
 10553  0243  07A8               	addwf	sprintf@sp^(0+128),f
 10554  0244  1803               	skipnc
 10555  0245  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10556  0246  3000               	movlw	0
 10557  0247  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10558  0248  2AB8               	goto	l3784
 10559  0249                     l3776:
 10560                           
 10561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10562  0249  0848               	movf	sprintf@c^(0+128),w
 10563  024A  1283               	bcf	3,5	;RP0=0, select bank0
 10564  024B  1303               	bcf	3,6	;RP1=0, select bank0
 10565  024C  00EA               	movwf	??_sprintf
 10566  024D  3001               	movlw	1
 10567  024E                     u5925:
 10568  024E  1003               	clrc
 10569  024F  0DEA               	rlf	??_sprintf,f
 10570  0250  3EFF               	addlw	-1
 10571  0251  1D03               	skipz
 10572  0252  2A4E               	goto	u5925
 10573  0253  1003               	clrc
 10574  0254  0D6A               	rlf	??_sprintf,w
 10575  0255  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10576  0256  0084               	movwf	4
 10577  0257  120A  158A  200A  120A  118A  	fcall	stringdir
 10578  025C  00F3               	movwf	___lldiv@divisor
 10579  025D  120A  158A  200A  120A  118A  	fcall	stringdir
 10580  0262  00F4               	movwf	___lldiv@divisor+1
 10581  0263  120A  158A  200A  120A  118A  	fcall	stringdir
 10582  0268  00F5               	movwf	___lldiv@divisor+2
 10583  0269  120A  158A  200A  120A  118A  	fcall	stringdir
 10584  026E  00F6               	movwf	___lldiv@divisor+3
 10585  026F  1683               	bsf	3,5	;RP0=1, select bank1
 10586  0270  1303               	bcf	3,6	;RP1=0, select bank1
 10587  0271  0837               	movf	(sprintf@val+3)^(0+128),w
 10588  0272  00FA               	movwf	___lldiv@dividend+3
 10589  0273  0836               	movf	(sprintf@val+2)^(0+128),w
 10590  0274  00F9               	movwf	___lldiv@dividend+2
 10591  0275  0835               	movf	(sprintf@val+1)^(0+128),w
 10592  0276  00F8               	movwf	___lldiv@dividend+1
 10593  0277  0834               	movf	sprintf@val^(0+128),w
 10594  0278  00F7               	movwf	___lldiv@dividend
 10595  0279  160A  158A  2454  120A  118A  	fcall	___lldiv
 10596  027E  0876               	movf	?___lldiv+3,w
 10597  027F  1683               	bsf	3,5	;RP0=1, select bank1
 10598  0280  1303               	bcf	3,6	;RP1=0, select bank1
 10599  0281  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10600  0282  0875               	movf	?___lldiv+2,w
 10601  0283  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10602  0284  0874               	movf	?___lldiv+1,w
 10603  0285  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10604  0286  0873               	movf	?___lldiv,w
 10605  0287  00BC               	movwf	sprintf@tmpval^(0+128)
 10606  0288                     l3778:
 10607                           
 10608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10609  0288  3000               	movlw	0
 10610  0289  00F6               	movwf	___llmod@divisor+3
 10611  028A  3000               	movlw	0
 10612  028B  00F5               	movwf	___llmod@divisor+2
 10613  028C  3000               	movlw	0
 10614  028D  00F4               	movwf	___llmod@divisor+1
 10615  028E  300A               	movlw	10
 10616  028F  00F3               	movwf	___llmod@divisor
 10617  0290  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10618  0291  00FA               	movwf	___llmod@dividend+3
 10619  0292  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10620  0293  00F9               	movwf	___llmod@dividend+2
 10621  0294  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10622  0295  00F8               	movwf	___llmod@dividend+1
 10623  0296  083C               	movf	sprintf@tmpval^(0+128),w
 10624  0297  00F7               	movwf	___llmod@dividend
 10625  0298  160A  158A  23FE  120A  118A  	fcall	___llmod
 10626  029D  0876               	movf	?___llmod+3,w
 10627  029E  1683               	bsf	3,5	;RP0=1, select bank1
 10628  029F  1303               	bcf	3,6	;RP1=0, select bank1
 10629  02A0  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10630  02A1  0875               	movf	?___llmod+2,w
 10631  02A2  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10632  02A3  0874               	movf	?___llmod+1,w
 10633  02A4  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10634  02A5  0873               	movf	?___llmod,w
 10635  02A6  00BC               	movwf	sprintf@tmpval^(0+128)
 10636  02A7                     l3780:
 10637                           
 10638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10639  02A7  083C               	movf	sprintf@tmpval^(0+128),w
 10640  02A8  3E30               	addlw	48
 10641  02A9  1283               	bcf	3,5	;RP0=0, select bank0
 10642  02AA  1303               	bcf	3,6	;RP1=0, select bank0
 10643  02AB  00EA               	movwf	??_sprintf
 10644  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10645  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10646  02AE  0828               	movf	sprintf@sp^(0+128),w
 10647  02AF  0084               	movwf	4
 10648  02B0  1783               	bsf	3,7
 10649  02B1  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10650  02B2  1383               	bcf	3,7
 10651  02B3  1283               	bcf	3,5	;RP0=0, select bank0
 10652  02B4  1303               	bcf	3,6	;RP1=0, select bank0
 10653  02B5  086A               	movf	??_sprintf,w
 10654  02B6  0080               	movwf	0
 10655  02B7  2A40               	goto	l3774
 10656  02B8                     l3784:
 10657                           
 10658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10659  02B8  3001               	movlw	1
 10660  02B9  1683               	bsf	3,5	;RP0=1, select bank1
 10661  02BA  1303               	bcf	3,6	;RP1=0, select bank1
 10662  02BB  02C8               	subwf	sprintf@c^(0+128),f
 10663  02BC  0A48               	incf	sprintf@c^(0+128),w
 10664  02BD  1D03               	btfss	3,2
 10665  02BE  2AC0               	goto	u5931
 10666  02BF  2AC1               	goto	u5930
 10667  02C0                     u5931:
 10668  02C0  2A49               	goto	l3776
 10669  02C1                     u5930:
 10670  02C1  2ADF               	goto	l3792
 10671  02C2                     l3786:
 10672                           
 10673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10674  02C2  3030               	movlw	48
 10675  02C3  1283               	bcf	3,5	;RP0=0, select bank0
 10676  02C4  1303               	bcf	3,6	;RP1=0, select bank0
 10677  02C5  00EA               	movwf	??_sprintf
 10678  02C6  1683               	bsf	3,5	;RP0=1, select bank1
 10679  02C7  1303               	bcf	3,6	;RP1=0, select bank1
 10680  02C8  0828               	movf	sprintf@sp^(0+128),w
 10681  02C9  0084               	movwf	4
 10682  02CA  1783               	bsf	3,7
 10683  02CB  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10684  02CC  1383               	bcf	3,7
 10685  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10686  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10687  02CF  086A               	movf	??_sprintf,w
 10688  02D0  0080               	movwf	0
 10689  02D1                     l3788:
 10690  02D1  3001               	movlw	1
 10691  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10692  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10693  02D4  07A8               	addwf	sprintf@sp^(0+128),f
 10694  02D5  1803               	skipnc
 10695  02D6  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10696  02D7  3000               	movlw	0
 10697  02D8  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10698  02D9                     l3790:
 10699                           
 10700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10701  02D9  30FF               	movlw	255
 10702  02DA  07C0               	addwf	sprintf@eexp^(0+128),f
 10703  02DB  1803               	skipnc
 10704  02DC  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
 10705  02DD  30FF               	movlw	255
 10706  02DE  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
 10707  02DF                     l3792:
 10708                           
 10709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10710  02DF  0841               	movf	(sprintf@eexp+1)^(0+128),w
 10711  02E0  3A80               	xorlw	128
 10712  02E1  00FF               	movwf	btemp+1
 10713  02E2  3080               	movlw	128
 10714  02E3  027F               	subwf	btemp+1,w
 10715  02E4  1D03               	skipz
 10716  02E5  2AE8               	goto	u5945
 10717  02E6  3001               	movlw	1
 10718  02E7  0240               	subwf	sprintf@eexp^(0+128),w
 10719  02E8                     u5945:
 10720  02E8  1803               	skipnc
 10721  02E9  2AEB               	goto	u5941
 10722  02EA  2AEC               	goto	u5940
 10723  02EB                     u5941:
 10724  02EB  2AC2               	goto	l3786
 10725  02EC                     u5940:
 10726  02EC                     l3794:
 10727                           
 10728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10729  02EC  1683               	bsf	3,5	;RP0=1, select bank1
 10730  02ED  1303               	bcf	3,6	;RP1=0, select bank1
 10731  02EE  0847               	movf	(sprintf@prec+1)^(0+128),w
 10732  02EF  3A80               	xorlw	128
 10733  02F0  00FF               	movwf	btemp+1
 10734  02F1  3080               	movlw	128
 10735  02F2  027F               	subwf	btemp+1,w
 10736  02F3  1D03               	skipz
 10737  02F4  2AF7               	goto	u5955
 10738  02F5  3009               	movlw	9
 10739  02F6  0246               	subwf	sprintf@prec^(0+128),w
 10740  02F7                     u5955:
 10741  02F7  1C03               	skipc
 10742  02F8  2AFA               	goto	u5951
 10743  02F9  2AFB               	goto	u5950
 10744  02FA                     u5951:
 10745  02FA  2B04               	goto	l3798
 10746  02FB                     u5950:
 10747  02FB                     l3796:
 10748                           
 10749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10750  02FB  3008               	movlw	8
 10751  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10752  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10753  02FE  00EA               	movwf	??_sprintf
 10754  02FF  086A               	movf	??_sprintf,w
 10755  0300  1683               	bsf	3,5	;RP0=1, select bank1
 10756  0301  1303               	bcf	3,6	;RP1=0, select bank1
 10757  0302  00C8               	movwf	sprintf@c^(0+128)
 10758  0303  2B0E               	goto	l340
 10759  0304                     l3798:
 10760                           
 10761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10762  0304  1683               	bsf	3,5	;RP0=1, select bank1
 10763  0305  1303               	bcf	3,6	;RP1=0, select bank1
 10764  0306  0846               	movf	sprintf@prec^(0+128),w
 10765  0307  1283               	bcf	3,5	;RP0=0, select bank0
 10766  0308  1303               	bcf	3,6	;RP1=0, select bank0
 10767  0309  00EA               	movwf	??_sprintf
 10768  030A  086A               	movf	??_sprintf,w
 10769  030B  1683               	bsf	3,5	;RP0=1, select bank1
 10770  030C  1303               	bcf	3,6	;RP1=0, select bank1
 10771  030D  00C8               	movwf	sprintf@c^(0+128)
 10772  030E                     l340:
 10773                           
 10774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10775  030E  0848               	movf	sprintf@c^(0+128),w
 10776  030F  1283               	bcf	3,5	;RP0=0, select bank0
 10777  0310  1303               	bcf	3,6	;RP1=0, select bank0
 10778  0311  00EA               	movwf	??_sprintf
 10779  0312  01EB               	clrf	??_sprintf+1
 10780  0313  086A               	movf	??_sprintf,w
 10781  0314  1683               	bsf	3,5	;RP0=1, select bank1
 10782  0315  1303               	bcf	3,6	;RP1=0, select bank1
 10783  0316  02C6               	subwf	sprintf@prec^(0+128),f
 10784  0317  1283               	bcf	3,5	;RP0=0, select bank0
 10785  0318  1303               	bcf	3,6	;RP1=0, select bank0
 10786  0319  086B               	movf	??_sprintf+1,w
 10787  031A  1683               	bsf	3,5	;RP0=1, select bank1
 10788  031B  1303               	bcf	3,6	;RP1=0, select bank1
 10789  031C  1C03               	skipc
 10790  031D  03C7               	decf	(sprintf@prec+1)^(0+128),f
 10791  031E  02C7               	subwf	(sprintf@prec+1)^(0+128),f
 10792  031F                     l3800:
 10793                           
 10794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10795  031F  0848               	movf	sprintf@c^(0+128),w
 10796  0320  1903               	btfsc	3,2
 10797  0321  2B23               	goto	u5961
 10798  0322  2B24               	goto	u5960
 10799  0323                     u5961:
 10800  0323  2B3B               	goto	l3806
 10801  0324                     u5960:
 10802  0324                     l3802:
 10803                           
 10804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10805  0324  302E               	movlw	46
 10806  0325  1283               	bcf	3,5	;RP0=0, select bank0
 10807  0326  1303               	bcf	3,6	;RP1=0, select bank0
 10808  0327  00EA               	movwf	??_sprintf
 10809  0328  1683               	bsf	3,5	;RP0=1, select bank1
 10810  0329  1303               	bcf	3,6	;RP1=0, select bank1
 10811  032A  0828               	movf	sprintf@sp^(0+128),w
 10812  032B  0084               	movwf	4
 10813  032C  1783               	bsf	3,7
 10814  032D  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10815  032E  1383               	bcf	3,7
 10816  032F  1283               	bcf	3,5	;RP0=0, select bank0
 10817  0330  1303               	bcf	3,6	;RP1=0, select bank0
 10818  0331  086A               	movf	??_sprintf,w
 10819  0332  0080               	movwf	0
 10820  0333                     l3804:
 10821  0333  3001               	movlw	1
 10822  0334  1683               	bsf	3,5	;RP0=1, select bank1
 10823  0335  1303               	bcf	3,6	;RP1=0, select bank1
 10824  0336  07A8               	addwf	sprintf@sp^(0+128),f
 10825  0337  1803               	skipnc
 10826  0338  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10827  0339  3000               	movlw	0
 10828  033A  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10829  033B                     l3806:
 10830                           
 10831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10832  033B  0848               	movf	sprintf@c^(0+128),w
 10833  033C  120A  158A  249D  120A  118A  	fcall	_scale
 10834  0341  1283               	bcf	3,5	;RP0=0, select bank0
 10835  0342  1303               	bcf	3,6	;RP1=0, select bank0
 10836  0343  0845               	movf	?_scale+3,w
 10837  0344  1683               	bsf	3,5	;RP0=1, select bank1
 10838  0345  1303               	bcf	3,6	;RP1=0, select bank1
 10839  0346  00B2               	movwf	(_sprintf$1178+3)^(0+128)
 10840  0347  1283               	bcf	3,5	;RP0=0, select bank0
 10841  0348  1303               	bcf	3,6	;RP1=0, select bank0
 10842  0349  0844               	movf	?_scale+2,w
 10843  034A  1683               	bsf	3,5	;RP0=1, select bank1
 10844  034B  1303               	bcf	3,6	;RP1=0, select bank1
 10845  034C  00B1               	movwf	(_sprintf$1178+2)^(0+128)
 10846  034D  1283               	bcf	3,5	;RP0=0, select bank0
 10847  034E  1303               	bcf	3,6	;RP1=0, select bank0
 10848  034F  0843               	movf	?_scale+1,w
 10849  0350  1683               	bsf	3,5	;RP0=1, select bank1
 10850  0351  1303               	bcf	3,6	;RP1=0, select bank1
 10851  0352  00B0               	movwf	(_sprintf$1178+1)^(0+128)
 10852  0353  1283               	bcf	3,5	;RP0=0, select bank0
 10853  0354  1303               	bcf	3,6	;RP1=0, select bank0
 10854  0355  0842               	movf	?_scale,w
 10855  0356  1683               	bsf	3,5	;RP0=1, select bank1
 10856  0357  1303               	bcf	3,6	;RP1=0, select bank1
 10857  0358  00AF               	movwf	_sprintf$1178^(0+128)
 10858                           
 10859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10860  0359  0832               	movf	(_sprintf$1178+3)^(0+128),w
 10861  035A  1283               	bcf	3,5	;RP0=0, select bank0
 10862  035B  1303               	bcf	3,6	;RP1=0, select bank0
 10863  035C  00AF               	movwf	___flmul@a+3
 10864  035D  1683               	bsf	3,5	;RP0=1, select bank1
 10865  035E  1303               	bcf	3,6	;RP1=0, select bank1
 10866  035F  0831               	movf	(_sprintf$1178+2)^(0+128),w
 10867  0360  1283               	bcf	3,5	;RP0=0, select bank0
 10868  0361  1303               	bcf	3,6	;RP1=0, select bank0
 10869  0362  00AE               	movwf	___flmul@a+2
 10870  0363  1683               	bsf	3,5	;RP0=1, select bank1
 10871  0364  1303               	bcf	3,6	;RP1=0, select bank1
 10872  0365  0830               	movf	(_sprintf$1178+1)^(0+128),w
 10873  0366  1283               	bcf	3,5	;RP0=0, select bank0
 10874  0367  1303               	bcf	3,6	;RP1=0, select bank0
 10875  0368  00AD               	movwf	___flmul@a+1
 10876  0369  1683               	bsf	3,5	;RP0=1, select bank1
 10877  036A  1303               	bcf	3,6	;RP1=0, select bank1
 10878  036B  082F               	movf	_sprintf$1178^(0+128),w
 10879  036C  1283               	bcf	3,5	;RP0=0, select bank0
 10880  036D  1303               	bcf	3,6	;RP1=0, select bank0
 10881  036E  00AC               	movwf	___flmul@a
 10882  036F  1683               	bsf	3,5	;RP0=1, select bank1
 10883  0370  1303               	bcf	3,6	;RP1=0, select bank1
 10884  0371  0845               	movf	(sprintf@fval+3)^(0+128),w
 10885  0372  1283               	bcf	3,5	;RP0=0, select bank0
 10886  0373  1303               	bcf	3,6	;RP1=0, select bank0
 10887  0374  00AB               	movwf	___flmul@b+3
 10888  0375  1683               	bsf	3,5	;RP0=1, select bank1
 10889  0376  1303               	bcf	3,6	;RP1=0, select bank1
 10890  0377  0844               	movf	(sprintf@fval+2)^(0+128),w
 10891  0378  1283               	bcf	3,5	;RP0=0, select bank0
 10892  0379  1303               	bcf	3,6	;RP1=0, select bank0
 10893  037A  00AA               	movwf	___flmul@b+2
 10894  037B  1683               	bsf	3,5	;RP0=1, select bank1
 10895  037C  1303               	bcf	3,6	;RP1=0, select bank1
 10896  037D  0843               	movf	(sprintf@fval+1)^(0+128),w
 10897  037E  1283               	bcf	3,5	;RP0=0, select bank0
 10898  037F  1303               	bcf	3,6	;RP1=0, select bank0
 10899  0380  00A9               	movwf	___flmul@b+1
 10900  0381  1683               	bsf	3,5	;RP0=1, select bank1
 10901  0382  1303               	bcf	3,6	;RP1=0, select bank1
 10902  0383  0842               	movf	sprintf@fval^(0+128),w
 10903  0384  1283               	bcf	3,5	;RP0=0, select bank0
 10904  0385  1303               	bcf	3,6	;RP1=0, select bank0
 10905  0386  00A8               	movwf	___flmul@b
 10906  0387  120A  158A  213C  120A  118A  	fcall	___flmul
 10907  038C  1283               	bcf	3,5	;RP0=0, select bank0
 10908  038D  1303               	bcf	3,6	;RP1=0, select bank0
 10909  038E  082B               	movf	?___flmul+3,w
 10910  038F  00D8               	movwf	___fltol@f1+3
 10911  0390  082A               	movf	?___flmul+2,w
 10912  0391  00D7               	movwf	___fltol@f1+2
 10913  0392  0829               	movf	?___flmul+1,w
 10914  0393  00D6               	movwf	___fltol@f1+1
 10915  0394  0828               	movf	?___flmul,w
 10916  0395  00D5               	movwf	___fltol@f1
 10917  0396  160A  118A  2008  120A  118A  	fcall	___fltol
 10918  039B  1283               	bcf	3,5	;RP0=0, select bank0
 10919  039C  1303               	bcf	3,6	;RP1=0, select bank0
 10920  039D  0858               	movf	?___fltol+3,w
 10921  039E  1683               	bsf	3,5	;RP0=1, select bank1
 10922  039F  1303               	bcf	3,6	;RP1=0, select bank1
 10923  03A0  00B7               	movwf	(sprintf@val+3)^(0+128)
 10924  03A1  1283               	bcf	3,5	;RP0=0, select bank0
 10925  03A2  1303               	bcf	3,6	;RP1=0, select bank0
 10926  03A3  0857               	movf	?___fltol+2,w
 10927  03A4  1683               	bsf	3,5	;RP0=1, select bank1
 10928  03A5  1303               	bcf	3,6	;RP1=0, select bank1
 10929  03A6  00B6               	movwf	(sprintf@val+2)^(0+128)
 10930  03A7  1283               	bcf	3,5	;RP0=0, select bank0
 10931  03A8  1303               	bcf	3,6	;RP1=0, select bank0
 10932  03A9  0856               	movf	?___fltol+1,w
 10933  03AA  1683               	bsf	3,5	;RP0=1, select bank1
 10934  03AB  1303               	bcf	3,6	;RP1=0, select bank1
 10935  03AC  00B5               	movwf	(sprintf@val+1)^(0+128)
 10936  03AD  1283               	bcf	3,5	;RP0=0, select bank0
 10937  03AE  1303               	bcf	3,6	;RP1=0, select bank0
 10938  03AF  0855               	movf	?___fltol,w
 10939  03B0  1683               	bsf	3,5	;RP0=1, select bank1
 10940  03B1  1303               	bcf	3,6	;RP1=0, select bank1
 10941  03B2  00B4               	movwf	sprintf@val^(0+128)
 10942                           
 10943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10944  03B3  2C69               	goto	l3818
 10945  03B4                     l3808:
 10946                           
 10947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10948  03B4  0848               	movf	sprintf@c^(0+128),w
 10949  03B5  1283               	bcf	3,5	;RP0=0, select bank0
 10950  03B6  1303               	bcf	3,6	;RP1=0, select bank0
 10951  03B7  00EA               	movwf	??_sprintf
 10952  03B8  3001               	movlw	1
 10953  03B9                     u5975:
 10954  03B9  1003               	clrc
 10955  03BA  0DEA               	rlf	??_sprintf,f
 10956  03BB  3EFF               	addlw	-1
 10957  03BC  1D03               	skipz
 10958  03BD  2BB9               	goto	u5975
 10959  03BE  1003               	clrc
 10960  03BF  0D6A               	rlf	??_sprintf,w
 10961  03C0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10962  03C1  0084               	movwf	4
 10963  03C2  120A  158A  200A  120A  118A  	fcall	stringdir
 10964  03C7  00F3               	movwf	___lldiv@divisor
 10965  03C8  120A  158A  200A  120A  118A  	fcall	stringdir
 10966  03CD  00F4               	movwf	___lldiv@divisor+1
 10967  03CE  120A  158A  200A  120A  118A  	fcall	stringdir
 10968  03D3  00F5               	movwf	___lldiv@divisor+2
 10969  03D4  120A  158A  200A  120A  118A  	fcall	stringdir
 10970  03D9  00F6               	movwf	___lldiv@divisor+3
 10971  03DA  1683               	bsf	3,5	;RP0=1, select bank1
 10972  03DB  1303               	bcf	3,6	;RP1=0, select bank1
 10973  03DC  0837               	movf	(sprintf@val+3)^(0+128),w
 10974  03DD  00FA               	movwf	___lldiv@dividend+3
 10975  03DE  0836               	movf	(sprintf@val+2)^(0+128),w
 10976  03DF  00F9               	movwf	___lldiv@dividend+2
 10977  03E0  0835               	movf	(sprintf@val+1)^(0+128),w
 10978  03E1  00F8               	movwf	___lldiv@dividend+1
 10979  03E2  0834               	movf	sprintf@val^(0+128),w
 10980  03E3  00F7               	movwf	___lldiv@dividend
 10981  03E4  160A  158A  2454  120A  118A  	fcall	___lldiv
 10982  03E9  0876               	movf	?___lldiv+3,w
 10983  03EA  1683               	bsf	3,5	;RP0=1, select bank1
 10984  03EB  1303               	bcf	3,6	;RP1=0, select bank1
 10985  03EC  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10986  03ED  0875               	movf	?___lldiv+2,w
 10987  03EE  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10988  03EF  0874               	movf	?___lldiv+1,w
 10989  03F0  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10990  03F1  0873               	movf	?___lldiv,w
 10991  03F2  00BC               	movwf	sprintf@tmpval^(0+128)
 10992  03F3                     l3810:
 10993                           
 10994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10995  03F3  3000               	movlw	0
 10996  03F4  00F6               	movwf	___llmod@divisor+3
 10997  03F5  3000               	movlw	0
 10998  03F6  00F5               	movwf	___llmod@divisor+2
 10999  03F7  3000               	movlw	0
 11000  03F8  00F4               	movwf	___llmod@divisor+1
 11001  03F9  300A               	movlw	10
 11002  03FA  00F3               	movwf	___llmod@divisor
 11003  03FB  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 11004  03FC  00FA               	movwf	___llmod@dividend+3
 11005  03FD  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 11006  03FE  00F9               	movwf	___llmod@dividend+2
 11007  03FF  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 11008  0400  00F8               	movwf	___llmod@dividend+1
 11009  0401  083C               	movf	sprintf@tmpval^(0+128),w
 11010  0402  00F7               	movwf	___llmod@dividend
 11011  0403  160A  158A  23FE  120A  118A  	fcall	___llmod
 11012  0408  0876               	movf	?___llmod+3,w
 11013  0409  1683               	bsf	3,5	;RP0=1, select bank1
 11014  040A  1303               	bcf	3,6	;RP1=0, select bank1
 11015  040B  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 11016  040C  0875               	movf	?___llmod+2,w
 11017  040D  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 11018  040E  0874               	movf	?___llmod+1,w
 11019  040F  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 11020  0410  0873               	movf	?___llmod,w
 11021  0411  00BC               	movwf	sprintf@tmpval^(0+128)
 11022  0412                     l3812:
 11023                           
 11024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11025  0412  083C               	movf	sprintf@tmpval^(0+128),w
 11026  0413  3E30               	addlw	48
 11027  0414  1283               	bcf	3,5	;RP0=0, select bank0
 11028  0415  1303               	bcf	3,6	;RP1=0, select bank0
 11029  0416  00EA               	movwf	??_sprintf
 11030  0417  1683               	bsf	3,5	;RP0=1, select bank1
 11031  0418  1303               	bcf	3,6	;RP1=0, select bank1
 11032  0419  0828               	movf	sprintf@sp^(0+128),w
 11033  041A  0084               	movwf	4
 11034  041B  1783               	bsf	3,7
 11035  041C  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 11036  041D  1383               	bcf	3,7
 11037  041E  1283               	bcf	3,5	;RP0=0, select bank0
 11038  041F  1303               	bcf	3,6	;RP1=0, select bank0
 11039  0420  086A               	movf	??_sprintf,w
 11040  0421  0080               	movwf	0
 11041  0422                     l3814:
 11042  0422  3001               	movlw	1
 11043  0423  1683               	bsf	3,5	;RP0=1, select bank1
 11044  0424  1303               	bcf	3,6	;RP1=0, select bank1
 11045  0425  07A8               	addwf	sprintf@sp^(0+128),f
 11046  0426  1803               	skipnc
 11047  0427  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 11048  0428  3000               	movlw	0
 11049  0429  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 11050  042A                     l3816:
 11051                           
 11052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11053  042A  0848               	movf	sprintf@c^(0+128),w
 11054  042B  1283               	bcf	3,5	;RP0=0, select bank0
 11055  042C  1303               	bcf	3,6	;RP1=0, select bank0
 11056  042D  00EA               	movwf	??_sprintf
 11057  042E  3001               	movlw	1
 11058  042F                     u5985:
 11059  042F  1003               	clrc
 11060  0430  0DEA               	rlf	??_sprintf,f
 11061  0431  3EFF               	addlw	-1
 11062  0432  1D03               	skipz
 11063  0433  2C2F               	goto	u5985
 11064  0434  1003               	clrc
 11065  0435  0D6A               	rlf	??_sprintf,w
 11066  0436  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11067  0437  0084               	movwf	4
 11068  0438  120A  158A  200A  120A  118A  	fcall	stringdir
 11069  043D  00F3               	movwf	___llmod@divisor
 11070  043E  120A  158A  200A  120A  118A  	fcall	stringdir
 11071  0443  00F4               	movwf	___llmod@divisor+1
 11072  0444  120A  158A  200A  120A  118A  	fcall	stringdir
 11073  0449  00F5               	movwf	___llmod@divisor+2
 11074  044A  120A  158A  200A  120A  118A  	fcall	stringdir
 11075  044F  00F6               	movwf	___llmod@divisor+3
 11076  0450  1683               	bsf	3,5	;RP0=1, select bank1
 11077  0451  1303               	bcf	3,6	;RP1=0, select bank1
 11078  0452  0837               	movf	(sprintf@val+3)^(0+128),w
 11079  0453  00FA               	movwf	___llmod@dividend+3
 11080  0454  0836               	movf	(sprintf@val+2)^(0+128),w
 11081  0455  00F9               	movwf	___llmod@dividend+2
 11082  0456  0835               	movf	(sprintf@val+1)^(0+128),w
 11083  0457  00F8               	movwf	___llmod@dividend+1
 11084  0458  0834               	movf	sprintf@val^(0+128),w
 11085  0459  00F7               	movwf	___llmod@dividend
 11086  045A  160A  158A  23FE  120A  118A  	fcall	___llmod
 11087  045F  0876               	movf	?___llmod+3,w
 11088  0460  1683               	bsf	3,5	;RP0=1, select bank1
 11089  0461  1303               	bcf	3,6	;RP1=0, select bank1
 11090  0462  00B7               	movwf	(sprintf@val+3)^(0+128)
 11091  0463  0875               	movf	?___llmod+2,w
 11092  0464  00B6               	movwf	(sprintf@val+2)^(0+128)
 11093  0465  0874               	movf	?___llmod+1,w
 11094  0466  00B5               	movwf	(sprintf@val+1)^(0+128)
 11095  0467  0873               	movf	?___llmod,w
 11096  0468  00B4               	movwf	sprintf@val^(0+128)
 11097  0469                     l3818:
 11098                           
 11099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11100  0469  3001               	movlw	1
 11101  046A  02C8               	subwf	sprintf@c^(0+128),f
 11102  046B  0A48               	incf	sprintf@c^(0+128),w
 11103  046C  1D03               	btfss	3,2
 11104  046D  2C6F               	goto	u5991
 11105  046E  2C70               	goto	u5990
 11106  046F                     u5991:
 11107  046F  2BB4               	goto	l3808
 11108  0470                     u5990:
 11109  0470  2C8E               	goto	l3826
 11110  0471                     l3820:
 11111                           
 11112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11113  0471  3030               	movlw	48
 11114  0472  1283               	bcf	3,5	;RP0=0, select bank0
 11115  0473  1303               	bcf	3,6	;RP1=0, select bank0
 11116  0474  00EA               	movwf	??_sprintf
 11117  0475  1683               	bsf	3,5	;RP0=1, select bank1
 11118  0476  1303               	bcf	3,6	;RP1=0, select bank1
 11119  0477  0828               	movf	sprintf@sp^(0+128),w
 11120  0478  0084               	movwf	4
 11121  0479  1783               	bsf	3,7
 11122  047A  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 11123  047B  1383               	bcf	3,7
 11124  047C  1283               	bcf	3,5	;RP0=0, select bank0
 11125  047D  1303               	bcf	3,6	;RP1=0, select bank0
 11126  047E  086A               	movf	??_sprintf,w
 11127  047F  0080               	movwf	0
 11128  0480                     l3822:
 11129  0480  3001               	movlw	1
 11130  0481  1683               	bsf	3,5	;RP0=1, select bank1
 11131  0482  1303               	bcf	3,6	;RP1=0, select bank1
 11132  0483  07A8               	addwf	sprintf@sp^(0+128),f
 11133  0484  1803               	skipnc
 11134  0485  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 11135  0486  3000               	movlw	0
 11136  0487  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 11137  0488                     l3824:
 11138                           
 11139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11140  0488  30FF               	movlw	255
 11141  0489  07C6               	addwf	sprintf@prec^(0+128),f
 11142  048A  1803               	skipnc
 11143  048B  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11144  048C  30FF               	movlw	255
 11145  048D  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11146  048E                     l3826:
 11147                           
 11148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11149  048E  0846               	movf	sprintf@prec^(0+128),w
 11150  048F  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 11151  0490  1D03               	btfss	3,2
 11152  0491  2C93               	goto	u6001
 11153  0492  2C94               	goto	u6000
 11154  0493                     u6001:
 11155  0493  2C71               	goto	l3820
 11156  0494                     u6000:
 11157  0494  2D9E               	goto	l3874
 11158  0495                     l3828:
 11159                           
 11160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11161  0495  1683               	bsf	3,5	;RP0=1, select bank1
 11162  0496  1303               	bcf	3,6	;RP1=0, select bank1
 11163  0497  0846               	movf	sprintf@prec^(0+128),w
 11164  0498  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 11165  0499  1D03               	btfss	3,2
 11166  049A  2C9C               	goto	u6011
 11167  049B  2C9D               	goto	u6010
 11168  049C                     u6011:
 11169  049C  2CAB               	goto	l348
 11170  049D                     u6010:
 11171  049D                     l3830:
 11172  049D  0837               	movf	(sprintf@val+3)^(0+128),w
 11173  049E  0436               	iorwf	(sprintf@val+2)^(0+128),w
 11174  049F  0435               	iorwf	(sprintf@val+1)^(0+128),w
 11175  04A0  0434               	iorwf	sprintf@val^(0+128),w
 11176  04A1  1D03               	skipz
 11177  04A2  2CA4               	goto	u6021
 11178  04A3  2CA5               	goto	u6020
 11179  04A4                     u6021:
 11180  04A4  2CAB               	goto	l348
 11181  04A5                     u6020:
 11182  04A5                     l3832:
 11183                           
 11184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11185  04A5  3001               	movlw	1
 11186  04A6  07C6               	addwf	sprintf@prec^(0+128),f
 11187  04A7  1803               	skipnc
 11188  04A8  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11189  04A9  3000               	movlw	0
 11190  04AA  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11191  04AB                     l348:
 11192                           
 11193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11194  04AB  0847               	movf	(sprintf@prec+1)^(0+128),w
 11195  04AC  3A80               	xorlw	128
 11196  04AD  3C80               	sublw	128
 11197  04AE  1D03               	skipz
 11198  04AF  2CB2               	goto	u6035
 11199  04B0  0846               	movf	sprintf@prec^(0+128),w
 11200  04B1  0248               	subwf	sprintf@c^(0+128),w
 11201  04B2                     u6035:
 11202  04B2  1803               	skipnc
 11203  04B3  2CB5               	goto	u6031
 11204  04B4  2CB6               	goto	u6030
 11205  04B5                     u6031:
 11206  04B5  2CC1               	goto	l3836
 11207  04B6                     u6030:
 11208  04B6                     l3834:
 11209                           
 11210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11211  04B6  1683               	bsf	3,5	;RP0=1, select bank1
 11212  04B7  1303               	bcf	3,6	;RP1=0, select bank1
 11213  04B8  0846               	movf	sprintf@prec^(0+128),w
 11214  04B9  1283               	bcf	3,5	;RP0=0, select bank0
 11215  04BA  1303               	bcf	3,6	;RP1=0, select bank0
 11216  04BB  00EA               	movwf	??_sprintf
 11217  04BC  086A               	movf	??_sprintf,w
 11218  04BD  1683               	bsf	3,5	;RP0=1, select bank1
 11219  04BE  1303               	bcf	3,6	;RP1=0, select bank1
 11220  04BF  00C8               	movwf	sprintf@c^(0+128)
 11221  04C0  2CE5               	goto	l3840
 11222  04C1                     l3836:
 11223  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 11224  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 11225  04C3  0847               	movf	(sprintf@prec+1)^(0+128),w
 11226  04C4  3A80               	xorlw	128
 11227  04C5  1283               	bcf	3,5	;RP0=0, select bank0
 11228  04C6  1303               	bcf	3,6	;RP1=0, select bank0
 11229  04C7  00EA               	movwf	??_sprintf
 11230  04C8  3080               	movlw	128
 11231  04C9  026A               	subwf	??_sprintf,w
 11232  04CA  1D03               	skipz
 11233  04CB  2CD0               	goto	u6045
 11234  04CC  1683               	bsf	3,5	;RP0=1, select bank1
 11235  04CD  1303               	bcf	3,6	;RP1=0, select bank1
 11236  04CE  0848               	movf	sprintf@c^(0+128),w
 11237  04CF  0246               	subwf	sprintf@prec^(0+128),w
 11238  04D0                     u6045:
 11239  04D0  1803               	skipnc
 11240  04D1  2CD3               	goto	u6041
 11241  04D2  2CD4               	goto	u6040
 11242  04D3                     u6041:
 11243  04D3  2CE5               	goto	l3840
 11244  04D4                     u6040:
 11245  04D4                     l3838:
 11246                           
 11247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11248  04D4  1683               	bsf	3,5	;RP0=1, select bank1
 11249  04D5  1303               	bcf	3,6	;RP1=0, select bank1
 11250  04D6  0848               	movf	sprintf@c^(0+128),w
 11251  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 11252  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 11253  04D9  00EA               	movwf	??_sprintf
 11254  04DA  01EB               	clrf	??_sprintf+1
 11255  04DB  086A               	movf	??_sprintf,w
 11256  04DC  1683               	bsf	3,5	;RP0=1, select bank1
 11257  04DD  1303               	bcf	3,6	;RP1=0, select bank1
 11258  04DE  00C6               	movwf	sprintf@prec^(0+128)
 11259  04DF  1283               	bcf	3,5	;RP0=0, select bank0
 11260  04E0  1303               	bcf	3,6	;RP1=0, select bank0
 11261  04E1  086B               	movf	??_sprintf+1,w
 11262  04E2  1683               	bsf	3,5	;RP0=1, select bank1
 11263  04E3  1303               	bcf	3,6	;RP1=0, select bank1
 11264  04E4  00C7               	movwf	(sprintf@prec+1)^(0+128)
 11265  04E5                     l3840:
 11266                           
 11267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11268  04E5  1683               	bsf	3,5	;RP0=1, select bank1
 11269  04E6  1303               	bcf	3,6	;RP1=0, select bank1
 11270  04E7  083A               	movf	sprintf@width^(0+128),w
 11271  04E8  043B               	iorwf	(sprintf@width+1)^(0+128),w
 11272  04E9  1903               	btfsc	3,2
 11273  04EA  2CEC               	goto	u6051
 11274  04EB  2CED               	goto	u6050
 11275  04EC                     u6051:
 11276  04EC  2D07               	goto	l3846
 11277  04ED                     u6050:
 11278  04ED                     l3842:
 11279  04ED  3003               	movlw	3
 11280  04EE  0538               	andwf	sprintf@flag^(0+128),w
 11281  04EF  1283               	bcf	3,5	;RP0=0, select bank0
 11282  04F0  1303               	bcf	3,6	;RP1=0, select bank0
 11283  04F1  00EA               	movwf	??_sprintf
 11284  04F2  3000               	movlw	0
 11285  04F3  1683               	bsf	3,5	;RP0=1, select bank1
 11286  04F4  1303               	bcf	3,6	;RP1=0, select bank1
 11287  04F5  0539               	andwf	(sprintf@flag+1)^(0+128),w
 11288  04F6  1283               	bcf	3,5	;RP0=0, select bank0
 11289  04F7  1303               	bcf	3,6	;RP1=0, select bank0
 11290  04F8  00EB               	movwf	??_sprintf+1
 11291  04F9  086A               	movf	??_sprintf,w
 11292  04FA  046B               	iorwf	??_sprintf+1,w
 11293  04FB  1903               	btfsc	3,2
 11294  04FC  2CFE               	goto	u6061
 11295  04FD  2CFF               	goto	u6060
 11296  04FE                     u6061:
 11297  04FE  2D07               	goto	l3846
 11298  04FF                     u6060:
 11299  04FF                     l3844:
 11300                           
 11301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11302  04FF  30FF               	movlw	255
 11303  0500  1683               	bsf	3,5	;RP0=1, select bank1
 11304  0501  1303               	bcf	3,6	;RP1=0, select bank1
 11305  0502  07BA               	addwf	sprintf@width^(0+128),f
 11306  0503  1803               	skipnc
 11307  0504  0ABB               	incf	(sprintf@width+1)^(0+128),f
 11308  0505  30FF               	movlw	255
 11309  0506  07BB               	addwf	(sprintf@width+1)^(0+128),f
 11310  0507                     l3846:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11313  0507  1683               	bsf	3,5	;RP0=1, select bank1
 11314  0508  1303               	bcf	3,6	;RP1=0, select bank1
 11315  0509  1F39               	btfss	(sprintf@flag+1)^(0+128),6
 11316  050A  2D0C               	goto	u6071
 11317  050B  2D0D               	goto	u6070
 11318  050C                     u6071:
 11319  050C  2D30               	goto	l3854
 11320  050D                     u6070:
 11321  050D                     l3848:
 11322                           
 11323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11324  050D  0847               	movf	(sprintf@prec+1)^(0+128),w
 11325  050E  3A80               	xorlw	128
 11326  050F  1283               	bcf	3,5	;RP0=0, select bank0
 11327  0510  1303               	bcf	3,6	;RP1=0, select bank0
 11328  0511  00EA               	movwf	??_sprintf
 11329  0512  1683               	bsf	3,5	;RP0=1, select bank1
 11330  0513  1303               	bcf	3,6	;RP1=0, select bank1
 11331  0514  083B               	movf	(sprintf@width+1)^(0+128),w
 11332  0515  3A80               	xorlw	128
 11333  0516  1283               	bcf	3,5	;RP0=0, select bank0
 11334  0517  1303               	bcf	3,6	;RP1=0, select bank0
 11335  0518  026A               	subwf	??_sprintf,w
 11336  0519  1D03               	skipz
 11337  051A  2D1F               	goto	u6085
 11338  051B  1683               	bsf	3,5	;RP0=1, select bank1
 11339  051C  1303               	bcf	3,6	;RP1=0, select bank1
 11340  051D  083A               	movf	sprintf@width^(0+128),w
 11341  051E  0246               	subwf	sprintf@prec^(0+128),w
 11342  051F                     u6085:
 11343  051F  1803               	skipnc
 11344  0520  2D22               	goto	u6081
 11345  0521  2D23               	goto	u6080
 11346  0522                     u6081:
 11347  0522  2D2C               	goto	l3852
 11348  0523                     u6080:
 11349  0523                     l3850:
 11350                           
 11351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11352  0523  1683               	bsf	3,5	;RP0=1, select bank1
 11353  0524  1303               	bcf	3,6	;RP1=0, select bank1
 11354  0525  0846               	movf	sprintf@prec^(0+128),w
 11355  0526  02BA               	subwf	sprintf@width^(0+128),f
 11356  0527  0847               	movf	(sprintf@prec+1)^(0+128),w
 11357  0528  1C03               	skipc
 11358  0529  03BB               	decf	(sprintf@width+1)^(0+128),f
 11359  052A  02BB               	subwf	(sprintf@width+1)^(0+128),f
 11360  052B  2D30               	goto	l3854
 11361  052C                     l3852:
 11362                           
 11363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11364  052C  1683               	bsf	3,5	;RP0=1, select bank1
 11365  052D  1303               	bcf	3,6	;RP1=0, select bank1
 11366  052E  01BA               	clrf	sprintf@width^(0+128)
 11367  052F  01BB               	clrf	(sprintf@width+1)^(0+128)
 11368  0530                     l3854:
 11369                           
 11370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11371  0530  083B               	movf	(sprintf@width+1)^(0+128),w
 11372  0531  3A80               	xorlw	128
 11373  0532  3C80               	sublw	128
 11374  0533  1D03               	skipz
 11375  0534  2D37               	goto	u6095
 11376  0535  083A               	movf	sprintf@width^(0+128),w
 11377  0536  0248               	subwf	sprintf@c^(0+128),w
 11378  0537                     u6095:
 11379  0537  1803               	skipnc
 11380  0538  2D3A               	goto	u6091
 11381  0539  2D3B               	goto	u6090
 11382  053A                     u6091:
 11383  053A  2D4F               	goto	l3858
 11384  053B                     u6090:
 11385  053B                     l3856:
 11386                           
 11387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11388  053B  1683               	bsf	3,5	;RP0=1, select bank1
 11389  053C  1303               	bcf	3,6	;RP1=0, select bank1
 11390  053D  0848               	movf	sprintf@c^(0+128),w
 11391  053E  1283               	bcf	3,5	;RP0=0, select bank0
 11392  053F  1303               	bcf	3,6	;RP1=0, select bank0
 11393  0540  00EA               	movwf	??_sprintf
 11394  0541  01EB               	clrf	??_sprintf+1
 11395  0542  086A               	movf	??_sprintf,w
 11396  0543  1683               	bsf	3,5	;RP0=1, select bank1
 11397  0544  1303               	bcf	3,6	;RP1=0, select bank1
 11398  0545  02BA               	subwf	sprintf@width^(0+128),f
 11399  0546  1283               	bcf	3,5	;RP0=0, select bank0
 11400  0547  1303               	bcf	3,6	;RP1=0, select bank0
 11401  0548  086B               	movf	??_sprintf+1,w
 11402  0549  1683               	bsf	3,5	;RP0=1, select bank1
 11403  054A  1303               	bcf	3,6	;RP1=0, select bank1
 11404  054B  1C03               	skipc
 11405  054C  03BB               	decf	(sprintf@width+1)^(0+128),f
 11406  054D  02BB               	subwf	(sprintf@width+1)^(0+128),f
 11407  054E  2D53               	goto	l3860
 11408  054F                     l3858:
 11409                           
 11410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11411  054F  1683               	bsf	3,5	;RP0=1, select bank1
 11412  0550  1303               	bcf	3,6	;RP1=0, select bank1
 11413  0551  01BA               	clrf	sprintf@width^(0+128)
 11414  0552  01BB               	clrf	(sprintf@width+1)^(0+128)
 11415  0553                     l3860:
 11416                           
 11417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11418  0553  083A               	movf	sprintf@width^(0+128),w
 11419  0554  043B               	iorwf	(sprintf@width+1)^(0+128),w
 11420  0555  1903               	btfsc	3,2
 11421  0556  2D58               	goto	u6101
 11422  0557  2D59               	goto	u6100
 11423  0558                     u6101:
 11424  0558  2D7C               	goto	l3868
 11425  0559                     u6100:
 11426  0559                     l3862:
 11427                           
 11428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11429  0559  3020               	movlw	32
 11430  055A  1283               	bcf	3,5	;RP0=0, select bank0
 11431  055B  1303               	bcf	3,6	;RP1=0, select bank0
 11432  055C  00EA               	movwf	??_sprintf
 11433  055D  1683               	bsf	3,5	;RP0=1, select bank1
 11434  055E  1303               	bcf	3,6	;RP1=0, select bank1
 11435  055F  0828               	movf	sprintf@sp^(0+128),w
 11436  0560  0084               	movwf	4
 11437  0561  1783               	bsf	3,7
 11438  0562  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 11439  0563  1383               	bcf	3,7
 11440  0564  1283               	bcf	3,5	;RP0=0, select bank0
 11441  0565  1303               	bcf	3,6	;RP1=0, select bank0
 11442  0566  086A               	movf	??_sprintf,w
 11443  0567  0080               	movwf	0
 11444  0568                     l3864:
 11445  0568  3001               	movlw	1
 11446  0569  1683               	bsf	3,5	;RP0=1, select bank1
 11447  056A  1303               	bcf	3,6	;RP1=0, select bank1
 11448  056B  07A8               	addwf	sprintf@sp^(0+128),f
 11449  056C  1803               	skipnc
 11450  056D  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 11451  056E  3000               	movlw	0
 11452  056F  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 11453  0570                     l3866:
 11454  0570  30FF               	movlw	255
 11455  0571  07BA               	addwf	sprintf@width^(0+128),f
 11456  0572  1803               	skipnc
 11457  0573  0ABB               	incf	(sprintf@width+1)^(0+128),f
 11458  0574  30FF               	movlw	255
 11459  0575  07BB               	addwf	(sprintf@width+1)^(0+128),f
 11460  0576  083A               	movf	sprintf@width^(0+128),w
 11461  0577  043B               	iorwf	(sprintf@width+1)^(0+128),w
 11462  0578  1D03               	btfss	3,2
 11463  0579  2D7B               	goto	u6111
 11464  057A  2D7C               	goto	u6110
 11465  057B                     u6111:
 11466  057B  2D59               	goto	l3862
 11467  057C                     u6110:
 11468  057C                     l3868:
 11469                           
 11470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11471  057C  3003               	movlw	3
 11472  057D  0538               	andwf	sprintf@flag^(0+128),w
 11473  057E  1283               	bcf	3,5	;RP0=0, select bank0
 11474  057F  1303               	bcf	3,6	;RP1=0, select bank0
 11475  0580  00EA               	movwf	??_sprintf
 11476  0581  3000               	movlw	0
 11477  0582  1683               	bsf	3,5	;RP0=1, select bank1
 11478  0583  1303               	bcf	3,6	;RP1=0, select bank1
 11479  0584  0539               	andwf	(sprintf@flag+1)^(0+128),w
 11480  0585  1283               	bcf	3,5	;RP0=0, select bank0
 11481  0586  1303               	bcf	3,6	;RP1=0, select bank0
 11482  0587  00EB               	movwf	??_sprintf+1
 11483  0588  086A               	movf	??_sprintf,w
 11484  0589  046B               	iorwf	??_sprintf+1,w
 11485  058A  1903               	btfsc	3,2
 11486  058B  2D8D               	goto	u6121
 11487  058C  2D8E               	goto	u6120
 11488  058D                     u6121:
 11489  058D  2D9E               	goto	l3874
 11490  058E                     u6120:
 11491  058E                     l3870:
 11492                           
 11493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11494  058E  302D               	movlw	45
 11495  058F  00EA               	movwf	??_sprintf
 11496  0590  1683               	bsf	3,5	;RP0=1, select bank1
 11497  0591  1303               	bcf	3,6	;RP1=0, select bank1
 11498  0592  0828               	movf	sprintf@sp^(0+128),w
 11499  0593  0084               	movwf	4
 11500  0594  1783               	bsf	3,7
 11501  0595  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 11502  0596  1383               	bcf	3,7
 11503  0597  1283               	bcf	3,5	;RP0=0, select bank0
 11504  0598  1303               	bcf	3,6	;RP1=0, select bank0
 11505  0599  086A               	movf	??_sprintf,w
 11506  059A  0080               	movwf	0
 11507  059B  160A  118A  2D1B   	goto	l3626
 11508  059E                     l3874:
 11509                           
 11510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11511  059E  3001               	movlw	1
 11512  059F  1683               	bsf	3,5	;RP0=1, select bank1
 11513  05A0  1303               	bcf	3,6	;RP1=0, select bank1
 11514  05A1  07AA               	addwf	sprintf@f^(0+128),f
 11515  05A2  30FF               	movlw	-1
 11516  05A3  072A               	addwf	sprintf@f^(0+128),w
 11517  05A4  0084               	movwf	4
 11518  05A5  120A  158A  200A  120A  118A  	fcall	stringdir
 11519  05AA  1283               	bcf	3,5	;RP0=0, select bank0
 11520  05AB  1303               	bcf	3,6	;RP1=0, select bank0
 11521  05AC  00EA               	movwf	??_sprintf
 11522  05AD  086A               	movf	??_sprintf,w
 11523  05AE  1683               	bsf	3,5	;RP0=1, select bank1
 11524  05AF  1303               	bcf	3,6	;RP1=0, select bank1
 11525  05B0  00C8               	movwf	sprintf@c^(0+128)
 11526  05B1  0848               	movf	sprintf@c^(0+128),w
 11527  05B2  1D03               	btfss	3,2
 11528  05B3  2DB5               	goto	u6131
 11529  05B4  2DB8               	goto	u6130
 11530  05B5                     u6131:
 11531  05B5  160A  118A  2D06   	goto	l3622
 11532  05B8                     u6130:
 11533  05B8                     l3876:
 11534                           
 11535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11536  05B8  1683               	bsf	3,5	;RP0=1, select bank1
 11537  05B9  1303               	bcf	3,6	;RP1=0, select bank1
 11538  05BA  0828               	movf	sprintf@sp^(0+128),w
 11539  05BB  0084               	movwf	4
 11540  05BC  1783               	bsf	3,7
 11541  05BD  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 11542  05BE  1383               	bcf	3,7
 11543  05BF  0180               	clrf	0
 11544  05C0                     l363:
 11545  05C0  0008               	return
 11546  05C1                     __end_of_sprintf:

Data Sizes:
    Strings     58
    Constant    144
    Data        0
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     44      69
    BANK3            96      0      90
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> cadena2(BANK3[30]), cadena1(BANK3[30]), v1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    envio_caract@st	PTR unsigned char  size(1) Largest target is 30
		 -> cadena2(BANK3[30]), cadena1(BANK3[30]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> v1(BANK1[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _envio_caract->_envio_char
    _conversion->___xxtofl
    ___flmul->___awdiv
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _Interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversion->___flmul
    ___flmul->___awdiv

Critical Paths under _Interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _Interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   45261
                                             41 BANK1      3     3      0
                                _ADC
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___flsub
                         _conversion
                       _envio_caract
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   33737
                                             74 BANK0      5     5      0
                                              8 BANK1     33    26      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _envio_caract                                         4     4      0     178
                                              4 COMMON     4     4      0
                         _envio_char
 ---------------------------------------------------------------------------------
 (2) _envio_char                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                          13     9      4    5064
                                             34 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              6 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              7 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0      23
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupciones                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fladd
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___flsub
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___xxtofl (ARG)
   _conversion
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _envio_caract
     _envio_char
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _Interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      FA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5A       9       93.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      FA      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 22:12:09 2021

                        _c 00D4                          pc 0002               ___awdiv@sign 0025  
                       _v1 00DB                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l101 1093                        l114 1B5D  
                      l132 1908                        l141 1A85                        l117 1A44  
                      l126 1007                        l150 1ACB                        l302 15EB  
                      l144 1960                        l129 1945                        l138 19A5  
                      l162 18E8                        l155 08E2                        l171 1981  
                      l403 1CBB                        l340 030E                        l165 18F0  
                      _ADC 08DB                        l520 1D24                        l280 0FFF  
                      l273 07CD                        l363 05C0                        l700 1354  
                      l348 04AB                        l541 1FC2                        l533 093B  
                      l623 1C53                        l367 19B2                        l553 1B7C  
                      l561 1DAF                        l369 19CA                        l537 1FFF  
                      l802 0C90                        l554 1B98                        l562 1DC8  
                      l570 1083                        l538 1F64                        l811 07F6  
                      l555 1BAD                        l715 1448                        l707 14FA  
                      l740 1BFD                        l580 1083                        l548 1FF2  
                      l725 148E                        l558 1D43                        l566 18FB  
                      l719 146C                        l840 1E32                        l736 14EE  
                      l728 14CC                        l584 1F41                        l809 07E4  
                      l737 14FA                        l577 106E                        l585 1EB3  
                      l673 1B11                        l834 1DED                        l595 1F34  
                      l683 1A04                        l836 1E84                        l588 1F04  
                      l790 0C9C                        l694 12D6                        l854 192B  
                      l847 1E4E                        l848 1E5A                        l698 137D  
                      l796 0C08                        fsr0 0004                        indf 0000  
             ___awmod@sign 0079               ___flmul@aexp 003A               ___flmul@bexp 003B  
             ___flmul@sign 0035               ___flmul@temp 0040               ___flmul@prod 003C  
                     ADC@a 0074                       ?_ADC 0070               ___fltol@exp1 005F  
                     l3000 1CAD                       l3010 1B90                       l3002 1CB3  
                     l3012 1BAA                       l3020 1D3B                       l2302 1003  
                     l3110 1DD1                       l3014 1BAC                       l3006 1B5E  
                     l3030 1D8B                       l3022 1D57                       l3102 1BAE  
                     l2310 1CC8                       l3120 1DFE                       l3112 1DD5  
                     l3200 1B41                       l3008 1B74                       l3032 1DC5  
                     l3024 1D5F                       l3040 18F9                       l3104 1BB2  
                     l2400 1AF9                       l2320 1CD9                       l2312 1CCA  
                     l2304 1CBC                       l3130 1E29                       l3122 1E03  
                     l3114 1DE5                       l3210 1B50                       l3202 1B45  
                     l3034 1DC7                       l3026 1D63                       l3018 1D25  
                     l3042 18FB                       l2402 1AFF                       l2330 1CF1  
                     l2322 1CDF                       l2314 1CCE                       l2306 1CBF  
                     l3140 1E5C                       l3132 1E39                       l3124 1E10  
                     l3116 1DF5                       l3108 1DCC                       l3220 1B5A  
                     l3212 1B54                       l3204 1B49                       l3028 1D87  
                     l2500 1308                       l3060 103E                       l3052 101E  
                     l2404 1B00                       l2420 19DF                       l2412 19CB  
                     l2332 1D02                       l2324 1CE2                       l2340 1D16  
                     l2316 1CD3                       l2308 1CC3                       l3230 1A69  
                     l3222 1A45                       l3142 1E72                       l3134 1E44  
                     l3126 1E17                       l3214 1B55                       l3206 1B4C  
                     l3038 18F1                       l2510 131C                       l2502 130C  
                     l3062 1042                       l3070 105C                       l3054 1033  
                     l3046 1008                       l2406 1B07                       l2422 19E3  
                     l2414 19D1                       l2430 1A00                       l2342 1D1B  
                     l2334 1D08                       l2326 1CE9                       l2318 1CD7  
                     l2350 08E4                       l3232 18FC                       l3224 1A4B  
                     l3240 1994                       l3144 1E77                       l3136 1E48  
                     l3128 1E1B                       l3216 1B58                       l3208 1B4D  
                     l3160 1B1E                       l3152 1B12                       l2600 1493  
                     l2520 1361                       l2504 1310                       l2512 1320  
                     l2440 1284                       l3080 1078                       l3056 1034  
                     l3048 1015                       l2408 1B0D                       l2424 19ED  
                     l2416 19D4                       l2344 1D20                       l2336 1D09  
                     l2328 1CED                       l2360 08F8                       l2352 08E8  
                     l3226 1A54                       l3242 199A                       l3234 1983  
                     l3250 1AA7                       l2290 07D3                       l3146 1E7B  
                     l3138 1E52                       l3218 1B59                       l3170 1B25  
                     l3162 1B1F                       l3154 1B16                       l2610 14D1  
                     l2602 1498                       l2522 1363                       l2530 1375  
                     l2514 1321                       l2506 1314                       l2450 1298  
                     l2442 1285                       l2434 1273                       l3058 103C  
                     l3090 1C1C                       l3082 1BFE                       l2426 19F3  
                     l2418 19DB                       l2338 1D10                       l2370 0910  
                     l2362 08FE                       l2354 08ED                       l3228 1A63  
                     l3244 199F                       l3236 1988                       l3252 1AAF  
                     l2292 07DA                       l2700 0AFC                       l3148 1E7C  
                     l3180 1B2C                       l3172 1B26                       l3164 1B20  
                     l3156 1B17                       l2620 14E8                       l2612 14D6  
                     l2604 14A6                       l2540 13A6                       l2532 1381  
                     l2524 1367                       l2516 1338                       l2508 1318  
                     l2460 12AE                       l2444 128A                       l2452 129A  
                     l2436 127A                       l3076 1063                       l3068 104A  
                     l3092 1C2E                       l3084 1C06                       l2428 19FA  
                     l2380 0932                       l2372 091A                       l2364 0901  
                     l2356 08EF                       l2348 08E3                       l3238 198D  
                     l3246 1A86                       l2294 07DE                       l2710 0BB4  
                     l2702 0B29                       l2630 0943                       l3254 1A08  
                     l3190 1B33                       l3182 1B2D                       l3174 1B29  
                     l3166 1B23                       l3158 1B1C                       l2622 14EA  
                     l2614 14DE                       l2606 14AA                       l2550 13BD  
                     l2542 13AA                       l2534 1386                       l2526 1368  
                     l2518 1358                       l2470 12C3                       l2462 12B4  
                     l2454 12A2                       l2446 128F                       l2438 1280  
                     l3078 1073                       l3094 1C3C                       l3086 1C0B  
                     l2390 1AD6                       l2382 0937                       l2374 0920  
                     l2366 0908                       l2358 08F3                       l3248 1A8B  
                     l2296 07ED                       l2288 07D1                       l2720 0BD9  
                     l2712 0BBD                       l2704 0B39                       l2640 0958  
                     l2632 0949                       l3256 1A3C                       l3192 1B36  
                     l3184 1B2E                       l3176 1B2A                       l3168 1B24  
                     l2624 14F5                       l2616 14E3                       l2608 14C8  
                     l2560 1420                       l2552 13BE                       l2544 13AE  
                     l2528 1371                       l2480 12E0                       l2472 12CB  
                     l2464 12B8                       l2456 12A7                       l2448 1297  
                     l3096 1C45                       l3088 1C18                       l2392 1AD9  
                     l2376 0927                       l2368 090C                       l2298 07F2  
                     l2730 0BF1                       l2722 0BE2                       l2714 0BCB  
                     l2706 0B66                       l2650 0975                       l2642 0960  
                     l2634 094D                       l3530 1976                       l3194 1B39  
                     l3186 1B31                       l3178 1B2B                       l2626 14F9  
                     l2618 14E4                       l2570 1455                       l2562 1426  
                     l2554 13C7                       l2546 13B7                       l2538 138F  
                     l2490 12F4                       l2482 12E4                       l2474 12CC  
                     l2466 12B9                       l2458 12AD                       l3098 1C4B  
                     l2394 1AE0                       l2386 1ACC                       l2802 06D9  
                     l2378 092D                       l3532 08DB                       l2740 0C20  
                     l2732 0C05                       l2716 0BD4                       l2724 0BE8  
                     l2708 0B8C                       l2660 098C                       l2652 0979  
                     l2644 0962                       l2636 094E                       l2628 093C  
                     l3524 1962                       l3196 1B3C                       l3188 1B32  
                     l2580 1470                       l2564 142B                       l2548 13B9  
                     l2556 13CC                       l2492 12F8                       l2484 12E8  
                     l2468 12BE                       l2476 12CE                       l2396 1AE4  
                     l2388 1AD0                       l2804 06DF                       l2812 0CA0  
                     l3700 1704                       l3620 14FB                       l2750 0C5B  
                     l2742 0C24                       l2726 0BEC                       l2718 0BD8  
                     l2662 098E                       l2654 097A                       l2646 096A  
                     l2638 0953                       l3526 1965                       l3198 1B3D  
                     l2582 1473                       l2574 145E                       l2558 13E2  
                     l2566 143A                       l2590 1480                       l2494 12FC  
                     l2486 12EC                       l2478 12DC                       l2910 1F29  
                     l2902 1F10                       l2398 1AE8                       l2830 0E26  
                     l2814 0CA4                       l3702 174F                       l3710 1794  
                     l3630 1528                       l3622 1506                       l2760 0C88  
                     l2752 0C6A                       l2744 0C3D                       l2736 0C0D  
                     l2728 0BED                       l2680 09FF                       l2672 09A9  
                     l2664 0996                       l2656 097F                       l2648 096F  
                     l3528 1970                       l2592 1481                       l2584 1475  
                     l2576 1467                       l2568 1450                       l2496 1300  
                     l2488 12F0                       l2912 1F39                       l2904 1F22  
                     l2808 078A                       l2824 0D97                       l2816 0CA6  
                     l3800 031F                       l3720 006A                       l3712 17A3  
                     l3704 1768                       l3640 1574                       l3632 1538  
                     l3624 150C                       l2770 1930                       l2762 0C89  
                     l2754 0C74                       l2738 0C12                       l2746 0C43  
                     l2690 0A7C                       l2682 0A2B                       l2674 09B9  
                     l2666 099B                       l2658 0984                       l2594 1485  
                     l2586 147A                       l2578 146B                       l2498 1304  
                     l2930 1F6D                       l2922 1F58                       l2842 0F44  
                     l2826 0D9E                       l2818 0CAD                       l2834 0E53  
                     l3810 03F3                       l3802 0324                       l3730 00C3  
                     l3722 0079                       l3714 17EA                       l3706 1771  
                     l3650 159E                       l3634 153C                       l3642 1584  
                     l3626 151B                       l2772 1936                       l2780 194A  
                     l2764 0C94                       l2756 0C76                       l2748 0C50  
                     l2692 0A99                       l2684 0A47                       l2676 09C6  
                     l2668 09A0                       l2596 148B                       l2588 147C  
                     l2940 1FA4                       l2932 1F7E                       l2916 1F42  
                     l2860 192A                       l2852 191B                       l2844 0F4B  
                     l2836 0E5A                       l3820 0471                       l3812 0412  
                     l3804 0333                       l3740 014F                       l3724 0094  
                     l3716 0028                       l3708 178C                       l3660 15E9  
                     l3652 15B3                       l3644 1592                       l3636 1551  
                     l3628 1524                       l3900 1136                       l2774 1939  
                     l2782 1950                       l2758 0C84                       l2694 0AA9  
                     l2686 0A63                       l2678 09E3                       l2790 18E8  
                     l2942 1FB2                       l2934 1F80                       l2918 1F4F  
                     l2870 1EA1                       l2854 191C                       l3830 049D  
                     l3822 0480                       l3814 0422                       l3806 033B  
                     l3742 0151                       l3734 00E2                       l3726 009D  
                     l3718 0043                       l3670 1627                       l3654 15CE  
                     l3646 1593                       l3638 156C                       l3910 11DF  
                     l3902 1190                       l2776 1942                       l2768 192D  
                     l2784 1953                       l2696 0AC6                       l2688 0A6C  
                     l2792 18EE                       l2944 1FB3                       l2936 1F89  
                     l2928 1F65                       l2880 1EC9                       l2864 1E85  
                     l2856 1922                       l2848 0FD3                       l3840 04E5  
                     l3832 04A5                       l3824 0488                       l3816 042A  
                     l3808 03B4                       l3760 01EF                       l3752 019A  
                     l3728 00A5                       l3736 00EB                       l3680 1673  
                     l3672 162B                       l3664 15EF                       l3656 15D6  
                     l3648 159B                       l3920 120D                       l3904 1198  
                     l2786 1958                       l2778 1947                       l2698 0ADF  
                     l2970 19A8                       l2962 1FE7                       l2954 1FCE  
                     l2946 1FBC                       l2938 1F92                       l2890 1EF5  
                     l2882 1ECB                       l2866 1E98                       l2794 05C4  
                     l2858 1928                       l3850 0523                       l3842 04ED  
                     l3834 04B6                       l3826 048E                       l3818 0469  
                     l3770 021F                       l3762 01F8                       l3754 01A8  
                     l3738 0120                       l3690 16A5                       l3682 1677  
                     l3674 1639                       l3666 160D                       l3658 15E7  
                     l3930 1237                       l3922 1213                       l3914 1201  
                     l3906 11D5                       l2788 195B                       l2972 19AC  
                     l2964 1FF7                       l2948 1FC6                       l2956 1FE0  
                     l2892 1EF6                       l2884 1ED4                       l2876 1EB4  
                     l2796 05CA                       l3860 0553                       l3852 052C  
                     l3844 04FF                       l3836 04C1                       l3780 02A7  
                     l3772 0233                       l3764 0207                       l3756 01D7  
                     l3748 0153                       l3692 16B8                       l3684 167B  
                     l3676 1641                       l3668 1621                       l3828 0495  
                     l3940 1265                       l3932 1242                       l3924 1217  
                     l3916 1203                       l3908 11D9                       l2990 1C7A  
                     l2982 1C54                       l2974 19B9                       l2894 1EFE  
                     l2886 1EDD                       l2878 1EBA                       l3870 058E  
                     l3862 0559                       l3854 0530                       l3846 0507  
                     l3838 04D4                       l3790 02D9                       l3774 0240  
                     l3758 01DD                       l3694 16DB                       l3686 1694  
                     l3678 165A                       l3942 126C                       l3934 1249  
                     l3926 1226                       l3918 1209                       l2992 1C83  
                     l2984 1C66                       l2976 19C0                       l2968 19A6  
                     l2896 1F08                       l2888 1EEB                       l3864 0568  
                     l3856 053B                       l3848 050D                       l3792 02DF  
                     l3776 0249                       l3784 02B8                       l3768 0210  
                     l3696 16DF                       l3688 169F                       l3936 1256  
                     l3928 122C                       l2994 1C95                       l2986 1C69  
                     l2978 19C6                       l3866 0570                       l3858 054F  
                     l3794 02EC                       l3786 02C2                       l3778 0288  
                     l3698 16E5                       l3874 059E                       l3938 1261  
                     l3890 10C4                       l2996 1CA3                       l2988 1C76  
                     l3868 057C                       l3796 02FB                       l3788 02D1  
                     l3876 05B8                       l3964 1605                       l3892 10E2  
                     l3884 1084                       l2998 1CA4                       l3798 0304  
                     l3894 110A                       l3886 109B                       l3896 1116  
                     l3888 10A4                       l3898 112D                       STR_1 08C4  
                     STR_2 08AB                       STR_3 08AB                       STR_4 08D4  
                     STR_5 08A0                       STR_6 08B2                       u3010 0910  
                     u3011 090F                       u3100 1AF9                       u3020 091A  
                     u3101 1AF8                       u3021 0919                       u3005 0902  
                     u4000 0C6A                       u3200 128A                       u3120 1B0D  
                     u3040 092D                       u4001 0C69                       u3201 1289  
                     u3121 1B0C                       u3105 1AF5                       u3041 092C  
                     u3025 0916                       u4010 0C88                       u3210 128F  
                     u3130 19D1                       u3050 0932                       u4011 0C87  
                     u3211 128E                       u3115 1B01                       u3131 19D0  
                     u3051 0931                       u3035 0921                       u4020 18EE  
                     u3300 1344                       u3220 12AD                       u3060 1AD6  
                     u4005 0C66                       u4021 18ED                       u3221 12AC  
                     u3061 1AD5                       u3310 1358                       u3230 12B8  
                     u3150 19E3                       u4030 05CA                       u4110 0CA4  
                     u3311 1357                       u3231 12B7                       u3151 19E2  
                     u4031 05C9                       u4111 0CA3                       u5000 1E38  
                     u3400 13BD                       u3320 1367                       u3240 12BE  
                     u3080 1AE8                       u3160 19ED                       u4200 0E5A  
                     u4120 0CAD                       u5001 1E37                       u3401 13BC  
                     u3321 1366                       u3241 12BD                       u3081 1AE7  
                     u3161 19EC                       u3145 19D5                       u4105 0795  
                     u4201 0E59                       u4121 0CAC                       u3250 12C3  
                     u3251 12C2                       u3075 1ADA                       u5100 1A95  
                     u5020 1E48                       u3500 1470                       u3420 13E2  
                     u3340 137D                       u3260 12DC                       u4300 1E98  
                     u3180 1A00                       u5021 1E47                       u3501 146F  
                     u3421 13E1                       u3341 137C                       u3261 12DB  
                     u4301 1E97                       u3181 19FF                       u3165 19E9  
                     u4045 05E7                       u5110 1AB9                       u5030 1E4E  
                     u3510 147A                       u3350 1381                       u3270 12E0  
                     u3190 1284                       u4310 1EB2                       u4070 06DF  
                     u5031 1E4D                       u5015 1E3D                       u3511 1479  
                     u3431 13F9                       u3423 13DE                       u3415 13C0  
                     u3351 1380                       u3335 136A                       u3271 12DF  
                     u3191 1283                       u4311 1EB1                       u3095 1AE9  
                     u3175 19F4                       u4071 06DE                       u4055 0643  
                     u4215 0E7C                       u4135 0CCF                       u5120 1ACB  
                     u5040 1E52                       u3600 14D1                       u3520 1480  
                     u3440 140D                       u3432 13FA                       u3360 1386  
                     u3280 1338                       u4400 1F28                       u4240 0F4B  
                     u4160 0D9E                       u6000 0494                       u5121 1ACA  
                     u5041 1E51                       u3601 14D0                       u3521 147F  
                     u3441 140E                       u3433 13FF                       u3361 1385  
                     u3281 1337                       u4401 1F27                       u4065 0698  
                     u4241 0F4A                       u4225 0EB8                       u4161 0D9D  
                     u4145 0D0B                       u6001 0493                       u5050 1E67  
                     u3610 14D6                       u3530 1485                       u3450 142B  
                     u3442 1413                       u3434 1400                       u3290 1343  
                     u4330 1EEB                       u6010 049D                       u3611 14D5  
                     u3531 1484                       u3451 142A                       u3443 1414  
                     u3435 1405                       u3371 1398                       u3291 1341  
                     u4331 1EEA                       u4235 0F03                       u4155 0D56  
                     u6011 049C                       u3700 0984                       u5060 1E77  
                     u3620 14E3                       u3540 148B                       u3460 1450  
                     u3436 1406                       u3380 13AA                       u3372 139F  
                     u4500 1FCD                       u4420 1F39                       u6100 0559  
                     u6020 04A5                       u3701 0983                       u5061 1E76  
                     u3621 14E2                       u3541 148A                       u3461 144F  
                     u3381 13A9                       u3373 13A6                       u3285 1334  
                     u4501 1FCC                       u4421 1F38                       u4325 1ED6  
                     u4085 06FC                       u6101 0558                       u6021 04A4  
                     u3710 099B                       u5070 1E7B                       u3630 14E8  
                     u3550 1492                       u3470 1455                       u3390 13AE  
                     u4430 1F4F                       u4350 1F04                       u2910 1CF1  
                     u6110 057C                       u6030 04B6                       u3711 099A  
                     u5071 1E7A                       u5055 1E62                       u3631 14E7  
                     u3551 1491                       u3471 1454                       u3391 13AD  
                     u4431 1F4E                       u4415 1F2B                       u4351 1F03  
                     u4335 1EE7                       u4095 0749                       u2911 1CF0  
                     u4255 0F5E                       u4175 0DB1                       u6111 057B  
                     u6031 04B5                       u5080 1988                       u2840 07DE  
                     u3720 09A0                       u3640 14F9                       u3560 1498  
                     u4600 1C66                       u4520 1FDF                       u4440 1F63  
                     u4360 1F08                       u4280 1922                       u6120 058E  
                     u6040 04D4                       u5081 1987                       u2841 07DD  
                     u3721 099F                       u3641 14F8                       u3561 1497  
                     u4601 1C65                       u4521 1FDE                       u4441 1F62  
                     u4361 1F07                       u4345 1EF7                       u4281 1921  
                     u2905 1CE3                       u4265 0F9A                       u4185 0DED  
                     u6121 058D                       u6041 04D3                       u5090 199A  
                     u3650 094D                       u3570 14AA                       u3490 146B  
                     u4530 1FE6                       u4370 1F0F                       u4290 1928  
                     u2930 1D02                       u6130 05B8                       u6050 04ED  
                     u5091 1999                       u3811 0AEE                       u3731 09F1  
                     u3651 094C                       u3571 14A9                       u3491 146A  
                     u4531 1FE5                       u4515 1FCF                       u4371 1F0E  
                     u4291 1927                       u2931 1D01                       u4275 0FD6  
                     u4195 0E29                       u6131 05B5                       u6051 04EC  
                     u6035 04B2                       u2860 07F2                       u3900 0BD8  
                     u3812 0AF5                       u3732 09F8                       u3660 0953  
                     u4700 1D3B                       u3580 14B9                       u4620 1C7A  
                     u4460 1FA4                       u6060 04FF                       u6140 1198  
                     u2861 07F1                       u3901 0BD7                       u3821 0B1B  
                     u3813 0AFC                       u3805 0AC8                       u3741 0A0D  
                     u3733 09FF                       u3661 0952                       u4701 1D3A  
                     u3485 1460                       u4621 1C79                       u4461 1FA3  
                     u2925 1CF2                       u6061 04FE                       u6045 04D0  
                     u6141 1197                       u3822 0B22                       u3742 0A14  
                     u3670 0958                       u4710 1D57                       u3590 14C8  
                     u4550 1FF7                       u4390 1F21                       u2950 1D16  
                     u2870 1CC3                       u6070 050D                       u6150 11DF  
                     u2855 07E5                       u3831 0B48                       u3823 0B29  
                     u3751 0A39                       u3743 0A1B                       u3671 0957  
                     u4711 1D56                       u3591 14C7                       u4615 1C6B  
                     u4551 1FF6                       u4455 1F8B                       u4391 1F20  
                     u2951 1D15                       u2935 1CFE                       u2871 1CC2  
                     u6071 050C                       u6207 1269                       u6151 11DE  
                     u3920 0BEC                       u3840 0B72                       u3832 0B4F  
                     u3752 0A40                       u3680 0979                       u5600 1981  
                     u4720 1D63                       u4800 1042                       u4640 1C95  
                     u4560 19AC                       u4480 1FC2                       u2960 1D1B  
                     u2880 1CCE                       u6080 0523                       u6160 122C  
                     u3921 0BEB                       u3833 0B56                       u3761 0A55  
                     u3753 0A47                       u3681 0978                       u5601 1980  
                     u6217 1B47                       u4721 1D62                       u3585 14B4  
                     u4801 1041                       u4641 1C94                       u4561 19AB  
                     u4545 1FE9                       u4481 1FC1                       u4465 1FA0  
                     u4385 1F11                       u2961 1D1A                       u2945 1D0A  
                     u2881 1CCD                       u6081 0522                       u6161 122B  
                     u3930 0BF1                       u3762 0A5C                       u3690 097F  
                     u4810 1049                       u4490 1FC6                       u2890 1CDF  
                     u2970 08E8                       u6090 053B                       u6170 1237  
                     u6227 1955                       u3931 0BF0                       u3915 0BDB  
                     u3851 0B7E                       u3763 0A63                       u3691 097E  
                     u4731 1D72                       u4811 1048                       u4635 1C7C  
                     u4491 1FC5                       u4475 1FB5                       u2891 1CDE  
                     u2971 08E7                       u6091 053A                       u6171 1236  
                     u3940 0C05                       u3860 0B9A                       u3852 0B85  
                     u4740 1D8B                       u4732 1D73                       u4660 1CB3  
                     u4900 1C1C                       u2980 08F3                       u5700 1592  
                     u6180 1256                       u6237 195D                       u3941 0C04  
                     u3853 0B8C                       u3845 0B6D                       u3781 0A8B  
                     u4741 1D8A                       u4733 1D78                       u4661 1CB2  
                     u4645 1C91                       u4901 1C1B                       u2981 08F2  
                     u6085 051F                       u5701 1591                       u6181 1255  
                     u3950 0C0C                       u3782 0A92                       u4670 1B74  
                     u4734 1D79                       u4830 105B                       u4910 1C2E  
                     u4590 19C6                       u2990 08FE                       u5710 15E6  
                     u6247 1A4F                       u3951 0C0B                       u3871 0BA6  
                     u3791 0AB8                       u3783 0A99                       u3775 0A65  
                     u4671 1B73                       u4751 1D9A                       u4735 1D7E  
                     u4831 105A                       u4655 1CA5                       u4911 1C2D  
                     u4591 19C5                       u4575 19B3                       u2991 08FD  
                     u6095 0537                       u5711 15E5                       u3960 0C12  
                     u3872 0BAD                       u3792 0ABF                       u4680 1B90  
                     u4760 1DC5                       u4752 1D9B                       u4736 1D7F  
                     u4840 1062                       u5800 0028                       u5720 1621  
                     u6257 1A5E                       u3961 0C11                       u3873 0BB4  
                     u3865 0B95                       u3793 0AC6                       u4681 1B8F  
                     u4761 1DC4                       u4753 1DA0                       u4841 1061  
                     u4825 104B                       u4585 19BA                       u5801 17FA  
                     u5721 161E                       u3970 0C24                       u4690 1BAA  
                     u4754 1DA1                       u4770 18F9                       u4930 1C4B  
                     u5810 0043                       u5730 1627                       u6267 1A6B  
                     u3971 0C23                       u4691 1BA9                       u4755 1DA6  
                     u4771 18F8                       u4931 1C4A                       u4915 1C2A  
                     u5811 0042                       u5731 1626                       u3980 0C33  
                     u4940 1DD1                       u4756 1DA7                       u4860 1073  
                     u4780 1015                       u5900 021F                       u5820 006A  
                     u5740 165A                       u6277 193D                       u3885 0BB6  
                     u4941 1DD0                       u4765 1DC1                       u4861 1072  
                     u4781 1014                       u4925 1C3D                       u5901 021E  
                     u5821 0069                       u5805 17F5                       u5741 1659  
                     u6197 121F                       u3990 0C50                       u4950 1DD5  
                     u4870 1078                       u4790 102C                       u5910 0233  
                     u5830 0079                       u5750 1694                       u5670 150C  
                     u3991 0C4F                       u3895 0BCD                       u4951 1DD4  
                     u4695 1BA6                       u4871 1077                       u4855 1065  
                     u5911 0232                       u5831 0078                       u5751 1693  
                     u5671 150B                       i1l96 1913                       u4960 1DF5  
                     u4880 1C06                       u5840 0094                       u5760 16DF  
                     u5680 1538                       u3985 0C2E                       u4961 1DF4  
                     u4881 1C05                       u5905 021B                       u5841 0093  
                     u5761 16DE                       u5681 1537                       u5930 02C1  
                     u5770 1768                       u5690 1584                       u3995 0C4C  
                     u4795 1027                       u5931 02C0                       u5835 0075  
                     u5771 1767                       u5691 1583                       u4980 1E16  
                     u5940 02EC                       u5860 0199                       u5780 178C  
                     u4981 1E15                       u5941 02EB                       u5925 024E  
                     u5861 0198                       u5781 178B                       u5950 02FB  
                     u5870 01A8                       u5790 17A3                       u4975 1E08  
                     u4895 1C0D                       u5951 02FA                       u5871 01A7  
                     u5855 0158                       u5791 17A2                       u5960 0324  
                     u5880 01D7                       u5961 0323                       u5945 02E8  
                     u5881 01D6                       u5865 0195                       u5890 01EF  
                     u4995 1E2A                       u5955 02F7                       u5891 01EE  
                     u5795 179F                       u5990 0470                       u5991 046F  
                     u5975 03B9                       u5985 042F                       _TXIF 0064  
        ?_Lcd_Write_String 0076                       _dato 006F                       _main 1084  
                     _vol1 00D0                       _vol2 00CC                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0078               _sprintf$1178 00AF  
          __end_of_Lcd_Cmd 1946                      ??_ADC 0073              ___fltol@sign1 005E  
          __end_of___fladd 14FB                      ?_main 0070            __end_of___awdiv 1D25  
          __end_of___flneg 18FC            __end_of___awmod 093C            __end_of___flmul 0C9D  
          __end_of___flsub 1BFE            __end_of___fltol 1084                      _ANSEL 0188  
          __end_of___lldiv 1CBC            ___awdiv@divisor 0020            __end_of___llmod 1C54  
          __end_of___lwdiv 1B12            __end_of___lwmod 1A05            ___awdiv@counter 0024  
                    _RCREG 001A                      _SPBRG 0099                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 08A0                      _scale 0C9D  
          __end_of_isdigit 192C                      _setup 1B12                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 05C1  
         __end_of_Lcd_Init 1A86              ?_envio_caract 0070           __end_of_Lcd_Port 1008  
          __initialization 000F               __end_of_main 1273                     ??_main 00C9  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0077  
                   ?_scale 0042                     _ADRESH 001E           ___awdiv@dividend 0022  
                   ?_setup 0070                     _ANSELH 0189                     i1l3536 1909  
                   i1l3538 190F                     u561_20 190F                     u561_21 190E  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001B  
         __end_of___xxtofl 1E85             ??_envio_caract 0074           __end_of__powers_ 0844  
                   ___flge 1D25                     ___fleq 1B5E                  ??___fladd 005E  
                   ___wmul 19A6                  ??___awdiv 007A                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 0030                  ??___flsub 007B  
                ??___fltol 0059                  ??___lldiv 0020                  ??___llmod 0020  
                ??___lwdiv 0079                  ??___lwmod 0077                     _fround 05C1  
         ___awdiv@quotient 0026            ___awmod@divisor 0073                     _valadc 00DA  
                   _valor1 00D9                     _valor2 00D8            ___awmod@counter 0078  
                ??_isdigit 0073         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 006A            Lcd_Set_Cursor@a 0079            Lcd_Set_Cursor@b 0077  
               ___flge@ff1 0073                 ___flge@ff2 0077               ___xxtofl@arg 0022  
             ___xxtofl@exp 0021               ___xxtofl@val 0073                 ___fleq@ff1 0073  
               ___fleq@ff2 0077    __end_of__initialization 0024                 ___flneg@f1 0073  
        __end_of_Lcd_Clear 1909                 ___fltol@f1 0055             __pcstackCOMMON 0070  
            __end_of_scale 1000              __end_of_setup 1B5E             _Lcd_Set_Cursor 1982  
               __div_to_l_ 1F42                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0026            __div_to_l_@cntr 0025                    ??_scale 0046  
          __div_to_l_@quot 0021               sprintf@width 00BA                    ??_setup 0073  
               __pbssBANK0 006F                 __pbssBANK1 00CC                 __pbssBANK3 0190  
           envio_char@dato 0073              __div_to_l_@f1 0073              __div_to_l_@f2 0077  
           envio_caract@st 0077          __end_of__Umul8_16 07F7                 __pmaintext 1084  
                  ?___flge 0073                    ?___fleq 0073                    ?___wmul 0073  
               __pintentry 0004                    ?_fround 0042  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 19A6                  ?___xxtofl 0073       __end_of_envio_caract 1982  
               ??_Lcd_Init 0077                 ??_Lcd_Port 0073                 __stringtab 0800  
           _Lcd_Write_Char 1946                    _Lcd_Cmd 192C                 _conversion 1A05  
        __end_of__npowers_ 0878                 _scale$1177 0050                 _envio_char 18E7  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1273  
                  ___awdiv 1CBC                    ___flneg 18F1                    ___awmod 08E3  
                  ___flmul 093C                    ___flsub 1BAE                    ___fltol 1008  
                  ___lldiv 1C54            __size_of___wmul 0025                    ___llmod 1BFE  
                  ___lwdiv 1ACC                    _cadena1 01CC                    _cadena2 01AE  
                  _cadena3 0190                    ___lwmod 19CB            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0077                    __ptext1 14FB                    __ptext2 0C9D  
                  __ptext3 08E3                    __ptext4 1CBC                    __ptext5 191A  
                  __ptext6 05C1                    __ptext7 19CB                    __ptext8 1ACC  
                  __ptext9 1E85               __size_of_ADC 0008                ?__div_to_l_ 0073  
                  _dpowers 0878    __size_of_Interrupciones 0011                    _isdigit 191A  
               ??___xxtofl 0077           ___awmod@dividend 0075                    _sprintf 14FB  
                  clrloop0 07F8     __end_of_Lcd_Write_Char 1961       end_of_initialization 0024  
            conversion@var 004E            ___lldiv@divisor 0073            ___lldiv@counter 0025  
                _RCSTAbits 0018                    psplit$0 C0031                  Lcd_Port@a 0073  
           __tdiv_to_l_@f1 0073             __tdiv_to_l_@f2 0077              ??__tdiv_to_l_ 0020  
                _PORTCbits 0007                ___fladd@grs 0069              ___xxtofl@sign 0020  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0020  
              ___flmul@grs 0036                ?_conversion 0042                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE                ?_envio_char 0070                  _Lcd_Clear 18FC  
           __end_of___flge 1DC9             __end_of___fleq 1BAE             __end_of___wmul 19CB  
         _Lcd_Write_String 1A86      __size_of_envio_caract 0021          pnum$text1_split_1 0031  
              _BAUDCTLbits 0187             __end_of_fround 07CE        start_initialization 000F  
              __end_of_ADC 08E3        __end_of__tdiv_to_l_ 1F42          __size_of_Lcd_Init 0041  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0073            ___llmod@counter 0021  
             _envio_caract 1961                 ?_Lcd_Clear 0070                   ??___flge 0020  
                 ??___fleq 0020                   ??___wmul 0077                  __Umul8_16 07CE  
          Lcd_Write_Char@a 0075                   ??_fround 0046              sprintf@tmpval 00BC  
           _Interrupciones 1909                  ___fladd@a 005A                  ___fladd@b 0056  
      __size_of_conversion 0040                 fround@prec 0055                  ___flmul@a 002C  
                ___flmul@b 0028                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
      __size_of_envio_char 000A          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B8                sprintf@eexp 00C0                sprintf@fval 00C2  
              sprintf@prec 00C6              envio_caract@i 0075           ___lwdiv@dividend 0022  
         ??_Lcd_Set_Cursor 0078                   ?___fladd 0056                   ?___awdiv 0020  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 0028  
                 ?___flsub 00A0                   ?___fltol 0055                   ?___lldiv 0073  
                 ?___llmod 0073                  __npowers_ 0844                 ?__Umul8_16 0073  
                 ?___lwdiv 0020                   ?___lwmod 0073     __end_of_Interrupciones 191A  
                __pstrings 0800                __tdiv_to_l_ 1E85               ??__div_to_l_ 0020  
                 ?_isdigit 0070           ___lwdiv@quotient 0024                   ?_sprintf 00A8  
           __size_of_scale 0363             __size_of_setup 004C          interrupt_function 0004  
           ___wmul@product 0077                  clear_ram0 07F7                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C         __end_of__div_to_l_ 2000  
              ??_Lcd_Clear 0077            ?_Interrupciones 0070                 _ADCON0bits 001F  
              __stringbase 080F                 _ADCON1bits 009F          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 1A45                   _Lcd_Port 1002  
 __end_of_Lcd_Write_String 1ACC               ??_conversion 0046            conversion@valor 004A  
         __size_of_Lcd_Cmd 001A               ??_envio_char 0073                ??__Umul8_16 0075  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003A                _fround$1175 0051  
              _fround$1176 004D         __end_of__stringtab 0810                _isdigit$998 0073  
               sprintf@val 00B4         __end_of_conversion 1A45                   ___xxtofl 1DC9  
         __size_of_isdigit 0012            ___lwdiv@divisor 0020            ___lwdiv@counter 0026  
                 __ptext10 1F42                   __ptext11 19A6                   __ptext20 1B12  
                 __ptext12 1BFE                   __ptext21 1961                   __ptext13 1C54  
                 __ptext30 1A45                   __ptext22 18E7                   __ptext14 1008  
                 __ptext31 18FC                   __ptext23 1A05                   __ptext15 1BAE  
                 __ptext32 192C                   __ptext24 1DC9                   __ptext16 1273  
                 __ptext33 1002                   __ptext25 093C                   __ptext17 18F1  
                 __ptext34 08DB                   __ptext26 07CE                   __ptext18 1D25  
                 __ptext35 1909                   __ptext27 1A86                   __ptext19 1B5E  
                 __ptext28 1946                   __ptext29 1982                   __powers_ 0810  
       __end_of_envio_char 18F1           __size_of_sprintf F0C6              __size_of_main 01EF  
                pnum$text1 000C                 _INTCONbits 000B                   isdigit@c 0074  
                 scale@scl 0054                   intlevel1 0000                  sprintf@ap 00B3  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00A8  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0075           ___lldiv@dividend 0077  
                stringcode 080A                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 007A  
             ?__tdiv_to_l_ 0073     __Umul8_16@multiplicand 0073                   sprintf@c 00C8  
                 sprintf@f 00AA           ___lldiv@quotient 0021            ___lwmod@divisor 0073  
          ___lwmod@counter 0078                   stringdir 080A                   stringtab 0800  
            ___fladd@signs 0066               ___fladd@aexp 0067               ___fladd@bexp 0068  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020           ??_Interrupciones 0070  

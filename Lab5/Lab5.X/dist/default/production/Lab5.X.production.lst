

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 18 23:48:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235                           
   236                           	psect	strings
   237  1000                     __pstrings:
   238  1000                     stringtab:
   239  1000                     __stringtab:
   240  1000                     stringcode:	
   241                           ;	String table - string pointers are 1 byte each
   242                           
   243  1000                     stringdir:
   244  1000  3010               	movlw	high stringdir
   245  1001  008A               	movwf	10
   246  1002  0804               	movf	4,w
   247  1003  0A84               	incf	4,f
   248  1004  0782               	addwf	2,f
   249  1005                     __stringbase:
   250  1005  3400               	retlw	0
   251  1006                     __end_of__stringtab:
   252  1006                     __powers_:
   253  1006  3400               	retlw	0
   254  1007  3400               	retlw	0
   255  1008  3480               	retlw	128
   256  1009  343F               	retlw	63
   257  100A  3400               	retlw	0
   258  100B  3400               	retlw	0
   259  100C  3420               	retlw	32
   260  100D  3441               	retlw	65
   261  100E  3400               	retlw	0
   262  100F  3400               	retlw	0
   263  1010  34C8               	retlw	200
   264  1011  3442               	retlw	66
   265  1012  3400               	retlw	0
   266  1013  3400               	retlw	0
   267  1014  347A               	retlw	122
   268  1015  3444               	retlw	68
   269  1016  3400               	retlw	0
   270  1017  3440               	retlw	64
   271  1018  341C               	retlw	28
   272  1019  3446               	retlw	70
   273  101A  3400               	retlw	0
   274  101B  3450               	retlw	80
   275  101C  34C3               	retlw	195
   276  101D  3447               	retlw	71
   277  101E  3400               	retlw	0
   278  101F  3424               	retlw	36
   279  1020  3474               	retlw	116
   280  1021  3449               	retlw	73
   281  1022  3480               	retlw	128
   282  1023  3496               	retlw	150
   283  1024  3418               	retlw	24
   284  1025  344B               	retlw	75
   285  1026  3420               	retlw	32
   286  1027  34BC               	retlw	188
   287  1028  34BE               	retlw	190
   288  1029  344C               	retlw	76
   289  102A  3428               	retlw	40
   290  102B  346B               	retlw	107
   291  102C  346E               	retlw	110
   292  102D  344E               	retlw	78
   293  102E  34F9               	retlw	249
   294  102F  3402               	retlw	2
   295  1030  3415               	retlw	21
   296  1031  3450               	retlw	80
   297  1032  34EC               	retlw	236
   298  1033  3478               	retlw	120
   299  1034  34AD               	retlw	173
   300  1035  3460               	retlw	96
   301  1036  34CA               	retlw	202
   302  1037  34F2               	retlw	242
   303  1038  3449               	retlw	73
   304  1039  3471               	retlw	113
   305  103A                     __end_of__powers_:
   306  103A                     __npowers_:
   307  103A  3400               	retlw	0
   308  103B  3400               	retlw	0
   309  103C  3480               	retlw	128
   310  103D  343F               	retlw	63
   311  103E  34CD               	retlw	205
   312  103F  34CC               	retlw	204
   313  1040  34CC               	retlw	204
   314  1041  343D               	retlw	61
   315  1042  340A               	retlw	10
   316  1043  34D7               	retlw	215
   317  1044  3423               	retlw	35
   318  1045  343C               	retlw	60
   319  1046  346F               	retlw	111
   320  1047  3412               	retlw	18
   321  1048  3483               	retlw	131
   322  1049  343A               	retlw	58
   323  104A  3417               	retlw	23
   324  104B  34B7               	retlw	183
   325  104C  34D1               	retlw	209
   326  104D  3438               	retlw	56
   327  104E  34AC               	retlw	172
   328  104F  34C5               	retlw	197
   329  1050  3427               	retlw	39
   330  1051  3437               	retlw	55
   331  1052  34BD               	retlw	189
   332  1053  3437               	retlw	55
   333  1054  3486               	retlw	134
   334  1055  3435               	retlw	53
   335  1056  3495               	retlw	149
   336  1057  34BF               	retlw	191
   337  1058  34D6               	retlw	214
   338  1059  3433               	retlw	51
   339  105A  3477               	retlw	119
   340  105B  34CC               	retlw	204
   341  105C  342B               	retlw	43
   342  105D  3432               	retlw	50
   343  105E  345F               	retlw	95
   344  105F  3470               	retlw	112
   345  1060  3489               	retlw	137
   346  1061  3430               	retlw	48
   347  1062  34FF               	retlw	255
   348  1063  34E6               	retlw	230
   349  1064  34DB               	retlw	219
   350  1065  342E               	retlw	46
   351  1066  3408               	retlw	8
   352  1067  34E5               	retlw	229
   353  1068  343C               	retlw	60
   354  1069  341E               	retlw	30
   355  106A  3460               	retlw	96
   356  106B  3442               	retlw	66
   357  106C  34A2               	retlw	162
   358  106D  340D               	retlw	13
   359  106E                     __end_of__npowers_:
   360  106E                     _dpowers:
   361  106E  3401               	retlw	1
   362  106F  3400               	retlw	0
   363  1070  3400               	retlw	0
   364  1071  3400               	retlw	0
   365  1072  340A               	retlw	10
   366  1073  3400               	retlw	0
   367  1074  3400               	retlw	0
   368  1075  3400               	retlw	0
   369  1076  3464               	retlw	100
   370  1077  3400               	retlw	0
   371  1078  3400               	retlw	0
   372  1079  3400               	retlw	0
   373  107A  34E8               	retlw	232
   374  107B  3403               	retlw	3
   375  107C  3400               	retlw	0
   376  107D  3400               	retlw	0
   377  107E  3410               	retlw	16
   378  107F  3427               	retlw	39
   379  1080  3400               	retlw	0
   380  1081  3400               	retlw	0
   381  1082  34A0               	retlw	160
   382  1083  3486               	retlw	134
   383  1084  3401               	retlw	1
   384  1085  3400               	retlw	0
   385  1086  3440               	retlw	64
   386  1087  3442               	retlw	66
   387  1088  340F               	retlw	15
   388  1089  3400               	retlw	0
   389  108A  3480               	retlw	128
   390  108B  3496               	retlw	150
   391  108C  3498               	retlw	152
   392  108D  3400               	retlw	0
   393  108E  3400               	retlw	0
   394  108F  34E1               	retlw	225
   395  1090  34F5               	retlw	245
   396  1091  3405               	retlw	5
   397  1092  3400               	retlw	0
   398  1093  34CA               	retlw	202
   399  1094  349A               	retlw	154
   400  1095  343B               	retlw	59
   401  1096                     __end_of_dpowers:
   402  1096                     STR_1:
   403  1096  3425               	retlw	37	;'%'
   404  1097  3430               	retlw	48	;'0'
   405  1098  342E               	retlw	46	;'.'
   406  1099  3430               	retlw	48	;'0'
   407  109A  3466               	retlw	102	;'f'
   408  109B  3400               	retlw	0
   409                           
   410                           	psect	nvBANK1
   411  00D5                     __pnvBANK1:
   412  00D5                     _f:
   413  00D5                     	ds	4
   414  0018                     _RCSTAbits	set	24
   415  0009                     _PORTE	set	9
   416  0007                     _PORTC	set	7
   417  0006                     _PORTB	set	6
   418  0005                     _PORTA	set	5
   419  0019                     _TXREG	set	25
   420  001A                     _RCREG	set	26
   421  0008                     _PORTD	set	8
   422  000C                     _PIR1bits	set	12
   423  0006                     _PORTBbits	set	6
   424  000B                     _INTCONbits	set	11
   425  0064                     _TXIF	set	100
   426  009A                     _SPBRGH	set	154
   427  0099                     _SPBRG	set	153
   428  0098                     _TXSTAbits	set	152
   429  0096                     _IOCBbits	set	150
   430  0095                     _WPUBbits	set	149
   431  0081                     _OPTION_REGbits	set	129
   432  008C                     _PIE1bits	set	140
   433  008F                     _OSCCONbits	set	143
   434  0089                     _TRISE	set	137
   435  0088                     _TRISD	set	136
   436  0087                     _TRISC	set	135
   437  0086                     _TRISB	set	134
   438  0085                     _TRISA	set	133
   439  0187                     _BAUDCTLbits	set	391
   440  0189                     _ANSELH	set	393
   441  0188                     _ANSEL	set	392
   442                           
   443                           	psect	cinit
   444  000F                     start_initialization:	
   445                           ; #config settings
   446                           
   447  000F                     __initialization:
   448                           
   449                           ; Clear objects allocated to BANK0
   450  000F  1283               	bcf	3,5	;RP0=0, select bank0
   451  0010  1303               	bcf	3,6	;RP1=0, select bank0
   452  0011  01EF               	clrf	__pbssBANK0& (0+127)
   453                           
   454                           ; Clear objects allocated to BANK1
   455  0012  1683               	bsf	3,5	;RP0=1, select bank1
   456  0013  1303               	bcf	3,6	;RP1=0, select bank1
   457  0014  01CB               	clrf	__pbssBANK1& (0+127)
   458  0015  01CC               	clrf	(__pbssBANK1+1)& (0+127)
   459  0016  01CD               	clrf	(__pbssBANK1+2)& (0+127)
   460  0017  01CE               	clrf	(__pbssBANK1+3)& (0+127)
   461  0018  01CF               	clrf	(__pbssBANK1+4)& (0+127)
   462  0019  01D0               	clrf	(__pbssBANK1+5)& (0+127)
   463  001A  01D1               	clrf	(__pbssBANK1+6)& (0+127)
   464  001B  01D2               	clrf	(__pbssBANK1+7)& (0+127)
   465  001C  01D3               	clrf	(__pbssBANK1+8)& (0+127)
   466  001D  01D4               	clrf	(__pbssBANK1+9)& (0+127)
   467  001E                     end_of_initialization:	
   468                           ;End of C runtime variable initialization code
   469                           
   470  001E                     __end_of__initialization:
   471  001E  0183               	clrf	3
   472  001F  160A  158A  2ECA   	ljmp	_main	;jump to C main() function
   473                           
   474                           	psect	bssBANK0
   475  006F                     __pbssBANK0:
   476  006F                     _contador:
   477  006F                     	ds	1
   478                           
   479                           	psect	bssBANK1
   480  00CB                     __pbssBANK1:
   481  00CB                     _s:
   482  00CB                     	ds	10
   483                           
   484                           	psect	cstackBANK1
   485  00A0                     __pcstackBANK1:
   486  00A0                     ?___flsub:
   487  00A0                     ___flsub@a:	
   488                           ; 4 bytes @ 0x0
   489                           
   490                           
   491                           ; 4 bytes @ 0x0
   492  00A0                     	ds	4
   493  00A4                     ___flsub@b:
   494                           
   495                           ; 4 bytes @ 0x4
   496  00A4                     	ds	4
   497  00A8                     ??_sprintf:
   498                           
   499                           ; 1 bytes @ 0x8
   500  00A8                     	ds	5
   501  00AD                     _sprintf$1133:
   502                           
   503                           ; 4 bytes @ 0xD
   504  00AD                     	ds	4
   505  00B1                     sprintf@ap:
   506                           
   507                           ; 1 bytes @ 0x11
   508  00B1                     	ds	1
   509  00B2                     sprintf@val:
   510                           
   511                           ; 4 bytes @ 0x12
   512  00B2                     	ds	4
   513  00B6                     sprintf@tmpval:
   514                           
   515                           ; 4 bytes @ 0x16
   516  00B6                     	ds	4
   517  00BA                     sprintf@eexp:
   518                           
   519                           ; 2 bytes @ 0x1A
   520  00BA                     	ds	2
   521  00BC                     sprintf@flag:
   522                           
   523                           ; 2 bytes @ 0x1C
   524  00BC                     	ds	2
   525  00BE                     sprintf@width:
   526                           
   527                           ; 2 bytes @ 0x1E
   528  00BE                     	ds	2
   529  00C0                     sprintf@fval:
   530                           
   531                           ; 4 bytes @ 0x20
   532  00C0                     	ds	4
   533  00C4                     sprintf@prec:
   534                           
   535                           ; 2 bytes @ 0x24
   536  00C4                     	ds	2
   537  00C6                     sprintf@sp:
   538                           
   539                           ; 1 bytes @ 0x26
   540  00C6                     	ds	1
   541  00C7                     sprintf@c:
   542                           
   543                           ; 1 bytes @ 0x27
   544  00C7                     	ds	1
   545  00C8                     ??_main:
   546                           
   547                           ; 1 bytes @ 0x28
   548  00C8                     	ds	3
   549                           
   550                           	psect	cstackCOMMON
   551  0070                     __pcstackCOMMON:
   552  0070                     ?_isdigit:
   553  0070                     ?_setup:	
   554                           ; 1 bit 
   555                           
   556  0070                     ?_envio_caract:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_isr:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??_isr:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_main:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_envio_char:	
   569                           ; 1 bytes @ 0x0
   570                           
   571                           
   572                           ; 1 bytes @ 0x0
   573  0070                     	ds	3
   574  0073                     ?___fleq:
   575  0073                     ?___flge:	
   576                           ; 1 bit 
   577                           
   578  0073                     ??_setup:	
   579                           ; 1 bit 
   580                           
   581  0073                     ??_isdigit:	
   582                           ; 1 bytes @ 0x3
   583                           
   584  0073                     ??_envio_char:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     ?__Umul8_16:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     ?___wmul:	
   591                           ; 2 bytes @ 0x3
   592                           
   593  0073                     ?___awmod:	
   594                           ; 2 bytes @ 0x3
   595                           
   596  0073                     ?___lwmod:	
   597                           ; 2 bytes @ 0x3
   598                           
   599  0073                     ?__tdiv_to_l_:	
   600                           ; 2 bytes @ 0x3
   601                           
   602  0073                     ?__div_to_l_:	
   603                           ; 4 bytes @ 0x3
   604                           
   605  0073                     ?___lldiv:	
   606                           ; 4 bytes @ 0x3
   607                           
   608  0073                     ?___flneg:	
   609                           ; 4 bytes @ 0x3
   610                           
   611  0073                     ?___llmod:	
   612                           ; 4 bytes @ 0x3
   613                           
   614  0073                     ?___xxtofl:	
   615                           ; 4 bytes @ 0x3
   616                           
   617  0073                     envio_char@dato:	
   618                           ; 4 bytes @ 0x3
   619                           
   620  0073                     __Umul8_16@multiplicand:	
   621                           ; 1 bytes @ 0x3
   622                           
   623  0073                     _isdigit$959:	
   624                           ; 1 bytes @ 0x3
   625                           
   626  0073                     ___wmul@multiplier:	
   627                           ; 1 bytes @ 0x3
   628                           
   629  0073                     ___awmod@divisor:	
   630                           ; 2 bytes @ 0x3
   631                           
   632  0073                     ___lwmod@divisor:	
   633                           ; 2 bytes @ 0x3
   634                           
   635  0073                     ___lldiv@divisor:	
   636                           ; 2 bytes @ 0x3
   637                           
   638  0073                     __div_to_l_@f1:	
   639                           ; 4 bytes @ 0x3
   640                           
   641  0073                     ___fleq@ff1:	
   642                           ; 4 bytes @ 0x3
   643                           
   644  0073                     ___flge@ff1:	
   645                           ; 4 bytes @ 0x3
   646                           
   647  0073                     ___flneg@f1:	
   648                           ; 4 bytes @ 0x3
   649                           
   650  0073                     __tdiv_to_l_@f1:	
   651                           ; 4 bytes @ 0x3
   652                           
   653  0073                     ___llmod@divisor:	
   654                           ; 4 bytes @ 0x3
   655                           
   656  0073                     ___xxtofl@val:	
   657                           ; 4 bytes @ 0x3
   658                           
   659                           
   660                           ; 4 bytes @ 0x3
   661  0073                     	ds	1
   662  0074                     ??_envio_caract:
   663  0074                     isdigit@c:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 1 bytes @ 0x4
   668  0074                     	ds	1
   669  0075                     ??__Umul8_16:
   670  0075                     envio_caract@i:	
   671                           ; 1 bytes @ 0x5
   672                           
   673  0075                     ___wmul@multiplicand:	
   674                           ; 2 bytes @ 0x5
   675                           
   676  0075                     ___awmod@dividend:	
   677                           ; 2 bytes @ 0x5
   678                           
   679  0075                     ___lwmod@dividend:	
   680                           ; 2 bytes @ 0x5
   681                           
   682                           
   683                           ; 2 bytes @ 0x5
   684  0075                     	ds	2
   685  0077                     ??___wmul:
   686  0077                     ??___awmod:	
   687                           ; 1 bytes @ 0x7
   688                           
   689  0077                     ??___flneg:	
   690                           ; 1 bytes @ 0x7
   691                           
   692  0077                     ??___lwmod:	
   693                           ; 1 bytes @ 0x7
   694                           
   695  0077                     ??___xxtofl:	
   696                           ; 1 bytes @ 0x7
   697                           
   698  0077                     envio_caract@st:	
   699                           ; 1 bytes @ 0x7
   700                           
   701  0077                     ___wmul@product:	
   702                           ; 1 bytes @ 0x7
   703                           
   704  0077                     ___lldiv@dividend:	
   705                           ; 2 bytes @ 0x7
   706                           
   707  0077                     __div_to_l_@f2:	
   708                           ; 4 bytes @ 0x7
   709                           
   710  0077                     ___fleq@ff2:	
   711                           ; 4 bytes @ 0x7
   712                           
   713  0077                     ___flge@ff2:	
   714                           ; 4 bytes @ 0x7
   715                           
   716  0077                     __tdiv_to_l_@f2:	
   717                           ; 4 bytes @ 0x7
   718                           
   719  0077                     ___llmod@dividend:	
   720                           ; 4 bytes @ 0x7
   721                           
   722                           
   723                           ; 4 bytes @ 0x7
   724  0077                     	ds	1
   725  0078                     ___awmod@counter:
   726  0078                     ___lwmod@counter:	
   727                           ; 1 bytes @ 0x8
   728                           
   729                           
   730                           ; 1 bytes @ 0x8
   731  0078                     	ds	1
   732  0079                     ??___lwdiv:
   733  0079                     ___awmod@sign:	
   734                           ; 1 bytes @ 0x9
   735                           
   736                           
   737                           ; 1 bytes @ 0x9
   738  0079                     	ds	1
   739  007A                     ??___awdiv:
   740                           
   741                           ; 1 bytes @ 0xA
   742  007A                     	ds	1
   743  007B                     ??___flsub:
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:	
   747                           ; 1 bytes @ 0xB
   748                           
   749  0020                     ??__tdiv_to_l_:
   750  0020                     ??__div_to_l_:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0020                     ??___lldiv:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ??___fleq:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0020                     ??___flge:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0020                     ??___llmod:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0020                     ?___awdiv:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     ?___lwdiv:	
   769                           ; 2 bytes @ 0x0
   770                           
   771  0020                     ___xxtofl@sign:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0020                     ___awdiv@divisor:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0020                     ___lwdiv@divisor:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     __Umul8_16@product:	
   781                           ; 2 bytes @ 0x0
   782                           
   783                           
   784                           ; 2 bytes @ 0x0
   785  0020                     	ds	1
   786  0021                     ___llmod@counter:
   787  0021                     ___xxtofl@exp:	
   788                           ; 1 bytes @ 0x1
   789                           
   790  0021                     ___lldiv@quotient:	
   791                           ; 1 bytes @ 0x1
   792                           
   793  0021                     __div_to_l_@quot:	
   794                           ; 4 bytes @ 0x1
   795                           
   796                           
   797                           ; 4 bytes @ 0x1
   798  0021                     	ds	1
   799  0022                     ___awdiv@dividend:
   800  0022                     ___lwdiv@dividend:	
   801                           ; 2 bytes @ 0x2
   802                           
   803  0022                     __Umul8_16@word_mpld:	
   804                           ; 2 bytes @ 0x2
   805                           
   806  0022                     ___xxtofl@arg:	
   807                           ; 2 bytes @ 0x2
   808                           
   809                           
   810                           ; 4 bytes @ 0x2
   811  0022                     	ds	2
   812  0024                     ___awdiv@counter:
   813  0024                     __Umul8_16@multiplier:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0024                     ___lwdiv@quotient:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0024                     __tdiv_to_l_@quot:	
   820                           ; 2 bytes @ 0x4
   821                           
   822                           
   823                           ; 4 bytes @ 0x4
   824  0024                     	ds	1
   825  0025                     ___lldiv@counter:
   826  0025                     ___awdiv@sign:	
   827                           ; 1 bytes @ 0x5
   828                           
   829  0025                     __div_to_l_@cntr:	
   830                           ; 1 bytes @ 0x5
   831                           
   832                           
   833                           ; 1 bytes @ 0x5
   834  0025                     	ds	1
   835  0026                     ?_conversion:
   836  0026                     __div_to_l_@exp1:	
   837                           ; 4 bytes @ 0x6
   838                           
   839  0026                     ___lwdiv@counter:	
   840                           ; 1 bytes @ 0x6
   841                           
   842  0026                     ___awdiv@quotient:	
   843                           ; 1 bytes @ 0x6
   844                           
   845                           
   846                           ; 2 bytes @ 0x6
   847  0026                     	ds	2
   848  0028                     ?___flmul:
   849  0028                     __tdiv_to_l_@cntr:	
   850                           ; 4 bytes @ 0x8
   851                           
   852  0028                     ___flmul@b:	
   853                           ; 1 bytes @ 0x8
   854                           
   855                           
   856                           ; 4 bytes @ 0x8
   857  0028                     	ds	1
   858  0029                     __tdiv_to_l_@exp1:
   859                           
   860                           ; 1 bytes @ 0x9
   861  0029                     	ds	1
   862  002A                     ??_conversion:
   863                           
   864                           ; 1 bytes @ 0xA
   865  002A                     	ds	2
   866  002C                     ___flmul@a:
   867                           
   868                           ; 4 bytes @ 0xC
   869  002C                     	ds	2
   870  002E                     conversion@dato:
   871                           
   872                           ; 4 bytes @ 0xE
   873  002E                     	ds	2
   874  0030                     ??___flmul:
   875                           
   876                           ; 1 bytes @ 0x10
   877  0030                     	ds	2
   878  0032                     conversion@valor:
   879                           
   880                           ; 1 bytes @ 0x12
   881  0032                     	ds	3
   882  0035                     ___flmul@sign:
   883                           
   884                           ; 1 bytes @ 0x15
   885  0035                     	ds	1
   886  0036                     ___flmul@grs:
   887                           
   888                           ; 4 bytes @ 0x16
   889  0036                     	ds	4
   890  003A                     ___flmul@aexp:
   891                           
   892                           ; 1 bytes @ 0x1A
   893  003A                     	ds	1
   894  003B                     ___flmul@bexp:
   895                           
   896                           ; 1 bytes @ 0x1B
   897  003B                     	ds	1
   898  003C                     ___flmul@prod:
   899                           
   900                           ; 4 bytes @ 0x1C
   901  003C                     	ds	4
   902  0040                     ___flmul@temp:
   903                           
   904                           ; 2 bytes @ 0x20
   905  0040                     	ds	2
   906  0042                     ?_fround:
   907  0042                     ?_scale:	
   908                           ; 4 bytes @ 0x22
   909                           
   910                           
   911                           ; 4 bytes @ 0x22
   912  0042                     	ds	4
   913  0046                     ??_fround:
   914  0046                     ??_scale:	
   915                           ; 1 bytes @ 0x26
   916                           
   917                           
   918                           ; 1 bytes @ 0x26
   919  0046                     	ds	7
   920  004D                     _fround$1131:
   921                           
   922                           ; 4 bytes @ 0x2D
   923  004D                     	ds	3
   924  0050                     _scale$1132:
   925                           
   926                           ; 4 bytes @ 0x30
   927  0050                     	ds	1
   928  0051                     _fround$1130:
   929                           
   930                           ; 4 bytes @ 0x31
   931  0051                     	ds	3
   932  0054                     scale@scl:
   933                           
   934                           ; 1 bytes @ 0x34
   935  0054                     	ds	1
   936  0055                     ?___fltol:
   937  0055                     fround@prec:	
   938                           ; 4 bytes @ 0x35
   939                           
   940  0055                     ___fltol@f1:	
   941                           ; 1 bytes @ 0x35
   942                           
   943                           
   944                           ; 4 bytes @ 0x35
   945  0055                     	ds	1
   946  0056                     ?___fladd:
   947  0056                     ___fladd@b:	
   948                           ; 4 bytes @ 0x36
   949                           
   950                           
   951                           ; 4 bytes @ 0x36
   952  0056                     	ds	3
   953  0059                     ??___fltol:
   954                           
   955                           ; 1 bytes @ 0x39
   956  0059                     	ds	1
   957  005A                     ___fladd@a:
   958                           
   959                           ; 4 bytes @ 0x3A
   960  005A                     	ds	4
   961  005E                     ??___fladd:
   962  005E                     ___fltol@sign1:	
   963                           ; 1 bytes @ 0x3E
   964                           
   965                           
   966                           ; 1 bytes @ 0x3E
   967  005E                     	ds	1
   968  005F                     ___fltol@exp1:
   969                           
   970                           ; 1 bytes @ 0x3F
   971  005F                     	ds	7
   972  0066                     ___fladd@signs:
   973                           
   974                           ; 1 bytes @ 0x46
   975  0066                     	ds	1
   976  0067                     ___fladd@aexp:
   977                           
   978                           ; 1 bytes @ 0x47
   979  0067                     	ds	1
   980  0068                     ___fladd@bexp:
   981                           
   982                           ; 1 bytes @ 0x48
   983  0068                     	ds	1
   984  0069                     ___fladd@grs:
   985                           
   986                           ; 1 bytes @ 0x49
   987  0069                     	ds	1
   988  006A                     ?_sprintf:
   989  006A                     sprintf@f:	
   990                           ; 2 bytes @ 0x4A
   991                           
   992                           
   993                           ; 1 bytes @ 0x4A
   994  006A                     	ds	5
   995                           
   996                           	psect	maintext
   997  1ECA                     __pmaintext:	
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1000 ;;
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 71 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : B00/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       0       3       0       0
  1020 ;;      Totals:         0       0       3       0       0
  1021 ;;Total ram usage:        3 bytes
  1022 ;; Hardware stack levels required when called:    5
  1023 ;; This function calls:
  1024 ;;		_conversion
  1025 ;;		_envio_caract
  1026 ;;		_setup
  1027 ;;		_sprintf
  1028 ;; This function is called by:
  1029 ;;		Startup code after reset
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _main
  1035  1ECA                     _main:
  1036  1ECA                     l3408:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1039                           
  1040                           
  1041                           ;main.c: 72:     setup();
  1042  1ECA  160A  158A  24F9  160A  158A  	fcall	_setup
  1043  1ECF                     l86:	
  1044                           ;main.c: 73:     while(1){
  1045                           
  1046                           
  1047                           ;main.c: 74:         f = conversion(contador);
  1048  1ECF  1283               	bcf	3,5	;RP0=0, select bank0
  1049  1ED0  1303               	bcf	3,6	;RP1=0, select bank0
  1050  1ED1  086F               	movf	_contador,w
  1051  1ED2  160A  158A  2496  160A  158A  	fcall	_conversion
  1052  1ED7  1283               	bcf	3,5	;RP0=0, select bank0
  1053  1ED8  1303               	bcf	3,6	;RP1=0, select bank0
  1054  1ED9  0829               	movf	?_conversion+3,w
  1055  1EDA  1683               	bsf	3,5	;RP0=1, select bank1
  1056  1EDB  1303               	bcf	3,6	;RP1=0, select bank1
  1057  1EDC  00D8               	movwf	(_f+3)^(0+128)
  1058  1EDD  1283               	bcf	3,5	;RP0=0, select bank0
  1059  1EDE  1303               	bcf	3,6	;RP1=0, select bank0
  1060  1EDF  0828               	movf	?_conversion+2,w
  1061  1EE0  1683               	bsf	3,5	;RP0=1, select bank1
  1062  1EE1  1303               	bcf	3,6	;RP1=0, select bank1
  1063  1EE2  00D7               	movwf	(_f+2)^(0+128)
  1064  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
  1065  1EE4  1303               	bcf	3,6	;RP1=0, select bank0
  1066  1EE5  0827               	movf	?_conversion+1,w
  1067  1EE6  1683               	bsf	3,5	;RP0=1, select bank1
  1068  1EE7  1303               	bcf	3,6	;RP1=0, select bank1
  1069  1EE8  00D6               	movwf	(_f+1)^(0+128)
  1070  1EE9  1283               	bcf	3,5	;RP0=0, select bank0
  1071  1EEA  1303               	bcf	3,6	;RP1=0, select bank0
  1072  1EEB  0826               	movf	?_conversion,w
  1073  1EEC  1683               	bsf	3,5	;RP0=1, select bank1
  1074  1EED  1303               	bcf	3,6	;RP1=0, select bank1
  1075  1EEE  00D5               	movwf	_f^(0+128)
  1076  1EEF                     l3410:
  1077                           
  1078                           ;main.c: 76:         sprintf(s,"%0.0f",f);
  1079  1EEF  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1080  1EF0  00C8               	movwf	??_main^(0+128)
  1081  1EF1  0848               	movf	??_main^(0+128),w
  1082  1EF2  1283               	bcf	3,5	;RP0=0, select bank0
  1083  1EF3  1303               	bcf	3,6	;RP1=0, select bank0
  1084  1EF4  00EA               	movwf	sprintf@f
  1085  1EF5  1683               	bsf	3,5	;RP0=1, select bank1
  1086  1EF6  1303               	bcf	3,6	;RP1=0, select bank1
  1087  1EF7  0858               	movf	(_f+3)^(0+128),w
  1088  1EF8  1283               	bcf	3,5	;RP0=0, select bank0
  1089  1EF9  1303               	bcf	3,6	;RP1=0, select bank0
  1090  1EFA  00EE               	movwf	?_sprintf+4
  1091  1EFB  1683               	bsf	3,5	;RP0=1, select bank1
  1092  1EFC  1303               	bcf	3,6	;RP1=0, select bank1
  1093  1EFD  0857               	movf	(_f+2)^(0+128),w
  1094  1EFE  1283               	bcf	3,5	;RP0=0, select bank0
  1095  1EFF  1303               	bcf	3,6	;RP1=0, select bank0
  1096  1F00  00ED               	movwf	?_sprintf+3
  1097  1F01  1683               	bsf	3,5	;RP0=1, select bank1
  1098  1F02  1303               	bcf	3,6	;RP1=0, select bank1
  1099  1F03  0856               	movf	(_f+1)^(0+128),w
  1100  1F04  1283               	bcf	3,5	;RP0=0, select bank0
  1101  1F05  1303               	bcf	3,6	;RP1=0, select bank0
  1102  1F06  00EC               	movwf	?_sprintf+2
  1103  1F07  1683               	bsf	3,5	;RP0=1, select bank1
  1104  1F08  1303               	bcf	3,6	;RP1=0, select bank1
  1105  1F09  0855               	movf	_f^(0+128),w
  1106  1F0A  1283               	bcf	3,5	;RP0=0, select bank0
  1107  1F0B  1303               	bcf	3,6	;RP1=0, select bank0
  1108  1F0C  00EB               	movwf	?_sprintf+1
  1109  1F0D  30CB               	movlw	(low (_s| 0))& (0+255)
  1110  1F0E  160A  118A  24FD  160A  158A  	fcall	_sprintf
  1111  1F13                     l3412:
  1112                           
  1113                           ;main.c: 78:         TXREG = ',';
  1114  1F13  302C               	movlw	44
  1115  1F14  1283               	bcf	3,5	;RP0=0, select bank0
  1116  1F15  1303               	bcf	3,6	;RP1=0, select bank0
  1117  1F16  0099               	movwf	25	;volatile
  1118  1F17                     l3414:
  1119                           
  1120                           ;main.c: 79:         envio_caract(s);
  1121  1F17  30CB               	movlw	(low (_s| 0))& (0+255)
  1122  1F18  160A  158A  2451  160A  158A  	fcall	_envio_caract
  1123  1F1D                     l3416:
  1124                           
  1125                           ;main.c: 80:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  1126  1F1D  3033               	movlw	51
  1127  1F1E  1683               	bsf	3,5	;RP0=1, select bank1
  1128  1F1F  1303               	bcf	3,6	;RP1=0, select bank1
  1129  1F20  00CA               	movwf	(??_main^(0+128)+2)
  1130  1F21  30BB               	movlw	187
  1131  1F22  00C9               	movwf	(??_main^(0+128)+1)
  1132  1F23  30DF               	movlw	223
  1133  1F24  00C8               	movwf	??_main^(0+128)
  1134  1F25                     u5677:
  1135  1F25  0BC8               	decfsz	??_main^(0+128),f
  1136  1F26  2F25               	goto	u5677
  1137  1F27  0BC9               	decfsz	(??_main^(0+128)+1),f
  1138  1F28  2F25               	goto	u5677
  1139  1F29  0BCA               	decfsz	(??_main^(0+128)+2),f
  1140  1F2A  2F25               	goto	u5677
  1141  1F2B  2ECF               	goto	l86
  1142  1F2C  120A  118A  280C   	ljmp	start
  1143  1F2F                     __end_of_main:
  1144                           
  1145                           	psect	text1
  1146  14FD                     __ptext1:	
  1147 ;; *************** function _sprintf *****************
  1148 ;; Defined at:
  1149 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  sp              1    wreg     PTR unsigned char 
  1152 ;;		 -> s(10), 
  1153 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1154 ;;		 -> STR_1(6), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  sp              1   38[BANK1 ] PTR unsigned char 
  1157 ;;		 -> s(10), 
  1158 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1159 ;;  tmpval          4   22[BANK1 ] struct .
  1160 ;;  val             4   18[BANK1 ] unsigned long 
  1161 ;;  prec            2   36[BANK1 ] int 
  1162 ;;  width           2   30[BANK1 ] int 
  1163 ;;  flag            2   28[BANK1 ] unsigned short 
  1164 ;;  eexp            2   26[BANK1 ] int 
  1165 ;;  cp              2    0        PTR const unsigned char 
  1166 ;;  len             2    0        unsigned int 
  1167 ;;  c               1   39[BANK1 ] unsigned char 
  1168 ;;  ap              1   17[BANK1 ] PTR void [1]
  1169 ;;		 -> ?_sprintf(2), 
  1170 ;;  d               1    0        unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  2   74[BANK0 ] int 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       5       0       0       0
  1181 ;;      Locals:         0       0      27       0       0
  1182 ;;      Temps:          0       0       5       0       0
  1183 ;;      Totals:         0       5      32       0       0
  1184 ;;Total ram usage:       37 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    4
  1187 ;; This function calls:
  1188 ;;		___awdiv
  1189 ;;		___fladd
  1190 ;;		___fleq
  1191 ;;		___flge
  1192 ;;		___flmul
  1193 ;;		___flneg
  1194 ;;		___flsub
  1195 ;;		___fltol
  1196 ;;		___lldiv
  1197 ;;		___llmod
  1198 ;;		___wmul
  1199 ;;		___xxtofl
  1200 ;;		__div_to_l_
  1201 ;;		__tdiv_to_l_
  1202 ;;		_fround
  1203 ;;		_isdigit
  1204 ;;		_scale
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function _sprintf
  1212  14FD                     _sprintf:
  1213                           
  1214                           ;incstack = 0
  1215                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1216                           ;sprintf@sp stored from wreg
  1217  14FD  1683               	bsf	3,5	;RP0=1, select bank1
  1218  14FE  1303               	bcf	3,6	;RP1=0, select bank1
  1219  14FF  00C6               	movwf	sprintf@sp^(0+128)
  1220  1500                     l3078:
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1223  1500  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1224  1501  00A8               	movwf	??_sprintf^(0+128)
  1225  1502  0828               	movf	??_sprintf^(0+128),w
  1226  1503  00B1               	movwf	sprintf@ap^(0+128)
  1227  1504                     L1:
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1230  1504  120A  118A  2D35   	goto	l3366
  1231  1507                     l3080:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1234  1507  3025               	movlw	37
  1235  1508  0647               	xorwf	sprintf@c^(0+128),w
  1236  1509  1903               	btfsc	3,2
  1237  150A  2D0C               	goto	u5081
  1238  150B  2D0D               	goto	u5080
  1239  150C                     u5081:
  1240  150C  2D19               	goto	l3086
  1241  150D                     u5080:
  1242  150D                     l3082:
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1245  150D  0847               	movf	sprintf@c^(0+128),w
  1246  150E  00A8               	movwf	??_sprintf^(0+128)
  1247  150F  0846               	movf	sprintf@sp^(0+128),w
  1248  1510  0084               	movwf	4
  1249  1511  0828               	movf	??_sprintf^(0+128),w
  1250  1512  1383               	bcf	3,7	;select IRP bank0
  1251  1513  0080               	movwf	0
  1252  1514                     l3084:
  1253  1514  3001               	movlw	1
  1254  1515  00A8               	movwf	??_sprintf^(0+128)
  1255  1516  0828               	movf	??_sprintf^(0+128),w
  1256  1517  07C6               	addwf	sprintf@sp^(0+128),f
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1259  1518  2D04               	goto	L1
  1260  1519                     l3086:
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1263  1519  01BE               	clrf	sprintf@width^(0+128)
  1264  151A  01BF               	clrf	(sprintf@width+1)^(0+128)
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1267  151B  01BC               	clrf	sprintf@flag^(0+128)
  1268  151C  01BD               	clrf	(sprintf@flag+1)^(0+128)
  1269  151D  2D25               	goto	l3092
  1270  151E                     l229:	
  1271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1272                           
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1275  151E  153C               	bsf	sprintf@flag^(0+128),2
  1276  151F                     l3088:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1279  151F  3001               	movlw	1
  1280  1520  00A8               	movwf	??_sprintf^(0+128)
  1281  1521  0828               	movf	??_sprintf^(0+128),w
  1282  1522  1283               	bcf	3,5	;RP0=0, select bank0
  1283  1523  1303               	bcf	3,6	;RP1=0, select bank0
  1284  1524  07EA               	addwf	sprintf@f,f
  1285  1525                     l3092:	
  1286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1287                           
  1288  1525  1283               	bcf	3,5	;RP0=0, select bank0
  1289  1526  086A               	movf	sprintf@f,w
  1290  1527  0084               	movwf	4
  1291  1528  160A  118A  2000  160A  118A  	fcall	stringdir
  1292  152D  1683               	bsf	3,5	;RP0=1, select bank1
  1293  152E  1303               	bcf	3,6	;RP1=0, select bank1
  1294  152F  00A8               	movwf	??_sprintf^(0+128)
  1295  1530  01A9               	clrf	(??_sprintf^(0+128)+1)
  1296                           
  1297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 1, Range of values is 0 to 0
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte            4     3 (average)
  1303                           ; direct_byte           11     8 (fixed)
  1304                           ; jumptable            260     6 (fixed)
  1305                           ;	Chosen strategy is simple_byte
  1306  1531  0829               	movf	(??_sprintf+1)^(0+128),w
  1307  1532  3A00               	xorlw	0	; case 0
  1308  1533  1903               	skipnz
  1309  1534  2D36               	goto	l3478
  1310  1535  2D3B               	goto	l3094
  1311  1536                     l3478:
  1312                           
  1313                           ; Switch size 1, requested type "simple"
  1314                           ; Number of cases is 1, Range of values is 48 to 48
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte            4     3 (average)
  1318                           ; direct_byte           14    11 (fixed)
  1319                           ; jumptable            263     9 (fixed)
  1320                           ;	Chosen strategy is simple_byte
  1321  1536  0828               	movf	??_sprintf^(0+128),w
  1322  1537  3A30               	xorlw	48	; case 48
  1323  1538  1903               	skipnz
  1324  1539  2D1E               	goto	l229
  1325  153A  2D3B               	goto	l3094
  1326  153B                     l3094:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1329  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  153D  086A               	movf	sprintf@f,w
  1332  153E  0084               	movwf	4
  1333  153F  160A  118A  2000  160A  118A  	fcall	stringdir
  1334  1544  160A  158A  243F  160A  118A  	fcall	_isdigit
  1335  1549  1C03               	btfss	3,0
  1336  154A  2D4C               	goto	u5091
  1337  154B  2D4D               	goto	u5090
  1338  154C                     u5091:
  1339  154C  2D93               	goto	l3106
  1340  154D                     u5090:
  1341  154D                     l3096:
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1344  154D  1683               	bsf	3,5	;RP0=1, select bank1
  1345  154E  1303               	bcf	3,6	;RP1=0, select bank1
  1346  154F  01BE               	clrf	sprintf@width^(0+128)
  1347  1550  01BF               	clrf	(sprintf@width+1)^(0+128)
  1348  1551                     l3098:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1351  1551  300A               	movlw	10
  1352  1552  00F3               	movwf	___wmul@multiplier
  1353  1553  3000               	movlw	0
  1354  1554  00F4               	movwf	___wmul@multiplier+1
  1355  1555  1683               	bsf	3,5	;RP0=1, select bank1
  1356  1556  1303               	bcf	3,6	;RP1=0, select bank1
  1357  1557  083F               	movf	(sprintf@width+1)^(0+128),w
  1358  1558  00F6               	movwf	___wmul@multiplicand+1
  1359  1559  083E               	movf	sprintf@width^(0+128),w
  1360  155A  00F5               	movwf	___wmul@multiplicand
  1361  155B  120A  118A  27DA  160A  118A  	fcall	___wmul
  1362  1560  0874               	movf	?___wmul+1,w
  1363  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1364  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1365  1563  00BF               	movwf	(sprintf@width+1)^(0+128)
  1366  1564  0873               	movf	?___wmul,w
  1367  1565  00BE               	movwf	sprintf@width^(0+128)
  1368  1566                     l3100:
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1371  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1372  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1373  1568  086A               	movf	sprintf@f,w
  1374  1569  0084               	movwf	4
  1375  156A  160A  118A  2000  160A  118A  	fcall	stringdir
  1376  156F  3ED0               	addlw	208
  1377  1570  1683               	bsf	3,5	;RP0=1, select bank1
  1378  1571  1303               	bcf	3,6	;RP1=0, select bank1
  1379  1572  00A8               	movwf	??_sprintf^(0+128)
  1380  1573  30FF               	movlw	255
  1381  1574  1803               	skipnc
  1382  1575  3000               	movlw	0
  1383  1576  00A9               	movwf	(??_sprintf^(0+128)+1)
  1384  1577  0828               	movf	??_sprintf^(0+128),w
  1385  1578  07BE               	addwf	sprintf@width^(0+128),f
  1386  1579  1803               	skipnc
  1387  157A  0ABF               	incf	(sprintf@width+1)^(0+128),f
  1388  157B  0829               	movf	(??_sprintf+1)^(0+128),w
  1389  157C  07BF               	addwf	(sprintf@width+1)^(0+128),f
  1390  157D                     l3102:
  1391  157D  3001               	movlw	1
  1392  157E  00A8               	movwf	??_sprintf^(0+128)
  1393  157F  0828               	movf	??_sprintf^(0+128),w
  1394  1580  1283               	bcf	3,5	;RP0=0, select bank0
  1395  1581  1303               	bcf	3,6	;RP1=0, select bank0
  1396  1582  07EA               	addwf	sprintf@f,f
  1397  1583                     l3104:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1400  1583  086A               	movf	sprintf@f,w
  1401  1584  0084               	movwf	4
  1402  1585  160A  118A  2000  160A  118A  	fcall	stringdir
  1403  158A  160A  158A  243F  160A  118A  	fcall	_isdigit
  1404  158F  1803               	btfsc	3,0
  1405  1590  2D92               	goto	u5101
  1406  1591  2D93               	goto	u5100
  1407  1592                     u5101:
  1408  1592  2D51               	goto	l3098
  1409  1593                     u5100:
  1410  1593                     l3106:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1413  1593  1283               	bcf	3,5	;RP0=0, select bank0
  1414  1594  1303               	bcf	3,6	;RP1=0, select bank0
  1415  1595  086A               	movf	sprintf@f,w
  1416  1596  0084               	movwf	4
  1417  1597  160A  118A  2000  160A  118A  	fcall	stringdir
  1418  159C  3A2E               	xorlw	46
  1419  159D  1D03               	skipz
  1420  159E  2DA0               	goto	u5111
  1421  159F  2DA1               	goto	u5110
  1422  15A0                     u5111:
  1423  15A0  2DF3               	goto	l3122
  1424  15A1                     u5110:
  1425  15A1                     l3108:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1428  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  1429  15A2  1303               	bcf	3,6	;RP1=0, select bank1
  1430  15A3  173D               	bsf	(sprintf@flag^(0+128)+1),6
  1431  15A4                     l3110:
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1434  15A4  3001               	movlw	1
  1435  15A5  00A8               	movwf	??_sprintf^(0+128)
  1436  15A6  0828               	movf	??_sprintf^(0+128),w
  1437  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1438  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1439  15A9  07EA               	addwf	sprintf@f,f
  1440  15AA                     l3112:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1443  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  1444  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  1445  15AC  01C4               	clrf	sprintf@prec^(0+128)
  1446  15AD  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1449  15AE  2DE1               	goto	l3120
  1450  15AF                     l3114:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1453  15AF  300A               	movlw	10
  1454  15B0  00F3               	movwf	___wmul@multiplier
  1455  15B1  3000               	movlw	0
  1456  15B2  00F4               	movwf	___wmul@multiplier+1
  1457  15B3  1683               	bsf	3,5	;RP0=1, select bank1
  1458  15B4  1303               	bcf	3,6	;RP1=0, select bank1
  1459  15B5  0845               	movf	(sprintf@prec+1)^(0+128),w
  1460  15B6  00F6               	movwf	___wmul@multiplicand+1
  1461  15B7  0844               	movf	sprintf@prec^(0+128),w
  1462  15B8  00F5               	movwf	___wmul@multiplicand
  1463  15B9  120A  118A  27DA  160A  118A  	fcall	___wmul
  1464  15BE  0874               	movf	?___wmul+1,w
  1465  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  1466  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  1467  15C1  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1468  15C2  0873               	movf	?___wmul,w
  1469  15C3  00C4               	movwf	sprintf@prec^(0+128)
  1470  15C4                     l3116:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1473  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  1474  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  1475  15C6  086A               	movf	sprintf@f,w
  1476  15C7  0084               	movwf	4
  1477  15C8  160A  118A  2000  160A  118A  	fcall	stringdir
  1478  15CD  3ED0               	addlw	208
  1479  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1480  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1481  15D0  00A8               	movwf	??_sprintf^(0+128)
  1482  15D1  30FF               	movlw	255
  1483  15D2  1803               	skipnc
  1484  15D3  3000               	movlw	0
  1485  15D4  00A9               	movwf	(??_sprintf^(0+128)+1)
  1486  15D5  0828               	movf	??_sprintf^(0+128),w
  1487  15D6  07C4               	addwf	sprintf@prec^(0+128),f
  1488  15D7  1803               	skipnc
  1489  15D8  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1490  15D9  0829               	movf	(??_sprintf+1)^(0+128),w
  1491  15DA  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1492  15DB                     l3118:
  1493  15DB  3001               	movlw	1
  1494  15DC  00A8               	movwf	??_sprintf^(0+128)
  1495  15DD  0828               	movf	??_sprintf^(0+128),w
  1496  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1497  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1498  15E0  07EA               	addwf	sprintf@f,f
  1499  15E1                     l3120:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1502  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  1503  15E2  086A               	movf	sprintf@f,w
  1504  15E3  0084               	movwf	4
  1505  15E4  160A  118A  2000  160A  118A  	fcall	stringdir
  1506  15E9  160A  158A  243F  160A  118A  	fcall	_isdigit
  1507  15EE  1803               	btfsc	3,0
  1508  15EF  2DF1               	goto	u5121
  1509  15F0  2DF2               	goto	u5120
  1510  15F1                     u5121:
  1511  15F1  2DAF               	goto	l3114
  1512  15F2                     u5120:
  1513  15F2  2DFB               	goto	l3128
  1514  15F3                     l3122:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1517  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  1518  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  1519  15F5  01C4               	clrf	sprintf@prec^(0+128)
  1520  15F6  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1521  15F7                     l3124:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1524  15F7  163D               	bsf	(sprintf@flag^(0+128)+1),4
  1525  15F8  2DFB               	goto	l3128
  1526  15F9                     l244:	
  1527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1528                           
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1531  15F9  153D               	bsf	(sprintf@flag^(0+128)+1),2
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1534  15FA  2E19               	goto	l3130
  1535  15FB                     l3128:
  1536  15FB  3001               	movlw	1
  1537  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  1538  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  1539  15FE  07EA               	addwf	sprintf@f,f
  1540  15FF  30FF               	movlw	-1
  1541  1600  076A               	addwf	sprintf@f,w
  1542  1601  0084               	movwf	4
  1543  1602  160A  118A  2000  160A  118A  	fcall	stringdir
  1544  1607  1683               	bsf	3,5	;RP0=1, select bank1
  1545  1608  1303               	bcf	3,6	;RP1=0, select bank1
  1546  1609  00C7               	movwf	sprintf@c^(0+128)
  1547  160A  00A8               	movwf	??_sprintf^(0+128)
  1548  160B  01A9               	clrf	(??_sprintf^(0+128)+1)
  1549                           
  1550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 1, Range of values is 0 to 0
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte            4     3 (average)
  1556                           ; direct_byte           11     8 (fixed)
  1557                           ; jumptable            260     6 (fixed)
  1558                           ;	Chosen strategy is simple_byte
  1559  160C  0829               	movf	(??_sprintf+1)^(0+128),w
  1560  160D  3A00               	xorlw	0	; case 0
  1561  160E  1903               	skipnz
  1562  160F  2E11               	goto	l3480
  1563  1610  2D04               	goto	L1
  1564  1611                     l3480:
  1565                           
  1566                           ; Switch size 1, requested type "simple"
  1567                           ; Number of cases is 2, Range of values is 0 to 102
  1568                           ; switch strategies available:
  1569                           ; Name         Instructions Cycles
  1570                           ; simple_byte            7     4 (average)
  1571                           ; jumptable            260     6 (fixed)
  1572                           ;	Chosen strategy is simple_byte
  1573  1611  0828               	movf	??_sprintf^(0+128),w
  1574  1612  3A00               	xorlw	0	; case 0
  1575  1613  1903               	skipnz
  1576  1614  2FFD               	goto	L3
  1577  1615  3A66               	xorlw	102	; case 102
  1578  1616  1903               	skipnz
  1579  1617  2DF9               	goto	l244
  1580  1618  2D04               	goto	L1
  1581  1619                     l3130:
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1584  1619  3000               	movlw	0
  1585  161A  053C               	andwf	sprintf@flag^(0+128),w
  1586  161B  00A8               	movwf	??_sprintf^(0+128)
  1587  161C  3007               	movlw	7
  1588  161D  053D               	andwf	(sprintf@flag+1)^(0+128),w
  1589  161E  00A9               	movwf	(??_sprintf+1)^(0+128)
  1590  161F  0828               	movf	??_sprintf^(0+128),w
  1591  1620  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1592  1621  1903               	btfsc	3,2
  1593  1622  2E24               	goto	u5131
  1594  1623  2E27               	goto	u5130
  1595  1624                     u5131:
  1596  1624  120A  118A  2C37   	goto	l3304
  1597  1627                     u5130:
  1598  1627                     l3132:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1601  1627  1E3D               	btfss	(sprintf@flag+1)^(0+128),4
  1602  1628  2E2A               	goto	u5141
  1603  1629  2E2B               	goto	u5140
  1604  162A                     u5141:
  1605  162A  2E2F               	goto	l3136
  1606  162B                     u5140:
  1607  162B                     l3134:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1610  162B  3006               	movlw	6
  1611  162C  00C4               	movwf	sprintf@prec^(0+128)
  1612  162D  3000               	movlw	0
  1613  162E  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1614  162F                     l3136:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1617  162F  0831               	movf	sprintf@ap^(0+128),w
  1618  1630  0084               	movwf	4
  1619  1631  1383               	bcf	3,7	;select IRP bank0
  1620  1632  0800               	movf	0,w
  1621  1633  00C0               	movwf	sprintf@fval^(0+128)
  1622  1634  0A84               	incf	4,f
  1623  1635  0800               	movf	0,w
  1624  1636  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1625  1637  0A84               	incf	4,f
  1626  1638  0800               	movf	0,w
  1627  1639  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1628  163A  0A84               	incf	4,f
  1629  163B  0800               	movf	0,w
  1630  163C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1631  163D                     l3138:
  1632  163D  3004               	movlw	4
  1633  163E  00A8               	movwf	??_sprintf^(0+128)
  1634  163F  0828               	movf	??_sprintf^(0+128),w
  1635  1640  07B1               	addwf	sprintf@ap^(0+128),f
  1636  1641                     l3140:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1639  1641  0843               	movf	(sprintf@fval+3)^(0+128),w
  1640  1642  00F6               	movwf	___flge@ff1+3
  1641  1643  0842               	movf	(sprintf@fval+2)^(0+128),w
  1642  1644  00F5               	movwf	___flge@ff1+2
  1643  1645  0841               	movf	(sprintf@fval+1)^(0+128),w
  1644  1646  00F4               	movwf	___flge@ff1+1
  1645  1647  0840               	movf	sprintf@fval^(0+128),w
  1646  1648  00F3               	movwf	___flge@ff1
  1647  1649  3000               	movlw	0
  1648  164A  00FA               	movwf	___flge@ff2+3
  1649  164B  3000               	movlw	0
  1650  164C  00F9               	movwf	___flge@ff2+2
  1651  164D  3000               	movlw	0
  1652  164E  00F8               	movwf	___flge@ff2+1
  1653  164F  3000               	movlw	0
  1654  1650  00F7               	movwf	___flge@ff2
  1655  1651  160A  118A  20D3  160A  118A  	fcall	___flge
  1656  1656  1803               	btfsc	3,0
  1657  1657  2E59               	goto	u5151
  1658  1658  2E5A               	goto	u5150
  1659  1659                     u5151:
  1660  1659  2E77               	goto	l3146
  1661  165A                     u5150:
  1662  165A                     l3142:
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1665  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1666  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1667  165C  0843               	movf	(sprintf@fval+3)^(0+128),w
  1668  165D  00F6               	movwf	___flneg@f1+3
  1669  165E  0842               	movf	(sprintf@fval+2)^(0+128),w
  1670  165F  00F5               	movwf	___flneg@f1+2
  1671  1660  0841               	movf	(sprintf@fval+1)^(0+128),w
  1672  1661  00F4               	movwf	___flneg@f1+1
  1673  1662  0840               	movf	sprintf@fval^(0+128),w
  1674  1663  00F3               	movwf	___flneg@f1
  1675  1664  160A  118A  209F  160A  118A  	fcall	___flneg
  1676  1669  0876               	movf	?___flneg+3,w
  1677  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1678  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1679  166C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1680  166D  0875               	movf	?___flneg+2,w
  1681  166E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1682  166F  0874               	movf	?___flneg+1,w
  1683  1670  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1684  1671  0873               	movf	?___flneg,w
  1685  1672  00C0               	movwf	sprintf@fval^(0+128)
  1686  1673                     l3144:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1689  1673  3003               	movlw	3
  1690  1674  04BC               	iorwf	sprintf@flag^(0+128),f
  1691  1675  3000               	movlw	0
  1692  1676  04BD               	iorwf	(sprintf@flag+1)^(0+128),f
  1693  1677                     l3146:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1696  1677  1683               	bsf	3,5	;RP0=1, select bank1
  1697  1678  1303               	bcf	3,6	;RP1=0, select bank1
  1698  1679  01BA               	clrf	sprintf@eexp^(0+128)
  1699  167A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  1700  167B                     l3148:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1703  167B  0843               	movf	(sprintf@fval+3)^(0+128),w
  1704  167C  00F6               	movwf	___fleq@ff1+3
  1705  167D  0842               	movf	(sprintf@fval+2)^(0+128),w
  1706  167E  00F5               	movwf	___fleq@ff1+2
  1707  167F  0841               	movf	(sprintf@fval+1)^(0+128),w
  1708  1680  00F4               	movwf	___fleq@ff1+1
  1709  1681  0840               	movf	sprintf@fval^(0+128),w
  1710  1682  00F3               	movwf	___fleq@ff1
  1711  1683  3000               	movlw	0
  1712  1684  00FA               	movwf	___fleq@ff2+3
  1713  1685  3000               	movlw	0
  1714  1686  00F9               	movwf	___fleq@ff2+2
  1715  1687  3000               	movlw	0
  1716  1688  00F8               	movwf	___fleq@ff2+1
  1717  1689  3000               	movlw	0
  1718  168A  00F7               	movwf	___fleq@ff2
  1719  168B  160A  158A  257B  160A  118A  	fcall	___fleq
  1720  1690  1803               	btfsc	3,0
  1721  1691  2E93               	goto	u5161
  1722  1692  2E94               	goto	u5160
  1723  1693                     u5161:
  1724  1693  2F94               	goto	l3174
  1725  1694                     u5160:
  1726  1694                     l3150:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1729  1694  1003               	clrc
  1730  1695  1683               	bsf	3,5	;RP0=1, select bank1
  1731  1696  1303               	bcf	3,6	;RP1=0, select bank1
  1732  1697  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  1733  1698  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  1734  1699  3E82               	addlw	130
  1735  169A  00BA               	movwf	sprintf@eexp^(0+128)
  1736  169B  30FF               	movlw	255
  1737  169C  1803               	skipnc
  1738  169D  3000               	movlw	0
  1739  169E  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  1740  169F                     l3152:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1743  169F  30FF               	movlw	255
  1744  16A0  07BA               	addwf	sprintf@eexp^(0+128),f
  1745  16A1  1803               	skipnc
  1746  16A2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1747  16A3  30FF               	movlw	255
  1748  16A4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1749  16A5                     l3154:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1752  16A5  3003               	movlw	3
  1753  16A6  00F3               	movwf	___wmul@multiplier
  1754  16A7  3000               	movlw	0
  1755  16A8  00F4               	movwf	___wmul@multiplier+1
  1756  16A9  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1757  16AA  00F6               	movwf	___wmul@multiplicand+1
  1758  16AB  083A               	movf	sprintf@eexp^(0+128),w
  1759  16AC  00F5               	movwf	___wmul@multiplicand
  1760  16AD  120A  118A  27DA  160A  118A  	fcall	___wmul
  1761  16B2  0874               	movf	?___wmul+1,w
  1762  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  1763  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  1764  16B5  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1765  16B6  0873               	movf	?___wmul,w
  1766  16B7  00BA               	movwf	sprintf@eexp^(0+128)
  1767  16B8                     l3156:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1770  16B8  300A               	movlw	10
  1771  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  1772  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  1773  16BB  00A0               	movwf	___awdiv@divisor
  1774  16BC  3000               	movlw	0
  1775  16BD  00A1               	movwf	___awdiv@divisor+1
  1776  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  1777  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  1778  16C0  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1779  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  1780  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  1781  16C3  00A3               	movwf	___awdiv@dividend+1
  1782  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  1783  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  1784  16C6  083A               	movf	sprintf@eexp^(0+128),w
  1785  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  1786  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  1787  16C9  00A2               	movwf	___awdiv@dividend
  1788  16CA  160A  158A  2797  160A  118A  	fcall	___awdiv
  1789  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  1790  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  1791  16D1  0821               	movf	?___awdiv+1,w
  1792  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  1793  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  1794  16D4  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1795  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  1796  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  1797  16D7  0820               	movf	?___awdiv,w
  1798  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  1799  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  1800  16DA  00BA               	movwf	sprintf@eexp^(0+128)
  1801  16DB                     l3158:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1804  16DB  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  1805  16DC  2EDE               	goto	u5171
  1806  16DD  2EDF               	goto	u5170
  1807  16DE                     u5171:
  1808  16DE  2EE5               	goto	l3162
  1809  16DF                     u5170:
  1810  16DF                     l3160:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1813  16DF  30FF               	movlw	255
  1814  16E0  07BA               	addwf	sprintf@eexp^(0+128),f
  1815  16E1  1803               	skipnc
  1816  16E2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1817  16E3  30FF               	movlw	255
  1818  16E4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1819  16E5                     l3162:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1822  16E5  033A               	decf	sprintf@eexp^(0+128),w
  1823  16E6  3AFF               	xorlw	255
  1824  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  1825  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  1826  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  1827  16EE  0845               	movf	?_scale+3,w
  1828  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  1829  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  1830  16F1  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  1831  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1832  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1833  16F4  0844               	movf	?_scale+2,w
  1834  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  1835  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  1836  16F7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  1837  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  1838  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  1839  16FA  0843               	movf	?_scale+1,w
  1840  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  1841  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  1842  16FD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  1843  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  1844  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  1845  1700  0842               	movf	?_scale,w
  1846  1701  1683               	bsf	3,5	;RP0=1, select bank1
  1847  1702  1303               	bcf	3,6	;RP1=0, select bank1
  1848  1703  00B6               	movwf	sprintf@tmpval^(0+128)
  1849  1704                     l3164:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1852  1704  0843               	movf	(sprintf@fval+3)^(0+128),w
  1853  1705  1283               	bcf	3,5	;RP0=0, select bank0
  1854  1706  1303               	bcf	3,6	;RP1=0, select bank0
  1855  1707  00AB               	movwf	___flmul@b+3
  1856  1708  1683               	bsf	3,5	;RP0=1, select bank1
  1857  1709  1303               	bcf	3,6	;RP1=0, select bank1
  1858  170A  0842               	movf	(sprintf@fval+2)^(0+128),w
  1859  170B  1283               	bcf	3,5	;RP0=0, select bank0
  1860  170C  1303               	bcf	3,6	;RP1=0, select bank0
  1861  170D  00AA               	movwf	___flmul@b+2
  1862  170E  1683               	bsf	3,5	;RP0=1, select bank1
  1863  170F  1303               	bcf	3,6	;RP1=0, select bank1
  1864  1710  0841               	movf	(sprintf@fval+1)^(0+128),w
  1865  1711  1283               	bcf	3,5	;RP0=0, select bank0
  1866  1712  1303               	bcf	3,6	;RP1=0, select bank0
  1867  1713  00A9               	movwf	___flmul@b+1
  1868  1714  1683               	bsf	3,5	;RP0=1, select bank1
  1869  1715  1303               	bcf	3,6	;RP1=0, select bank1
  1870  1716  0840               	movf	sprintf@fval^(0+128),w
  1871  1717  1283               	bcf	3,5	;RP0=0, select bank0
  1872  1718  1303               	bcf	3,6	;RP1=0, select bank0
  1873  1719  00A8               	movwf	___flmul@b
  1874  171A  1683               	bsf	3,5	;RP0=1, select bank1
  1875  171B  1303               	bcf	3,6	;RP1=0, select bank1
  1876  171C  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  1877  171D  1283               	bcf	3,5	;RP0=0, select bank0
  1878  171E  1303               	bcf	3,6	;RP1=0, select bank0
  1879  171F  00AF               	movwf	___flmul@a+3
  1880  1720  1683               	bsf	3,5	;RP0=1, select bank1
  1881  1721  1303               	bcf	3,6	;RP1=0, select bank1
  1882  1722  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  1883  1723  1283               	bcf	3,5	;RP0=0, select bank0
  1884  1724  1303               	bcf	3,6	;RP1=0, select bank0
  1885  1725  00AE               	movwf	___flmul@a+2
  1886  1726  1683               	bsf	3,5	;RP0=1, select bank1
  1887  1727  1303               	bcf	3,6	;RP1=0, select bank1
  1888  1728  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  1889  1729  1283               	bcf	3,5	;RP0=0, select bank0
  1890  172A  1303               	bcf	3,6	;RP1=0, select bank0
  1891  172B  00AD               	movwf	___flmul@a+1
  1892  172C  1683               	bsf	3,5	;RP0=1, select bank1
  1893  172D  1303               	bcf	3,6	;RP1=0, select bank1
  1894  172E  0836               	movf	sprintf@tmpval^(0+128),w
  1895  172F  1283               	bcf	3,5	;RP0=0, select bank0
  1896  1730  1303               	bcf	3,6	;RP1=0, select bank0
  1897  1731  00AC               	movwf	___flmul@a
  1898  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  1899  1737  1283               	bcf	3,5	;RP0=0, select bank0
  1900  1738  1303               	bcf	3,6	;RP1=0, select bank0
  1901  1739  082B               	movf	?___flmul+3,w
  1902  173A  1683               	bsf	3,5	;RP0=1, select bank1
  1903  173B  1303               	bcf	3,6	;RP1=0, select bank1
  1904  173C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  1905  173D  1283               	bcf	3,5	;RP0=0, select bank0
  1906  173E  1303               	bcf	3,6	;RP1=0, select bank0
  1907  173F  082A               	movf	?___flmul+2,w
  1908  1740  1683               	bsf	3,5	;RP0=1, select bank1
  1909  1741  1303               	bcf	3,6	;RP1=0, select bank1
  1910  1742  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  1911  1743  1283               	bcf	3,5	;RP0=0, select bank0
  1912  1744  1303               	bcf	3,6	;RP1=0, select bank0
  1913  1745  0829               	movf	?___flmul+1,w
  1914  1746  1683               	bsf	3,5	;RP0=1, select bank1
  1915  1747  1303               	bcf	3,6	;RP1=0, select bank1
  1916  1748  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  1917  1749  1283               	bcf	3,5	;RP0=0, select bank0
  1918  174A  1303               	bcf	3,6	;RP1=0, select bank0
  1919  174B  0828               	movf	?___flmul,w
  1920  174C  1683               	bsf	3,5	;RP0=1, select bank1
  1921  174D  1303               	bcf	3,6	;RP1=0, select bank1
  1922  174E  00B6               	movwf	sprintf@tmpval^(0+128)
  1923  174F                     l3166:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  1926  174F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  1927  1750  00F6               	movwf	___flge@ff1+3
  1928  1751  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  1929  1752  00F5               	movwf	___flge@ff1+2
  1930  1753  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  1931  1754  00F4               	movwf	___flge@ff1+1
  1932  1755  0836               	movf	sprintf@tmpval^(0+128),w
  1933  1756  00F3               	movwf	___flge@ff1
  1934  1757  303F               	movlw	63
  1935  1758  00FA               	movwf	___flge@ff2+3
  1936  1759  3080               	movlw	128
  1937  175A  00F9               	movwf	___flge@ff2+2
  1938  175B  3000               	movlw	0
  1939  175C  00F8               	movwf	___flge@ff2+1
  1940  175D  3000               	movlw	0
  1941  175E  00F7               	movwf	___flge@ff2
  1942  175F  160A  118A  20D3  160A  118A  	fcall	___flge
  1943  1764  1803               	btfsc	3,0
  1944  1765  2F67               	goto	u5181
  1945  1766  2F68               	goto	u5180
  1946  1767                     u5181:
  1947  1767  2F71               	goto	l3170
  1948  1768                     u5180:
  1949  1768                     l3168:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  1952  1768  30FF               	movlw	255
  1953  1769  1683               	bsf	3,5	;RP0=1, select bank1
  1954  176A  1303               	bcf	3,6	;RP1=0, select bank1
  1955  176B  07BA               	addwf	sprintf@eexp^(0+128),f
  1956  176C  1803               	skipnc
  1957  176D  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1958  176E  30FF               	movlw	255
  1959  176F  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1960  1770  2F94               	goto	l3174
  1961  1771                     l3170:
  1962  1771  1683               	bsf	3,5	;RP0=1, select bank1
  1963  1772  1303               	bcf	3,6	;RP1=0, select bank1
  1964  1773  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  1965  1774  00F6               	movwf	___flge@ff1+3
  1966  1775  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  1967  1776  00F5               	movwf	___flge@ff1+2
  1968  1777  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  1969  1778  00F4               	movwf	___flge@ff1+1
  1970  1779  0836               	movf	sprintf@tmpval^(0+128),w
  1971  177A  00F3               	movwf	___flge@ff1
  1972  177B  3041               	movlw	65
  1973  177C  00FA               	movwf	___flge@ff2+3
  1974  177D  3020               	movlw	32
  1975  177E  00F9               	movwf	___flge@ff2+2
  1976  177F  3000               	movlw	0
  1977  1780  00F8               	movwf	___flge@ff2+1
  1978  1781  3000               	movlw	0
  1979  1782  00F7               	movwf	___flge@ff2
  1980  1783  160A  118A  20D3  160A  118A  	fcall	___flge
  1981  1788  1C03               	btfss	3,0
  1982  1789  2F8B               	goto	u5191
  1983  178A  2F8C               	goto	u5190
  1984  178B                     u5191:
  1985  178B  2F94               	goto	l3174
  1986  178C                     u5190:
  1987  178C                     l3172:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  1990  178C  3001               	movlw	1
  1991  178D  1683               	bsf	3,5	;RP0=1, select bank1
  1992  178E  1303               	bcf	3,6	;RP1=0, select bank1
  1993  178F  07BA               	addwf	sprintf@eexp^(0+128),f
  1994  1790  1803               	skipnc
  1995  1791  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1996  1792  3000               	movlw	0
  1997  1793  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1998  1794                     l3174:
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2001  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2002  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2003  1796  0845               	movf	(sprintf@prec+1)^(0+128),w
  2004  1797  3A80               	xorlw	128
  2005  1798  00FF               	movwf	btemp+1
  2006  1799  3080               	movlw	128
  2007  179A  027F               	subwf	btemp+1,w
  2008  179B  1D03               	skipz
  2009  179C  2F9F               	goto	u5205
  2010  179D  300D               	movlw	13
  2011  179E  0244               	subwf	sprintf@prec^(0+128),w
  2012  179F                     u5205:
  2013  179F  1803               	skipnc
  2014  17A0  2FA2               	goto	u5201
  2015  17A1  2FA3               	goto	u5200
  2016  17A2                     u5201:
  2017  17A2  2FEA               	goto	l3178
  2018  17A3                     u5200:
  2019  17A3                     l3176:
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2022  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2023  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2024  17A5  0844               	movf	sprintf@prec^(0+128),w
  2025  17A6  160A  118A  22F0  160A  118A  	fcall	_fround
  2026  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2027  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2028  17AD  0845               	movf	?_fround+3,w
  2029  17AE  00D9               	movwf	___fladd@b+3
  2030  17AF  0844               	movf	?_fround+2,w
  2031  17B0  00D8               	movwf	___fladd@b+2
  2032  17B1  0843               	movf	?_fround+1,w
  2033  17B2  00D7               	movwf	___fladd@b+1
  2034  17B3  0842               	movf	?_fround,w
  2035  17B4  00D6               	movwf	___fladd@b
  2036  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2037  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2038  17B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2039  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2040  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2041  17BA  00DD               	movwf	___fladd@a+3
  2042  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2043  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2044  17BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2045  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2046  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2047  17C0  00DC               	movwf	___fladd@a+2
  2048  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2049  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2050  17C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2051  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2052  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2053  17C6  00DB               	movwf	___fladd@a+1
  2054  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2055  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2056  17C9  0840               	movf	sprintf@fval^(0+128),w
  2057  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2058  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2059  17CC  00DA               	movwf	___fladd@a
  2060  17CD  120A  118A  2552  160A  118A  	fcall	___fladd
  2061  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2062  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2063  17D4  0859               	movf	?___fladd+3,w
  2064  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2065  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2066  17D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2067  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2068  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2069  17DA  0858               	movf	?___fladd+2,w
  2070  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2071  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2072  17DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2073  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2074  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2075  17E0  0857               	movf	?___fladd+1,w
  2076  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2077  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2078  17E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2079  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2080  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2081  17E6  0856               	movf	?___fladd,w
  2082  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2083  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2084  17E9  00C0               	movwf	sprintf@fval^(0+128)
  2085  17EA                     l3178:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2088  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2089  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2090  17EC  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2091  17ED  3A80               	xorlw	128
  2092  17EE  00FF               	movwf	btemp+1
  2093  17EF  3080               	movlw	128
  2094  17F0  027F               	subwf	btemp+1,w
  2095  17F1  1D03               	skipz
  2096  17F2  2FF5               	goto	u5215
  2097  17F3  300A               	movlw	10
  2098  17F4  023A               	subwf	sprintf@eexp^(0+128),w
  2099  17F5                     u5215:
  2100  17F5  1803               	skipnc
  2101  17F6  2FFA               	goto	u5211
  2102  17F7  120A  118A  2822   	goto	u5210
  2103  17FA                     u5211:
  2104  17FA  120A  118A  2873   	goto	l3186
  2105  17FD                     L3:
  2106  17FD                     L2:
  2107  17FD  120A  118A  2D4D   	ljmp	l3368
  2108                           
  2109                           	psect	text2
  2110  0C9D                     __ptext2:	
  2111 ;; *************** function _scale *****************
  2112 ;; Defined at:
  2113 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  scl             1    wreg     char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  scl             1   52[BANK0 ] char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  4   34[BANK0 ] char 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2127 ;;      Params:         0       4       0       0       0
  2128 ;;      Locals:         0       5       0       0       0
  2129 ;;      Temps:          0      10       0       0       0
  2130 ;;      Totals:         0      19       0       0       0
  2131 ;;Total ram usage:       19 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    3
  2134 ;; This function calls:
  2135 ;;		___awdiv
  2136 ;;		___awmod
  2137 ;;		___flmul
  2138 ;; This function is called by:
  2139 ;;		_sprintf
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _scale
  2145  0C9D                     _scale:
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2149                           ;scale@scl stored from wreg
  2150  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0C9F  00D4               	movwf	scale@scl
  2153  0CA0                     l2678:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2156  0CA0  1FD4               	btfss	scale@scl,7
  2157  0CA1  2CA3               	goto	u4111
  2158  0CA2  2CA4               	goto	u4110
  2159  0CA3                     u4111:
  2160  0CA3  2E53               	goto	l2700
  2161  0CA4                     u4110:
  2162  0CA4                     l2680:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2165  0CA4  09D4               	comf	scale@scl,f
  2166  0CA5  0AD4               	incf	scale@scl,f
  2167  0CA6                     l2682:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2170  0CA6  0854               	movf	scale@scl,w
  2171  0CA7  3A80               	xorlw	128
  2172  0CA8  3E12               	addlw	-238
  2173  0CA9  1C03               	skipc
  2174  0CAA  2CAC               	goto	u4121
  2175  0CAB  2CAD               	goto	u4120
  2176  0CAC                     u4121:
  2177  0CAC  2D97               	goto	l2690
  2178  0CAD                     u4120:
  2179  0CAD                     l2684:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2182  0CAD  300A               	movlw	10
  2183  0CAE  00A0               	movwf	___awdiv@divisor
  2184  0CAF  3000               	movlw	0
  2185  0CB0  00A1               	movwf	___awdiv@divisor+1
  2186  0CB1  0854               	movf	scale@scl,w
  2187  0CB2  00F5               	movwf	___awmod@dividend
  2188  0CB3  01F6               	clrf	___awmod@dividend+1
  2189  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2190  0CB5  03F6               	decf	___awmod@dividend+1,f
  2191  0CB6  3064               	movlw	100
  2192  0CB7  00F3               	movwf	___awmod@divisor
  2193  0CB8  3000               	movlw	0
  2194  0CB9  00F4               	movwf	___awmod@divisor+1
  2195  0CBA  160A  158A  2671  120A  158A  	fcall	___awmod
  2196  0CBF  0874               	movf	?___awmod+1,w
  2197  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0CC2  00A3               	movwf	___awdiv@dividend+1
  2200  0CC3  0873               	movf	?___awmod,w
  2201  0CC4  00A2               	movwf	___awdiv@dividend
  2202  0CC5  160A  158A  2797  120A  158A  	fcall	___awdiv
  2203  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0CCC  0820               	movf	?___awdiv,w
  2206  0CCD  00C6               	movwf	??_scale
  2207  0CCE  3001               	movlw	1
  2208  0CCF                     u4135:
  2209  0CCF  1003               	clrc
  2210  0CD0  0DC6               	rlf	??_scale,f
  2211  0CD1  3EFF               	addlw	-1
  2212  0CD2  1D03               	skipz
  2213  0CD3  2CCF               	goto	u4135
  2214  0CD4  1003               	clrc
  2215  0CD5  0D46               	rlf	??_scale,w
  2216  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2217  0CD7  0084               	movwf	4
  2218  0CD8  160A  118A  2000  120A  158A  	fcall	stringdir
  2219  0CDD  00C7               	movwf	??_scale+1
  2220  0CDE  160A  118A  2000  120A  158A  	fcall	stringdir
  2221  0CE3  00C8               	movwf	??_scale+2
  2222  0CE4  160A  118A  2000  120A  158A  	fcall	stringdir
  2223  0CE9  00C9               	movwf	??_scale+3
  2224  0CEA  160A  118A  2000  120A  158A  	fcall	stringdir
  2225  0CEF  00CA               	movwf	??_scale+4
  2226  0CF0  084A               	movf	??_scale+4,w
  2227  0CF1  00AB               	movwf	___flmul@b+3
  2228  0CF2  0849               	movf	??_scale+3,w
  2229  0CF3  00AA               	movwf	___flmul@b+2
  2230  0CF4  0848               	movf	??_scale+2,w
  2231  0CF5  00A9               	movwf	___flmul@b+1
  2232  0CF6  0847               	movf	??_scale+1,w
  2233  0CF7  00A8               	movwf	___flmul@b
  2234  0CF8  3064               	movlw	100
  2235  0CF9  00A0               	movwf	___awdiv@divisor
  2236  0CFA  3000               	movlw	0
  2237  0CFB  00A1               	movwf	___awdiv@divisor+1
  2238  0CFC  0854               	movf	scale@scl,w
  2239  0CFD  00A2               	movwf	___awdiv@dividend
  2240  0CFE  01A3               	clrf	___awdiv@dividend+1
  2241  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2242  0D00  03A3               	decf	___awdiv@dividend+1,f
  2243  0D01  160A  158A  2797  120A  158A  	fcall	___awdiv
  2244  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0D08  0820               	movf	?___awdiv,w
  2247  0D09  00CB               	movwf	??_scale+5
  2248  0D0A  3001               	movlw	1
  2249  0D0B                     u4145:
  2250  0D0B  1003               	clrc
  2251  0D0C  0DCB               	rlf	??_scale+5,f
  2252  0D0D  3EFF               	addlw	-1
  2253  0D0E  1D03               	skipz
  2254  0D0F  2D0B               	goto	u4145
  2255  0D10  1003               	clrc
  2256  0D11  0D4B               	rlf	??_scale+5,w
  2257  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2258  0D13  0084               	movwf	4
  2259  0D14  160A  118A  2000  120A  158A  	fcall	stringdir
  2260  0D19  00CC               	movwf	??_scale+6
  2261  0D1A  160A  118A  2000  120A  158A  	fcall	stringdir
  2262  0D1F  00CD               	movwf	??_scale+7
  2263  0D20  160A  118A  2000  120A  158A  	fcall	stringdir
  2264  0D25  00CE               	movwf	??_scale+8
  2265  0D26  160A  118A  2000  120A  158A  	fcall	stringdir
  2266  0D2B  00CF               	movwf	??_scale+9
  2267  0D2C  084F               	movf	??_scale+9,w
  2268  0D2D  00AF               	movwf	___flmul@a+3
  2269  0D2E  084E               	movf	??_scale+8,w
  2270  0D2F  00AE               	movwf	___flmul@a+2
  2271  0D30  084D               	movf	??_scale+7,w
  2272  0D31  00AD               	movwf	___flmul@a+1
  2273  0D32  084C               	movf	??_scale+6,w
  2274  0D33  00AC               	movwf	___flmul@a
  2275  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2276  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0D3B  082B               	movf	?___flmul+3,w
  2279  0D3C  00D3               	movwf	_scale$1132+3
  2280  0D3D  082A               	movf	?___flmul+2,w
  2281  0D3E  00D2               	movwf	_scale$1132+2
  2282  0D3F  0829               	movf	?___flmul+1,w
  2283  0D40  00D1               	movwf	_scale$1132+1
  2284  0D41  0828               	movf	?___flmul,w
  2285  0D42  00D0               	movwf	_scale$1132
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2288  0D43  300A               	movlw	10
  2289  0D44  00F3               	movwf	___awmod@divisor
  2290  0D45  3000               	movlw	0
  2291  0D46  00F4               	movwf	___awmod@divisor+1
  2292  0D47  0854               	movf	scale@scl,w
  2293  0D48  00F5               	movwf	___awmod@dividend
  2294  0D49  01F6               	clrf	___awmod@dividend+1
  2295  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2296  0D4B  03F6               	decf	___awmod@dividend+1,f
  2297  0D4C  160A  158A  2671  120A  158A  	fcall	___awmod
  2298  0D51  0873               	movf	?___awmod,w
  2299  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0D54  00C6               	movwf	??_scale
  2302  0D55  3001               	movlw	1
  2303  0D56                     u4155:
  2304  0D56  1003               	clrc
  2305  0D57  0DC6               	rlf	??_scale,f
  2306  0D58  3EFF               	addlw	-1
  2307  0D59  1D03               	skipz
  2308  0D5A  2D56               	goto	u4155
  2309  0D5B  1003               	clrc
  2310  0D5C  0D46               	rlf	??_scale,w
  2311  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2312  0D5E  0084               	movwf	4
  2313  0D5F  160A  118A  2000  120A  158A  	fcall	stringdir
  2314  0D64  00C7               	movwf	??_scale+1
  2315  0D65  160A  118A  2000  120A  158A  	fcall	stringdir
  2316  0D6A  00C8               	movwf	??_scale+2
  2317  0D6B  160A  118A  2000  120A  158A  	fcall	stringdir
  2318  0D70  00C9               	movwf	??_scale+3
  2319  0D71  160A  118A  2000  120A  158A  	fcall	stringdir
  2320  0D76  00CA               	movwf	??_scale+4
  2321  0D77  084A               	movf	??_scale+4,w
  2322  0D78  00AB               	movwf	___flmul@b+3
  2323  0D79  0849               	movf	??_scale+3,w
  2324  0D7A  00AA               	movwf	___flmul@b+2
  2325  0D7B  0848               	movf	??_scale+2,w
  2326  0D7C  00A9               	movwf	___flmul@b+1
  2327  0D7D  0847               	movf	??_scale+1,w
  2328  0D7E  00A8               	movwf	___flmul@b
  2329  0D7F  0853               	movf	_scale$1132+3,w
  2330  0D80  00AF               	movwf	___flmul@a+3
  2331  0D81  0852               	movf	_scale$1132+2,w
  2332  0D82  00AE               	movwf	___flmul@a+2
  2333  0D83  0851               	movf	_scale$1132+1,w
  2334  0D84  00AD               	movwf	___flmul@a+1
  2335  0D85  0850               	movf	_scale$1132,w
  2336  0D86  00AC               	movwf	___flmul@a
  2337  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2338  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0D8E  082B               	movf	?___flmul+3,w
  2341  0D8F  00C5               	movwf	?_scale+3
  2342  0D90  082A               	movf	?___flmul+2,w
  2343  0D91  00C4               	movwf	?_scale+2
  2344  0D92  0829               	movf	?___flmul+1,w
  2345  0D93  00C3               	movwf	?_scale+1
  2346  0D94  0828               	movf	?___flmul,w
  2347  0D95  00C2               	movwf	?_scale
  2348  0D96  2FFF               	goto	l216
  2349  0D97                     l2690:
  2350  0D97  0854               	movf	scale@scl,w
  2351  0D98  3A80               	xorlw	128
  2352  0D99  3E75               	addlw	-139
  2353  0D9A  1C03               	skipc
  2354  0D9B  2D9D               	goto	u4161
  2355  0D9C  2D9E               	goto	u4160
  2356  0D9D                     u4161:
  2357  0D9D  2E26               	goto	l2696
  2358  0D9E                     u4160:
  2359  0D9E                     l2692:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2362  0D9E  300A               	movlw	10
  2363  0D9F  00F3               	movwf	___awmod@divisor
  2364  0DA0  3000               	movlw	0
  2365  0DA1  00F4               	movwf	___awmod@divisor+1
  2366  0DA2  0854               	movf	scale@scl,w
  2367  0DA3  00F5               	movwf	___awmod@dividend
  2368  0DA4  01F6               	clrf	___awmod@dividend+1
  2369  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2370  0DA6  03F6               	decf	___awmod@dividend+1,f
  2371  0DA7  160A  158A  2671  120A  158A  	fcall	___awmod
  2372  0DAC  0873               	movf	?___awmod,w
  2373  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0DAF  00C6               	movwf	??_scale
  2376  0DB0  3001               	movlw	1
  2377  0DB1                     u4175:
  2378  0DB1  1003               	clrc
  2379  0DB2  0DC6               	rlf	??_scale,f
  2380  0DB3  3EFF               	addlw	-1
  2381  0DB4  1D03               	skipz
  2382  0DB5  2DB1               	goto	u4175
  2383  0DB6  1003               	clrc
  2384  0DB7  0D46               	rlf	??_scale,w
  2385  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2386  0DB9  0084               	movwf	4
  2387  0DBA  160A  118A  2000  120A  158A  	fcall	stringdir
  2388  0DBF  00C7               	movwf	??_scale+1
  2389  0DC0  160A  118A  2000  120A  158A  	fcall	stringdir
  2390  0DC5  00C8               	movwf	??_scale+2
  2391  0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  2392  0DCB  00C9               	movwf	??_scale+3
  2393  0DCC  160A  118A  2000  120A  158A  	fcall	stringdir
  2394  0DD1  00CA               	movwf	??_scale+4
  2395  0DD2  084A               	movf	??_scale+4,w
  2396  0DD3  00AB               	movwf	___flmul@b+3
  2397  0DD4  0849               	movf	??_scale+3,w
  2398  0DD5  00AA               	movwf	___flmul@b+2
  2399  0DD6  0848               	movf	??_scale+2,w
  2400  0DD7  00A9               	movwf	___flmul@b+1
  2401  0DD8  0847               	movf	??_scale+1,w
  2402  0DD9  00A8               	movwf	___flmul@b
  2403  0DDA  300A               	movlw	10
  2404  0DDB  00A0               	movwf	___awdiv@divisor
  2405  0DDC  3000               	movlw	0
  2406  0DDD  00A1               	movwf	___awdiv@divisor+1
  2407  0DDE  0854               	movf	scale@scl,w
  2408  0DDF  00A2               	movwf	___awdiv@dividend
  2409  0DE0  01A3               	clrf	___awdiv@dividend+1
  2410  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2411  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2412  0DE3  160A  158A  2797  120A  158A  	fcall	___awdiv
  2413  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0DEA  0820               	movf	?___awdiv,w
  2416  0DEB  00CB               	movwf	??_scale+5
  2417  0DEC  3001               	movlw	1
  2418  0DED                     u4185:
  2419  0DED  1003               	clrc
  2420  0DEE  0DCB               	rlf	??_scale+5,f
  2421  0DEF  3EFF               	addlw	-1
  2422  0DF0  1D03               	skipz
  2423  0DF1  2DED               	goto	u4185
  2424  0DF2  1003               	clrc
  2425  0DF3  0D4B               	rlf	??_scale+5,w
  2426  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2427  0DF5  0084               	movwf	4
  2428  0DF6  160A  118A  2000  120A  158A  	fcall	stringdir
  2429  0DFB  00CC               	movwf	??_scale+6
  2430  0DFC  160A  118A  2000  120A  158A  	fcall	stringdir
  2431  0E01  00CD               	movwf	??_scale+7
  2432  0E02  160A  118A  2000  120A  158A  	fcall	stringdir
  2433  0E07  00CE               	movwf	??_scale+8
  2434  0E08  160A  118A  2000  120A  158A  	fcall	stringdir
  2435  0E0D  00CF               	movwf	??_scale+9
  2436  0E0E  084F               	movf	??_scale+9,w
  2437  0E0F  00AF               	movwf	___flmul@a+3
  2438  0E10  084E               	movf	??_scale+8,w
  2439  0E11  00AE               	movwf	___flmul@a+2
  2440  0E12  084D               	movf	??_scale+7,w
  2441  0E13  00AD               	movwf	___flmul@a+1
  2442  0E14  084C               	movf	??_scale+6,w
  2443  0E15  00AC               	movwf	___flmul@a
  2444  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2445  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0E1D  082B               	movf	?___flmul+3,w
  2448  0E1E  00C5               	movwf	?_scale+3
  2449  0E1F  082A               	movf	?___flmul+2,w
  2450  0E20  00C4               	movwf	?_scale+2
  2451  0E21  0829               	movf	?___flmul+1,w
  2452  0E22  00C3               	movwf	?_scale+1
  2453  0E23  0828               	movf	?___flmul,w
  2454  0E24  00C2               	movwf	?_scale
  2455  0E25  2FFF               	goto	l216
  2456  0E26                     l2696:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2459  0E26  0854               	movf	scale@scl,w
  2460  0E27  00C6               	movwf	??_scale
  2461  0E28  3001               	movlw	1
  2462  0E29                     u4195:
  2463  0E29  1003               	clrc
  2464  0E2A  0DC6               	rlf	??_scale,f
  2465  0E2B  3EFF               	addlw	-1
  2466  0E2C  1D03               	skipz
  2467  0E2D  2E29               	goto	u4195
  2468  0E2E  1003               	clrc
  2469  0E2F  0D46               	rlf	??_scale,w
  2470  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2471  0E31  0084               	movwf	4
  2472  0E32  160A  118A  2000  120A  158A  	fcall	stringdir
  2473  0E37  00C7               	movwf	??_scale+1
  2474  0E38  160A  118A  2000  120A  158A  	fcall	stringdir
  2475  0E3D  00C8               	movwf	??_scale+2
  2476  0E3E  160A  118A  2000  120A  158A  	fcall	stringdir
  2477  0E43  00C9               	movwf	??_scale+3
  2478  0E44  160A  118A  2000  120A  158A  	fcall	stringdir
  2479  0E49  00CA               	movwf	??_scale+4
  2480  0E4A  084A               	movf	??_scale+4,w
  2481  0E4B  00C5               	movwf	?_scale+3
  2482  0E4C  0849               	movf	??_scale+3,w
  2483  0E4D  00C4               	movwf	?_scale+2
  2484  0E4E  0848               	movf	??_scale+2,w
  2485  0E4F  00C3               	movwf	?_scale+1
  2486  0E50  0847               	movf	??_scale+1,w
  2487  0E51  00C2               	movwf	?_scale
  2488  0E52  2FFF               	goto	l216
  2489  0E53                     l2700:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2492  0E53  0854               	movf	scale@scl,w
  2493  0E54  3A80               	xorlw	128
  2494  0E55  3E12               	addlw	-238
  2495  0E56  1C03               	skipc
  2496  0E57  2E59               	goto	u4201
  2497  0E58  2E5A               	goto	u4200
  2498  0E59                     u4201:
  2499  0E59  2F44               	goto	l2708
  2500  0E5A                     u4200:
  2501  0E5A                     l2702:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2504  0E5A  300A               	movlw	10
  2505  0E5B  00A0               	movwf	___awdiv@divisor
  2506  0E5C  3000               	movlw	0
  2507  0E5D  00A1               	movwf	___awdiv@divisor+1
  2508  0E5E  0854               	movf	scale@scl,w
  2509  0E5F  00F5               	movwf	___awmod@dividend
  2510  0E60  01F6               	clrf	___awmod@dividend+1
  2511  0E61  1BF5               	btfsc	___awmod@dividend,7
  2512  0E62  03F6               	decf	___awmod@dividend+1,f
  2513  0E63  3064               	movlw	100
  2514  0E64  00F3               	movwf	___awmod@divisor
  2515  0E65  3000               	movlw	0
  2516  0E66  00F4               	movwf	___awmod@divisor+1
  2517  0E67  160A  158A  2671  120A  158A  	fcall	___awmod
  2518  0E6C  0874               	movf	?___awmod+1,w
  2519  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0E6F  00A3               	movwf	___awdiv@dividend+1
  2522  0E70  0873               	movf	?___awmod,w
  2523  0E71  00A2               	movwf	___awdiv@dividend
  2524  0E72  160A  158A  2797  120A  158A  	fcall	___awdiv
  2525  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0E79  0820               	movf	?___awdiv,w
  2528  0E7A  00C6               	movwf	??_scale
  2529  0E7B  3001               	movlw	1
  2530  0E7C                     u4215:
  2531  0E7C  1003               	clrc
  2532  0E7D  0DC6               	rlf	??_scale,f
  2533  0E7E  3EFF               	addlw	-1
  2534  0E7F  1D03               	skipz
  2535  0E80  2E7C               	goto	u4215
  2536  0E81  1003               	clrc
  2537  0E82  0D46               	rlf	??_scale,w
  2538  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2539  0E84  0084               	movwf	4
  2540  0E85  160A  118A  2000  120A  158A  	fcall	stringdir
  2541  0E8A  00C7               	movwf	??_scale+1
  2542  0E8B  160A  118A  2000  120A  158A  	fcall	stringdir
  2543  0E90  00C8               	movwf	??_scale+2
  2544  0E91  160A  118A  2000  120A  158A  	fcall	stringdir
  2545  0E96  00C9               	movwf	??_scale+3
  2546  0E97  160A  118A  2000  120A  158A  	fcall	stringdir
  2547  0E9C  00CA               	movwf	??_scale+4
  2548  0E9D  084A               	movf	??_scale+4,w
  2549  0E9E  00AB               	movwf	___flmul@b+3
  2550  0E9F  0849               	movf	??_scale+3,w
  2551  0EA0  00AA               	movwf	___flmul@b+2
  2552  0EA1  0848               	movf	??_scale+2,w
  2553  0EA2  00A9               	movwf	___flmul@b+1
  2554  0EA3  0847               	movf	??_scale+1,w
  2555  0EA4  00A8               	movwf	___flmul@b
  2556  0EA5  3064               	movlw	100
  2557  0EA6  00A0               	movwf	___awdiv@divisor
  2558  0EA7  3000               	movlw	0
  2559  0EA8  00A1               	movwf	___awdiv@divisor+1
  2560  0EA9  0854               	movf	scale@scl,w
  2561  0EAA  00A2               	movwf	___awdiv@dividend
  2562  0EAB  01A3               	clrf	___awdiv@dividend+1
  2563  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2564  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2565  0EAE  160A  158A  2797  120A  158A  	fcall	___awdiv
  2566  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0EB5  0820               	movf	?___awdiv,w
  2569  0EB6  00CB               	movwf	??_scale+5
  2570  0EB7  3001               	movlw	1
  2571  0EB8                     u4225:
  2572  0EB8  1003               	clrc
  2573  0EB9  0DCB               	rlf	??_scale+5,f
  2574  0EBA  3EFF               	addlw	-1
  2575  0EBB  1D03               	skipz
  2576  0EBC  2EB8               	goto	u4225
  2577  0EBD  1003               	clrc
  2578  0EBE  0D4B               	rlf	??_scale+5,w
  2579  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2580  0EC0  0084               	movwf	4
  2581  0EC1  160A  118A  2000  120A  158A  	fcall	stringdir
  2582  0EC6  00CC               	movwf	??_scale+6
  2583  0EC7  160A  118A  2000  120A  158A  	fcall	stringdir
  2584  0ECC  00CD               	movwf	??_scale+7
  2585  0ECD  160A  118A  2000  120A  158A  	fcall	stringdir
  2586  0ED2  00CE               	movwf	??_scale+8
  2587  0ED3  160A  118A  2000  120A  158A  	fcall	stringdir
  2588  0ED8  00CF               	movwf	??_scale+9
  2589  0ED9  084F               	movf	??_scale+9,w
  2590  0EDA  00AF               	movwf	___flmul@a+3
  2591  0EDB  084E               	movf	??_scale+8,w
  2592  0EDC  00AE               	movwf	___flmul@a+2
  2593  0EDD  084D               	movf	??_scale+7,w
  2594  0EDE  00AD               	movwf	___flmul@a+1
  2595  0EDF  084C               	movf	??_scale+6,w
  2596  0EE0  00AC               	movwf	___flmul@a
  2597  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2598  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0EE8  082B               	movf	?___flmul+3,w
  2601  0EE9  00D3               	movwf	_scale$1132+3
  2602  0EEA  082A               	movf	?___flmul+2,w
  2603  0EEB  00D2               	movwf	_scale$1132+2
  2604  0EEC  0829               	movf	?___flmul+1,w
  2605  0EED  00D1               	movwf	_scale$1132+1
  2606  0EEE  0828               	movf	?___flmul,w
  2607  0EEF  00D0               	movwf	_scale$1132
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2610  0EF0  300A               	movlw	10
  2611  0EF1  00F3               	movwf	___awmod@divisor
  2612  0EF2  3000               	movlw	0
  2613  0EF3  00F4               	movwf	___awmod@divisor+1
  2614  0EF4  0854               	movf	scale@scl,w
  2615  0EF5  00F5               	movwf	___awmod@dividend
  2616  0EF6  01F6               	clrf	___awmod@dividend+1
  2617  0EF7  1BF5               	btfsc	___awmod@dividend,7
  2618  0EF8  03F6               	decf	___awmod@dividend+1,f
  2619  0EF9  160A  158A  2671  120A  158A  	fcall	___awmod
  2620  0EFE  0873               	movf	?___awmod,w
  2621  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0F01  00C6               	movwf	??_scale
  2624  0F02  3001               	movlw	1
  2625  0F03                     u4235:
  2626  0F03  1003               	clrc
  2627  0F04  0DC6               	rlf	??_scale,f
  2628  0F05  3EFF               	addlw	-1
  2629  0F06  1D03               	skipz
  2630  0F07  2F03               	goto	u4235
  2631  0F08  1003               	clrc
  2632  0F09  0D46               	rlf	??_scale,w
  2633  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2634  0F0B  0084               	movwf	4
  2635  0F0C  160A  118A  2000  120A  158A  	fcall	stringdir
  2636  0F11  00C7               	movwf	??_scale+1
  2637  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  2638  0F17  00C8               	movwf	??_scale+2
  2639  0F18  160A  118A  2000  120A  158A  	fcall	stringdir
  2640  0F1D  00C9               	movwf	??_scale+3
  2641  0F1E  160A  118A  2000  120A  158A  	fcall	stringdir
  2642  0F23  00CA               	movwf	??_scale+4
  2643  0F24  084A               	movf	??_scale+4,w
  2644  0F25  00AB               	movwf	___flmul@b+3
  2645  0F26  0849               	movf	??_scale+3,w
  2646  0F27  00AA               	movwf	___flmul@b+2
  2647  0F28  0848               	movf	??_scale+2,w
  2648  0F29  00A9               	movwf	___flmul@b+1
  2649  0F2A  0847               	movf	??_scale+1,w
  2650  0F2B  00A8               	movwf	___flmul@b
  2651  0F2C  0853               	movf	_scale$1132+3,w
  2652  0F2D  00AF               	movwf	___flmul@a+3
  2653  0F2E  0852               	movf	_scale$1132+2,w
  2654  0F2F  00AE               	movwf	___flmul@a+2
  2655  0F30  0851               	movf	_scale$1132+1,w
  2656  0F31  00AD               	movwf	___flmul@a+1
  2657  0F32  0850               	movf	_scale$1132,w
  2658  0F33  00AC               	movwf	___flmul@a
  2659  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2660  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0F3B  082B               	movf	?___flmul+3,w
  2663  0F3C  00C5               	movwf	?_scale+3
  2664  0F3D  082A               	movf	?___flmul+2,w
  2665  0F3E  00C4               	movwf	?_scale+2
  2666  0F3F  0829               	movf	?___flmul+1,w
  2667  0F40  00C3               	movwf	?_scale+1
  2668  0F41  0828               	movf	?___flmul,w
  2669  0F42  00C2               	movwf	?_scale
  2670  0F43  2FFF               	goto	l216
  2671  0F44                     l2708:
  2672  0F44  0854               	movf	scale@scl,w
  2673  0F45  3A80               	xorlw	128
  2674  0F46  3E75               	addlw	-139
  2675  0F47  1C03               	skipc
  2676  0F48  2F4A               	goto	u4241
  2677  0F49  2F4B               	goto	u4240
  2678  0F4A                     u4241:
  2679  0F4A  2FD3               	goto	l2714
  2680  0F4B                     u4240:
  2681  0F4B                     l2710:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2684  0F4B  300A               	movlw	10
  2685  0F4C  00F3               	movwf	___awmod@divisor
  2686  0F4D  3000               	movlw	0
  2687  0F4E  00F4               	movwf	___awmod@divisor+1
  2688  0F4F  0854               	movf	scale@scl,w
  2689  0F50  00F5               	movwf	___awmod@dividend
  2690  0F51  01F6               	clrf	___awmod@dividend+1
  2691  0F52  1BF5               	btfsc	___awmod@dividend,7
  2692  0F53  03F6               	decf	___awmod@dividend+1,f
  2693  0F54  160A  158A  2671  120A  158A  	fcall	___awmod
  2694  0F59  0873               	movf	?___awmod,w
  2695  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2697  0F5C  00C6               	movwf	??_scale
  2698  0F5D  3001               	movlw	1
  2699  0F5E                     u4255:
  2700  0F5E  1003               	clrc
  2701  0F5F  0DC6               	rlf	??_scale,f
  2702  0F60  3EFF               	addlw	-1
  2703  0F61  1D03               	skipz
  2704  0F62  2F5E               	goto	u4255
  2705  0F63  1003               	clrc
  2706  0F64  0D46               	rlf	??_scale,w
  2707  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2708  0F66  0084               	movwf	4
  2709  0F67  160A  118A  2000  120A  158A  	fcall	stringdir
  2710  0F6C  00C7               	movwf	??_scale+1
  2711  0F6D  160A  118A  2000  120A  158A  	fcall	stringdir
  2712  0F72  00C8               	movwf	??_scale+2
  2713  0F73  160A  118A  2000  120A  158A  	fcall	stringdir
  2714  0F78  00C9               	movwf	??_scale+3
  2715  0F79  160A  118A  2000  120A  158A  	fcall	stringdir
  2716  0F7E  00CA               	movwf	??_scale+4
  2717  0F7F  084A               	movf	??_scale+4,w
  2718  0F80  00AB               	movwf	___flmul@b+3
  2719  0F81  0849               	movf	??_scale+3,w
  2720  0F82  00AA               	movwf	___flmul@b+2
  2721  0F83  0848               	movf	??_scale+2,w
  2722  0F84  00A9               	movwf	___flmul@b+1
  2723  0F85  0847               	movf	??_scale+1,w
  2724  0F86  00A8               	movwf	___flmul@b
  2725  0F87  300A               	movlw	10
  2726  0F88  00A0               	movwf	___awdiv@divisor
  2727  0F89  3000               	movlw	0
  2728  0F8A  00A1               	movwf	___awdiv@divisor+1
  2729  0F8B  0854               	movf	scale@scl,w
  2730  0F8C  00A2               	movwf	___awdiv@dividend
  2731  0F8D  01A3               	clrf	___awdiv@dividend+1
  2732  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  2733  0F8F  03A3               	decf	___awdiv@dividend+1,f
  2734  0F90  160A  158A  2797  120A  158A  	fcall	___awdiv
  2735  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0F97  0820               	movf	?___awdiv,w
  2738  0F98  00CB               	movwf	??_scale+5
  2739  0F99  3001               	movlw	1
  2740  0F9A                     u4265:
  2741  0F9A  1003               	clrc
  2742  0F9B  0DCB               	rlf	??_scale+5,f
  2743  0F9C  3EFF               	addlw	-1
  2744  0F9D  1D03               	skipz
  2745  0F9E  2F9A               	goto	u4265
  2746  0F9F  1003               	clrc
  2747  0FA0  0D4B               	rlf	??_scale+5,w
  2748  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2749  0FA2  0084               	movwf	4
  2750  0FA3  160A  118A  2000  120A  158A  	fcall	stringdir
  2751  0FA8  00CC               	movwf	??_scale+6
  2752  0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  2753  0FAE  00CD               	movwf	??_scale+7
  2754  0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  2755  0FB4  00CE               	movwf	??_scale+8
  2756  0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  2757  0FBA  00CF               	movwf	??_scale+9
  2758  0FBB  084F               	movf	??_scale+9,w
  2759  0FBC  00AF               	movwf	___flmul@a+3
  2760  0FBD  084E               	movf	??_scale+8,w
  2761  0FBE  00AE               	movwf	___flmul@a+2
  2762  0FBF  084D               	movf	??_scale+7,w
  2763  0FC0  00AD               	movwf	___flmul@a+1
  2764  0FC1  084C               	movf	??_scale+6,w
  2765  0FC2  00AC               	movwf	___flmul@a
  2766  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2767  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0FCA  082B               	movf	?___flmul+3,w
  2770  0FCB  00C5               	movwf	?_scale+3
  2771  0FCC  082A               	movf	?___flmul+2,w
  2772  0FCD  00C4               	movwf	?_scale+2
  2773  0FCE  0829               	movf	?___flmul+1,w
  2774  0FCF  00C3               	movwf	?_scale+1
  2775  0FD0  0828               	movf	?___flmul,w
  2776  0FD1  00C2               	movwf	?_scale
  2777  0FD2  2FFF               	goto	l216
  2778  0FD3                     l2714:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2781  0FD3  0854               	movf	scale@scl,w
  2782  0FD4  00C6               	movwf	??_scale
  2783  0FD5  3001               	movlw	1
  2784  0FD6                     u4275:
  2785  0FD6  1003               	clrc
  2786  0FD7  0DC6               	rlf	??_scale,f
  2787  0FD8  3EFF               	addlw	-1
  2788  0FD9  1D03               	skipz
  2789  0FDA  2FD6               	goto	u4275
  2790  0FDB  1003               	clrc
  2791  0FDC  0D46               	rlf	??_scale,w
  2792  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2793  0FDE  0084               	movwf	4
  2794  0FDF  160A  118A  2000  120A  158A  	fcall	stringdir
  2795  0FE4  00C7               	movwf	??_scale+1
  2796  0FE5  160A  118A  2000  120A  158A  	fcall	stringdir
  2797  0FEA  00C8               	movwf	??_scale+2
  2798  0FEB  160A  118A  2000  120A  158A  	fcall	stringdir
  2799  0FF0  00C9               	movwf	??_scale+3
  2800  0FF1  160A  118A  2000  120A  158A  	fcall	stringdir
  2801  0FF6  00CA               	movwf	??_scale+4
  2802  0FF7  084A               	movf	??_scale+4,w
  2803  0FF8  00C5               	movwf	?_scale+3
  2804  0FF9  0849               	movf	??_scale+3,w
  2805  0FFA  00C4               	movwf	?_scale+2
  2806  0FFB  0848               	movf	??_scale+2,w
  2807  0FFC  00C3               	movwf	?_scale+1
  2808  0FFD  0847               	movf	??_scale+1,w
  2809  0FFE  00C2               	movwf	?_scale
  2810  0FFF                     l216:
  2811  0FFF  0008               	return
  2812  1000                     __end_of_scale:
  2813                           
  2814                           	psect	text3
  2815  1E71                     __ptext3:	
  2816 ;; *************** function ___awmod *****************
  2817 ;; Defined at:
  2818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  divisor         2    3[COMMON] int 
  2821 ;;  dividend        2    5[COMMON] int 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  sign            1    9[COMMON] unsigned char 
  2824 ;;  counter         1    8[COMMON] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2    3[COMMON] int 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         4       0       0       0       0
  2835 ;;      Locals:         2       0       0       0       0
  2836 ;;      Temps:          1       0       0       0       0
  2837 ;;      Totals:         7       0       0       0       0
  2838 ;;Total ram usage:        7 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_scale
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function ___awmod
  2850  1E71                     ___awmod:
  2851  1E71                     l2236:	
  2852                           ;incstack = 0
  2853                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2854                           
  2855  1E71  01F9               	clrf	___awmod@sign
  2856  1E72                     l2238:
  2857  1E72  1FF6               	btfss	___awmod@dividend+1,7
  2858  1E73  2E75               	goto	u2971
  2859  1E74  2E76               	goto	u2970
  2860  1E75                     u2971:
  2861  1E75  2E7D               	goto	l2244
  2862  1E76                     u2970:
  2863  1E76                     l2240:
  2864  1E76  09F5               	comf	___awmod@dividend,f
  2865  1E77  09F6               	comf	___awmod@dividend+1,f
  2866  1E78  0AF5               	incf	___awmod@dividend,f
  2867  1E79  1903               	skipnz
  2868  1E7A  0AF6               	incf	___awmod@dividend+1,f
  2869  1E7B                     l2242:
  2870  1E7B  01F9               	clrf	___awmod@sign
  2871  1E7C  0AF9               	incf	___awmod@sign,f
  2872  1E7D                     l2244:
  2873  1E7D  1FF4               	btfss	___awmod@divisor+1,7
  2874  1E7E  2E80               	goto	u2981
  2875  1E7F  2E81               	goto	u2980
  2876  1E80                     u2981:
  2877  1E80  2E86               	goto	l2248
  2878  1E81                     u2980:
  2879  1E81                     l2246:
  2880  1E81  09F3               	comf	___awmod@divisor,f
  2881  1E82  09F4               	comf	___awmod@divisor+1,f
  2882  1E83  0AF3               	incf	___awmod@divisor,f
  2883  1E84  1903               	skipnz
  2884  1E85  0AF4               	incf	___awmod@divisor+1,f
  2885  1E86                     l2248:
  2886  1E86  0873               	movf	___awmod@divisor,w
  2887  1E87  0474               	iorwf	___awmod@divisor+1,w
  2888  1E88  1903               	btfsc	3,2
  2889  1E89  2E8B               	goto	u2991
  2890  1E8A  2E8C               	goto	u2990
  2891  1E8B                     u2991:
  2892  1E8B  2EBB               	goto	l2266
  2893  1E8C                     u2990:
  2894  1E8C                     l2250:
  2895  1E8C  01F8               	clrf	___awmod@counter
  2896  1E8D  0AF8               	incf	___awmod@counter,f
  2897  1E8E  2E9A               	goto	l2256
  2898  1E8F                     l2252:
  2899  1E8F  3001               	movlw	1
  2900  1E90                     u3005:
  2901  1E90  1003               	clrc
  2902  1E91  0DF3               	rlf	___awmod@divisor,f
  2903  1E92  0DF4               	rlf	___awmod@divisor+1,f
  2904  1E93  3EFF               	addlw	-1
  2905  1E94  1D03               	skipz
  2906  1E95  2E90               	goto	u3005
  2907  1E96                     l2254:
  2908  1E96  3001               	movlw	1
  2909  1E97  00F7               	movwf	??___awmod
  2910  1E98  0877               	movf	??___awmod,w
  2911  1E99  07F8               	addwf	___awmod@counter,f
  2912  1E9A                     l2256:
  2913  1E9A  1FF4               	btfss	___awmod@divisor+1,7
  2914  1E9B  2E9D               	goto	u3011
  2915  1E9C  2E9E               	goto	u3010
  2916  1E9D                     u3011:
  2917  1E9D  2E8F               	goto	l2252
  2918  1E9E                     u3010:
  2919  1E9E                     l2258:
  2920  1E9E  0874               	movf	___awmod@divisor+1,w
  2921  1E9F  0276               	subwf	___awmod@dividend+1,w
  2922  1EA0  1D03               	skipz
  2923  1EA1  2EA4               	goto	u3025
  2924  1EA2  0873               	movf	___awmod@divisor,w
  2925  1EA3  0275               	subwf	___awmod@dividend,w
  2926  1EA4                     u3025:
  2927  1EA4  1C03               	skipc
  2928  1EA5  2EA7               	goto	u3021
  2929  1EA6  2EA8               	goto	u3020
  2930  1EA7                     u3021:
  2931  1EA7  2EAE               	goto	l2262
  2932  1EA8                     u3020:
  2933  1EA8                     l2260:
  2934  1EA8  0873               	movf	___awmod@divisor,w
  2935  1EA9  02F5               	subwf	___awmod@dividend,f
  2936  1EAA  0874               	movf	___awmod@divisor+1,w
  2937  1EAB  1C03               	skipc
  2938  1EAC  03F6               	decf	___awmod@dividend+1,f
  2939  1EAD  02F6               	subwf	___awmod@dividend+1,f
  2940  1EAE                     l2262:
  2941  1EAE  3001               	movlw	1
  2942  1EAF                     u3035:
  2943  1EAF  1003               	clrc
  2944  1EB0  0CF4               	rrf	___awmod@divisor+1,f
  2945  1EB1  0CF3               	rrf	___awmod@divisor,f
  2946  1EB2  3EFF               	addlw	-1
  2947  1EB3  1D03               	skipz
  2948  1EB4  2EAF               	goto	u3035
  2949  1EB5                     l2264:
  2950  1EB5  3001               	movlw	1
  2951  1EB6  02F8               	subwf	___awmod@counter,f
  2952  1EB7  1D03               	btfss	3,2
  2953  1EB8  2EBA               	goto	u3041
  2954  1EB9  2EBB               	goto	u3040
  2955  1EBA                     u3041:
  2956  1EBA  2E9E               	goto	l2258
  2957  1EBB                     u3040:
  2958  1EBB                     l2266:
  2959  1EBB  0879               	movf	___awmod@sign,w
  2960  1EBC  1903               	btfsc	3,2
  2961  1EBD  2EBF               	goto	u3051
  2962  1EBE  2EC0               	goto	u3050
  2963  1EBF                     u3051:
  2964  1EBF  2EC5               	goto	l2270
  2965  1EC0                     u3050:
  2966  1EC0                     l2268:
  2967  1EC0  09F5               	comf	___awmod@dividend,f
  2968  1EC1  09F6               	comf	___awmod@dividend+1,f
  2969  1EC2  0AF5               	incf	___awmod@dividend,f
  2970  1EC3  1903               	skipnz
  2971  1EC4  0AF6               	incf	___awmod@dividend+1,f
  2972  1EC5                     l2270:
  2973  1EC5  0876               	movf	___awmod@dividend+1,w
  2974  1EC6  00F4               	movwf	?___awmod+1
  2975  1EC7  0875               	movf	___awmod@dividend,w
  2976  1EC8  00F3               	movwf	?___awmod
  2977  1EC9                     l487:
  2978  1EC9  0008               	return
  2979  1ECA                     __end_of___awmod:
  2980                           
  2981                           	psect	text4
  2982  1F97                     __ptext4:	
  2983 ;; *************** function ___awdiv *****************
  2984 ;; Defined at:
  2985 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  divisor         2    0[BANK0 ] int 
  2988 ;;  dividend        2    2[BANK0 ] int 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  quotient        2    6[BANK0 ] int 
  2991 ;;  sign            1    5[BANK0 ] unsigned char 
  2992 ;;  counter         1    4[BANK0 ] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2    0[BANK0 ] int 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         0       4       0       0       0
  3003 ;;      Locals:         0       4       0       0       0
  3004 ;;      Temps:          1       0       0       0       0
  3005 ;;      Totals:         1       8       0       0       0
  3006 ;;Total ram usage:        9 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_scale
  3013 ;;		_sprintf
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function ___awdiv
  3019  1F97                     ___awdiv:
  3020  1F97                     l2192:	
  3021                           ;incstack = 0
  3022                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3023                           
  3024  1F97  1283               	bcf	3,5	;RP0=0, select bank0
  3025  1F98  1303               	bcf	3,6	;RP1=0, select bank0
  3026  1F99  01A5               	clrf	___awdiv@sign
  3027  1F9A                     l2194:
  3028  1F9A  1FA1               	btfss	___awdiv@divisor+1,7
  3029  1F9B  2F9D               	goto	u2871
  3030  1F9C  2F9E               	goto	u2870
  3031  1F9D                     u2871:
  3032  1F9D  2FA5               	goto	l2200
  3033  1F9E                     u2870:
  3034  1F9E                     l2196:
  3035  1F9E  09A0               	comf	___awdiv@divisor,f
  3036  1F9F  09A1               	comf	___awdiv@divisor+1,f
  3037  1FA0  0AA0               	incf	___awdiv@divisor,f
  3038  1FA1  1903               	skipnz
  3039  1FA2  0AA1               	incf	___awdiv@divisor+1,f
  3040  1FA3                     l2198:
  3041  1FA3  01A5               	clrf	___awdiv@sign
  3042  1FA4  0AA5               	incf	___awdiv@sign,f
  3043  1FA5                     l2200:
  3044  1FA5  1FA3               	btfss	___awdiv@dividend+1,7
  3045  1FA6  2FA8               	goto	u2881
  3046  1FA7  2FA9               	goto	u2880
  3047  1FA8                     u2881:
  3048  1FA8  2FB2               	goto	l2206
  3049  1FA9                     u2880:
  3050  1FA9                     l2202:
  3051  1FA9  09A2               	comf	___awdiv@dividend,f
  3052  1FAA  09A3               	comf	___awdiv@dividend+1,f
  3053  1FAB  0AA2               	incf	___awdiv@dividend,f
  3054  1FAC  1903               	skipnz
  3055  1FAD  0AA3               	incf	___awdiv@dividend+1,f
  3056  1FAE                     l2204:
  3057  1FAE  3001               	movlw	1
  3058  1FAF  00FA               	movwf	??___awdiv
  3059  1FB0  087A               	movf	??___awdiv,w
  3060  1FB1  06A5               	xorwf	___awdiv@sign,f
  3061  1FB2                     l2206:
  3062  1FB2  01A6               	clrf	___awdiv@quotient
  3063  1FB3  01A7               	clrf	___awdiv@quotient+1
  3064  1FB4                     l2208:
  3065  1FB4  0820               	movf	___awdiv@divisor,w
  3066  1FB5  0421               	iorwf	___awdiv@divisor+1,w
  3067  1FB6  1903               	btfsc	3,2
  3068  1FB7  2FB9               	goto	u2891
  3069  1FB8  2FBA               	goto	u2890
  3070  1FB9                     u2891:
  3071  1FB9  2FF1               	goto	l2228
  3072  1FBA                     u2890:
  3073  1FBA                     l2210:
  3074  1FBA  01A4               	clrf	___awdiv@counter
  3075  1FBB  0AA4               	incf	___awdiv@counter,f
  3076  1FBC  2FC8               	goto	l2216
  3077  1FBD                     l2212:
  3078  1FBD  3001               	movlw	1
  3079  1FBE                     u2905:
  3080  1FBE  1003               	clrc
  3081  1FBF  0DA0               	rlf	___awdiv@divisor,f
  3082  1FC0  0DA1               	rlf	___awdiv@divisor+1,f
  3083  1FC1  3EFF               	addlw	-1
  3084  1FC2  1D03               	skipz
  3085  1FC3  2FBE               	goto	u2905
  3086  1FC4                     l2214:
  3087  1FC4  3001               	movlw	1
  3088  1FC5  00FA               	movwf	??___awdiv
  3089  1FC6  087A               	movf	??___awdiv,w
  3090  1FC7  07A4               	addwf	___awdiv@counter,f
  3091  1FC8                     l2216:
  3092  1FC8  1FA1               	btfss	___awdiv@divisor+1,7
  3093  1FC9  2FCB               	goto	u2911
  3094  1FCA  2FCC               	goto	u2910
  3095  1FCB                     u2911:
  3096  1FCB  2FBD               	goto	l2212
  3097  1FCC                     u2910:
  3098  1FCC                     l2218:
  3099  1FCC  3001               	movlw	1
  3100  1FCD                     u2925:
  3101  1FCD  1003               	clrc
  3102  1FCE  0DA6               	rlf	___awdiv@quotient,f
  3103  1FCF  0DA7               	rlf	___awdiv@quotient+1,f
  3104  1FD0  3EFF               	addlw	-1
  3105  1FD1  1D03               	skipz
  3106  1FD2  2FCD               	goto	u2925
  3107  1FD3  0821               	movf	___awdiv@divisor+1,w
  3108  1FD4  0223               	subwf	___awdiv@dividend+1,w
  3109  1FD5  1D03               	skipz
  3110  1FD6  2FD9               	goto	u2935
  3111  1FD7  0820               	movf	___awdiv@divisor,w
  3112  1FD8  0222               	subwf	___awdiv@dividend,w
  3113  1FD9                     u2935:
  3114  1FD9  1C03               	skipc
  3115  1FDA  2FDC               	goto	u2931
  3116  1FDB  2FDD               	goto	u2930
  3117  1FDC                     u2931:
  3118  1FDC  2FE4               	goto	l2224
  3119  1FDD                     u2930:
  3120  1FDD                     l2220:
  3121  1FDD  0820               	movf	___awdiv@divisor,w
  3122  1FDE  02A2               	subwf	___awdiv@dividend,f
  3123  1FDF  0821               	movf	___awdiv@divisor+1,w
  3124  1FE0  1C03               	skipc
  3125  1FE1  03A3               	decf	___awdiv@dividend+1,f
  3126  1FE2  02A3               	subwf	___awdiv@dividend+1,f
  3127  1FE3                     l2222:
  3128  1FE3  1426               	bsf	___awdiv@quotient,0
  3129  1FE4                     l2224:
  3130  1FE4  3001               	movlw	1
  3131  1FE5                     u2945:
  3132  1FE5  1003               	clrc
  3133  1FE6  0CA1               	rrf	___awdiv@divisor+1,f
  3134  1FE7  0CA0               	rrf	___awdiv@divisor,f
  3135  1FE8  3EFF               	addlw	-1
  3136  1FE9  1D03               	skipz
  3137  1FEA  2FE5               	goto	u2945
  3138  1FEB                     l2226:
  3139  1FEB  3001               	movlw	1
  3140  1FEC  02A4               	subwf	___awdiv@counter,f
  3141  1FED  1D03               	btfss	3,2
  3142  1FEE  2FF0               	goto	u2951
  3143  1FEF  2FF1               	goto	u2950
  3144  1FF0                     u2951:
  3145  1FF0  2FCC               	goto	l2218
  3146  1FF1                     u2950:
  3147  1FF1                     l2228:
  3148  1FF1  0825               	movf	___awdiv@sign,w
  3149  1FF2  1903               	btfsc	3,2
  3150  1FF3  2FF5               	goto	u2961
  3151  1FF4  2FF6               	goto	u2960
  3152  1FF5                     u2961:
  3153  1FF5  2FFB               	goto	l2232
  3154  1FF6                     u2960:
  3155  1FF6                     l2230:
  3156  1FF6  09A6               	comf	___awdiv@quotient,f
  3157  1FF7  09A7               	comf	___awdiv@quotient+1,f
  3158  1FF8  0AA6               	incf	___awdiv@quotient,f
  3159  1FF9  1903               	skipnz
  3160  1FFA  0AA7               	incf	___awdiv@quotient+1,f
  3161  1FFB                     l2232:
  3162  1FFB  0827               	movf	___awdiv@quotient+1,w
  3163  1FFC  00A1               	movwf	?___awdiv+1
  3164  1FFD  0826               	movf	___awdiv@quotient,w
  3165  1FFE  00A0               	movwf	?___awdiv
  3166  1FFF                     l474:
  3167  1FFF  0008               	return
  3168  2000                     __end_of___awdiv:
  3169                           
  3170                           	psect	text5
  3171  1C3F                     __ptext5:	
  3172 ;; *************** function _isdigit *****************
  3173 ;; Defined at:
  3174 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  c               1    wreg     unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  c               1    4[COMMON] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       0       0       0
  3189 ;;      Locals:         2       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0
  3191 ;;      Totals:         2       0       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_sprintf
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function _isdigit
  3204  1C3F                     _isdigit:
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3208                           ;isdigit@c stored from wreg
  3209  1C3F  00F4               	movwf	isdigit@c
  3210  1C40                     l2718:
  3211  1C40  01F3               	clrf	_isdigit$959
  3212  1C41                     l2720:
  3213  1C41  303A               	movlw	58
  3214  1C42  0274               	subwf	isdigit@c,w
  3215  1C43  1803               	skipnc
  3216  1C44  2C46               	goto	u4281
  3217  1C45  2C47               	goto	u4280
  3218  1C46                     u4281:
  3219  1C46  2C4F               	goto	l2726
  3220  1C47                     u4280:
  3221  1C47                     l2722:
  3222  1C47  3030               	movlw	48
  3223  1C48  0274               	subwf	isdigit@c,w
  3224  1C49  1C03               	skipc
  3225  1C4A  2C4C               	goto	u4291
  3226  1C4B  2C4D               	goto	u4290
  3227  1C4C                     u4291:
  3228  1C4C  2C4F               	goto	l2726
  3229  1C4D                     u4290:
  3230  1C4D                     l2724:
  3231  1C4D  01F3               	clrf	_isdigit$959
  3232  1C4E  0AF3               	incf	_isdigit$959,f
  3233  1C4F                     l2726:
  3234  1C4F  0C73               	rrf	_isdigit$959,w
  3235  1C50                     l808:
  3236  1C50  0008               	return
  3237  1C51                     __end_of_isdigit:
  3238                           
  3239                           	psect	text6
  3240  12F0                     __ptext6:	
  3241 ;; *************** function _fround *****************
  3242 ;; Defined at:
  3243 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  prec            1    wreg     unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  prec            1   53[BANK0 ] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  4   34[BANK0 ] unsigned char 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         0       4       0       0       0
  3258 ;;      Locals:         0       9       0       0       0
  3259 ;;      Temps:          0       7       0       0       0
  3260 ;;      Totals:         0      20       0       0       0
  3261 ;;Total ram usage:       20 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    3
  3264 ;; This function calls:
  3265 ;;		___flmul
  3266 ;;		___lwdiv
  3267 ;;		___lwmod
  3268 ;; This function is called by:
  3269 ;;		_sprintf
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _fround
  3275  12F0                     _fround:
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3279                           ;fround@prec stored from wreg
  3280  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  3281  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  3282  12F2  00D5               	movwf	fround@prec
  3283  12F3                     l2660:
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3286  12F3  306E               	movlw	110
  3287  12F4  0255               	subwf	fround@prec,w
  3288  12F5  1C03               	skipc
  3289  12F6  2AF8               	goto	u4031
  3290  12F7  2AF9               	goto	u4030
  3291  12F8                     u4031:
  3292  12F8  2C08               	goto	l2668
  3293  12F9                     u4030:
  3294  12F9                     l2662:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3297  12F9  303F               	movlw	63
  3298  12FA  00AB               	movwf	___flmul@b+3
  3299  12FB  3000               	movlw	0
  3300  12FC  00AA               	movwf	___flmul@b+2
  3301  12FD  3000               	movlw	0
  3302  12FE  00A9               	movwf	___flmul@b+1
  3303  12FF  3000               	movlw	0
  3304  1300  00A8               	movwf	___flmul@b
  3305  1301  3064               	movlw	100
  3306  1302  00A0               	movwf	___lwdiv@divisor
  3307  1303  3000               	movlw	0
  3308  1304  00A1               	movwf	___lwdiv@divisor+1
  3309  1305  0855               	movf	fround@prec,w
  3310  1306  00C6               	movwf	??_fround
  3311  1307  01C7               	clrf	??_fround+1
  3312  1308  0846               	movf	??_fround,w
  3313  1309  00A2               	movwf	___lwdiv@dividend
  3314  130A  0847               	movf	??_fround+1,w
  3315  130B  00A3               	movwf	___lwdiv@dividend+1
  3316  130C  160A  158A  2535  160A  118A  	fcall	___lwdiv
  3317  1311  1283               	bcf	3,5	;RP0=0, select bank0
  3318  1312  1303               	bcf	3,6	;RP1=0, select bank0
  3319  1313  0820               	movf	?___lwdiv,w
  3320  1314  00C8               	movwf	??_fround+2
  3321  1315  3001               	movlw	1
  3322  1316                     u4045:
  3323  1316  1003               	clrc
  3324  1317  0DC8               	rlf	??_fround+2,f
  3325  1318  3EFF               	addlw	-1
  3326  1319  1D03               	skipz
  3327  131A  2B16               	goto	u4045
  3328  131B  1003               	clrc
  3329  131C  0D48               	rlf	??_fround+2,w
  3330  131D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3331  131E  0084               	movwf	4
  3332  131F  160A  118A  2000  160A  118A  	fcall	stringdir
  3333  1324  00C9               	movwf	??_fround+3
  3334  1325  160A  118A  2000  160A  118A  	fcall	stringdir
  3335  132A  00CA               	movwf	??_fround+4
  3336  132B  160A  118A  2000  160A  118A  	fcall	stringdir
  3337  1330  00CB               	movwf	??_fround+5
  3338  1331  160A  118A  2000  160A  118A  	fcall	stringdir
  3339  1336  00CC               	movwf	??_fround+6
  3340  1337  084C               	movf	??_fround+6,w
  3341  1338  00AF               	movwf	___flmul@a+3
  3342  1339  084B               	movf	??_fround+5,w
  3343  133A  00AE               	movwf	___flmul@a+2
  3344  133B  084A               	movf	??_fround+4,w
  3345  133C  00AD               	movwf	___flmul@a+1
  3346  133D  0849               	movf	??_fround+3,w
  3347  133E  00AC               	movwf	___flmul@a
  3348  133F  120A  158A  213C  160A  118A  	fcall	___flmul
  3349  1344  1283               	bcf	3,5	;RP0=0, select bank0
  3350  1345  1303               	bcf	3,6	;RP1=0, select bank0
  3351  1346  082B               	movf	?___flmul+3,w
  3352  1347  00D4               	movwf	_fround$1130+3
  3353  1348  082A               	movf	?___flmul+2,w
  3354  1349  00D3               	movwf	_fround$1130+2
  3355  134A  0829               	movf	?___flmul+1,w
  3356  134B  00D2               	movwf	_fround$1130+1
  3357  134C  0828               	movf	?___flmul,w
  3358  134D  00D1               	movwf	_fround$1130
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3361  134E  300A               	movlw	10
  3362  134F  00A0               	movwf	___lwdiv@divisor
  3363  1350  3000               	movlw	0
  3364  1351  00A1               	movwf	___lwdiv@divisor+1
  3365  1352  0855               	movf	fround@prec,w
  3366  1353  00C6               	movwf	??_fround
  3367  1354  01C7               	clrf	??_fround+1
  3368  1355  0846               	movf	??_fround,w
  3369  1356  00F5               	movwf	___lwmod@dividend
  3370  1357  0847               	movf	??_fround+1,w
  3371  1358  00F6               	movwf	___lwmod@dividend+1
  3372  1359  3064               	movlw	100
  3373  135A  00F3               	movwf	___lwmod@divisor
  3374  135B  3000               	movlw	0
  3375  135C  00F4               	movwf	___lwmod@divisor+1
  3376  135D  160A  158A  24BF  160A  118A  	fcall	___lwmod
  3377  1362  0874               	movf	?___lwmod+1,w
  3378  1363  1283               	bcf	3,5	;RP0=0, select bank0
  3379  1364  1303               	bcf	3,6	;RP1=0, select bank0
  3380  1365  00A3               	movwf	___lwdiv@dividend+1
  3381  1366  0873               	movf	?___lwmod,w
  3382  1367  00A2               	movwf	___lwdiv@dividend
  3383  1368  160A  158A  2535  160A  118A  	fcall	___lwdiv
  3384  136D  1283               	bcf	3,5	;RP0=0, select bank0
  3385  136E  1303               	bcf	3,6	;RP1=0, select bank0
  3386  136F  0820               	movf	?___lwdiv,w
  3387  1370  00C8               	movwf	??_fround+2
  3388  1371  3001               	movlw	1
  3389  1372                     u4055:
  3390  1372  1003               	clrc
  3391  1373  0DC8               	rlf	??_fround+2,f
  3392  1374  3EFF               	addlw	-1
  3393  1375  1D03               	skipz
  3394  1376  2B72               	goto	u4055
  3395  1377  1003               	clrc
  3396  1378  0D48               	rlf	??_fround+2,w
  3397  1379  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3398  137A  0084               	movwf	4
  3399  137B  160A  118A  2000  160A  118A  	fcall	stringdir
  3400  1380  00C9               	movwf	??_fround+3
  3401  1381  160A  118A  2000  160A  118A  	fcall	stringdir
  3402  1386  00CA               	movwf	??_fround+4
  3403  1387  160A  118A  2000  160A  118A  	fcall	stringdir
  3404  138C  00CB               	movwf	??_fround+5
  3405  138D  160A  118A  2000  160A  118A  	fcall	stringdir
  3406  1392  00CC               	movwf	??_fround+6
  3407  1393  084C               	movf	??_fround+6,w
  3408  1394  00AB               	movwf	___flmul@b+3
  3409  1395  084B               	movf	??_fround+5,w
  3410  1396  00AA               	movwf	___flmul@b+2
  3411  1397  084A               	movf	??_fround+4,w
  3412  1398  00A9               	movwf	___flmul@b+1
  3413  1399  0849               	movf	??_fround+3,w
  3414  139A  00A8               	movwf	___flmul@b
  3415  139B  0854               	movf	_fround$1130+3,w
  3416  139C  00AF               	movwf	___flmul@a+3
  3417  139D  0853               	movf	_fround$1130+2,w
  3418  139E  00AE               	movwf	___flmul@a+2
  3419  139F  0852               	movf	_fround$1130+1,w
  3420  13A0  00AD               	movwf	___flmul@a+1
  3421  13A1  0851               	movf	_fround$1130,w
  3422  13A2  00AC               	movwf	___flmul@a
  3423  13A3  120A  158A  213C  160A  118A  	fcall	___flmul
  3424  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  3425  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  3426  13AA  082B               	movf	?___flmul+3,w
  3427  13AB  00D0               	movwf	_fround$1131+3
  3428  13AC  082A               	movf	?___flmul+2,w
  3429  13AD  00CF               	movwf	_fround$1131+2
  3430  13AE  0829               	movf	?___flmul+1,w
  3431  13AF  00CE               	movwf	_fround$1131+1
  3432  13B0  0828               	movf	?___flmul,w
  3433  13B1  00CD               	movwf	_fround$1131
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3436  13B2  300A               	movlw	10
  3437  13B3  00F3               	movwf	___lwmod@divisor
  3438  13B4  3000               	movlw	0
  3439  13B5  00F4               	movwf	___lwmod@divisor+1
  3440  13B6  0855               	movf	fround@prec,w
  3441  13B7  00C6               	movwf	??_fround
  3442  13B8  01C7               	clrf	??_fround+1
  3443  13B9  0846               	movf	??_fround,w
  3444  13BA  00F5               	movwf	___lwmod@dividend
  3445  13BB  0847               	movf	??_fround+1,w
  3446  13BC  00F6               	movwf	___lwmod@dividend+1
  3447  13BD  160A  158A  24BF  160A  118A  	fcall	___lwmod
  3448  13C2  0873               	movf	?___lwmod,w
  3449  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  3450  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  3451  13C5  00C8               	movwf	??_fround+2
  3452  13C6  3001               	movlw	1
  3453  13C7                     u4065:
  3454  13C7  1003               	clrc
  3455  13C8  0DC8               	rlf	??_fround+2,f
  3456  13C9  3EFF               	addlw	-1
  3457  13CA  1D03               	skipz
  3458  13CB  2BC7               	goto	u4065
  3459  13CC  1003               	clrc
  3460  13CD  0D48               	rlf	??_fround+2,w
  3461  13CE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3462  13CF  0084               	movwf	4
  3463  13D0  160A  118A  2000  160A  118A  	fcall	stringdir
  3464  13D5  00C9               	movwf	??_fround+3
  3465  13D6  160A  118A  2000  160A  118A  	fcall	stringdir
  3466  13DB  00CA               	movwf	??_fround+4
  3467  13DC  160A  118A  2000  160A  118A  	fcall	stringdir
  3468  13E1  00CB               	movwf	??_fround+5
  3469  13E2  160A  118A  2000  160A  118A  	fcall	stringdir
  3470  13E7  00CC               	movwf	??_fround+6
  3471  13E8  084C               	movf	??_fround+6,w
  3472  13E9  00AB               	movwf	___flmul@b+3
  3473  13EA  084B               	movf	??_fround+5,w
  3474  13EB  00AA               	movwf	___flmul@b+2
  3475  13EC  084A               	movf	??_fround+4,w
  3476  13ED  00A9               	movwf	___flmul@b+1
  3477  13EE  0849               	movf	??_fround+3,w
  3478  13EF  00A8               	movwf	___flmul@b
  3479  13F0  0850               	movf	_fround$1131+3,w
  3480  13F1  00AF               	movwf	___flmul@a+3
  3481  13F2  084F               	movf	_fround$1131+2,w
  3482  13F3  00AE               	movwf	___flmul@a+2
  3483  13F4  084E               	movf	_fround$1131+1,w
  3484  13F5  00AD               	movwf	___flmul@a+1
  3485  13F6  084D               	movf	_fround$1131,w
  3486  13F7  00AC               	movwf	___flmul@a
  3487  13F8  120A  158A  213C  160A  118A  	fcall	___flmul
  3488  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  3489  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  3490  13FF  082B               	movf	?___flmul+3,w
  3491  1400  00C5               	movwf	?_fround+3
  3492  1401  082A               	movf	?___flmul+2,w
  3493  1402  00C4               	movwf	?_fround+2
  3494  1403  0829               	movf	?___flmul+1,w
  3495  1404  00C3               	movwf	?_fround+1
  3496  1405  0828               	movf	?___flmul,w
  3497  1406  00C2               	movwf	?_fround
  3498  1407  2CFC               	goto	l209
  3499  1408                     l2668:
  3500  1408  300B               	movlw	11
  3501  1409  0255               	subwf	fround@prec,w
  3502  140A  1C03               	skipc
  3503  140B  2C0D               	goto	u4071
  3504  140C  2C0E               	goto	u4070
  3505  140D                     u4071:
  3506  140D  2CB9               	goto	l2674
  3507  140E                     u4070:
  3508  140E                     l2670:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3511  140E  303F               	movlw	63
  3512  140F  00AB               	movwf	___flmul@b+3
  3513  1410  3000               	movlw	0
  3514  1411  00AA               	movwf	___flmul@b+2
  3515  1412  3000               	movlw	0
  3516  1413  00A9               	movwf	___flmul@b+1
  3517  1414  3000               	movlw	0
  3518  1415  00A8               	movwf	___flmul@b
  3519  1416  300A               	movlw	10
  3520  1417  00A0               	movwf	___lwdiv@divisor
  3521  1418  3000               	movlw	0
  3522  1419  00A1               	movwf	___lwdiv@divisor+1
  3523  141A  0855               	movf	fround@prec,w
  3524  141B  00C6               	movwf	??_fround
  3525  141C  01C7               	clrf	??_fround+1
  3526  141D  0846               	movf	??_fround,w
  3527  141E  00A2               	movwf	___lwdiv@dividend
  3528  141F  0847               	movf	??_fround+1,w
  3529  1420  00A3               	movwf	___lwdiv@dividend+1
  3530  1421  160A  158A  2535  160A  118A  	fcall	___lwdiv
  3531  1426  1283               	bcf	3,5	;RP0=0, select bank0
  3532  1427  1303               	bcf	3,6	;RP1=0, select bank0
  3533  1428  0820               	movf	?___lwdiv,w
  3534  1429  00C8               	movwf	??_fround+2
  3535  142A  3001               	movlw	1
  3536  142B                     u4085:
  3537  142B  1003               	clrc
  3538  142C  0DC8               	rlf	??_fround+2,f
  3539  142D  3EFF               	addlw	-1
  3540  142E  1D03               	skipz
  3541  142F  2C2B               	goto	u4085
  3542  1430  1003               	clrc
  3543  1431  0D48               	rlf	??_fround+2,w
  3544  1432  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3545  1433  0084               	movwf	4
  3546  1434  160A  118A  2000  160A  118A  	fcall	stringdir
  3547  1439  00C9               	movwf	??_fround+3
  3548  143A  160A  118A  2000  160A  118A  	fcall	stringdir
  3549  143F  00CA               	movwf	??_fround+4
  3550  1440  160A  118A  2000  160A  118A  	fcall	stringdir
  3551  1445  00CB               	movwf	??_fround+5
  3552  1446  160A  118A  2000  160A  118A  	fcall	stringdir
  3553  144B  00CC               	movwf	??_fround+6
  3554  144C  084C               	movf	??_fround+6,w
  3555  144D  00AF               	movwf	___flmul@a+3
  3556  144E  084B               	movf	??_fround+5,w
  3557  144F  00AE               	movwf	___flmul@a+2
  3558  1450  084A               	movf	??_fround+4,w
  3559  1451  00AD               	movwf	___flmul@a+1
  3560  1452  0849               	movf	??_fround+3,w
  3561  1453  00AC               	movwf	___flmul@a
  3562  1454  120A  158A  213C  160A  118A  	fcall	___flmul
  3563  1459  1283               	bcf	3,5	;RP0=0, select bank0
  3564  145A  1303               	bcf	3,6	;RP1=0, select bank0
  3565  145B  082B               	movf	?___flmul+3,w
  3566  145C  00D4               	movwf	_fround$1130+3
  3567  145D  082A               	movf	?___flmul+2,w
  3568  145E  00D3               	movwf	_fround$1130+2
  3569  145F  0829               	movf	?___flmul+1,w
  3570  1460  00D2               	movwf	_fround$1130+1
  3571  1461  0828               	movf	?___flmul,w
  3572  1462  00D1               	movwf	_fround$1130
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3575  1463  300A               	movlw	10
  3576  1464  00F3               	movwf	___lwmod@divisor
  3577  1465  3000               	movlw	0
  3578  1466  00F4               	movwf	___lwmod@divisor+1
  3579  1467  0855               	movf	fround@prec,w
  3580  1468  00C6               	movwf	??_fround
  3581  1469  01C7               	clrf	??_fround+1
  3582  146A  0846               	movf	??_fround,w
  3583  146B  00F5               	movwf	___lwmod@dividend
  3584  146C  0847               	movf	??_fround+1,w
  3585  146D  00F6               	movwf	___lwmod@dividend+1
  3586  146E  160A  158A  24BF  160A  118A  	fcall	___lwmod
  3587  1473  0873               	movf	?___lwmod,w
  3588  1474  1283               	bcf	3,5	;RP0=0, select bank0
  3589  1475  1303               	bcf	3,6	;RP1=0, select bank0
  3590  1476  00C8               	movwf	??_fround+2
  3591  1477  3001               	movlw	1
  3592  1478                     u4095:
  3593  1478  1003               	clrc
  3594  1479  0DC8               	rlf	??_fround+2,f
  3595  147A  3EFF               	addlw	-1
  3596  147B  1D03               	skipz
  3597  147C  2C78               	goto	u4095
  3598  147D  1003               	clrc
  3599  147E  0D48               	rlf	??_fround+2,w
  3600  147F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3601  1480  0084               	movwf	4
  3602  1481  160A  118A  2000  160A  118A  	fcall	stringdir
  3603  1486  00C9               	movwf	??_fround+3
  3604  1487  160A  118A  2000  160A  118A  	fcall	stringdir
  3605  148C  00CA               	movwf	??_fround+4
  3606  148D  160A  118A  2000  160A  118A  	fcall	stringdir
  3607  1492  00CB               	movwf	??_fround+5
  3608  1493  160A  118A  2000  160A  118A  	fcall	stringdir
  3609  1498  00CC               	movwf	??_fround+6
  3610  1499  084C               	movf	??_fround+6,w
  3611  149A  00AB               	movwf	___flmul@b+3
  3612  149B  084B               	movf	??_fround+5,w
  3613  149C  00AA               	movwf	___flmul@b+2
  3614  149D  084A               	movf	??_fround+4,w
  3615  149E  00A9               	movwf	___flmul@b+1
  3616  149F  0849               	movf	??_fround+3,w
  3617  14A0  00A8               	movwf	___flmul@b
  3618  14A1  0854               	movf	_fround$1130+3,w
  3619  14A2  00AF               	movwf	___flmul@a+3
  3620  14A3  0853               	movf	_fround$1130+2,w
  3621  14A4  00AE               	movwf	___flmul@a+2
  3622  14A5  0852               	movf	_fround$1130+1,w
  3623  14A6  00AD               	movwf	___flmul@a+1
  3624  14A7  0851               	movf	_fround$1130,w
  3625  14A8  00AC               	movwf	___flmul@a
  3626  14A9  120A  158A  213C  160A  118A  	fcall	___flmul
  3627  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  3628  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  3629  14B0  082B               	movf	?___flmul+3,w
  3630  14B1  00C5               	movwf	?_fround+3
  3631  14B2  082A               	movf	?___flmul+2,w
  3632  14B3  00C4               	movwf	?_fround+2
  3633  14B4  0829               	movf	?___flmul+1,w
  3634  14B5  00C3               	movwf	?_fround+1
  3635  14B6  0828               	movf	?___flmul,w
  3636  14B7  00C2               	movwf	?_fround
  3637  14B8  2CFC               	goto	l209
  3638  14B9                     l2674:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3641  14B9  303F               	movlw	63
  3642  14BA  00AB               	movwf	___flmul@b+3
  3643  14BB  3000               	movlw	0
  3644  14BC  00AA               	movwf	___flmul@b+2
  3645  14BD  3000               	movlw	0
  3646  14BE  00A9               	movwf	___flmul@b+1
  3647  14BF  3000               	movlw	0
  3648  14C0  00A8               	movwf	___flmul@b
  3649  14C1  0855               	movf	fround@prec,w
  3650  14C2  00C6               	movwf	??_fround
  3651  14C3  3001               	movlw	1
  3652  14C4                     u4105:
  3653  14C4  1003               	clrc
  3654  14C5  0DC6               	rlf	??_fround,f
  3655  14C6  3EFF               	addlw	-1
  3656  14C7  1D03               	skipz
  3657  14C8  2CC4               	goto	u4105
  3658  14C9  1003               	clrc
  3659  14CA  0D46               	rlf	??_fround,w
  3660  14CB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3661  14CC  0084               	movwf	4
  3662  14CD  160A  118A  2000  160A  118A  	fcall	stringdir
  3663  14D2  00C7               	movwf	??_fround+1
  3664  14D3  160A  118A  2000  160A  118A  	fcall	stringdir
  3665  14D8  00C8               	movwf	??_fround+2
  3666  14D9  160A  118A  2000  160A  118A  	fcall	stringdir
  3667  14DE  00C9               	movwf	??_fround+3
  3668  14DF  160A  118A  2000  160A  118A  	fcall	stringdir
  3669  14E4  00CA               	movwf	??_fround+4
  3670  14E5  084A               	movf	??_fround+4,w
  3671  14E6  00AF               	movwf	___flmul@a+3
  3672  14E7  0849               	movf	??_fround+3,w
  3673  14E8  00AE               	movwf	___flmul@a+2
  3674  14E9  0848               	movf	??_fround+2,w
  3675  14EA  00AD               	movwf	___flmul@a+1
  3676  14EB  0847               	movf	??_fround+1,w
  3677  14EC  00AC               	movwf	___flmul@a
  3678  14ED  120A  158A  213C  160A  118A  	fcall	___flmul
  3679  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  3680  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  3681  14F4  082B               	movf	?___flmul+3,w
  3682  14F5  00C5               	movwf	?_fround+3
  3683  14F6  082A               	movf	?___flmul+2,w
  3684  14F7  00C4               	movwf	?_fround+2
  3685  14F8  0829               	movf	?___flmul+1,w
  3686  14F9  00C3               	movwf	?_fround+1
  3687  14FA  0828               	movf	?___flmul,w
  3688  14FB  00C2               	movwf	?_fround
  3689  14FC                     l209:
  3690  14FC  0008               	return
  3691  14FD                     __end_of_fround:
  3692                           
  3693                           	psect	text7
  3694  1CBF                     __ptext7:	
  3695 ;; *************** function ___lwmod *****************
  3696 ;; Defined at:
  3697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  divisor         2    3[COMMON] unsigned int 
  3700 ;;  dividend        2    5[COMMON] unsigned int 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  counter         1    8[COMMON] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2    3[COMMON] unsigned int 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3712 ;;      Params:         4       0       0       0       0
  3713 ;;      Locals:         1       0       0       0       0
  3714 ;;      Temps:          1       0       0       0       0
  3715 ;;      Totals:         6       0       0       0       0
  3716 ;;Total ram usage:        6 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_fround
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function ___lwmod
  3728  1CBF                     ___lwmod:
  3729  1CBF                     l2300:	
  3730                           ;incstack = 0
  3731                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3732                           
  3733  1CBF  0873               	movf	___lwmod@divisor,w
  3734  1CC0  0474               	iorwf	___lwmod@divisor+1,w
  3735  1CC1  1903               	btfsc	3,2
  3736  1CC2  2CC4               	goto	u3131
  3737  1CC3  2CC5               	goto	u3130
  3738  1CC4                     u3131:
  3739  1CC4  2CF4               	goto	l2318
  3740  1CC5                     u3130:
  3741  1CC5                     l2302:
  3742  1CC5  01F8               	clrf	___lwmod@counter
  3743  1CC6  0AF8               	incf	___lwmod@counter,f
  3744  1CC7  2CD3               	goto	l2308
  3745  1CC8                     l2304:
  3746  1CC8  3001               	movlw	1
  3747  1CC9                     u3145:
  3748  1CC9  1003               	clrc
  3749  1CCA  0DF3               	rlf	___lwmod@divisor,f
  3750  1CCB  0DF4               	rlf	___lwmod@divisor+1,f
  3751  1CCC  3EFF               	addlw	-1
  3752  1CCD  1D03               	skipz
  3753  1CCE  2CC9               	goto	u3145
  3754  1CCF                     l2306:
  3755  1CCF  3001               	movlw	1
  3756  1CD0  00F7               	movwf	??___lwmod
  3757  1CD1  0877               	movf	??___lwmod,w
  3758  1CD2  07F8               	addwf	___lwmod@counter,f
  3759  1CD3                     l2308:
  3760  1CD3  1FF4               	btfss	___lwmod@divisor+1,7
  3761  1CD4  2CD6               	goto	u3151
  3762  1CD5  2CD7               	goto	u3150
  3763  1CD6                     u3151:
  3764  1CD6  2CC8               	goto	l2304
  3765  1CD7                     u3150:
  3766  1CD7                     l2310:
  3767  1CD7  0874               	movf	___lwmod@divisor+1,w
  3768  1CD8  0276               	subwf	___lwmod@dividend+1,w
  3769  1CD9  1D03               	skipz
  3770  1CDA  2CDD               	goto	u3165
  3771  1CDB  0873               	movf	___lwmod@divisor,w
  3772  1CDC  0275               	subwf	___lwmod@dividend,w
  3773  1CDD                     u3165:
  3774  1CDD  1C03               	skipc
  3775  1CDE  2CE0               	goto	u3161
  3776  1CDF  2CE1               	goto	u3160
  3777  1CE0                     u3161:
  3778  1CE0  2CE7               	goto	l2314
  3779  1CE1                     u3160:
  3780  1CE1                     l2312:
  3781  1CE1  0873               	movf	___lwmod@divisor,w
  3782  1CE2  02F5               	subwf	___lwmod@dividend,f
  3783  1CE3  0874               	movf	___lwmod@divisor+1,w
  3784  1CE4  1C03               	skipc
  3785  1CE5  03F6               	decf	___lwmod@dividend+1,f
  3786  1CE6  02F6               	subwf	___lwmod@dividend+1,f
  3787  1CE7                     l2314:
  3788  1CE7  3001               	movlw	1
  3789  1CE8                     u3175:
  3790  1CE8  1003               	clrc
  3791  1CE9  0CF4               	rrf	___lwmod@divisor+1,f
  3792  1CEA  0CF3               	rrf	___lwmod@divisor,f
  3793  1CEB  3EFF               	addlw	-1
  3794  1CEC  1D03               	skipz
  3795  1CED  2CE8               	goto	u3175
  3796  1CEE                     l2316:
  3797  1CEE  3001               	movlw	1
  3798  1CEF  02F8               	subwf	___lwmod@counter,f
  3799  1CF0  1D03               	btfss	3,2
  3800  1CF1  2CF3               	goto	u3181
  3801  1CF2  2CF4               	goto	u3180
  3802  1CF3                     u3181:
  3803  1CF3  2CD7               	goto	l2310
  3804  1CF4                     u3180:
  3805  1CF4                     l2318:
  3806  1CF4  0876               	movf	___lwmod@dividend+1,w
  3807  1CF5  00F4               	movwf	?___lwmod+1
  3808  1CF6  0875               	movf	___lwmod@dividend,w
  3809  1CF7  00F3               	movwf	?___lwmod
  3810  1CF8                     l637:
  3811  1CF8  0008               	return
  3812  1CF9                     __end_of___lwmod:
  3813                           
  3814                           	psect	text8
  3815  1D35                     __ptext8:	
  3816 ;; *************** function ___lwdiv *****************
  3817 ;; Defined at:
  3818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  divisor         2    0[BANK0 ] unsigned int 
  3821 ;;  dividend        2    2[BANK0 ] unsigned int 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  quotient        2    4[BANK0 ] unsigned int 
  3824 ;;  counter         1    6[BANK0 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  2    0[BANK0 ] unsigned int 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       4       0       0       0
  3835 ;;      Locals:         0       3       0       0       0
  3836 ;;      Temps:          1       0       0       0       0
  3837 ;;      Totals:         1       7       0       0       0
  3838 ;;Total ram usage:        8 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    1
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_fround
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function ___lwdiv
  3850  1D35                     ___lwdiv:
  3851  1D35                     l2274:	
  3852                           ;incstack = 0
  3853                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3854                           
  3855  1D35  1283               	bcf	3,5	;RP0=0, select bank0
  3856  1D36  1303               	bcf	3,6	;RP1=0, select bank0
  3857  1D37  01A4               	clrf	___lwdiv@quotient
  3858  1D38  01A5               	clrf	___lwdiv@quotient+1
  3859  1D39                     l2276:
  3860  1D39  0820               	movf	___lwdiv@divisor,w
  3861  1D3A  0421               	iorwf	___lwdiv@divisor+1,w
  3862  1D3B  1903               	btfsc	3,2
  3863  1D3C  2D3E               	goto	u3061
  3864  1D3D  2D3F               	goto	u3060
  3865  1D3E                     u3061:
  3866  1D3E  2D76               	goto	l2296
  3867  1D3F                     u3060:
  3868  1D3F                     l2278:
  3869  1D3F  01A6               	clrf	___lwdiv@counter
  3870  1D40  0AA6               	incf	___lwdiv@counter,f
  3871  1D41  2D4D               	goto	l2284
  3872  1D42                     l2280:
  3873  1D42  3001               	movlw	1
  3874  1D43                     u3075:
  3875  1D43  1003               	clrc
  3876  1D44  0DA0               	rlf	___lwdiv@divisor,f
  3877  1D45  0DA1               	rlf	___lwdiv@divisor+1,f
  3878  1D46  3EFF               	addlw	-1
  3879  1D47  1D03               	skipz
  3880  1D48  2D43               	goto	u3075
  3881  1D49                     l2282:
  3882  1D49  3001               	movlw	1
  3883  1D4A  00F9               	movwf	??___lwdiv
  3884  1D4B  0879               	movf	??___lwdiv,w
  3885  1D4C  07A6               	addwf	___lwdiv@counter,f
  3886  1D4D                     l2284:
  3887  1D4D  1FA1               	btfss	___lwdiv@divisor+1,7
  3888  1D4E  2D50               	goto	u3081
  3889  1D4F  2D51               	goto	u3080
  3890  1D50                     u3081:
  3891  1D50  2D42               	goto	l2280
  3892  1D51                     u3080:
  3893  1D51                     l2286:
  3894  1D51  3001               	movlw	1
  3895  1D52                     u3095:
  3896  1D52  1003               	clrc
  3897  1D53  0DA4               	rlf	___lwdiv@quotient,f
  3898  1D54  0DA5               	rlf	___lwdiv@quotient+1,f
  3899  1D55  3EFF               	addlw	-1
  3900  1D56  1D03               	skipz
  3901  1D57  2D52               	goto	u3095
  3902  1D58  0821               	movf	___lwdiv@divisor+1,w
  3903  1D59  0223               	subwf	___lwdiv@dividend+1,w
  3904  1D5A  1D03               	skipz
  3905  1D5B  2D5E               	goto	u3105
  3906  1D5C  0820               	movf	___lwdiv@divisor,w
  3907  1D5D  0222               	subwf	___lwdiv@dividend,w
  3908  1D5E                     u3105:
  3909  1D5E  1C03               	skipc
  3910  1D5F  2D61               	goto	u3101
  3911  1D60  2D62               	goto	u3100
  3912  1D61                     u3101:
  3913  1D61  2D69               	goto	l2292
  3914  1D62                     u3100:
  3915  1D62                     l2288:
  3916  1D62  0820               	movf	___lwdiv@divisor,w
  3917  1D63  02A2               	subwf	___lwdiv@dividend,f
  3918  1D64  0821               	movf	___lwdiv@divisor+1,w
  3919  1D65  1C03               	skipc
  3920  1D66  03A3               	decf	___lwdiv@dividend+1,f
  3921  1D67  02A3               	subwf	___lwdiv@dividend+1,f
  3922  1D68                     l2290:
  3923  1D68  1424               	bsf	___lwdiv@quotient,0
  3924  1D69                     l2292:
  3925  1D69  3001               	movlw	1
  3926  1D6A                     u3115:
  3927  1D6A  1003               	clrc
  3928  1D6B  0CA1               	rrf	___lwdiv@divisor+1,f
  3929  1D6C  0CA0               	rrf	___lwdiv@divisor,f
  3930  1D6D  3EFF               	addlw	-1
  3931  1D6E  1D03               	skipz
  3932  1D6F  2D6A               	goto	u3115
  3933  1D70                     l2294:
  3934  1D70  3001               	movlw	1
  3935  1D71  02A6               	subwf	___lwdiv@counter,f
  3936  1D72  1D03               	btfss	3,2
  3937  1D73  2D75               	goto	u3121
  3938  1D74  2D76               	goto	u3120
  3939  1D75                     u3121:
  3940  1D75  2D51               	goto	l2286
  3941  1D76                     u3120:
  3942  1D76                     l2296:
  3943  1D76  0825               	movf	___lwdiv@quotient+1,w
  3944  1D77  00A1               	movwf	?___lwdiv+1
  3945  1D78  0824               	movf	___lwdiv@quotient,w
  3946  1D79  00A0               	movwf	?___lwdiv
  3947  1D7A                     l627:
  3948  1D7A  0008               	return
  3949  1D7B                     __end_of___lwdiv:
  3950                           
  3951                           	psect	text9
  3952  093C                     __ptext9:	
  3953 ;; *************** function ___flmul *****************
  3954 ;; Defined at:
  3955 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  b               4    8[BANK0 ] unsigned int 
  3958 ;;  a               4   12[BANK0 ] unsigned int 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  prod            4   28[BANK0 ] struct .
  3961 ;;  grs             4   22[BANK0 ] unsigned long 
  3962 ;;  temp            2   32[BANK0 ] struct .
  3963 ;;  bexp            1   27[BANK0 ] unsigned char 
  3964 ;;  aexp            1   26[BANK0 ] unsigned char 
  3965 ;;  sign            1   21[BANK0 ] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  4    8[BANK0 ] unsigned char 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       8       0       0       0
  3976 ;;      Locals:         0      13       0       0       0
  3977 ;;      Temps:          0       5       0       0       0
  3978 ;;      Totals:         0      26       0       0       0
  3979 ;;Total ram usage:       26 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    2
  3982 ;; This function calls:
  3983 ;;		__Umul8_16
  3984 ;; This function is called by:
  3985 ;;		_fround
  3986 ;;		_scale
  3987 ;;		_sprintf
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function ___flmul
  3993  093C                     ___flmul:
  3994  093C                     l2516:	
  3995                           ;incstack = 0
  3996                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3997                           
  3998  093C  1283               	bcf	3,5	;RP0=0, select bank0
  3999  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4000  093E  082B               	movf	___flmul@b+3,w
  4001  093F  3980               	andlw	128
  4002  0940  00B0               	movwf	??___flmul
  4003  0941  0830               	movf	??___flmul,w
  4004  0942  00B5               	movwf	___flmul@sign
  4005  0943                     l2518:
  4006  0943  082B               	movf	___flmul@b+3,w
  4007  0944  00B0               	movwf	??___flmul
  4008  0945  0730               	addwf	??___flmul,w
  4009  0946  00B1               	movwf	??___flmul+1
  4010  0947  0831               	movf	??___flmul+1,w
  4011  0948  00BB               	movwf	___flmul@bexp
  4012  0949                     l2520:
  4013  0949  1FAA               	btfss	___flmul@b+2,7
  4014  094A  294C               	goto	u3651
  4015  094B  294D               	goto	u3650
  4016  094C                     u3651:
  4017  094C  294E               	goto	l2524
  4018  094D                     u3650:
  4019  094D                     l2522:
  4020  094D  143B               	bsf	___flmul@bexp,0
  4021  094E                     l2524:
  4022  094E  083B               	movf	___flmul@bexp,w
  4023  094F  1903               	btfsc	3,2
  4024  0950  2952               	goto	u3661
  4025  0951  2953               	goto	u3660
  4026  0952                     u3661:
  4027  0952  2962               	goto	l2532
  4028  0953                     u3660:
  4029  0953                     l2526:
  4030  0953  0A3B               	incf	___flmul@bexp,w
  4031  0954  1D03               	btfss	3,2
  4032  0955  2957               	goto	u3671
  4033  0956  2958               	goto	u3670
  4034  0957                     u3671:
  4035  0957  2960               	goto	l2530
  4036  0958                     u3670:
  4037  0958                     l2528:
  4038  0958  3000               	movlw	0
  4039  0959  00AB               	movwf	___flmul@b+3
  4040  095A  3000               	movlw	0
  4041  095B  00AA               	movwf	___flmul@b+2
  4042  095C  3000               	movlw	0
  4043  095D  00A9               	movwf	___flmul@b+1
  4044  095E  3000               	movlw	0
  4045  095F  00A8               	movwf	___flmul@b
  4046  0960                     l2530:
  4047  0960  17AA               	bsf	___flmul@b+2,7
  4048  0961  296A               	goto	l2534
  4049  0962                     l2532:
  4050  0962  3000               	movlw	0
  4051  0963  00AB               	movwf	___flmul@b+3
  4052  0964  3000               	movlw	0
  4053  0965  00AA               	movwf	___flmul@b+2
  4054  0966  3000               	movlw	0
  4055  0967  00A9               	movwf	___flmul@b+1
  4056  0968  3000               	movlw	0
  4057  0969  00A8               	movwf	___flmul@b
  4058  096A                     l2534:
  4059  096A  082F               	movf	___flmul@a+3,w
  4060  096B  3980               	andlw	128
  4061  096C  00B0               	movwf	??___flmul
  4062  096D  0830               	movf	??___flmul,w
  4063  096E  06B5               	xorwf	___flmul@sign,f
  4064  096F                     l2536:
  4065  096F  082F               	movf	___flmul@a+3,w
  4066  0970  00B0               	movwf	??___flmul
  4067  0971  0730               	addwf	??___flmul,w
  4068  0972  00B1               	movwf	??___flmul+1
  4069  0973  0831               	movf	??___flmul+1,w
  4070  0974  00BA               	movwf	___flmul@aexp
  4071  0975                     l2538:
  4072  0975  1FAE               	btfss	___flmul@a+2,7
  4073  0976  2978               	goto	u3681
  4074  0977  2979               	goto	u3680
  4075  0978                     u3681:
  4076  0978  297A               	goto	l2542
  4077  0979                     u3680:
  4078  0979                     l2540:
  4079  0979  143A               	bsf	___flmul@aexp,0
  4080  097A                     l2542:
  4081  097A  083A               	movf	___flmul@aexp,w
  4082  097B  1903               	btfsc	3,2
  4083  097C  297E               	goto	u3691
  4084  097D  297F               	goto	u3690
  4085  097E                     u3691:
  4086  097E  298E               	goto	l2550
  4087  097F                     u3690:
  4088  097F                     l2544:
  4089  097F  0A3A               	incf	___flmul@aexp,w
  4090  0980  1D03               	btfss	3,2
  4091  0981  2983               	goto	u3701
  4092  0982  2984               	goto	u3700
  4093  0983                     u3701:
  4094  0983  298C               	goto	l2548
  4095  0984                     u3700:
  4096  0984                     l2546:
  4097  0984  3000               	movlw	0
  4098  0985  00AF               	movwf	___flmul@a+3
  4099  0986  3000               	movlw	0
  4100  0987  00AE               	movwf	___flmul@a+2
  4101  0988  3000               	movlw	0
  4102  0989  00AD               	movwf	___flmul@a+1
  4103  098A  3000               	movlw	0
  4104  098B  00AC               	movwf	___flmul@a
  4105  098C                     l2548:
  4106  098C  17AE               	bsf	___flmul@a+2,7
  4107  098D  2996               	goto	l2552
  4108  098E                     l2550:
  4109  098E  3000               	movlw	0
  4110  098F  00AF               	movwf	___flmul@a+3
  4111  0990  3000               	movlw	0
  4112  0991  00AE               	movwf	___flmul@a+2
  4113  0992  3000               	movlw	0
  4114  0993  00AD               	movwf	___flmul@a+1
  4115  0994  3000               	movlw	0
  4116  0995  00AC               	movwf	___flmul@a
  4117  0996                     l2552:
  4118  0996  083A               	movf	___flmul@aexp,w
  4119  0997  1903               	btfsc	3,2
  4120  0998  299A               	goto	u3711
  4121  0999  299B               	goto	u3710
  4122  099A                     u3711:
  4123  099A  29A0               	goto	l2556
  4124  099B                     u3710:
  4125  099B                     l2554:
  4126  099B  083B               	movf	___flmul@bexp,w
  4127  099C  1D03               	btfss	3,2
  4128  099D  299F               	goto	u3721
  4129  099E  29A0               	goto	u3720
  4130  099F                     u3721:
  4131  099F  29A9               	goto	l2560
  4132  09A0                     u3720:
  4133  09A0                     l2556:
  4134  09A0  3000               	movlw	0
  4135  09A1  00AB               	movwf	?___flmul+3
  4136  09A2  3000               	movlw	0
  4137  09A3  00AA               	movwf	?___flmul+2
  4138  09A4  3000               	movlw	0
  4139  09A5  00A9               	movwf	?___flmul+1
  4140  09A6  3000               	movlw	0
  4141  09A7  00A8               	movwf	?___flmul
  4142  09A8  2C9C               	goto	l744
  4143  09A9                     l2560:
  4144  09A9  0828               	movf	___flmul@b,w
  4145  09AA  00B0               	movwf	??___flmul
  4146  09AB  0830               	movf	??___flmul,w
  4147  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4148  09AD  082E               	movf	___flmul@a+2,w
  4149  09AE  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4150  09B3  0874               	movf	?__Umul8_16+1,w
  4151  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4152  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4153  09B6  00C1               	movwf	___flmul@temp+1
  4154  09B7  0873               	movf	?__Umul8_16,w
  4155  09B8  00C0               	movwf	___flmul@temp
  4156  09B9                     l2562:
  4157  09B9  0840               	movf	___flmul@temp,w
  4158  09BA  00B0               	movwf	??___flmul
  4159  09BB  01B1               	clrf	??___flmul+1
  4160  09BC  01B2               	clrf	??___flmul+2
  4161  09BD  01B3               	clrf	??___flmul+3
  4162  09BE  0833               	movf	??___flmul+3,w
  4163  09BF  00B9               	movwf	___flmul@grs+3
  4164  09C0  0832               	movf	??___flmul+2,w
  4165  09C1  00B8               	movwf	___flmul@grs+2
  4166  09C2  0831               	movf	??___flmul+1,w
  4167  09C3  00B7               	movwf	___flmul@grs+1
  4168  09C4  0830               	movf	??___flmul,w
  4169  09C5  00B6               	movwf	___flmul@grs
  4170  09C6                     l2564:
  4171  09C6  0841               	movf	___flmul@temp+1,w
  4172  09C7  00B0               	movwf	??___flmul
  4173  09C8  01B1               	clrf	??___flmul+1
  4174  09C9  01B2               	clrf	??___flmul+2
  4175  09CA  01B3               	clrf	??___flmul+3
  4176  09CB  0833               	movf	??___flmul+3,w
  4177  09CC  00BF               	movwf	___flmul@prod+3
  4178  09CD  0832               	movf	??___flmul+2,w
  4179  09CE  00BE               	movwf	___flmul@prod+2
  4180  09CF  0831               	movf	??___flmul+1,w
  4181  09D0  00BD               	movwf	___flmul@prod+1
  4182  09D1  0830               	movf	??___flmul,w
  4183  09D2  00BC               	movwf	___flmul@prod
  4184  09D3  0829               	movf	___flmul@b+1,w
  4185  09D4  00B0               	movwf	??___flmul
  4186  09D5  0830               	movf	??___flmul,w
  4187  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4188  09D7  082D               	movf	___flmul@a+1,w
  4189  09D8  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4190  09DD  0874               	movf	?__Umul8_16+1,w
  4191  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4192  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4193  09E0  00C1               	movwf	___flmul@temp+1
  4194  09E1  0873               	movf	?__Umul8_16,w
  4195  09E2  00C0               	movwf	___flmul@temp
  4196  09E3                     l2566:
  4197  09E3  0840               	movf	___flmul@temp,w
  4198  09E4  00B0               	movwf	??___flmul
  4199  09E5  01B1               	clrf	??___flmul+1
  4200  09E6  01B2               	clrf	??___flmul+2
  4201  09E7  01B3               	clrf	??___flmul+3
  4202  09E8  0830               	movf	??___flmul,w
  4203  09E9  07B6               	addwf	___flmul@grs,f
  4204  09EA  0831               	movf	??___flmul+1,w
  4205  09EB  1103               	clrz
  4206  09EC  1803               	skipnc
  4207  09ED  3E01               	addlw	1
  4208  09EE  1903               	skipnz
  4209  09EF  29F1               	goto	u3731
  4210  09F0  07B7               	addwf	___flmul@grs+1,f
  4211  09F1                     u3731:
  4212  09F1  0832               	movf	??___flmul+2,w
  4213  09F2  1103               	clrz
  4214  09F3  1803               	skipnc
  4215  09F4  3E01               	addlw	1
  4216  09F5  1903               	skipnz
  4217  09F6  29F8               	goto	u3732
  4218  09F7  07B8               	addwf	___flmul@grs+2,f
  4219  09F8                     u3732:
  4220  09F8  0833               	movf	??___flmul+3,w
  4221  09F9  1103               	clrz
  4222  09FA  1803               	skipnc
  4223  09FB  3E01               	addlw	1
  4224  09FC  1903               	skipnz
  4225  09FD  29FF               	goto	u3733
  4226  09FE  07B9               	addwf	___flmul@grs+3,f
  4227  09FF                     u3733:
  4228  09FF                     l2568:
  4229  09FF  0841               	movf	___flmul@temp+1,w
  4230  0A00  00B0               	movwf	??___flmul
  4231  0A01  01B1               	clrf	??___flmul+1
  4232  0A02  01B2               	clrf	??___flmul+2
  4233  0A03  01B3               	clrf	??___flmul+3
  4234  0A04  0830               	movf	??___flmul,w
  4235  0A05  07BC               	addwf	___flmul@prod,f
  4236  0A06  0831               	movf	??___flmul+1,w
  4237  0A07  1103               	clrz
  4238  0A08  1803               	skipnc
  4239  0A09  3E01               	addlw	1
  4240  0A0A  1903               	skipnz
  4241  0A0B  2A0D               	goto	u3741
  4242  0A0C  07BD               	addwf	___flmul@prod+1,f
  4243  0A0D                     u3741:
  4244  0A0D  0832               	movf	??___flmul+2,w
  4245  0A0E  1103               	clrz
  4246  0A0F  1803               	skipnc
  4247  0A10  3E01               	addlw	1
  4248  0A11  1903               	skipnz
  4249  0A12  2A14               	goto	u3742
  4250  0A13  07BE               	addwf	___flmul@prod+2,f
  4251  0A14                     u3742:
  4252  0A14  0833               	movf	??___flmul+3,w
  4253  0A15  1103               	clrz
  4254  0A16  1803               	skipnc
  4255  0A17  3E01               	addlw	1
  4256  0A18  1903               	skipnz
  4257  0A19  2A1B               	goto	u3743
  4258  0A1A  07BF               	addwf	___flmul@prod+3,f
  4259  0A1B                     u3743:
  4260  0A1B  082A               	movf	___flmul@b+2,w
  4261  0A1C  00B0               	movwf	??___flmul
  4262  0A1D  0830               	movf	??___flmul,w
  4263  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  4264  0A1F  082C               	movf	___flmul@a,w
  4265  0A20  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4266  0A25  0874               	movf	?__Umul8_16+1,w
  4267  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4269  0A28  00C1               	movwf	___flmul@temp+1
  4270  0A29  0873               	movf	?__Umul8_16,w
  4271  0A2A  00C0               	movwf	___flmul@temp
  4272  0A2B                     l2570:
  4273  0A2B  0840               	movf	___flmul@temp,w
  4274  0A2C  00B0               	movwf	??___flmul
  4275  0A2D  01B1               	clrf	??___flmul+1
  4276  0A2E  01B2               	clrf	??___flmul+2
  4277  0A2F  01B3               	clrf	??___flmul+3
  4278  0A30  0830               	movf	??___flmul,w
  4279  0A31  07B6               	addwf	___flmul@grs,f
  4280  0A32  0831               	movf	??___flmul+1,w
  4281  0A33  1103               	clrz
  4282  0A34  1803               	skipnc
  4283  0A35  3E01               	addlw	1
  4284  0A36  1903               	skipnz
  4285  0A37  2A39               	goto	u3751
  4286  0A38  07B7               	addwf	___flmul@grs+1,f
  4287  0A39                     u3751:
  4288  0A39  0832               	movf	??___flmul+2,w
  4289  0A3A  1103               	clrz
  4290  0A3B  1803               	skipnc
  4291  0A3C  3E01               	addlw	1
  4292  0A3D  1903               	skipnz
  4293  0A3E  2A40               	goto	u3752
  4294  0A3F  07B8               	addwf	___flmul@grs+2,f
  4295  0A40                     u3752:
  4296  0A40  0833               	movf	??___flmul+3,w
  4297  0A41  1103               	clrz
  4298  0A42  1803               	skipnc
  4299  0A43  3E01               	addlw	1
  4300  0A44  1903               	skipnz
  4301  0A45  2A47               	goto	u3753
  4302  0A46  07B9               	addwf	___flmul@grs+3,f
  4303  0A47                     u3753:
  4304  0A47                     l2572:
  4305  0A47  0841               	movf	___flmul@temp+1,w
  4306  0A48  00B0               	movwf	??___flmul
  4307  0A49  01B1               	clrf	??___flmul+1
  4308  0A4A  01B2               	clrf	??___flmul+2
  4309  0A4B  01B3               	clrf	??___flmul+3
  4310  0A4C  0830               	movf	??___flmul,w
  4311  0A4D  07BC               	addwf	___flmul@prod,f
  4312  0A4E  0831               	movf	??___flmul+1,w
  4313  0A4F  1103               	clrz
  4314  0A50  1803               	skipnc
  4315  0A51  3E01               	addlw	1
  4316  0A52  1903               	skipnz
  4317  0A53  2A55               	goto	u3761
  4318  0A54  07BD               	addwf	___flmul@prod+1,f
  4319  0A55                     u3761:
  4320  0A55  0832               	movf	??___flmul+2,w
  4321  0A56  1103               	clrz
  4322  0A57  1803               	skipnc
  4323  0A58  3E01               	addlw	1
  4324  0A59  1903               	skipnz
  4325  0A5A  2A5C               	goto	u3762
  4326  0A5B  07BE               	addwf	___flmul@prod+2,f
  4327  0A5C                     u3762:
  4328  0A5C  0833               	movf	??___flmul+3,w
  4329  0A5D  1103               	clrz
  4330  0A5E  1803               	skipnc
  4331  0A5F  3E01               	addlw	1
  4332  0A60  1903               	skipnz
  4333  0A61  2A63               	goto	u3763
  4334  0A62  07BF               	addwf	___flmul@prod+3,f
  4335  0A63                     u3763:
  4336  0A63                     l2574:
  4337  0A63  3008               	movlw	8
  4338  0A64  00B0               	movwf	??___flmul
  4339  0A65                     u3775:
  4340  0A65  1003               	clrc
  4341  0A66  0DB6               	rlf	___flmul@grs,f
  4342  0A67  0DB7               	rlf	___flmul@grs+1,f
  4343  0A68  0DB8               	rlf	___flmul@grs+2,f
  4344  0A69  0DB9               	rlf	___flmul@grs+3,f
  4345  0A6A  0BB0               	decfsz	??___flmul,f
  4346  0A6B  2A65               	goto	u3775
  4347  0A6C                     l2576:
  4348  0A6C  0829               	movf	___flmul@b+1,w
  4349  0A6D  00B0               	movwf	??___flmul
  4350  0A6E  0830               	movf	??___flmul,w
  4351  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  4352  0A70  082C               	movf	___flmul@a,w
  4353  0A71  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4354  0A76  0874               	movf	?__Umul8_16+1,w
  4355  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0A79  00C1               	movwf	___flmul@temp+1
  4358  0A7A  0873               	movf	?__Umul8_16,w
  4359  0A7B  00C0               	movwf	___flmul@temp
  4360  0A7C                     l2578:
  4361  0A7C  0840               	movf	___flmul@temp,w
  4362  0A7D  00B0               	movwf	??___flmul
  4363  0A7E  0841               	movf	___flmul@temp+1,w
  4364  0A7F  00B1               	movwf	??___flmul+1
  4365  0A80  01B2               	clrf	??___flmul+2
  4366  0A81  01B3               	clrf	??___flmul+3
  4367  0A82  0830               	movf	??___flmul,w
  4368  0A83  07B6               	addwf	___flmul@grs,f
  4369  0A84  0831               	movf	??___flmul+1,w
  4370  0A85  1103               	clrz
  4371  0A86  1803               	skipnc
  4372  0A87  3E01               	addlw	1
  4373  0A88  1903               	skipnz
  4374  0A89  2A8B               	goto	u3781
  4375  0A8A  07B7               	addwf	___flmul@grs+1,f
  4376  0A8B                     u3781:
  4377  0A8B  0832               	movf	??___flmul+2,w
  4378  0A8C  1103               	clrz
  4379  0A8D  1803               	skipnc
  4380  0A8E  3E01               	addlw	1
  4381  0A8F  1903               	skipnz
  4382  0A90  2A92               	goto	u3782
  4383  0A91  07B8               	addwf	___flmul@grs+2,f
  4384  0A92                     u3782:
  4385  0A92  0833               	movf	??___flmul+3,w
  4386  0A93  1103               	clrz
  4387  0A94  1803               	skipnc
  4388  0A95  3E01               	addlw	1
  4389  0A96  1903               	skipnz
  4390  0A97  2A99               	goto	u3783
  4391  0A98  07B9               	addwf	___flmul@grs+3,f
  4392  0A99                     u3783:
  4393  0A99                     l2580:
  4394  0A99  0828               	movf	___flmul@b,w
  4395  0A9A  00B0               	movwf	??___flmul
  4396  0A9B  0830               	movf	??___flmul,w
  4397  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  4398  0A9D  082D               	movf	___flmul@a+1,w
  4399  0A9E  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4400  0AA3  0874               	movf	?__Umul8_16+1,w
  4401  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0AA6  00C1               	movwf	___flmul@temp+1
  4404  0AA7  0873               	movf	?__Umul8_16,w
  4405  0AA8  00C0               	movwf	___flmul@temp
  4406  0AA9                     l2582:
  4407  0AA9  0840               	movf	___flmul@temp,w
  4408  0AAA  00B0               	movwf	??___flmul
  4409  0AAB  0841               	movf	___flmul@temp+1,w
  4410  0AAC  00B1               	movwf	??___flmul+1
  4411  0AAD  01B2               	clrf	??___flmul+2
  4412  0AAE  01B3               	clrf	??___flmul+3
  4413  0AAF  0830               	movf	??___flmul,w
  4414  0AB0  07B6               	addwf	___flmul@grs,f
  4415  0AB1  0831               	movf	??___flmul+1,w
  4416  0AB2  1103               	clrz
  4417  0AB3  1803               	skipnc
  4418  0AB4  3E01               	addlw	1
  4419  0AB5  1903               	skipnz
  4420  0AB6  2AB8               	goto	u3791
  4421  0AB7  07B7               	addwf	___flmul@grs+1,f
  4422  0AB8                     u3791:
  4423  0AB8  0832               	movf	??___flmul+2,w
  4424  0AB9  1103               	clrz
  4425  0ABA  1803               	skipnc
  4426  0ABB  3E01               	addlw	1
  4427  0ABC  1903               	skipnz
  4428  0ABD  2ABF               	goto	u3792
  4429  0ABE  07B8               	addwf	___flmul@grs+2,f
  4430  0ABF                     u3792:
  4431  0ABF  0833               	movf	??___flmul+3,w
  4432  0AC0  1103               	clrz
  4433  0AC1  1803               	skipnc
  4434  0AC2  3E01               	addlw	1
  4435  0AC3  1903               	skipnz
  4436  0AC4  2AC6               	goto	u3793
  4437  0AC5  07B9               	addwf	___flmul@grs+3,f
  4438  0AC6                     u3793:
  4439  0AC6                     l2584:
  4440  0AC6  3008               	movlw	8
  4441  0AC7  00B0               	movwf	??___flmul
  4442  0AC8                     u3805:
  4443  0AC8  1003               	clrc
  4444  0AC9  0DB6               	rlf	___flmul@grs,f
  4445  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4446  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4447  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4448  0ACD  0BB0               	decfsz	??___flmul,f
  4449  0ACE  2AC8               	goto	u3805
  4450  0ACF  0828               	movf	___flmul@b,w
  4451  0AD0  00B0               	movwf	??___flmul
  4452  0AD1  0830               	movf	??___flmul,w
  4453  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  4454  0AD3  082C               	movf	___flmul@a,w
  4455  0AD4  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4456  0AD9  0874               	movf	?__Umul8_16+1,w
  4457  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4459  0ADC  00C1               	movwf	___flmul@temp+1
  4460  0ADD  0873               	movf	?__Umul8_16,w
  4461  0ADE  00C0               	movwf	___flmul@temp
  4462  0ADF                     l2586:
  4463  0ADF  0840               	movf	___flmul@temp,w
  4464  0AE0  00B0               	movwf	??___flmul
  4465  0AE1  0841               	movf	___flmul@temp+1,w
  4466  0AE2  00B1               	movwf	??___flmul+1
  4467  0AE3  01B2               	clrf	??___flmul+2
  4468  0AE4  01B3               	clrf	??___flmul+3
  4469  0AE5  0830               	movf	??___flmul,w
  4470  0AE6  07B6               	addwf	___flmul@grs,f
  4471  0AE7  0831               	movf	??___flmul+1,w
  4472  0AE8  1103               	clrz
  4473  0AE9  1803               	skipnc
  4474  0AEA  3E01               	addlw	1
  4475  0AEB  1903               	skipnz
  4476  0AEC  2AEE               	goto	u3811
  4477  0AED  07B7               	addwf	___flmul@grs+1,f
  4478  0AEE                     u3811:
  4479  0AEE  0832               	movf	??___flmul+2,w
  4480  0AEF  1103               	clrz
  4481  0AF0  1803               	skipnc
  4482  0AF1  3E01               	addlw	1
  4483  0AF2  1903               	skipnz
  4484  0AF3  2AF5               	goto	u3812
  4485  0AF4  07B8               	addwf	___flmul@grs+2,f
  4486  0AF5                     u3812:
  4487  0AF5  0833               	movf	??___flmul+3,w
  4488  0AF6  1103               	clrz
  4489  0AF7  1803               	skipnc
  4490  0AF8  3E01               	addlw	1
  4491  0AF9  1903               	skipnz
  4492  0AFA  2AFC               	goto	u3813
  4493  0AFB  07B9               	addwf	___flmul@grs+3,f
  4494  0AFC                     u3813:
  4495  0AFC                     l2588:
  4496  0AFC  0829               	movf	___flmul@b+1,w
  4497  0AFD  00B0               	movwf	??___flmul
  4498  0AFE  0830               	movf	??___flmul,w
  4499  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  4500  0B00  082E               	movf	___flmul@a+2,w
  4501  0B01  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4502  0B06  0874               	movf	?__Umul8_16+1,w
  4503  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4504  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4505  0B09  00C1               	movwf	___flmul@temp+1
  4506  0B0A  0873               	movf	?__Umul8_16,w
  4507  0B0B  00C0               	movwf	___flmul@temp
  4508  0B0C  0840               	movf	___flmul@temp,w
  4509  0B0D  00B0               	movwf	??___flmul
  4510  0B0E  0841               	movf	___flmul@temp+1,w
  4511  0B0F  00B1               	movwf	??___flmul+1
  4512  0B10  01B2               	clrf	??___flmul+2
  4513  0B11  01B3               	clrf	??___flmul+3
  4514  0B12  0830               	movf	??___flmul,w
  4515  0B13  07BC               	addwf	___flmul@prod,f
  4516  0B14  0831               	movf	??___flmul+1,w
  4517  0B15  1103               	clrz
  4518  0B16  1803               	skipnc
  4519  0B17  3E01               	addlw	1
  4520  0B18  1903               	skipnz
  4521  0B19  2B1B               	goto	u3821
  4522  0B1A  07BD               	addwf	___flmul@prod+1,f
  4523  0B1B                     u3821:
  4524  0B1B  0832               	movf	??___flmul+2,w
  4525  0B1C  1103               	clrz
  4526  0B1D  1803               	skipnc
  4527  0B1E  3E01               	addlw	1
  4528  0B1F  1903               	skipnz
  4529  0B20  2B22               	goto	u3822
  4530  0B21  07BE               	addwf	___flmul@prod+2,f
  4531  0B22                     u3822:
  4532  0B22  0833               	movf	??___flmul+3,w
  4533  0B23  1103               	clrz
  4534  0B24  1803               	skipnc
  4535  0B25  3E01               	addlw	1
  4536  0B26  1903               	skipnz
  4537  0B27  2B29               	goto	u3823
  4538  0B28  07BF               	addwf	___flmul@prod+3,f
  4539  0B29                     u3823:
  4540  0B29                     l2590:
  4541  0B29  082A               	movf	___flmul@b+2,w
  4542  0B2A  00B0               	movwf	??___flmul
  4543  0B2B  0830               	movf	??___flmul,w
  4544  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  4545  0B2D  082D               	movf	___flmul@a+1,w
  4546  0B2E  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4547  0B33  0874               	movf	?__Umul8_16+1,w
  4548  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4550  0B36  00C1               	movwf	___flmul@temp+1
  4551  0B37  0873               	movf	?__Umul8_16,w
  4552  0B38  00C0               	movwf	___flmul@temp
  4553  0B39                     l2592:
  4554  0B39  0840               	movf	___flmul@temp,w
  4555  0B3A  00B0               	movwf	??___flmul
  4556  0B3B  0841               	movf	___flmul@temp+1,w
  4557  0B3C  00B1               	movwf	??___flmul+1
  4558  0B3D  01B2               	clrf	??___flmul+2
  4559  0B3E  01B3               	clrf	??___flmul+3
  4560  0B3F  0830               	movf	??___flmul,w
  4561  0B40  07BC               	addwf	___flmul@prod,f
  4562  0B41  0831               	movf	??___flmul+1,w
  4563  0B42  1103               	clrz
  4564  0B43  1803               	skipnc
  4565  0B44  3E01               	addlw	1
  4566  0B45  1903               	skipnz
  4567  0B46  2B48               	goto	u3831
  4568  0B47  07BD               	addwf	___flmul@prod+1,f
  4569  0B48                     u3831:
  4570  0B48  0832               	movf	??___flmul+2,w
  4571  0B49  1103               	clrz
  4572  0B4A  1803               	skipnc
  4573  0B4B  3E01               	addlw	1
  4574  0B4C  1903               	skipnz
  4575  0B4D  2B4F               	goto	u3832
  4576  0B4E  07BE               	addwf	___flmul@prod+2,f
  4577  0B4F                     u3832:
  4578  0B4F  0833               	movf	??___flmul+3,w
  4579  0B50  1103               	clrz
  4580  0B51  1803               	skipnc
  4581  0B52  3E01               	addlw	1
  4582  0B53  1903               	skipnz
  4583  0B54  2B56               	goto	u3833
  4584  0B55  07BF               	addwf	___flmul@prod+3,f
  4585  0B56                     u3833:
  4586  0B56  082A               	movf	___flmul@b+2,w
  4587  0B57  00B0               	movwf	??___flmul
  4588  0B58  0830               	movf	??___flmul,w
  4589  0B59  00F3               	movwf	__Umul8_16@multiplicand
  4590  0B5A  082E               	movf	___flmul@a+2,w
  4591  0B5B  160A  118A  20AA  120A  158A  	fcall	__Umul8_16
  4592  0B60  0874               	movf	?__Umul8_16+1,w
  4593  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0B63  00C1               	movwf	___flmul@temp+1
  4596  0B64  0873               	movf	?__Umul8_16,w
  4597  0B65  00C0               	movwf	___flmul@temp
  4598  0B66                     l2594:
  4599  0B66  0840               	movf	___flmul@temp,w
  4600  0B67  00B0               	movwf	??___flmul
  4601  0B68  0841               	movf	___flmul@temp+1,w
  4602  0B69  00B1               	movwf	??___flmul+1
  4603  0B6A  01B2               	clrf	??___flmul+2
  4604  0B6B  01B3               	clrf	??___flmul+3
  4605  0B6C  3008               	movlw	8
  4606  0B6D                     u3845:
  4607  0B6D  1003               	clrc
  4608  0B6E  0DB0               	rlf	??___flmul,f
  4609  0B6F  0DB1               	rlf	??___flmul+1,f
  4610  0B70  0DB2               	rlf	??___flmul+2,f
  4611  0B71  0DB3               	rlf	??___flmul+3,f
  4612  0B72                     u3840:
  4613  0B72  3EFF               	addlw	-1
  4614  0B73  1D03               	skipz
  4615  0B74  2B6D               	goto	u3845
  4616  0B75  0830               	movf	??___flmul,w
  4617  0B76  07BC               	addwf	___flmul@prod,f
  4618  0B77  0831               	movf	??___flmul+1,w
  4619  0B78  1103               	clrz
  4620  0B79  1803               	skipnc
  4621  0B7A  3E01               	addlw	1
  4622  0B7B  1903               	skipnz
  4623  0B7C  2B7E               	goto	u3851
  4624  0B7D  07BD               	addwf	___flmul@prod+1,f
  4625  0B7E                     u3851:
  4626  0B7E  0832               	movf	??___flmul+2,w
  4627  0B7F  1103               	clrz
  4628  0B80  1803               	skipnc
  4629  0B81  3E01               	addlw	1
  4630  0B82  1903               	skipnz
  4631  0B83  2B85               	goto	u3852
  4632  0B84  07BE               	addwf	___flmul@prod+2,f
  4633  0B85                     u3852:
  4634  0B85  0833               	movf	??___flmul+3,w
  4635  0B86  1103               	clrz
  4636  0B87  1803               	skipnc
  4637  0B88  3E01               	addlw	1
  4638  0B89  1903               	skipnz
  4639  0B8A  2B8C               	goto	u3853
  4640  0B8B  07BF               	addwf	___flmul@prod+3,f
  4641  0B8C                     u3853:
  4642  0B8C                     l2596:
  4643  0B8C  0836               	movf	___flmul@grs,w
  4644  0B8D  00B0               	movwf	??___flmul
  4645  0B8E  0837               	movf	___flmul@grs+1,w
  4646  0B8F  00B1               	movwf	??___flmul+1
  4647  0B90  0838               	movf	___flmul@grs+2,w
  4648  0B91  00B2               	movwf	??___flmul+2
  4649  0B92  0839               	movf	___flmul@grs+3,w
  4650  0B93  00B3               	movwf	??___flmul+3
  4651  0B94  3018               	movlw	24
  4652  0B95                     u3865:
  4653  0B95  1003               	clrc
  4654  0B96  0CB3               	rrf	??___flmul+3,f
  4655  0B97  0CB2               	rrf	??___flmul+2,f
  4656  0B98  0CB1               	rrf	??___flmul+1,f
  4657  0B99  0CB0               	rrf	??___flmul,f
  4658  0B9A                     u3860:
  4659  0B9A  3EFF               	addlw	-1
  4660  0B9B  1D03               	skipz
  4661  0B9C  2B95               	goto	u3865
  4662  0B9D  0830               	movf	??___flmul,w
  4663  0B9E  07BC               	addwf	___flmul@prod,f
  4664  0B9F  0831               	movf	??___flmul+1,w
  4665  0BA0  1103               	clrz
  4666  0BA1  1803               	skipnc
  4667  0BA2  3E01               	addlw	1
  4668  0BA3  1903               	skipnz
  4669  0BA4  2BA6               	goto	u3871
  4670  0BA5  07BD               	addwf	___flmul@prod+1,f
  4671  0BA6                     u3871:
  4672  0BA6  0832               	movf	??___flmul+2,w
  4673  0BA7  1103               	clrz
  4674  0BA8  1803               	skipnc
  4675  0BA9  3E01               	addlw	1
  4676  0BAA  1903               	skipnz
  4677  0BAB  2BAD               	goto	u3872
  4678  0BAC  07BE               	addwf	___flmul@prod+2,f
  4679  0BAD                     u3872:
  4680  0BAD  0833               	movf	??___flmul+3,w
  4681  0BAE  1103               	clrz
  4682  0BAF  1803               	skipnc
  4683  0BB0  3E01               	addlw	1
  4684  0BB1  1903               	skipnz
  4685  0BB2  2BB4               	goto	u3873
  4686  0BB3  07BF               	addwf	___flmul@prod+3,f
  4687  0BB4                     u3873:
  4688  0BB4                     l2598:
  4689  0BB4  3008               	movlw	8
  4690  0BB5  00B0               	movwf	??___flmul
  4691  0BB6                     u3885:
  4692  0BB6  1003               	clrc
  4693  0BB7  0DB6               	rlf	___flmul@grs,f
  4694  0BB8  0DB7               	rlf	___flmul@grs+1,f
  4695  0BB9  0DB8               	rlf	___flmul@grs+2,f
  4696  0BBA  0DB9               	rlf	___flmul@grs+3,f
  4697  0BBB  0BB0               	decfsz	??___flmul,f
  4698  0BBC  2BB6               	goto	u3885
  4699  0BBD                     l2600:
  4700  0BBD  083B               	movf	___flmul@bexp,w
  4701  0BBE  073A               	addwf	___flmul@aexp,w
  4702  0BBF  00B0               	movwf	??___flmul
  4703  0BC0  01B1               	clrf	??___flmul+1
  4704  0BC1  0DB1               	rlf	??___flmul+1,f
  4705  0BC2  0830               	movf	??___flmul,w
  4706  0BC3  3E82               	addlw	130
  4707  0BC4  00C0               	movwf	___flmul@temp
  4708  0BC5  0831               	movf	??___flmul+1,w
  4709  0BC6  1803               	skipnc
  4710  0BC7  3E01               	addlw	1
  4711  0BC8  3EFF               	addlw	255
  4712  0BC9  00C1               	movwf	___flmul@temp+1
  4713  0BCA  2BE8               	goto	l2612
  4714  0BCB                     l2602:
  4715  0BCB  3001               	movlw	1
  4716  0BCC  00B0               	movwf	??___flmul
  4717  0BCD                     u3895:
  4718  0BCD  1003               	clrc
  4719  0BCE  0DBC               	rlf	___flmul@prod,f
  4720  0BCF  0DBD               	rlf	___flmul@prod+1,f
  4721  0BD0  0DBE               	rlf	___flmul@prod+2,f
  4722  0BD1  0DBF               	rlf	___flmul@prod+3,f
  4723  0BD2  0BB0               	decfsz	??___flmul,f
  4724  0BD3  2BCD               	goto	u3895
  4725  0BD4                     l2604:
  4726  0BD4  1FB9               	btfss	___flmul@grs+3,7
  4727  0BD5  2BD7               	goto	u3901
  4728  0BD6  2BD8               	goto	u3900
  4729  0BD7                     u3901:
  4730  0BD7  2BD9               	goto	l2608
  4731  0BD8                     u3900:
  4732  0BD8                     l2606:
  4733  0BD8  143C               	bsf	___flmul@prod,0
  4734  0BD9                     l2608:
  4735  0BD9  3001               	movlw	1
  4736  0BDA  00B0               	movwf	??___flmul
  4737  0BDB                     u3915:
  4738  0BDB  1003               	clrc
  4739  0BDC  0DB6               	rlf	___flmul@grs,f
  4740  0BDD  0DB7               	rlf	___flmul@grs+1,f
  4741  0BDE  0DB8               	rlf	___flmul@grs+2,f
  4742  0BDF  0DB9               	rlf	___flmul@grs+3,f
  4743  0BE0  0BB0               	decfsz	??___flmul,f
  4744  0BE1  2BDB               	goto	u3915
  4745  0BE2                     l2610:
  4746  0BE2  30FF               	movlw	255
  4747  0BE3  07C0               	addwf	___flmul@temp,f
  4748  0BE4  1803               	skipnc
  4749  0BE5  0AC1               	incf	___flmul@temp+1,f
  4750  0BE6  30FF               	movlw	255
  4751  0BE7  07C1               	addwf	___flmul@temp+1,f
  4752  0BE8                     l2612:
  4753  0BE8  1FBE               	btfss	___flmul@prod+2,7
  4754  0BE9  2BEB               	goto	u3921
  4755  0BEA  2BEC               	goto	u3920
  4756  0BEB                     u3921:
  4757  0BEB  2BCB               	goto	l2602
  4758  0BEC                     u3920:
  4759  0BEC                     l2614:
  4760  0BEC  01BA               	clrf	___flmul@aexp
  4761  0BED                     l2616:
  4762  0BED  1FB9               	btfss	___flmul@grs+3,7
  4763  0BEE  2BF0               	goto	u3931
  4764  0BEF  2BF1               	goto	u3930
  4765  0BF0                     u3931:
  4766  0BF0  2C0D               	goto	l2624
  4767  0BF1                     u3930:
  4768  0BF1                     l2618:
  4769  0BF1  30FF               	movlw	255
  4770  0BF2  0536               	andwf	___flmul@grs,w
  4771  0BF3  00B0               	movwf	??___flmul
  4772  0BF4  30FF               	movlw	255
  4773  0BF5  0537               	andwf	___flmul@grs+1,w
  4774  0BF6  00B1               	movwf	??___flmul+1
  4775  0BF7  30FF               	movlw	255
  4776  0BF8  0538               	andwf	___flmul@grs+2,w
  4777  0BF9  00B2               	movwf	??___flmul+2
  4778  0BFA  307F               	movlw	127
  4779  0BFB  0539               	andwf	___flmul@grs+3,w
  4780  0BFC  00B3               	movwf	??___flmul+3
  4781  0BFD  0833               	movf	??___flmul+3,w
  4782  0BFE  0432               	iorwf	??___flmul+2,w
  4783  0BFF  0431               	iorwf	??___flmul+1,w
  4784  0C00  0430               	iorwf	??___flmul,w
  4785  0C01  1903               	skipnz
  4786  0C02  2C04               	goto	u3941
  4787  0C03  2C05               	goto	u3940
  4788  0C04                     u3941:
  4789  0C04  2C08               	goto	l750
  4790  0C05                     u3940:
  4791  0C05                     l2620:
  4792  0C05  01BA               	clrf	___flmul@aexp
  4793  0C06  0ABA               	incf	___flmul@aexp,f
  4794  0C07  2C0D               	goto	l2624
  4795  0C08                     l750:
  4796  0C08  1C3C               	btfss	___flmul@prod,0
  4797  0C09  2C0B               	goto	u3951
  4798  0C0A  2C0C               	goto	u3950
  4799  0C0B                     u3951:
  4800  0C0B  2C0D               	goto	l2624
  4801  0C0C                     u3950:
  4802  0C0C  2C05               	goto	l2620
  4803  0C0D                     l2624:
  4804  0C0D  083A               	movf	___flmul@aexp,w
  4805  0C0E  1903               	btfsc	3,2
  4806  0C0F  2C11               	goto	u3961
  4807  0C10  2C12               	goto	u3960
  4808  0C11                     u3961:
  4809  0C11  2C43               	goto	l2634
  4810  0C12                     u3960:
  4811  0C12                     l2626:
  4812  0C12  3001               	movlw	1
  4813  0C13  07BC               	addwf	___flmul@prod,f
  4814  0C14  3000               	movlw	0
  4815  0C15  1803               	skipnc
  4816  0C16  3001               	movlw	1
  4817  0C17  07BD               	addwf	___flmul@prod+1,f
  4818  0C18  3000               	movlw	0
  4819  0C19  1803               	skipnc
  4820  0C1A  3001               	movlw	1
  4821  0C1B  07BE               	addwf	___flmul@prod+2,f
  4822  0C1C  3000               	movlw	0
  4823  0C1D  1803               	skipnc
  4824  0C1E  3001               	movlw	1
  4825  0C1F  07BF               	addwf	___flmul@prod+3,f
  4826  0C20                     l2628:
  4827  0C20  1C3F               	btfss	___flmul@prod+3,0
  4828  0C21  2C23               	goto	u3971
  4829  0C22  2C24               	goto	u3970
  4830  0C23                     u3971:
  4831  0C23  2C43               	goto	l2634
  4832  0C24                     u3970:
  4833  0C24                     l2630:
  4834  0C24  083C               	movf	___flmul@prod,w
  4835  0C25  00B0               	movwf	??___flmul
  4836  0C26  083D               	movf	___flmul@prod+1,w
  4837  0C27  00B1               	movwf	??___flmul+1
  4838  0C28  083E               	movf	___flmul@prod+2,w
  4839  0C29  00B2               	movwf	??___flmul+2
  4840  0C2A  083F               	movf	___flmul@prod+3,w
  4841  0C2B  00B3               	movwf	??___flmul+3
  4842  0C2C  3001               	movlw	1
  4843  0C2D  00B4               	movwf	??___flmul+4
  4844  0C2E                     u3985:
  4845  0C2E  0D33               	rlf	??___flmul+3,w
  4846  0C2F  0CB3               	rrf	??___flmul+3,f
  4847  0C30  0CB2               	rrf	??___flmul+2,f
  4848  0C31  0CB1               	rrf	??___flmul+1,f
  4849  0C32  0CB0               	rrf	??___flmul,f
  4850  0C33                     u3980:
  4851  0C33  0BB4               	decfsz	??___flmul+4,f
  4852  0C34  2C2E               	goto	u3985
  4853  0C35  0833               	movf	??___flmul+3,w
  4854  0C36  00BF               	movwf	___flmul@prod+3
  4855  0C37  0832               	movf	??___flmul+2,w
  4856  0C38  00BE               	movwf	___flmul@prod+2
  4857  0C39  0831               	movf	??___flmul+1,w
  4858  0C3A  00BD               	movwf	___flmul@prod+1
  4859  0C3B  0830               	movf	??___flmul,w
  4860  0C3C  00BC               	movwf	___flmul@prod
  4861  0C3D                     l2632:
  4862  0C3D  3001               	movlw	1
  4863  0C3E  07C0               	addwf	___flmul@temp,f
  4864  0C3F  1803               	skipnc
  4865  0C40  0AC1               	incf	___flmul@temp+1,f
  4866  0C41  3000               	movlw	0
  4867  0C42  07C1               	addwf	___flmul@temp+1,f
  4868  0C43                     l2634:
  4869  0C43  0841               	movf	___flmul@temp+1,w
  4870  0C44  3A80               	xorlw	128
  4871  0C45  00FF               	movwf	btemp+1
  4872  0C46  3080               	movlw	128
  4873  0C47  027F               	subwf	btemp+1,w
  4874  0C48  1D03               	skipz
  4875  0C49  2C4C               	goto	u3995
  4876  0C4A  30FF               	movlw	255
  4877  0C4B  0240               	subwf	___flmul@temp,w
  4878  0C4C                     u3995:
  4879  0C4C  1C03               	skipc
  4880  0C4D  2C4F               	goto	u3991
  4881  0C4E  2C50               	goto	u3990
  4882  0C4F                     u3991:
  4883  0C4F  2C5B               	goto	l2638
  4884  0C50                     u3990:
  4885  0C50                     l2636:
  4886  0C50  307F               	movlw	127
  4887  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  4888  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  4889  0C53  00BF               	movwf	___flmul@prod+3
  4890  0C54  3080               	movlw	128
  4891  0C55  00BE               	movwf	___flmul@prod+2
  4892  0C56  3000               	movlw	0
  4893  0C57  00BD               	movwf	___flmul@prod+1
  4894  0C58  3000               	movlw	0
  4895  0C59  00BC               	movwf	___flmul@prod
  4896  0C5A  2C90               	goto	l756
  4897  0C5B                     l2638:
  4898  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4900  0C5D  0841               	movf	___flmul@temp+1,w
  4901  0C5E  3A80               	xorlw	128
  4902  0C5F  00FF               	movwf	btemp+1
  4903  0C60  3080               	movlw	128
  4904  0C61  027F               	subwf	btemp+1,w
  4905  0C62  1D03               	skipz
  4906  0C63  2C66               	goto	u4005
  4907  0C64  3001               	movlw	1
  4908  0C65  0240               	subwf	___flmul@temp,w
  4909  0C66                     u4005:
  4910  0C66  1803               	skipnc
  4911  0C67  2C69               	goto	u4001
  4912  0C68  2C6A               	goto	u4000
  4913  0C69                     u4001:
  4914  0C69  2C76               	goto	l2644
  4915  0C6A                     u4000:
  4916  0C6A                     l2640:
  4917  0C6A  3000               	movlw	0
  4918  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4919  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  4920  0C6D  00BF               	movwf	___flmul@prod+3
  4921  0C6E  3000               	movlw	0
  4922  0C6F  00BE               	movwf	___flmul@prod+2
  4923  0C70  3000               	movlw	0
  4924  0C71  00BD               	movwf	___flmul@prod+1
  4925  0C72  3000               	movlw	0
  4926  0C73  00BC               	movwf	___flmul@prod
  4927  0C74                     l2642:
  4928  0C74  01B5               	clrf	___flmul@sign
  4929  0C75  2C90               	goto	l756
  4930  0C76                     l2644:
  4931  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0C78  0840               	movf	___flmul@temp,w
  4934  0C79  00B0               	movwf	??___flmul
  4935  0C7A  0830               	movf	??___flmul,w
  4936  0C7B  00BB               	movwf	___flmul@bexp
  4937  0C7C  30FF               	movlw	255
  4938  0C7D  05BC               	andwf	___flmul@prod,f
  4939  0C7E  30FF               	movlw	255
  4940  0C7F  05BD               	andwf	___flmul@prod+1,f
  4941  0C80  307F               	movlw	127
  4942  0C81  05BE               	andwf	___flmul@prod+2,f
  4943  0C82  3000               	movlw	0
  4944  0C83  05BF               	andwf	___flmul@prod+3,f
  4945  0C84                     l2646:
  4946  0C84  1C3B               	btfss	___flmul@bexp,0
  4947  0C85  2C87               	goto	u4011
  4948  0C86  2C88               	goto	u4010
  4949  0C87                     u4011:
  4950  0C87  2C89               	goto	l2650
  4951  0C88                     u4010:
  4952  0C88                     l2648:
  4953  0C88  17BE               	bsf	___flmul@prod+2,7
  4954  0C89                     l2650:
  4955  0C89  083B               	movf	___flmul@bexp,w
  4956  0C8A  00B0               	movwf	??___flmul
  4957  0C8B  1003               	clrc
  4958  0C8C  0C30               	rrf	??___flmul,w
  4959  0C8D  00B1               	movwf	??___flmul+1
  4960  0C8E  0831               	movf	??___flmul+1,w
  4961  0C8F  00BF               	movwf	___flmul@prod+3
  4962  0C90                     l756:
  4963  0C90  0835               	movf	___flmul@sign,w
  4964  0C91  00B0               	movwf	??___flmul
  4965  0C92  0830               	movf	??___flmul,w
  4966  0C93  04BF               	iorwf	___flmul@prod+3,f
  4967  0C94                     l2652:
  4968  0C94  083F               	movf	___flmul@prod+3,w
  4969  0C95  00AB               	movwf	?___flmul+3
  4970  0C96  083E               	movf	___flmul@prod+2,w
  4971  0C97  00AA               	movwf	?___flmul+2
  4972  0C98  083D               	movf	___flmul@prod+1,w
  4973  0C99  00A9               	movwf	?___flmul+1
  4974  0C9A  083C               	movf	___flmul@prod,w
  4975  0C9B  00A8               	movwf	?___flmul
  4976  0C9C                     l744:
  4977  0C9C  0008               	return
  4978  0C9D                     __end_of___flmul:
  4979                           
  4980                           	psect	text10
  4981  10AA                     __ptext10:	
  4982 ;; *************** function __Umul8_16 *****************
  4983 ;; Defined at:
  4984 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  multiplier      1    wreg     unsigned char 
  4987 ;;  multiplicand    1    3[COMMON] unsigned char 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  multiplier      1    4[BANK0 ] unsigned char 
  4990 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  4991 ;;  product         2    0[BANK0 ] unsigned int 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  2    3[COMMON] unsigned int 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         2       0       0       0       0
  5002 ;;      Locals:         0       5       0       0       0
  5003 ;;      Temps:          2       0       0       0       0
  5004 ;;      Totals:         4       5       0       0       0
  5005 ;;Total ram usage:        9 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		___flmul
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function __Umul8_16
  5017  10AA                     __Umul8_16:
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5021                           ;__Umul8_16@multiplier stored from wreg
  5022  10AA  1283               	bcf	3,5	;RP0=0, select bank0
  5023  10AB  1303               	bcf	3,6	;RP1=0, select bank0
  5024  10AC  00A4               	movwf	__Umul8_16@multiplier
  5025  10AD                     l2178:
  5026  10AD  01A0               	clrf	__Umul8_16@product
  5027  10AE  01A1               	clrf	__Umul8_16@product+1
  5028  10AF                     l2180:
  5029  10AF  0873               	movf	__Umul8_16@multiplicand,w
  5030  10B0  00F5               	movwf	??__Umul8_16
  5031  10B1  01F6               	clrf	??__Umul8_16+1
  5032  10B2  0875               	movf	??__Umul8_16,w
  5033  10B3  00A2               	movwf	__Umul8_16@word_mpld
  5034  10B4  0876               	movf	??__Umul8_16+1,w
  5035  10B5  00A3               	movwf	__Umul8_16@word_mpld+1
  5036  10B6                     l2182:
  5037  10B6  1C24               	btfss	__Umul8_16@multiplier,0
  5038  10B7  28B9               	goto	u2841
  5039  10B8  28BA               	goto	u2840
  5040  10B9                     u2841:
  5041  10B9  28C0               	goto	l763
  5042  10BA                     u2840:
  5043  10BA                     l2184:
  5044  10BA  0822               	movf	__Umul8_16@word_mpld,w
  5045  10BB  07A0               	addwf	__Umul8_16@product,f
  5046  10BC  1803               	skipnc
  5047  10BD  0AA1               	incf	__Umul8_16@product+1,f
  5048  10BE  0823               	movf	__Umul8_16@word_mpld+1,w
  5049  10BF  07A1               	addwf	__Umul8_16@product+1,f
  5050  10C0                     l763:
  5051  10C0  3001               	movlw	1
  5052  10C1                     u2855:
  5053  10C1  1003               	clrc
  5054  10C2  0DA2               	rlf	__Umul8_16@word_mpld,f
  5055  10C3  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5056  10C4  3EFF               	addlw	-1
  5057  10C5  1D03               	skipz
  5058  10C6  28C1               	goto	u2855
  5059  10C7  1003               	clrc
  5060  10C8  0CA4               	rrf	__Umul8_16@multiplier,f
  5061  10C9                     l2186:
  5062  10C9  0824               	movf	__Umul8_16@multiplier,w
  5063  10CA  1D03               	btfss	3,2
  5064  10CB  28CD               	goto	u2861
  5065  10CC  28CE               	goto	u2860
  5066  10CD                     u2861:
  5067  10CD  28B6               	goto	l2182
  5068  10CE                     u2860:
  5069  10CE                     l2188:
  5070  10CE  0821               	movf	__Umul8_16@product+1,w
  5071  10CF  00F4               	movwf	?__Umul8_16+1
  5072  10D0  0820               	movf	__Umul8_16@product,w
  5073  10D1  00F3               	movwf	?__Umul8_16
  5074  10D2                     l765:
  5075  10D2  0008               	return
  5076  10D3                     __end_of__Umul8_16:
  5077                           
  5078                           	psect	text11
  5079  1233                     __ptext11:	
  5080 ;; *************** function __tdiv_to_l_ *****************
  5081 ;; Defined at:
  5082 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  f1              4    3[COMMON] float 
  5085 ;;  f2              4    7[COMMON] float 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  quot            4    4[BANK0 ] unsigned long 
  5088 ;;  exp1            1    9[BANK0 ] unsigned char 
  5089 ;;  cntr            1    8[BANK0 ] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  4    3[COMMON] unsigned long 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5099 ;;      Params:         8       0       0       0       0
  5100 ;;      Locals:         0       6       0       0       0
  5101 ;;      Temps:          0       4       0       0       0
  5102 ;;      Totals:         8      10       0       0       0
  5103 ;;Total ram usage:       18 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_sprintf
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           
  5114                           ;psect for function __tdiv_to_l_
  5115  1233                     __tdiv_to_l_:
  5116  1233                     l2730:	
  5117                           ;incstack = 0
  5118                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5119                           
  5120  1233  0873               	movf	__tdiv_to_l_@f1,w
  5121  1234  1283               	bcf	3,5	;RP0=0, select bank0
  5122  1235  1303               	bcf	3,6	;RP1=0, select bank0
  5123  1236  00A0               	movwf	??__tdiv_to_l_
  5124  1237  0874               	movf	__tdiv_to_l_@f1+1,w
  5125  1238  00A1               	movwf	??__tdiv_to_l_+1
  5126  1239  0875               	movf	__tdiv_to_l_@f1+2,w
  5127  123A  00A2               	movwf	??__tdiv_to_l_+2
  5128  123B  1003               	clrc
  5129  123C  0D21               	rlf	??__tdiv_to_l_+1,w
  5130  123D  0D22               	rlf	??__tdiv_to_l_+2,w
  5131  123E  00A3               	movwf	??__tdiv_to_l_+3
  5132  123F  0823               	movf	??__tdiv_to_l_+3,w
  5133  1240  00A9               	movwf	__tdiv_to_l_@exp1
  5134  1241  0829               	movf	__tdiv_to_l_@exp1,w
  5135  1242  1D03               	btfss	3,2
  5136  1243  2A45               	goto	u4301
  5137  1244  2A46               	goto	u4300
  5138  1245                     u4301:
  5139  1245  2A4F               	goto	l2736
  5140  1246                     u4300:
  5141  1246                     l2732:
  5142  1246  3000               	movlw	0
  5143  1247  00F6               	movwf	?__tdiv_to_l_+3
  5144  1248  3000               	movlw	0
  5145  1249  00F5               	movwf	?__tdiv_to_l_+2
  5146  124A  3000               	movlw	0
  5147  124B  00F4               	movwf	?__tdiv_to_l_+1
  5148  124C  3000               	movlw	0
  5149  124D  00F3               	movwf	?__tdiv_to_l_
  5150  124E  2AEF               	goto	l538
  5151  124F                     l2736:
  5152  124F  0877               	movf	__tdiv_to_l_@f2,w
  5153  1250  00A0               	movwf	??__tdiv_to_l_
  5154  1251  0878               	movf	__tdiv_to_l_@f2+1,w
  5155  1252  00A1               	movwf	??__tdiv_to_l_+1
  5156  1253  0879               	movf	__tdiv_to_l_@f2+2,w
  5157  1254  00A2               	movwf	??__tdiv_to_l_+2
  5158  1255  1003               	clrc
  5159  1256  0D21               	rlf	??__tdiv_to_l_+1,w
  5160  1257  0D22               	rlf	??__tdiv_to_l_+2,w
  5161  1258  00A3               	movwf	??__tdiv_to_l_+3
  5162  1259  0823               	movf	??__tdiv_to_l_+3,w
  5163  125A  00A8               	movwf	__tdiv_to_l_@cntr
  5164  125B  0828               	movf	__tdiv_to_l_@cntr,w
  5165  125C  1D03               	btfss	3,2
  5166  125D  2A5F               	goto	u4311
  5167  125E  2A60               	goto	u4310
  5168  125F                     u4311:
  5169  125F  2A61               	goto	l539
  5170  1260                     u4310:
  5171  1260  2A46               	goto	l2732
  5172  1261                     l539:
  5173  1261  17F4               	bsf	__tdiv_to_l_@f1+1,7
  5174  1262                     l2742:
  5175  1262  30FF               	movlw	255
  5176  1263  05F3               	andwf	__tdiv_to_l_@f1,f
  5177  1264  30FF               	movlw	255
  5178  1265  05F4               	andwf	__tdiv_to_l_@f1+1,f
  5179  1266  3000               	movlw	0
  5180  1267  05F5               	andwf	__tdiv_to_l_@f1+2,f
  5181  1268                     l2744:
  5182  1268  17F8               	bsf	__tdiv_to_l_@f2+1,7
  5183  1269  30FF               	movlw	255
  5184  126A  05F7               	andwf	__tdiv_to_l_@f2,f
  5185  126B  30FF               	movlw	255
  5186  126C  05F8               	andwf	__tdiv_to_l_@f2+1,f
  5187  126D  3000               	movlw	0
  5188  126E  05F9               	andwf	__tdiv_to_l_@f2+2,f
  5189  126F  3000               	movlw	0
  5190  1270  00A7               	movwf	__tdiv_to_l_@quot+3
  5191  1271  3000               	movlw	0
  5192  1272  00A6               	movwf	__tdiv_to_l_@quot+2
  5193  1273  3000               	movlw	0
  5194  1274  00A5               	movwf	__tdiv_to_l_@quot+1
  5195  1275  3000               	movlw	0
  5196  1276  00A4               	movwf	__tdiv_to_l_@quot
  5197  1277                     l2746:
  5198  1277  307F               	movlw	127
  5199  1278  02A9               	subwf	__tdiv_to_l_@exp1,f
  5200  1279                     l2748:
  5201  1279  3098               	movlw	152
  5202  127A  0728               	addwf	__tdiv_to_l_@cntr,w
  5203  127B  00A0               	movwf	??__tdiv_to_l_
  5204  127C  0820               	movf	??__tdiv_to_l_,w
  5205  127D  02A9               	subwf	__tdiv_to_l_@exp1,f
  5206  127E  3018               	movlw	24
  5207  127F  00A0               	movwf	??__tdiv_to_l_
  5208  1280  0820               	movf	??__tdiv_to_l_,w
  5209  1281  00A8               	movwf	__tdiv_to_l_@cntr
  5210  1282                     l2750:
  5211  1282  3001               	movlw	1
  5212  1283  00A0               	movwf	??__tdiv_to_l_
  5213  1284                     u4325:
  5214  1284  1003               	clrc
  5215  1285  0DA4               	rlf	__tdiv_to_l_@quot,f
  5216  1286  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5217  1287  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5218  1288  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5219  1289  0BA0               	decfsz	??__tdiv_to_l_,f
  5220  128A  2A84               	goto	u4325
  5221  128B                     l2752:
  5222  128B  0879               	movf	__tdiv_to_l_@f2+2,w
  5223  128C  0275               	subwf	__tdiv_to_l_@f1+2,w
  5224  128D  1D03               	skipz
  5225  128E  2A95               	goto	u4335
  5226  128F  0878               	movf	__tdiv_to_l_@f2+1,w
  5227  1290  0274               	subwf	__tdiv_to_l_@f1+1,w
  5228  1291  1D03               	skipz
  5229  1292  2A95               	goto	u4335
  5230  1293  0877               	movf	__tdiv_to_l_@f2,w
  5231  1294  0273               	subwf	__tdiv_to_l_@f1,w
  5232  1295                     u4335:
  5233  1295  1C03               	skipc
  5234  1296  2A98               	goto	u4331
  5235  1297  2A99               	goto	u4330
  5236  1298                     u4331:
  5237  1298  2AA4               	goto	l2758
  5238  1299                     u4330:
  5239  1299                     l2754:
  5240  1299  0877               	movf	__tdiv_to_l_@f2,w
  5241  129A  02F3               	subwf	__tdiv_to_l_@f1,f
  5242  129B  0878               	movf	__tdiv_to_l_@f2+1,w
  5243  129C  1C03               	skipc
  5244  129D  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  5245  129E  02F4               	subwf	__tdiv_to_l_@f1+1,f
  5246  129F  0879               	movf	__tdiv_to_l_@f2+2,w
  5247  12A0  1C03               	skipc
  5248  12A1  0A79               	incf	__tdiv_to_l_@f2+2,w
  5249  12A2  02F5               	subwf	__tdiv_to_l_@f1+2,f
  5250  12A3                     l2756:
  5251  12A3  1424               	bsf	__tdiv_to_l_@quot,0
  5252  12A4                     l2758:
  5253  12A4  3001               	movlw	1
  5254  12A5                     u4345:
  5255  12A5  1003               	clrc
  5256  12A6  0DF3               	rlf	__tdiv_to_l_@f1,f
  5257  12A7  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  5258  12A8  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  5259  12A9  3EFF               	addlw	-1
  5260  12AA  1D03               	skipz
  5261  12AB  2AA5               	goto	u4345
  5262  12AC                     l2760:
  5263  12AC  3001               	movlw	1
  5264  12AD  02A8               	subwf	__tdiv_to_l_@cntr,f
  5265  12AE  1D03               	btfss	3,2
  5266  12AF  2AB1               	goto	u4351
  5267  12B0  2AB2               	goto	u4350
  5268  12B1                     u4351:
  5269  12B1  2A82               	goto	l2750
  5270  12B2                     u4350:
  5271  12B2                     l542:
  5272  12B2  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5273  12B3  2AB5               	goto	u4361
  5274  12B4  2AB6               	goto	u4360
  5275  12B5                     u4361:
  5276  12B5  2AD0               	goto	l2770
  5277  12B6                     u4360:
  5278  12B6                     l2762:
  5279  12B6  0829               	movf	__tdiv_to_l_@exp1,w
  5280  12B7  3A80               	xorlw	128
  5281  12B8  3E97               	addlw	151
  5282  12B9  1803               	skipnc
  5283  12BA  2ABC               	goto	u4371
  5284  12BB  2ABD               	goto	u4370
  5285  12BC                     u4371:
  5286  12BC  2ABE               	goto	l2768
  5287  12BD                     u4370:
  5288  12BD  2A46               	goto	l2732
  5289  12BE                     l2768:
  5290  12BE  3001               	movlw	1
  5291  12BF                     u4385:
  5292  12BF  1003               	clrc
  5293  12C0  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5294  12C1  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5295  12C2  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5296  12C3  0CA4               	rrf	__tdiv_to_l_@quot,f
  5297  12C4  3EFF               	addlw	-1
  5298  12C5  1D03               	skipz
  5299  12C6  2ABF               	goto	u4385
  5300  12C7  3001               	movlw	1
  5301  12C8  00A0               	movwf	??__tdiv_to_l_
  5302  12C9  0820               	movf	??__tdiv_to_l_,w
  5303  12CA  07A9               	addwf	__tdiv_to_l_@exp1,f
  5304  12CB  1D03               	btfss	3,2
  5305  12CC  2ACE               	goto	u4391
  5306  12CD  2ACF               	goto	u4390
  5307  12CE                     u4391:
  5308  12CE  2ABE               	goto	l2768
  5309  12CF                     u4390:
  5310  12CF  2AE7               	goto	l2778
  5311  12D0                     l2770:
  5312  12D0  3018               	movlw	24
  5313  12D1  0229               	subwf	__tdiv_to_l_@exp1,w
  5314  12D2  1C03               	skipc
  5315  12D3  2AD5               	goto	u4401
  5316  12D4  2AD6               	goto	u4400
  5317  12D5                     u4401:
  5318  12D5  2AE2               	goto	l549
  5319  12D6                     u4400:
  5320  12D6  2A46               	goto	l2732
  5321  12D7                     l2776:
  5322  12D7  3001               	movlw	1
  5323  12D8  00A0               	movwf	??__tdiv_to_l_
  5324  12D9                     u4415:
  5325  12D9  1003               	clrc
  5326  12DA  0DA4               	rlf	__tdiv_to_l_@quot,f
  5327  12DB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5328  12DC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5329  12DD  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5330  12DE  0BA0               	decfsz	??__tdiv_to_l_,f
  5331  12DF  2AD9               	goto	u4415
  5332  12E0  3001               	movlw	1
  5333  12E1  02A9               	subwf	__tdiv_to_l_@exp1,f
  5334  12E2                     l549:
  5335  12E2  0829               	movf	__tdiv_to_l_@exp1,w
  5336  12E3  1D03               	btfss	3,2
  5337  12E4  2AE6               	goto	u4421
  5338  12E5  2AE7               	goto	u4420
  5339  12E6                     u4421:
  5340  12E6  2AD7               	goto	l2776
  5341  12E7                     u4420:
  5342  12E7                     l2778:
  5343  12E7  0827               	movf	__tdiv_to_l_@quot+3,w
  5344  12E8  00F6               	movwf	?__tdiv_to_l_+3
  5345  12E9  0826               	movf	__tdiv_to_l_@quot+2,w
  5346  12EA  00F5               	movwf	?__tdiv_to_l_+2
  5347  12EB  0825               	movf	__tdiv_to_l_@quot+1,w
  5348  12EC  00F4               	movwf	?__tdiv_to_l_+1
  5349  12ED  0824               	movf	__tdiv_to_l_@quot,w
  5350  12EE  00F3               	movwf	?__tdiv_to_l_
  5351  12EF                     l538:
  5352  12EF  0008               	return
  5353  12F0                     __end_of__tdiv_to_l_:
  5354                           
  5355                           	psect	text12
  5356  087E                     __ptext12:	
  5357 ;; *************** function __div_to_l_ *****************
  5358 ;; Defined at:
  5359 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  f1              4    3[COMMON] unsigned long 
  5362 ;;  f2              4    7[COMMON] unsigned long 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  quot            4    1[BANK0 ] unsigned long 
  5365 ;;  exp1            1    6[BANK0 ] unsigned char 
  5366 ;;  cntr            1    5[BANK0 ] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  4    3[COMMON] unsigned long 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5376 ;;      Params:         8       0       0       0       0
  5377 ;;      Locals:         0       6       0       0       0
  5378 ;;      Temps:          0       1       0       0       0
  5379 ;;      Totals:         8       7       0       0       0
  5380 ;;Total ram usage:       15 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_sprintf
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function __div_to_l_
  5392  087E                     __div_to_l_:
  5393  087E                     l2782:	
  5394                           ;incstack = 0
  5395                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5396                           
  5397  087E  1003               	clrc
  5398  087F  0D75               	rlf	__div_to_l_@f1+2,w
  5399  0880  0D76               	rlf	__div_to_l_@f1+3,w
  5400  0881  1283               	bcf	3,5	;RP0=0, select bank0
  5401  0882  1303               	bcf	3,6	;RP1=0, select bank0
  5402  0883  00A0               	movwf	??__div_to_l_
  5403  0884  0820               	movf	??__div_to_l_,w
  5404  0885  00A6               	movwf	__div_to_l_@exp1
  5405  0886  0826               	movf	__div_to_l_@exp1,w
  5406  0887  1D03               	btfss	3,2
  5407  0888  288A               	goto	u4431
  5408  0889  288B               	goto	u4430
  5409  088A                     u4431:
  5410  088A  2894               	goto	l2788
  5411  088B                     u4430:
  5412  088B                     l2784:
  5413  088B  3000               	movlw	0
  5414  088C  00F6               	movwf	?__div_to_l_+3
  5415  088D  3000               	movlw	0
  5416  088E  00F5               	movwf	?__div_to_l_+2
  5417  088F  3000               	movlw	0
  5418  0890  00F4               	movwf	?__div_to_l_+1
  5419  0891  3000               	movlw	0
  5420  0892  00F3               	movwf	?__div_to_l_
  5421  0893  293B               	goto	l491
  5422  0894                     l2788:
  5423  0894  1003               	clrc
  5424  0895  0D79               	rlf	__div_to_l_@f2+2,w
  5425  0896  0D7A               	rlf	__div_to_l_@f2+3,w
  5426  0897  00A0               	movwf	??__div_to_l_
  5427  0898  0820               	movf	??__div_to_l_,w
  5428  0899  00A5               	movwf	__div_to_l_@cntr
  5429  089A  0825               	movf	__div_to_l_@cntr,w
  5430  089B  1D03               	btfss	3,2
  5431  089C  289E               	goto	u4441
  5432  089D  289F               	goto	u4440
  5433  089E                     u4441:
  5434  089E  28A0               	goto	l492
  5435  089F                     u4440:
  5436  089F  288B               	goto	l2784
  5437  08A0                     l492:
  5438  08A0  17F5               	bsf	__div_to_l_@f1+2,7
  5439  08A1                     l2794:
  5440  08A1  30FF               	movlw	255
  5441  08A2  05F3               	andwf	__div_to_l_@f1,f
  5442  08A3  30FF               	movlw	255
  5443  08A4  05F4               	andwf	__div_to_l_@f1+1,f
  5444  08A5  30FF               	movlw	255
  5445  08A6  05F5               	andwf	__div_to_l_@f1+2,f
  5446  08A7  3000               	movlw	0
  5447  08A8  05F6               	andwf	__div_to_l_@f1+3,f
  5448  08A9                     l2796:
  5449  08A9  17F9               	bsf	__div_to_l_@f2+2,7
  5450  08AA  30FF               	movlw	255
  5451  08AB  05F7               	andwf	__div_to_l_@f2,f
  5452  08AC  30FF               	movlw	255
  5453  08AD  05F8               	andwf	__div_to_l_@f2+1,f
  5454  08AE  30FF               	movlw	255
  5455  08AF  05F9               	andwf	__div_to_l_@f2+2,f
  5456  08B0  3000               	movlw	0
  5457  08B1  05FA               	andwf	__div_to_l_@f2+3,f
  5458  08B2  3000               	movlw	0
  5459  08B3  00A4               	movwf	__div_to_l_@quot+3
  5460  08B4  3000               	movlw	0
  5461  08B5  00A3               	movwf	__div_to_l_@quot+2
  5462  08B6  3000               	movlw	0
  5463  08B7  00A2               	movwf	__div_to_l_@quot+1
  5464  08B8  3000               	movlw	0
  5465  08B9  00A1               	movwf	__div_to_l_@quot
  5466  08BA                     l2798:
  5467  08BA  307F               	movlw	127
  5468  08BB  02A6               	subwf	__div_to_l_@exp1,f
  5469  08BC                     l2800:
  5470  08BC  30A0               	movlw	160
  5471  08BD  0725               	addwf	__div_to_l_@cntr,w
  5472  08BE  00A0               	movwf	??__div_to_l_
  5473  08BF  0820               	movf	??__div_to_l_,w
  5474  08C0  02A6               	subwf	__div_to_l_@exp1,f
  5475  08C1  3020               	movlw	32
  5476  08C2  00A0               	movwf	??__div_to_l_
  5477  08C3  0820               	movf	??__div_to_l_,w
  5478  08C4  00A5               	movwf	__div_to_l_@cntr
  5479  08C5                     l2802:
  5480  08C5  3001               	movlw	1
  5481  08C6  00A0               	movwf	??__div_to_l_
  5482  08C7                     u4455:
  5483  08C7  1003               	clrc
  5484  08C8  0DA1               	rlf	__div_to_l_@quot,f
  5485  08C9  0DA2               	rlf	__div_to_l_@quot+1,f
  5486  08CA  0DA3               	rlf	__div_to_l_@quot+2,f
  5487  08CB  0DA4               	rlf	__div_to_l_@quot+3,f
  5488  08CC  0BA0               	decfsz	??__div_to_l_,f
  5489  08CD  28C7               	goto	u4455
  5490  08CE                     l2804:
  5491  08CE  087A               	movf	__div_to_l_@f2+3,w
  5492  08CF  0276               	subwf	__div_to_l_@f1+3,w
  5493  08D0  1D03               	skipz
  5494  08D1  28DC               	goto	u4465
  5495  08D2  0879               	movf	__div_to_l_@f2+2,w
  5496  08D3  0275               	subwf	__div_to_l_@f1+2,w
  5497  08D4  1D03               	skipz
  5498  08D5  28DC               	goto	u4465
  5499  08D6  0878               	movf	__div_to_l_@f2+1,w
  5500  08D7  0274               	subwf	__div_to_l_@f1+1,w
  5501  08D8  1D03               	skipz
  5502  08D9  28DC               	goto	u4465
  5503  08DA  0877               	movf	__div_to_l_@f2,w
  5504  08DB  0273               	subwf	__div_to_l_@f1,w
  5505  08DC                     u4465:
  5506  08DC  1C03               	skipc
  5507  08DD  28DF               	goto	u4461
  5508  08DE  28E0               	goto	u4460
  5509  08DF                     u4461:
  5510  08DF  28EF               	goto	l2810
  5511  08E0                     u4460:
  5512  08E0                     l2806:
  5513  08E0  0877               	movf	__div_to_l_@f2,w
  5514  08E1  02F3               	subwf	__div_to_l_@f1,f
  5515  08E2  0878               	movf	__div_to_l_@f2+1,w
  5516  08E3  1C03               	skipc
  5517  08E4  0F78               	incfsz	__div_to_l_@f2+1,w
  5518  08E5  02F4               	subwf	__div_to_l_@f1+1,f
  5519  08E6  0879               	movf	__div_to_l_@f2+2,w
  5520  08E7  1C03               	skipc
  5521  08E8  0F79               	incfsz	__div_to_l_@f2+2,w
  5522  08E9  02F5               	subwf	__div_to_l_@f1+2,f
  5523  08EA  087A               	movf	__div_to_l_@f2+3,w
  5524  08EB  1C03               	skipc
  5525  08EC  0F7A               	incfsz	__div_to_l_@f2+3,w
  5526  08ED  02F6               	subwf	__div_to_l_@f1+3,f
  5527  08EE                     l2808:
  5528  08EE  1421               	bsf	__div_to_l_@quot,0
  5529  08EF                     l2810:
  5530  08EF  3001               	movlw	1
  5531  08F0  00A0               	movwf	??__div_to_l_
  5532  08F1                     u4475:
  5533  08F1  1003               	clrc
  5534  08F2  0DF3               	rlf	__div_to_l_@f1,f
  5535  08F3  0DF4               	rlf	__div_to_l_@f1+1,f
  5536  08F4  0DF5               	rlf	__div_to_l_@f1+2,f
  5537  08F5  0DF6               	rlf	__div_to_l_@f1+3,f
  5538  08F6  0BA0               	decfsz	??__div_to_l_,f
  5539  08F7  28F1               	goto	u4475
  5540  08F8                     l2812:
  5541  08F8  3001               	movlw	1
  5542  08F9  02A5               	subwf	__div_to_l_@cntr,f
  5543  08FA  1D03               	btfss	3,2
  5544  08FB  28FD               	goto	u4481
  5545  08FC  28FE               	goto	u4480
  5546  08FD                     u4481:
  5547  08FD  28C5               	goto	l2802
  5548  08FE                     u4480:
  5549  08FE                     l495:
  5550  08FE  1FA6               	btfss	__div_to_l_@exp1,7
  5551  08FF  2901               	goto	u4491
  5552  0900  2902               	goto	u4490
  5553  0901                     u4491:
  5554  0901  291C               	goto	l2822
  5555  0902                     u4490:
  5556  0902                     l2814:
  5557  0902  0826               	movf	__div_to_l_@exp1,w
  5558  0903  3A80               	xorlw	128
  5559  0904  3E9F               	addlw	159
  5560  0905  1803               	skipnc
  5561  0906  2908               	goto	u4501
  5562  0907  2909               	goto	u4500
  5563  0908                     u4501:
  5564  0908  290A               	goto	l2820
  5565  0909                     u4500:
  5566  0909  288B               	goto	l2784
  5567  090A                     l2820:
  5568  090A  3001               	movlw	1
  5569  090B                     u4515:
  5570  090B  1003               	clrc
  5571  090C  0CA4               	rrf	__div_to_l_@quot+3,f
  5572  090D  0CA3               	rrf	__div_to_l_@quot+2,f
  5573  090E  0CA2               	rrf	__div_to_l_@quot+1,f
  5574  090F  0CA1               	rrf	__div_to_l_@quot,f
  5575  0910  3EFF               	addlw	-1
  5576  0911  1D03               	skipz
  5577  0912  290B               	goto	u4515
  5578  0913  3001               	movlw	1
  5579  0914  00A0               	movwf	??__div_to_l_
  5580  0915  0820               	movf	??__div_to_l_,w
  5581  0916  07A6               	addwf	__div_to_l_@exp1,f
  5582  0917  1D03               	btfss	3,2
  5583  0918  291A               	goto	u4521
  5584  0919  291B               	goto	u4520
  5585  091A                     u4521:
  5586  091A  290A               	goto	l2820
  5587  091B                     u4520:
  5588  091B  2933               	goto	l2830
  5589  091C                     l2822:
  5590  091C  3020               	movlw	32
  5591  091D  0226               	subwf	__div_to_l_@exp1,w
  5592  091E  1C03               	skipc
  5593  091F  2921               	goto	u4531
  5594  0920  2922               	goto	u4530
  5595  0921                     u4531:
  5596  0921  292E               	goto	l502
  5597  0922                     u4530:
  5598  0922  288B               	goto	l2784
  5599  0923                     l2828:
  5600  0923  3001               	movlw	1
  5601  0924  00A0               	movwf	??__div_to_l_
  5602  0925                     u4545:
  5603  0925  1003               	clrc
  5604  0926  0DA1               	rlf	__div_to_l_@quot,f
  5605  0927  0DA2               	rlf	__div_to_l_@quot+1,f
  5606  0928  0DA3               	rlf	__div_to_l_@quot+2,f
  5607  0929  0DA4               	rlf	__div_to_l_@quot+3,f
  5608  092A  0BA0               	decfsz	??__div_to_l_,f
  5609  092B  2925               	goto	u4545
  5610  092C  3001               	movlw	1
  5611  092D  02A6               	subwf	__div_to_l_@exp1,f
  5612  092E                     l502:
  5613  092E  0826               	movf	__div_to_l_@exp1,w
  5614  092F  1D03               	btfss	3,2
  5615  0930  2932               	goto	u4551
  5616  0931  2933               	goto	u4550
  5617  0932                     u4551:
  5618  0932  2923               	goto	l2828
  5619  0933                     u4550:
  5620  0933                     l2830:
  5621  0933  0824               	movf	__div_to_l_@quot+3,w
  5622  0934  00F6               	movwf	?__div_to_l_+3
  5623  0935  0823               	movf	__div_to_l_@quot+2,w
  5624  0936  00F5               	movwf	?__div_to_l_+2
  5625  0937  0822               	movf	__div_to_l_@quot+1,w
  5626  0938  00F4               	movwf	?__div_to_l_+1
  5627  0939  0821               	movf	__div_to_l_@quot,w
  5628  093A  00F3               	movwf	?__div_to_l_
  5629  093B                     l491:
  5630  093B  0008               	return
  5631  093C                     __end_of__div_to_l_:
  5632                           
  5633                           	psect	text13
  5634  07DA                     __ptext13:	
  5635 ;; *************** function ___wmul *****************
  5636 ;; Defined at:
  5637 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  multiplier      2    3[COMMON] unsigned int 
  5640 ;;  multiplicand    2    5[COMMON] unsigned int 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  product         2    7[COMMON] unsigned int 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  2    3[COMMON] unsigned int 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5652 ;;      Params:         4       0       0       0       0
  5653 ;;      Locals:         2       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0
  5655 ;;      Totals:         6       0       0       0       0
  5656 ;;Total ram usage:        6 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    1
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_sprintf
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function ___wmul
  5668  07DA                     ___wmul:
  5669  07DA                     l2834:	
  5670                           ;incstack = 0
  5671                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5672                           
  5673  07DA  01F7               	clrf	___wmul@product
  5674  07DB  01F8               	clrf	___wmul@product+1
  5675  07DC                     l2836:
  5676  07DC  1C73               	btfss	___wmul@multiplier,0
  5677  07DD  2FDF               	goto	u4561
  5678  07DE  2FE0               	goto	u4560
  5679  07DF                     u4561:
  5680  07DF  2FE6               	goto	l321
  5681  07E0                     u4560:
  5682  07E0                     l2838:
  5683  07E0  0875               	movf	___wmul@multiplicand,w
  5684  07E1  07F7               	addwf	___wmul@product,f
  5685  07E2  1803               	skipnc
  5686  07E3  0AF8               	incf	___wmul@product+1,f
  5687  07E4  0876               	movf	___wmul@multiplicand+1,w
  5688  07E5  07F8               	addwf	___wmul@product+1,f
  5689  07E6                     l321:
  5690  07E6  3001               	movlw	1
  5691  07E7                     u4575:
  5692  07E7  1003               	clrc
  5693  07E8  0DF5               	rlf	___wmul@multiplicand,f
  5694  07E9  0DF6               	rlf	___wmul@multiplicand+1,f
  5695  07EA  3EFF               	addlw	-1
  5696  07EB  1D03               	skipz
  5697  07EC  2FE7               	goto	u4575
  5698  07ED                     l2840:
  5699  07ED  3001               	movlw	1
  5700  07EE                     u4585:
  5701  07EE  1003               	clrc
  5702  07EF  0CF4               	rrf	___wmul@multiplier+1,f
  5703  07F0  0CF3               	rrf	___wmul@multiplier,f
  5704  07F1  3EFF               	addlw	-1
  5705  07F2  1D03               	skipz
  5706  07F3  2FEE               	goto	u4585
  5707  07F4                     l2842:
  5708  07F4  0873               	movf	___wmul@multiplier,w
  5709  07F5  0474               	iorwf	___wmul@multiplier+1,w
  5710  07F6  1D03               	btfss	3,2
  5711  07F7  2FF9               	goto	u4591
  5712  07F8  2FFA               	goto	u4590
  5713  07F9                     u4591:
  5714  07F9  2FDC               	goto	l2836
  5715  07FA                     u4590:
  5716  07FA                     l2844:
  5717  07FA  0878               	movf	___wmul@product+1,w
  5718  07FB  00F4               	movwf	?___wmul+1
  5719  07FC  0877               	movf	___wmul@product,w
  5720  07FD  00F3               	movwf	?___wmul
  5721  07FE                     l323:
  5722  07FE  0008               	return
  5723  07FF                     __end_of___wmul:
  5724                           
  5725                           	psect	text14
  5726  1E1B                     __ptext14:	
  5727 ;; *************** function ___llmod *****************
  5728 ;; Defined at:
  5729 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  divisor         4    3[COMMON] unsigned long 
  5732 ;;  dividend        4    7[COMMON] unsigned long 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  counter         1    1[BANK0 ] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  4    3[COMMON] unsigned long 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5744 ;;      Params:         8       0       0       0       0
  5745 ;;      Locals:         0       1       0       0       0
  5746 ;;      Temps:          0       1       0       0       0
  5747 ;;      Totals:         8       2       0       0       0
  5748 ;;Total ram usage:       10 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    1
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_sprintf
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           
  5759                           ;psect for function ___llmod
  5760  1E1B                     ___llmod:
  5761  1E1B                     l2948:	
  5762                           ;incstack = 0
  5763                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5764                           
  5765  1E1B  0876               	movf	___llmod@divisor+3,w
  5766  1E1C  0475               	iorwf	___llmod@divisor+2,w
  5767  1E1D  0474               	iorwf	___llmod@divisor+1,w
  5768  1E1E  0473               	iorwf	___llmod@divisor,w
  5769  1E1F  1903               	skipnz
  5770  1E20  2E22               	goto	u4881
  5771  1E21  2E23               	goto	u4880
  5772  1E22                     u4881:
  5773  1E22  2E68               	goto	l2964
  5774  1E23                     u4880:
  5775  1E23                     l2950:
  5776  1E23  1283               	bcf	3,5	;RP0=0, select bank0
  5777  1E24  1303               	bcf	3,6	;RP1=0, select bank0
  5778  1E25  01A1               	clrf	___llmod@counter
  5779  1E26  0AA1               	incf	___llmod@counter,f
  5780  1E27  2E35               	goto	l2954
  5781  1E28                     l2952:
  5782  1E28  3001               	movlw	1
  5783  1E29  00A0               	movwf	??___llmod
  5784  1E2A                     u4895:
  5785  1E2A  1003               	clrc
  5786  1E2B  0DF3               	rlf	___llmod@divisor,f
  5787  1E2C  0DF4               	rlf	___llmod@divisor+1,f
  5788  1E2D  0DF5               	rlf	___llmod@divisor+2,f
  5789  1E2E  0DF6               	rlf	___llmod@divisor+3,f
  5790  1E2F  0BA0               	decfsz	??___llmod,f
  5791  1E30  2E2A               	goto	u4895
  5792  1E31  3001               	movlw	1
  5793  1E32  00A0               	movwf	??___llmod
  5794  1E33  0820               	movf	??___llmod,w
  5795  1E34  07A1               	addwf	___llmod@counter,f
  5796  1E35                     l2954:
  5797  1E35  1FF6               	btfss	___llmod@divisor+3,7
  5798  1E36  2E38               	goto	u4901
  5799  1E37  2E39               	goto	u4900
  5800  1E38                     u4901:
  5801  1E38  2E28               	goto	l2952
  5802  1E39                     u4900:
  5803  1E39                     l2956:
  5804  1E39  0876               	movf	___llmod@divisor+3,w
  5805  1E3A  027A               	subwf	___llmod@dividend+3,w
  5806  1E3B  1D03               	skipz
  5807  1E3C  2E47               	goto	u4915
  5808  1E3D  0875               	movf	___llmod@divisor+2,w
  5809  1E3E  0279               	subwf	___llmod@dividend+2,w
  5810  1E3F  1D03               	skipz
  5811  1E40  2E47               	goto	u4915
  5812  1E41  0874               	movf	___llmod@divisor+1,w
  5813  1E42  0278               	subwf	___llmod@dividend+1,w
  5814  1E43  1D03               	skipz
  5815  1E44  2E47               	goto	u4915
  5816  1E45  0873               	movf	___llmod@divisor,w
  5817  1E46  0277               	subwf	___llmod@dividend,w
  5818  1E47                     u4915:
  5819  1E47  1C03               	skipc
  5820  1E48  2E4A               	goto	u4911
  5821  1E49  2E4B               	goto	u4910
  5822  1E4A                     u4911:
  5823  1E4A  2E59               	goto	l2960
  5824  1E4B                     u4910:
  5825  1E4B                     l2958:
  5826  1E4B  0873               	movf	___llmod@divisor,w
  5827  1E4C  02F7               	subwf	___llmod@dividend,f
  5828  1E4D  0874               	movf	___llmod@divisor+1,w
  5829  1E4E  1C03               	skipc
  5830  1E4F  0F74               	incfsz	___llmod@divisor+1,w
  5831  1E50  02F8               	subwf	___llmod@dividend+1,f
  5832  1E51  0875               	movf	___llmod@divisor+2,w
  5833  1E52  1C03               	skipc
  5834  1E53  0F75               	incfsz	___llmod@divisor+2,w
  5835  1E54  02F9               	subwf	___llmod@dividend+2,f
  5836  1E55  0876               	movf	___llmod@divisor+3,w
  5837  1E56  1C03               	skipc
  5838  1E57  0F76               	incfsz	___llmod@divisor+3,w
  5839  1E58  02FA               	subwf	___llmod@dividend+3,f
  5840  1E59                     l2960:
  5841  1E59  3001               	movlw	1
  5842  1E5A                     u4925:
  5843  1E5A  1003               	clrc
  5844  1E5B  0CF6               	rrf	___llmod@divisor+3,f
  5845  1E5C  0CF5               	rrf	___llmod@divisor+2,f
  5846  1E5D  0CF4               	rrf	___llmod@divisor+1,f
  5847  1E5E  0CF3               	rrf	___llmod@divisor,f
  5848  1E5F  3EFF               	addlw	-1
  5849  1E60  1D03               	skipz
  5850  1E61  2E5A               	goto	u4925
  5851  1E62                     l2962:
  5852  1E62  3001               	movlw	1
  5853  1E63  02A1               	subwf	___llmod@counter,f
  5854  1E64  1D03               	btfss	3,2
  5855  1E65  2E67               	goto	u4931
  5856  1E66  2E68               	goto	u4930
  5857  1E67                     u4931:
  5858  1E67  2E39               	goto	l2956
  5859  1E68                     u4930:
  5860  1E68                     l2964:
  5861  1E68  087A               	movf	___llmod@dividend+3,w
  5862  1E69  00F6               	movwf	?___llmod+3
  5863  1E6A  0879               	movf	___llmod@dividend+2,w
  5864  1E6B  00F5               	movwf	?___llmod+2
  5865  1E6C  0878               	movf	___llmod@dividend+1,w
  5866  1E6D  00F4               	movwf	?___llmod+1
  5867  1E6E  0877               	movf	___llmod@dividend,w
  5868  1E6F  00F3               	movwf	?___llmod
  5869  1E70                     l577:
  5870  1E70  0008               	return
  5871  1E71                     __end_of___llmod:
  5872                           
  5873                           	psect	text15
  5874  1F2F                     __ptext15:	
  5875 ;; *************** function ___lldiv *****************
  5876 ;; Defined at:
  5877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  divisor         4    3[COMMON] unsigned long 
  5880 ;;  dividend        4    7[COMMON] unsigned long 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  quotient        4    1[BANK0 ] unsigned long 
  5883 ;;  counter         1    5[BANK0 ] unsigned char 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  4    3[COMMON] unsigned long 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5893 ;;      Params:         8       0       0       0       0
  5894 ;;      Locals:         0       5       0       0       0
  5895 ;;      Temps:          0       1       0       0       0
  5896 ;;      Totals:         8       6       0       0       0
  5897 ;;Total ram usage:       14 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    1
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_sprintf
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           
  5908                           ;psect for function ___lldiv
  5909  1F2F                     ___lldiv:
  5910  1F2F                     l2848:	
  5911                           ;incstack = 0
  5912                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5913                           
  5914  1F2F  3000               	movlw	0
  5915  1F30  1283               	bcf	3,5	;RP0=0, select bank0
  5916  1F31  1303               	bcf	3,6	;RP1=0, select bank0
  5917  1F32  00A4               	movwf	___lldiv@quotient+3
  5918  1F33  3000               	movlw	0
  5919  1F34  00A3               	movwf	___lldiv@quotient+2
  5920  1F35  3000               	movlw	0
  5921  1F36  00A2               	movwf	___lldiv@quotient+1
  5922  1F37  3000               	movlw	0
  5923  1F38  00A1               	movwf	___lldiv@quotient
  5924  1F39  0876               	movf	___lldiv@divisor+3,w
  5925  1F3A  0475               	iorwf	___lldiv@divisor+2,w
  5926  1F3B  0474               	iorwf	___lldiv@divisor+1,w
  5927  1F3C  0473               	iorwf	___lldiv@divisor,w
  5928  1F3D  1903               	skipnz
  5929  1F3E  2F40               	goto	u4601
  5930  1F3F  2F41               	goto	u4600
  5931  1F40                     u4601:
  5932  1F40  2F8E               	goto	l2868
  5933  1F41                     u4600:
  5934  1F41                     l2850:
  5935  1F41  01A5               	clrf	___lldiv@counter
  5936  1F42  0AA5               	incf	___lldiv@counter,f
  5937  1F43  2F51               	goto	l2854
  5938  1F44                     l2852:
  5939  1F44  3001               	movlw	1
  5940  1F45  00A0               	movwf	??___lldiv
  5941  1F46                     u4615:
  5942  1F46  1003               	clrc
  5943  1F47  0DF3               	rlf	___lldiv@divisor,f
  5944  1F48  0DF4               	rlf	___lldiv@divisor+1,f
  5945  1F49  0DF5               	rlf	___lldiv@divisor+2,f
  5946  1F4A  0DF6               	rlf	___lldiv@divisor+3,f
  5947  1F4B  0BA0               	decfsz	??___lldiv,f
  5948  1F4C  2F46               	goto	u4615
  5949  1F4D  3001               	movlw	1
  5950  1F4E  00A0               	movwf	??___lldiv
  5951  1F4F  0820               	movf	??___lldiv,w
  5952  1F50  07A5               	addwf	___lldiv@counter,f
  5953  1F51                     l2854:
  5954  1F51  1FF6               	btfss	___lldiv@divisor+3,7
  5955  1F52  2F54               	goto	u4621
  5956  1F53  2F55               	goto	u4620
  5957  1F54                     u4621:
  5958  1F54  2F44               	goto	l2852
  5959  1F55                     u4620:
  5960  1F55                     l2856:
  5961  1F55  3001               	movlw	1
  5962  1F56  00A0               	movwf	??___lldiv
  5963  1F57                     u4635:
  5964  1F57  1003               	clrc
  5965  1F58  0DA1               	rlf	___lldiv@quotient,f
  5966  1F59  0DA2               	rlf	___lldiv@quotient+1,f
  5967  1F5A  0DA3               	rlf	___lldiv@quotient+2,f
  5968  1F5B  0DA4               	rlf	___lldiv@quotient+3,f
  5969  1F5C  0BA0               	decfsz	??___lldiv,f
  5970  1F5D  2F57               	goto	u4635
  5971  1F5E                     l2858:
  5972  1F5E  0876               	movf	___lldiv@divisor+3,w
  5973  1F5F  027A               	subwf	___lldiv@dividend+3,w
  5974  1F60  1D03               	skipz
  5975  1F61  2F6C               	goto	u4645
  5976  1F62  0875               	movf	___lldiv@divisor+2,w
  5977  1F63  0279               	subwf	___lldiv@dividend+2,w
  5978  1F64  1D03               	skipz
  5979  1F65  2F6C               	goto	u4645
  5980  1F66  0874               	movf	___lldiv@divisor+1,w
  5981  1F67  0278               	subwf	___lldiv@dividend+1,w
  5982  1F68  1D03               	skipz
  5983  1F69  2F6C               	goto	u4645
  5984  1F6A  0873               	movf	___lldiv@divisor,w
  5985  1F6B  0277               	subwf	___lldiv@dividend,w
  5986  1F6C                     u4645:
  5987  1F6C  1C03               	skipc
  5988  1F6D  2F6F               	goto	u4641
  5989  1F6E  2F70               	goto	u4640
  5990  1F6F                     u4641:
  5991  1F6F  2F7F               	goto	l2864
  5992  1F70                     u4640:
  5993  1F70                     l2860:
  5994  1F70  0873               	movf	___lldiv@divisor,w
  5995  1F71  02F7               	subwf	___lldiv@dividend,f
  5996  1F72  0874               	movf	___lldiv@divisor+1,w
  5997  1F73  1C03               	skipc
  5998  1F74  0F74               	incfsz	___lldiv@divisor+1,w
  5999  1F75  02F8               	subwf	___lldiv@dividend+1,f
  6000  1F76  0875               	movf	___lldiv@divisor+2,w
  6001  1F77  1C03               	skipc
  6002  1F78  0F75               	incfsz	___lldiv@divisor+2,w
  6003  1F79  02F9               	subwf	___lldiv@dividend+2,f
  6004  1F7A  0876               	movf	___lldiv@divisor+3,w
  6005  1F7B  1C03               	skipc
  6006  1F7C  0F76               	incfsz	___lldiv@divisor+3,w
  6007  1F7D  02FA               	subwf	___lldiv@dividend+3,f
  6008  1F7E                     l2862:
  6009  1F7E  1421               	bsf	___lldiv@quotient,0
  6010  1F7F                     l2864:
  6011  1F7F  3001               	movlw	1
  6012  1F80                     u4655:
  6013  1F80  1003               	clrc
  6014  1F81  0CF6               	rrf	___lldiv@divisor+3,f
  6015  1F82  0CF5               	rrf	___lldiv@divisor+2,f
  6016  1F83  0CF4               	rrf	___lldiv@divisor+1,f
  6017  1F84  0CF3               	rrf	___lldiv@divisor,f
  6018  1F85  3EFF               	addlw	-1
  6019  1F86  1D03               	skipz
  6020  1F87  2F80               	goto	u4655
  6021  1F88                     l2866:
  6022  1F88  3001               	movlw	1
  6023  1F89  02A5               	subwf	___lldiv@counter,f
  6024  1F8A  1D03               	btfss	3,2
  6025  1F8B  2F8D               	goto	u4661
  6026  1F8C  2F8E               	goto	u4660
  6027  1F8D                     u4661:
  6028  1F8D  2F55               	goto	l2856
  6029  1F8E                     u4660:
  6030  1F8E                     l2868:
  6031  1F8E  0824               	movf	___lldiv@quotient+3,w
  6032  1F8F  00F6               	movwf	?___lldiv+3
  6033  1F90  0823               	movf	___lldiv@quotient+2,w
  6034  1F91  00F5               	movwf	?___lldiv+2
  6035  1F92  0822               	movf	___lldiv@quotient+1,w
  6036  1F93  00F4               	movwf	?___lldiv+1
  6037  1F94  0821               	movf	___lldiv@quotient,w
  6038  1F95  00F3               	movwf	?___lldiv
  6039  1F96                     l357:
  6040  1F96  0008               	return
  6041  1F97                     __end_of___lldiv:
  6042                           
  6043                           	psect	text16
  6044  0802                     __ptext16:	
  6045 ;; *************** function ___fltol *****************
  6046 ;; Defined at:
  6047 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  f1              4   53[BANK0 ] unsigned long 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  exp1            1   63[BANK0 ] unsigned char 
  6052 ;;  sign1           1   62[BANK0 ] unsigned char 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  4   53[BANK0 ] long 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6062 ;;      Params:         0       4       0       0       0
  6063 ;;      Locals:         0       2       0       0       0
  6064 ;;      Temps:          0       5       0       0       0
  6065 ;;      Totals:         0      11       0       0       0
  6066 ;;Total ram usage:       11 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    1
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_sprintf
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function ___fltol
  6078  0802                     ___fltol:
  6079  0802                     l2912:	
  6080                           ;incstack = 0
  6081                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6082                           
  6083  0802  1003               	clrc
  6084  0803  1283               	bcf	3,5	;RP0=0, select bank0
  6085  0804  1303               	bcf	3,6	;RP1=0, select bank0
  6086  0805  0D57               	rlf	___fltol@f1+2,w
  6087  0806  0D58               	rlf	___fltol@f1+3,w
  6088  0807  00D9               	movwf	??___fltol
  6089  0808  0859               	movf	??___fltol,w
  6090  0809  00DF               	movwf	___fltol@exp1
  6091  080A  085F               	movf	___fltol@exp1,w
  6092  080B  1D03               	btfss	3,2
  6093  080C  280E               	goto	u4781
  6094  080D  280F               	goto	u4780
  6095  080E                     u4781:
  6096  080E  2818               	goto	l2918
  6097  080F                     u4780:
  6098  080F                     l2914:
  6099  080F  3000               	movlw	0
  6100  0810  00D8               	movwf	?___fltol+3
  6101  0811  3000               	movlw	0
  6102  0812  00D7               	movwf	?___fltol+2
  6103  0813  3000               	movlw	0
  6104  0814  00D6               	movwf	?___fltol+1
  6105  0815  3000               	movlw	0
  6106  0816  00D5               	movwf	?___fltol
  6107  0817  287D               	goto	l524
  6108  0818                     l2918:
  6109  0818  0855               	movf	___fltol@f1,w
  6110  0819  00D9               	movwf	??___fltol
  6111  081A  0856               	movf	___fltol@f1+1,w
  6112  081B  00DA               	movwf	??___fltol+1
  6113  081C  0857               	movf	___fltol@f1+2,w
  6114  081D  00DB               	movwf	??___fltol+2
  6115  081E  0858               	movf	___fltol@f1+3,w
  6116  081F  00DC               	movwf	??___fltol+3
  6117  0820  301F               	movlw	31
  6118  0821                     u4795:
  6119  0821  1003               	clrc
  6120  0822  0CDC               	rrf	??___fltol+3,f
  6121  0823  0CDB               	rrf	??___fltol+2,f
  6122  0824  0CDA               	rrf	??___fltol+1,f
  6123  0825  0CD9               	rrf	??___fltol,f
  6124  0826                     u4790:
  6125  0826  3EFF               	addlw	-1
  6126  0827  1D03               	skipz
  6127  0828  2821               	goto	u4795
  6128  0829  0859               	movf	??___fltol,w
  6129  082A  00DD               	movwf	??___fltol+4
  6130  082B  085D               	movf	??___fltol+4,w
  6131  082C  00DE               	movwf	___fltol@sign1
  6132  082D                     l2920:
  6133  082D  17D7               	bsf	___fltol@f1+2,7
  6134  082E                     l2922:
  6135  082E  30FF               	movlw	255
  6136  082F  05D5               	andwf	___fltol@f1,f
  6137  0830  30FF               	movlw	255
  6138  0831  05D6               	andwf	___fltol@f1+1,f
  6139  0832  30FF               	movlw	255
  6140  0833  05D7               	andwf	___fltol@f1+2,f
  6141  0834  3000               	movlw	0
  6142  0835  05D8               	andwf	___fltol@f1+3,f
  6143  0836                     l2924:
  6144  0836  3096               	movlw	150
  6145  0837  02DF               	subwf	___fltol@exp1,f
  6146  0838                     l2926:
  6147  0838  1FDF               	btfss	___fltol@exp1,7
  6148  0839  283B               	goto	u4801
  6149  083A  283C               	goto	u4800
  6150  083B                     u4801:
  6151  083B  2856               	goto	l2936
  6152  083C                     u4800:
  6153  083C                     l2928:
  6154  083C  085F               	movf	___fltol@exp1,w
  6155  083D  3A80               	xorlw	128
  6156  083E  3E97               	addlw	151
  6157  083F  1803               	skipnc
  6158  0840  2842               	goto	u4811
  6159  0841  2843               	goto	u4810
  6160  0842                     u4811:
  6161  0842  2844               	goto	l2934
  6162  0843                     u4810:
  6163  0843  280F               	goto	l2914
  6164  0844                     l2934:
  6165  0844  3001               	movlw	1
  6166  0845                     u4825:
  6167  0845  1003               	clrc
  6168  0846  0CD8               	rrf	___fltol@f1+3,f
  6169  0847  0CD7               	rrf	___fltol@f1+2,f
  6170  0848  0CD6               	rrf	___fltol@f1+1,f
  6171  0849  0CD5               	rrf	___fltol@f1,f
  6172  084A  3EFF               	addlw	-1
  6173  084B  1D03               	skipz
  6174  084C  2845               	goto	u4825
  6175  084D  3001               	movlw	1
  6176  084E  00D9               	movwf	??___fltol
  6177  084F  0859               	movf	??___fltol,w
  6178  0850  07DF               	addwf	___fltol@exp1,f
  6179  0851  1D03               	btfss	3,2
  6180  0852  2854               	goto	u4831
  6181  0853  2855               	goto	u4830
  6182  0854                     u4831:
  6183  0854  2844               	goto	l2934
  6184  0855                     u4830:
  6185  0855  286D               	goto	l2944
  6186  0856                     l2936:
  6187  0856  3020               	movlw	32
  6188  0857  025F               	subwf	___fltol@exp1,w
  6189  0858  1C03               	skipc
  6190  0859  285B               	goto	u4841
  6191  085A  285C               	goto	u4840
  6192  085B                     u4841:
  6193  085B  2868               	goto	l531
  6194  085C                     u4840:
  6195  085C  280F               	goto	l2914
  6196  085D                     l2942:
  6197  085D  3001               	movlw	1
  6198  085E  00D9               	movwf	??___fltol
  6199  085F                     u4855:
  6200  085F  1003               	clrc
  6201  0860  0DD5               	rlf	___fltol@f1,f
  6202  0861  0DD6               	rlf	___fltol@f1+1,f
  6203  0862  0DD7               	rlf	___fltol@f1+2,f
  6204  0863  0DD8               	rlf	___fltol@f1+3,f
  6205  0864  0BD9               	decfsz	??___fltol,f
  6206  0865  285F               	goto	u4855
  6207  0866  3001               	movlw	1
  6208  0867  02DF               	subwf	___fltol@exp1,f
  6209  0868                     l531:
  6210  0868  085F               	movf	___fltol@exp1,w
  6211  0869  1D03               	btfss	3,2
  6212  086A  286C               	goto	u4861
  6213  086B  286D               	goto	u4860
  6214  086C                     u4861:
  6215  086C  285D               	goto	l2942
  6216  086D                     u4860:
  6217  086D                     l2944:
  6218  086D  085E               	movf	___fltol@sign1,w
  6219  086E  1903               	btfsc	3,2
  6220  086F  2871               	goto	u4871
  6221  0870  2872               	goto	u4870
  6222  0871                     u4871:
  6223  0871  287D               	goto	l534
  6224  0872                     u4870:
  6225  0872                     l2946:
  6226  0872  09D5               	comf	___fltol@f1,f
  6227  0873  09D6               	comf	___fltol@f1+1,f
  6228  0874  09D7               	comf	___fltol@f1+2,f
  6229  0875  09D8               	comf	___fltol@f1+3,f
  6230  0876  0AD5               	incf	___fltol@f1,f
  6231  0877  1903               	skipnz
  6232  0878  0AD6               	incf	___fltol@f1+1,f
  6233  0879  1903               	skipnz
  6234  087A  0AD7               	incf	___fltol@f1+2,f
  6235  087B  1903               	skipnz
  6236  087C  0AD8               	incf	___fltol@f1+3,f
  6237  087D                     l534:
  6238  087D                     l524:
  6239  087D  0008               	return
  6240  087E                     __end_of___fltol:
  6241                           
  6242                           	psect	text17
  6243  1DCB                     __ptext17:	
  6244 ;; *************** function ___flsub *****************
  6245 ;; Defined at:
  6246 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  a               4    0[BANK1 ] long 
  6249 ;;  b               4    4[BANK1 ] long 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  4    0[BANK1 ] long 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6261 ;;      Params:         0       0       8       0       0
  6262 ;;      Locals:         0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0
  6264 ;;      Totals:         0       0       8       0       0
  6265 ;;Total ram usage:        8 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    2
  6268 ;; This function calls:
  6269 ;;		___fladd
  6270 ;; This function is called by:
  6271 ;;		_sprintf
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           
  6276                           ;psect for function ___flsub
  6277  1DCB                     ___flsub:
  6278  1DCB                     l2968:	
  6279                           ;incstack = 0
  6280                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6281                           
  6282  1DCB  3080               	movlw	128
  6283  1DCC  1683               	bsf	3,5	;RP0=1, select bank1
  6284  1DCD  1303               	bcf	3,6	;RP1=0, select bank1
  6285  1DCE  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6286  1DCF                     l2970:
  6287  1DCF  0827               	movf	(___flsub@b+3)^(0+128),w
  6288  1DD0  1283               	bcf	3,5	;RP0=0, select bank0
  6289  1DD1  1303               	bcf	3,6	;RP1=0, select bank0
  6290  1DD2  00D9               	movwf	___fladd@b+3
  6291  1DD3  1683               	bsf	3,5	;RP0=1, select bank1
  6292  1DD4  1303               	bcf	3,6	;RP1=0, select bank1
  6293  1DD5  0826               	movf	(___flsub@b+2)^(0+128),w
  6294  1DD6  1283               	bcf	3,5	;RP0=0, select bank0
  6295  1DD7  1303               	bcf	3,6	;RP1=0, select bank0
  6296  1DD8  00D8               	movwf	___fladd@b+2
  6297  1DD9  1683               	bsf	3,5	;RP0=1, select bank1
  6298  1DDA  1303               	bcf	3,6	;RP1=0, select bank1
  6299  1DDB  0825               	movf	(___flsub@b+1)^(0+128),w
  6300  1DDC  1283               	bcf	3,5	;RP0=0, select bank0
  6301  1DDD  1303               	bcf	3,6	;RP1=0, select bank0
  6302  1DDE  00D7               	movwf	___fladd@b+1
  6303  1DDF  1683               	bsf	3,5	;RP0=1, select bank1
  6304  1DE0  1303               	bcf	3,6	;RP1=0, select bank1
  6305  1DE1  0824               	movf	___flsub@b^(0+128),w
  6306  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
  6307  1DE3  1303               	bcf	3,6	;RP1=0, select bank0
  6308  1DE4  00D6               	movwf	___fladd@b
  6309  1DE5  1683               	bsf	3,5	;RP0=1, select bank1
  6310  1DE6  1303               	bcf	3,6	;RP1=0, select bank1
  6311  1DE7  0823               	movf	(___flsub@a+3)^(0+128),w
  6312  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  6313  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
  6314  1DEA  00DD               	movwf	___fladd@a+3
  6315  1DEB  1683               	bsf	3,5	;RP0=1, select bank1
  6316  1DEC  1303               	bcf	3,6	;RP1=0, select bank1
  6317  1DED  0822               	movf	(___flsub@a+2)^(0+128),w
  6318  1DEE  1283               	bcf	3,5	;RP0=0, select bank0
  6319  1DEF  1303               	bcf	3,6	;RP1=0, select bank0
  6320  1DF0  00DC               	movwf	___fladd@a+2
  6321  1DF1  1683               	bsf	3,5	;RP0=1, select bank1
  6322  1DF2  1303               	bcf	3,6	;RP1=0, select bank1
  6323  1DF3  0821               	movf	(___flsub@a+1)^(0+128),w
  6324  1DF4  1283               	bcf	3,5	;RP0=0, select bank0
  6325  1DF5  1303               	bcf	3,6	;RP1=0, select bank0
  6326  1DF6  00DB               	movwf	___fladd@a+1
  6327  1DF7  1683               	bsf	3,5	;RP0=1, select bank1
  6328  1DF8  1303               	bcf	3,6	;RP1=0, select bank1
  6329  1DF9  0820               	movf	___flsub@a^(0+128),w
  6330  1DFA  1283               	bcf	3,5	;RP0=0, select bank0
  6331  1DFB  1303               	bcf	3,6	;RP1=0, select bank0
  6332  1DFC  00DA               	movwf	___fladd@a
  6333  1DFD  120A  118A  2552  160A  158A  	fcall	___fladd
  6334  1E02  1283               	bcf	3,5	;RP0=0, select bank0
  6335  1E03  1303               	bcf	3,6	;RP1=0, select bank0
  6336  1E04  0859               	movf	?___fladd+3,w
  6337  1E05  1683               	bsf	3,5	;RP0=1, select bank1
  6338  1E06  1303               	bcf	3,6	;RP1=0, select bank1
  6339  1E07  00A3               	movwf	(?___flsub+3)^(0+128)
  6340  1E08  1283               	bcf	3,5	;RP0=0, select bank0
  6341  1E09  1303               	bcf	3,6	;RP1=0, select bank0
  6342  1E0A  0858               	movf	?___fladd+2,w
  6343  1E0B  1683               	bsf	3,5	;RP0=1, select bank1
  6344  1E0C  1303               	bcf	3,6	;RP1=0, select bank1
  6345  1E0D  00A2               	movwf	(?___flsub+2)^(0+128)
  6346  1E0E  1283               	bcf	3,5	;RP0=0, select bank0
  6347  1E0F  1303               	bcf	3,6	;RP1=0, select bank0
  6348  1E10  0857               	movf	?___fladd+1,w
  6349  1E11  1683               	bsf	3,5	;RP0=1, select bank1
  6350  1E12  1303               	bcf	3,6	;RP1=0, select bank1
  6351  1E13  00A1               	movwf	(?___flsub+1)^(0+128)
  6352  1E14  1283               	bcf	3,5	;RP0=0, select bank0
  6353  1E15  1303               	bcf	3,6	;RP1=0, select bank0
  6354  1E16  0856               	movf	?___fladd,w
  6355  1E17  1683               	bsf	3,5	;RP0=1, select bank1
  6356  1E18  1303               	bcf	3,6	;RP1=0, select bank1
  6357  1E19  00A0               	movwf	?___flsub^(0+128)
  6358  1E1A                     l694:
  6359  1E1A  0008               	return
  6360  1E1B                     __end_of___flsub:
  6361                           
  6362                           	psect	text18
  6363  0552                     __ptext18:	
  6364 ;; *************** function ___fladd *****************
  6365 ;; Defined at:
  6366 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  b               4   54[BANK0 ] long 
  6369 ;;  a               4   58[BANK0 ] long 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  grs             1   73[BANK0 ] unsigned char 
  6372 ;;  bexp            1   72[BANK0 ] unsigned char 
  6373 ;;  aexp            1   71[BANK0 ] unsigned char 
  6374 ;;  signs           1   70[BANK0 ] unsigned char 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  4   54[BANK0 ] unsigned char 
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0, btemp+1
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6384 ;;      Params:         0       8       0       0       0
  6385 ;;      Locals:         0       4       0       0       0
  6386 ;;      Temps:          0       8       0       0       0
  6387 ;;      Totals:         0      20       0       0       0
  6388 ;;Total ram usage:       20 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    1
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_sprintf
  6395 ;;		___flsub
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function ___fladd
  6401  0552                     ___fladd:
  6402  0552                     l2322:	
  6403                           ;incstack = 0
  6404                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6405                           
  6406  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6407  0553  1303               	bcf	3,6	;RP1=0, select bank0
  6408  0554  0859               	movf	___fladd@b+3,w
  6409  0555  3980               	andlw	128
  6410  0556  00DE               	movwf	??___fladd
  6411  0557  085E               	movf	??___fladd,w
  6412  0558  00E6               	movwf	___fladd@signs
  6413  0559                     l2324:
  6414  0559  0859               	movf	___fladd@b+3,w
  6415  055A  00DE               	movwf	??___fladd
  6416  055B  075E               	addwf	??___fladd,w
  6417  055C  00DF               	movwf	??___fladd+1
  6418  055D  085F               	movf	??___fladd+1,w
  6419  055E  00E8               	movwf	___fladd@bexp
  6420  055F                     l2326:
  6421  055F  1FD8               	btfss	___fladd@b+2,7
  6422  0560  2D62               	goto	u3191
  6423  0561  2D63               	goto	u3190
  6424  0562                     u3191:
  6425  0562  2D64               	goto	l2330
  6426  0563                     u3190:
  6427  0563                     l2328:
  6428  0563  1468               	bsf	___fladd@bexp,0
  6429  0564                     l2330:
  6430  0564  0868               	movf	___fladd@bexp,w
  6431  0565  1903               	btfsc	3,2
  6432  0566  2D68               	goto	u3201
  6433  0567  2D69               	goto	u3200
  6434  0568                     u3201:
  6435  0568  2D79               	goto	l2340
  6436  0569                     u3200:
  6437  0569                     l2332:
  6438  0569  0A68               	incf	___fladd@bexp,w
  6439  056A  1D03               	btfss	3,2
  6440  056B  2D6D               	goto	u3211
  6441  056C  2D6E               	goto	u3210
  6442  056D                     u3211:
  6443  056D  2D76               	goto	l2336
  6444  056E                     u3210:
  6445  056E                     l2334:
  6446  056E  3000               	movlw	0
  6447  056F  00D9               	movwf	___fladd@b+3
  6448  0570  3000               	movlw	0
  6449  0571  00D8               	movwf	___fladd@b+2
  6450  0572  3000               	movlw	0
  6451  0573  00D7               	movwf	___fladd@b+1
  6452  0574  3000               	movlw	0
  6453  0575  00D6               	movwf	___fladd@b
  6454  0576                     l2336:
  6455  0576  17D8               	bsf	___fladd@b+2,7
  6456  0577                     l2338:
  6457  0577  01D9               	clrf	___fladd@b+3
  6458  0578  2D81               	goto	l2342
  6459  0579                     l2340:
  6460  0579  3000               	movlw	0
  6461  057A  00D9               	movwf	___fladd@b+3
  6462  057B  3000               	movlw	0
  6463  057C  00D8               	movwf	___fladd@b+2
  6464  057D  3000               	movlw	0
  6465  057E  00D7               	movwf	___fladd@b+1
  6466  057F  3000               	movlw	0
  6467  0580  00D6               	movwf	___fladd@b
  6468  0581                     l2342:
  6469  0581  085D               	movf	___fladd@a+3,w
  6470  0582  3980               	andlw	128
  6471  0583  00DE               	movwf	??___fladd
  6472  0584  085E               	movf	??___fladd,w
  6473  0585  00E7               	movwf	___fladd@aexp
  6474  0586                     l2344:
  6475  0586  0867               	movf	___fladd@aexp,w
  6476  0587  0666               	xorwf	___fladd@signs,w
  6477  0588  1903               	skipnz
  6478  0589  2D8B               	goto	u3221
  6479  058A  2D8C               	goto	u3220
  6480  058B                     u3221:
  6481  058B  2D8D               	goto	l2348
  6482  058C                     u3220:
  6483  058C                     l2346:
  6484  058C  1766               	bsf	___fladd@signs,6
  6485  058D                     l2348:
  6486  058D  085D               	movf	___fladd@a+3,w
  6487  058E  00DE               	movwf	??___fladd
  6488  058F  075E               	addwf	??___fladd,w
  6489  0590  00DF               	movwf	??___fladd+1
  6490  0591  085F               	movf	??___fladd+1,w
  6491  0592  00E7               	movwf	___fladd@aexp
  6492  0593                     l2350:
  6493  0593  1FDC               	btfss	___fladd@a+2,7
  6494  0594  2D96               	goto	u3231
  6495  0595  2D97               	goto	u3230
  6496  0596                     u3231:
  6497  0596  2D98               	goto	l2354
  6498  0597                     u3230:
  6499  0597                     l2352:
  6500  0597  1467               	bsf	___fladd@aexp,0
  6501  0598                     l2354:
  6502  0598  0867               	movf	___fladd@aexp,w
  6503  0599  1903               	btfsc	3,2
  6504  059A  2D9C               	goto	u3241
  6505  059B  2D9D               	goto	u3240
  6506  059C                     u3241:
  6507  059C  2DAD               	goto	l2364
  6508  059D                     u3240:
  6509  059D                     l2356:
  6510  059D  0A67               	incf	___fladd@aexp,w
  6511  059E  1D03               	btfss	3,2
  6512  059F  2DA1               	goto	u3251
  6513  05A0  2DA2               	goto	u3250
  6514  05A1                     u3251:
  6515  05A1  2DAA               	goto	l2360
  6516  05A2                     u3250:
  6517  05A2                     l2358:
  6518  05A2  3000               	movlw	0
  6519  05A3  00DD               	movwf	___fladd@a+3
  6520  05A4  3000               	movlw	0
  6521  05A5  00DC               	movwf	___fladd@a+2
  6522  05A6  3000               	movlw	0
  6523  05A7  00DB               	movwf	___fladd@a+1
  6524  05A8  3000               	movlw	0
  6525  05A9  00DA               	movwf	___fladd@a
  6526  05AA                     l2360:
  6527  05AA  17DC               	bsf	___fladd@a+2,7
  6528  05AB                     l2362:
  6529  05AB  01DD               	clrf	___fladd@a+3
  6530  05AC  2DB5               	goto	l648
  6531  05AD                     l2364:
  6532  05AD  3000               	movlw	0
  6533  05AE  00DD               	movwf	___fladd@a+3
  6534  05AF  3000               	movlw	0
  6535  05B0  00DC               	movwf	___fladd@a+2
  6536  05B1  3000               	movlw	0
  6537  05B2  00DB               	movwf	___fladd@a+1
  6538  05B3  3000               	movlw	0
  6539  05B4  00DA               	movwf	___fladd@a
  6540  05B5                     l648:
  6541  05B5  0868               	movf	___fladd@bexp,w
  6542  05B6  0267               	subwf	___fladd@aexp,w
  6543  05B7  1803               	skipnc
  6544  05B8  2DBA               	goto	u3261
  6545  05B9  2DBB               	goto	u3260
  6546  05BA                     u3261:
  6547  05BA  2DFF               	goto	l2400
  6548  05BB                     u3260:
  6549  05BB                     l2366:
  6550  05BB  1F66               	btfss	___fladd@signs,6
  6551  05BC  2DBE               	goto	u3271
  6552  05BD  2DBF               	goto	u3270
  6553  05BE                     u3271:
  6554  05BE  2DC3               	goto	l2370
  6555  05BF                     u3270:
  6556  05BF                     l2368:
  6557  05BF  3080               	movlw	128
  6558  05C0  00DE               	movwf	??___fladd
  6559  05C1  085E               	movf	??___fladd,w
  6560  05C2  06E6               	xorwf	___fladd@signs,f
  6561  05C3                     l2370:
  6562  05C3  0868               	movf	___fladd@bexp,w
  6563  05C4  00DE               	movwf	??___fladd
  6564  05C5  085E               	movf	??___fladd,w
  6565  05C6  00E9               	movwf	___fladd@grs
  6566  05C7                     l2372:
  6567  05C7  0867               	movf	___fladd@aexp,w
  6568  05C8  00DE               	movwf	??___fladd
  6569  05C9  085E               	movf	??___fladd,w
  6570  05CA  00E8               	movwf	___fladd@bexp
  6571  05CB                     l2374:
  6572  05CB  0869               	movf	___fladd@grs,w
  6573  05CC  00DE               	movwf	??___fladd
  6574  05CD  085E               	movf	??___fladd,w
  6575  05CE  00E7               	movwf	___fladd@aexp
  6576  05CF                     l2376:
  6577  05CF  0856               	movf	___fladd@b,w
  6578  05D0  00DE               	movwf	??___fladd
  6579  05D1  085E               	movf	??___fladd,w
  6580  05D2  00E9               	movwf	___fladd@grs
  6581  05D3                     l2378:
  6582  05D3  085A               	movf	___fladd@a,w
  6583  05D4  00DE               	movwf	??___fladd
  6584  05D5  085E               	movf	??___fladd,w
  6585  05D6  00D6               	movwf	___fladd@b
  6586  05D7                     l2380:
  6587  05D7  0869               	movf	___fladd@grs,w
  6588  05D8  00DE               	movwf	??___fladd
  6589  05D9  085E               	movf	??___fladd,w
  6590  05DA  00DA               	movwf	___fladd@a
  6591  05DB                     l2382:
  6592  05DB  0857               	movf	___fladd@b+1,w
  6593  05DC  00DE               	movwf	??___fladd
  6594  05DD  085E               	movf	??___fladd,w
  6595  05DE  00E9               	movwf	___fladd@grs
  6596  05DF                     l2384:
  6597  05DF  085B               	movf	___fladd@a+1,w
  6598  05E0  00DE               	movwf	??___fladd
  6599  05E1  085E               	movf	??___fladd,w
  6600  05E2  00D7               	movwf	___fladd@b+1
  6601  05E3                     l2386:
  6602  05E3  0869               	movf	___fladd@grs,w
  6603  05E4  00DE               	movwf	??___fladd
  6604  05E5  085E               	movf	??___fladd,w
  6605  05E6  00DB               	movwf	___fladd@a+1
  6606  05E7                     l2388:
  6607  05E7  0858               	movf	___fladd@b+2,w
  6608  05E8  00DE               	movwf	??___fladd
  6609  05E9  085E               	movf	??___fladd,w
  6610  05EA  00E9               	movwf	___fladd@grs
  6611  05EB                     l2390:
  6612  05EB  085C               	movf	___fladd@a+2,w
  6613  05EC  00DE               	movwf	??___fladd
  6614  05ED  085E               	movf	??___fladd,w
  6615  05EE  00D8               	movwf	___fladd@b+2
  6616  05EF                     l2392:
  6617  05EF  0869               	movf	___fladd@grs,w
  6618  05F0  00DE               	movwf	??___fladd
  6619  05F1  085E               	movf	??___fladd,w
  6620  05F2  00DC               	movwf	___fladd@a+2
  6621  05F3                     l2394:
  6622  05F3  0859               	movf	___fladd@b+3,w
  6623  05F4  00DE               	movwf	??___fladd
  6624  05F5  085E               	movf	??___fladd,w
  6625  05F6  00E9               	movwf	___fladd@grs
  6626  05F7                     l2396:
  6627  05F7  085D               	movf	___fladd@a+3,w
  6628  05F8  00DE               	movwf	??___fladd
  6629  05F9  085E               	movf	??___fladd,w
  6630  05FA  00D9               	movwf	___fladd@b+3
  6631  05FB                     l2398:
  6632  05FB  0869               	movf	___fladd@grs,w
  6633  05FC  00DE               	movwf	??___fladd
  6634  05FD  085E               	movf	??___fladd,w
  6635  05FE  00DD               	movwf	___fladd@a+3
  6636  05FF                     l2400:
  6637  05FF  01E9               	clrf	___fladd@grs
  6638  0600                     l2402:
  6639  0600  0867               	movf	___fladd@aexp,w
  6640  0601  00DE               	movwf	??___fladd
  6641  0602  01DF               	clrf	??___fladd+1
  6642  0603  085F               	movf	??___fladd+1,w
  6643  0604  00E1               	movwf	??___fladd+3
  6644  0605  0868               	movf	___fladd@bexp,w
  6645  0606  025E               	subwf	??___fladd,w
  6646  0607  00E0               	movwf	??___fladd+2
  6647  0608  1C03               	skipc
  6648  0609  03E1               	decf	??___fladd+3,f
  6649  060A  0861               	movf	??___fladd+3,w
  6650  060B  3A80               	xorlw	128
  6651  060C  00FF               	movwf	btemp+1
  6652  060D  3080               	movlw	128
  6653  060E  027F               	subwf	btemp+1,w
  6654  060F  1D03               	skipz
  6655  0610  2E13               	goto	u3285
  6656  0611  301A               	movlw	26
  6657  0612  0260               	subwf	??___fladd+2,w
  6658  0613                     u3285:
  6659  0613  1C03               	skipc
  6660  0614  2E16               	goto	u3281
  6661  0615  2E17               	goto	u3280
  6662  0616                     u3281:
  6663  0616  2E54               	goto	l2418
  6664  0617                     u3280:
  6665  0617                     l2404:
  6666  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6667  0618  1303               	bcf	3,6	;RP1=0, select bank0
  6668  0619  0859               	movf	___fladd@b+3,w
  6669  061A  0458               	iorwf	___fladd@b+2,w
  6670  061B  0457               	iorwf	___fladd@b+1,w
  6671  061C  0456               	iorwf	___fladd@b,w
  6672  061D  1D03               	skipz
  6673  061E  2E20               	goto	u3291
  6674  061F  2E22               	goto	u3290
  6675  0620                     u3291:
  6676  0620  3001               	movlw	1
  6677  0621  2E23               	goto	u3300
  6678  0622                     u3290:
  6679  0622  3000               	movlw	0
  6680  0623                     u3300:
  6681  0623  00DE               	movwf	??___fladd
  6682  0624  085E               	movf	??___fladd,w
  6683  0625  00E9               	movwf	___fladd@grs
  6684  0626  3000               	movlw	0
  6685  0627  00D9               	movwf	___fladd@b+3
  6686  0628  3000               	movlw	0
  6687  0629  00D8               	movwf	___fladd@b+2
  6688  062A  3000               	movlw	0
  6689  062B  00D7               	movwf	___fladd@b+1
  6690  062C  3000               	movlw	0
  6691  062D  00D6               	movwf	___fladd@b
  6692  062E  0867               	movf	___fladd@aexp,w
  6693  062F  00DE               	movwf	??___fladd
  6694  0630  085E               	movf	??___fladd,w
  6695  0631  00E8               	movwf	___fladd@bexp
  6696  0632  2E5C               	goto	l652
  6697  0633                     l654:
  6698  0633  1C69               	btfss	___fladd@grs,0
  6699  0634  2E36               	goto	u3311
  6700  0635  2E37               	goto	u3310
  6701  0636                     u3311:
  6702  0636  2E40               	goto	l2408
  6703  0637                     u3310:
  6704  0637                     l2406:
  6705  0637  0869               	movf	___fladd@grs,w
  6706  0638  00DE               	movwf	??___fladd
  6707  0639  1003               	clrc
  6708  063A  0C5E               	rrf	??___fladd,w
  6709  063B  3801               	iorlw	1
  6710  063C  00DF               	movwf	??___fladd+1
  6711  063D  085F               	movf	??___fladd+1,w
  6712  063E  00E9               	movwf	___fladd@grs
  6713  063F  2E42               	goto	l2410
  6714  0640                     l2408:
  6715  0640  1003               	clrc
  6716  0641  0CE9               	rrf	___fladd@grs,f
  6717  0642                     l2410:
  6718  0642  1C56               	btfss	___fladd@b,0
  6719  0643  2E45               	goto	u3321
  6720  0644  2E46               	goto	u3320
  6721  0645                     u3321:
  6722  0645  2E47               	goto	l2414
  6723  0646                     u3320:
  6724  0646                     l2412:
  6725  0646  17E9               	bsf	___fladd@grs,7
  6726  0647                     l2414:
  6727  0647  3001               	movlw	1
  6728  0648  00DE               	movwf	??___fladd
  6729  0649                     u3335:
  6730  0649  0D59               	rlf	___fladd@b+3,w
  6731  064A  0CD9               	rrf	___fladd@b+3,f
  6732  064B  0CD8               	rrf	___fladd@b+2,f
  6733  064C  0CD7               	rrf	___fladd@b+1,f
  6734  064D  0CD6               	rrf	___fladd@b,f
  6735  064E  0BDE               	decfsz	??___fladd& (0+127),f
  6736  064F  2E49               	goto	u3335
  6737  0650                     l2416:
  6738  0650  3001               	movlw	1
  6739  0651  00DE               	movwf	??___fladd
  6740  0652  085E               	movf	??___fladd,w
  6741  0653  07E8               	addwf	___fladd@bexp,f
  6742  0654                     l2418:
  6743  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6744  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6745  0656  0867               	movf	___fladd@aexp,w
  6746  0657  0268               	subwf	___fladd@bexp,w
  6747  0658  1C03               	skipc
  6748  0659  2E5B               	goto	u3341
  6749  065A  2E5C               	goto	u3340
  6750  065B                     u3341:
  6751  065B  2E33               	goto	l654
  6752  065C                     u3340:
  6753  065C                     l652:
  6754  065C  1B66               	btfsc	___fladd@signs,6
  6755  065D  2E5F               	goto	u3351
  6756  065E  2E60               	goto	u3350
  6757  065F                     u3351:
  6758  065F  2EAB               	goto	l2444
  6759  0660                     u3350:
  6760  0660                     l2420:
  6761  0660  0868               	movf	___fladd@bexp,w
  6762  0661  1D03               	btfss	3,2
  6763  0662  2E64               	goto	u3361
  6764  0663  2E65               	goto	u3360
  6765  0664                     u3361:
  6766  0664  2E6E               	goto	l2426
  6767  0665                     u3360:
  6768  0665                     l2422:
  6769  0665  3000               	movlw	0
  6770  0666  00D9               	movwf	?___fladd+3
  6771  0667  3000               	movlw	0
  6772  0668  00D8               	movwf	?___fladd+2
  6773  0669  3000               	movlw	0
  6774  066A  00D7               	movwf	?___fladd+1
  6775  066B  3000               	movlw	0
  6776  066C  00D6               	movwf	?___fladd
  6777  066D  2FD9               	goto	l661
  6778  066E                     l2426:
  6779  066E  085A               	movf	___fladd@a,w
  6780  066F  07D6               	addwf	___fladd@b,f
  6781  0670  085B               	movf	___fladd@a+1,w
  6782  0671  1103               	clrz
  6783  0672  1803               	skipnc
  6784  0673  3E01               	addlw	1
  6785  0674  1903               	skipnz
  6786  0675  2E77               	goto	u3371
  6787  0676  07D7               	addwf	___fladd@b+1,f
  6788  0677                     u3371:
  6789  0677  085C               	movf	___fladd@a+2,w
  6790  0678  1103               	clrz
  6791  0679  1803               	skipnc
  6792  067A  3E01               	addlw	1
  6793  067B  1903               	skipnz
  6794  067C  2E7E               	goto	u3372
  6795  067D  07D8               	addwf	___fladd@b+2,f
  6796  067E                     u3372:
  6797  067E  085D               	movf	___fladd@a+3,w
  6798  067F  1103               	clrz
  6799  0680  1803               	skipnc
  6800  0681  3E01               	addlw	1
  6801  0682  1903               	skipnz
  6802  0683  2E85               	goto	u3373
  6803  0684  07D9               	addwf	___fladd@b+3,f
  6804  0685                     u3373:
  6805  0685                     l2428:
  6806  0685  1C59               	btfss	___fladd@b+3,0
  6807  0686  2E88               	goto	u3381
  6808  0687  2E89               	goto	u3380
  6809  0688                     u3381:
  6810  0688  2F5F               	goto	l2478
  6811  0689                     u3380:
  6812  0689                     l2430:
  6813  0689  1C69               	btfss	___fladd@grs,0
  6814  068A  2E8C               	goto	u3391
  6815  068B  2E8D               	goto	u3390
  6816  068C                     u3391:
  6817  068C  2E96               	goto	l2434
  6818  068D                     u3390:
  6819  068D                     l2432:
  6820  068D  0869               	movf	___fladd@grs,w
  6821  068E  00DE               	movwf	??___fladd
  6822  068F  1003               	clrc
  6823  0690  0C5E               	rrf	??___fladd,w
  6824  0691  3801               	iorlw	1
  6825  0692  00DF               	movwf	??___fladd+1
  6826  0693  085F               	movf	??___fladd+1,w
  6827  0694  00E9               	movwf	___fladd@grs
  6828  0695  2E98               	goto	l2436
  6829  0696                     l2434:
  6830  0696  1003               	clrc
  6831  0697  0CE9               	rrf	___fladd@grs,f
  6832  0698                     l2436:
  6833  0698  1C56               	btfss	___fladd@b,0
  6834  0699  2E9B               	goto	u3401
  6835  069A  2E9C               	goto	u3400
  6836  069B                     u3401:
  6837  069B  2E9D               	goto	l2440
  6838  069C                     u3400:
  6839  069C                     l2438:
  6840  069C  17E9               	bsf	___fladd@grs,7
  6841  069D                     l2440:
  6842  069D  3001               	movlw	1
  6843  069E  00DE               	movwf	??___fladd
  6844  069F                     u3415:
  6845  069F  0D59               	rlf	___fladd@b+3,w
  6846  06A0  0CD9               	rrf	___fladd@b+3,f
  6847  06A1  0CD8               	rrf	___fladd@b+2,f
  6848  06A2  0CD7               	rrf	___fladd@b+1,f
  6849  06A3  0CD6               	rrf	___fladd@b,f
  6850  06A4  0BDE               	decfsz	??___fladd& (0+127),f
  6851  06A5  2E9F               	goto	u3415
  6852  06A6                     l2442:
  6853  06A6  3001               	movlw	1
  6854  06A7  00DE               	movwf	??___fladd
  6855  06A8  085E               	movf	??___fladd,w
  6856  06A9  07E8               	addwf	___fladd@bexp,f
  6857  06AA  2F5F               	goto	l2478
  6858  06AB                     l2444:
  6859  06AB  0859               	movf	___fladd@b+3,w
  6860  06AC  3A80               	xorlw	128
  6861  06AD  00FF               	movwf	btemp+1
  6862  06AE  085D               	movf	___fladd@a+3,w
  6863  06AF  3A80               	xorlw	128
  6864  06B0  027F               	subwf	btemp+1,w
  6865  06B1  1D03               	skipz
  6866  06B2  2EBD               	goto	u3423
  6867  06B3  085C               	movf	___fladd@a+2,w
  6868  06B4  0258               	subwf	___fladd@b+2,w
  6869  06B5  1D03               	skipz
  6870  06B6  2EBD               	goto	u3423
  6871  06B7  085B               	movf	___fladd@a+1,w
  6872  06B8  0257               	subwf	___fladd@b+1,w
  6873  06B9  1D03               	skipz
  6874  06BA  2EBD               	goto	u3423
  6875  06BB  085A               	movf	___fladd@a,w
  6876  06BC  0256               	subwf	___fladd@b,w
  6877  06BD                     u3423:
  6878  06BD  1803               	skipnc
  6879  06BE  2EC0               	goto	u3421
  6880  06BF  2EC1               	goto	u3420
  6881  06C0                     u3421:
  6882  06C0  2F19               	goto	l2454
  6883  06C1                     u3420:
  6884  06C1                     l2446:
  6885  06C1  30FF               	movlw	255
  6886  06C2  00DE               	movwf	??___fladd
  6887  06C3  30FF               	movlw	255
  6888  06C4  00DF               	movwf	??___fladd+1
  6889  06C5  30FF               	movlw	255
  6890  06C6  00E0               	movwf	??___fladd+2
  6891  06C7  30FF               	movlw	255
  6892  06C8  00E1               	movwf	??___fladd+3
  6893  06C9  085A               	movf	___fladd@a,w
  6894  06CA  00E2               	movwf	??___fladd+4
  6895  06CB  085B               	movf	___fladd@a+1,w
  6896  06CC  00E3               	movwf	??___fladd+5
  6897  06CD  085C               	movf	___fladd@a+2,w
  6898  06CE  00E4               	movwf	??___fladd+6
  6899  06CF  085D               	movf	___fladd@a+3,w
  6900  06D0  00E5               	movwf	??___fladd+7
  6901  06D1  0856               	movf	___fladd@b,w
  6902  06D2  02E2               	subwf	??___fladd+4,f
  6903  06D3  0857               	movf	___fladd@b+1,w
  6904  06D4  1C03               	skipc
  6905  06D5  0F57               	incfsz	___fladd@b+1,w
  6906  06D6  2ED8               	goto	u3431
  6907  06D7  2ED9               	goto	u3432
  6908  06D8                     u3431:
  6909  06D8  02E3               	subwf	??___fladd+5,f
  6910  06D9                     u3432:
  6911  06D9  0858               	movf	___fladd@b+2,w
  6912  06DA  1C03               	skipc
  6913  06DB  0F58               	incfsz	___fladd@b+2,w
  6914  06DC  2EDE               	goto	u3433
  6915  06DD  2EDF               	goto	u3434
  6916  06DE                     u3433:
  6917  06DE  02E4               	subwf	??___fladd+6,f
  6918  06DF                     u3434:
  6919  06DF  0859               	movf	___fladd@b+3,w
  6920  06E0  1C03               	skipc
  6921  06E1  0F59               	incfsz	___fladd@b+3,w
  6922  06E2  2EE4               	goto	u3435
  6923  06E3  2EE5               	goto	u3436
  6924  06E4                     u3435:
  6925  06E4  02E5               	subwf	??___fladd+7,f
  6926  06E5                     u3436:
  6927  06E5  0862               	movf	??___fladd+4,w
  6928  06E6  07DE               	addwf	??___fladd,f
  6929  06E7  0863               	movf	??___fladd+5,w
  6930  06E8  1803               	skipnc
  6931  06E9  0F63               	incfsz	??___fladd+5,w
  6932  06EA  2EEC               	goto	u3440
  6933  06EB  2EED               	goto	u3441
  6934  06EC                     u3440:
  6935  06EC  07DF               	addwf	??___fladd+1,f
  6936  06ED                     u3441:
  6937  06ED  0864               	movf	??___fladd+6,w
  6938  06EE  1803               	skipnc
  6939  06EF  0F64               	incfsz	??___fladd+6,w
  6940  06F0  2EF2               	goto	u3442
  6941  06F1  2EF3               	goto	u3443
  6942  06F2                     u3442:
  6943  06F2  07E0               	addwf	??___fladd+2,f
  6944  06F3                     u3443:
  6945  06F3  0865               	movf	??___fladd+7,w
  6946  06F4  1803               	skipnc
  6947  06F5  0A65               	incf	??___fladd+7,w
  6948  06F6  07E1               	addwf	??___fladd+3,f
  6949  06F7  0861               	movf	??___fladd+3,w
  6950  06F8  00D9               	movwf	___fladd@b+3
  6951  06F9  0860               	movf	??___fladd+2,w
  6952  06FA  00D8               	movwf	___fladd@b+2
  6953  06FB  085F               	movf	??___fladd+1,w
  6954  06FC  00D7               	movwf	___fladd@b+1
  6955  06FD  085E               	movf	??___fladd,w
  6956  06FE  00D6               	movwf	___fladd@b
  6957  06FF                     l2448:
  6958  06FF  3080               	movlw	128
  6959  0700  00DE               	movwf	??___fladd
  6960  0701  085E               	movf	??___fladd,w
  6961  0702  06E6               	xorwf	___fladd@signs,f
  6962  0703  09E9               	comf	___fladd@grs,f
  6963  0704  0AE9               	incf	___fladd@grs,f
  6964  0705                     l2450:
  6965  0705  0869               	movf	___fladd@grs,w
  6966  0706  1D03               	btfss	3,2
  6967  0707  2F09               	goto	u3451
  6968  0708  2F0A               	goto	u3450
  6969  0709                     u3451:
  6970  0709  2F27               	goto	l669
  6971  070A                     u3450:
  6972  070A                     l2452:
  6973  070A  3001               	movlw	1
  6974  070B  07D6               	addwf	___fladd@b,f
  6975  070C  3000               	movlw	0
  6976  070D  1803               	skipnc
  6977  070E  3001               	movlw	1
  6978  070F  07D7               	addwf	___fladd@b+1,f
  6979  0710  3000               	movlw	0
  6980  0711  1803               	skipnc
  6981  0712  3001               	movlw	1
  6982  0713  07D8               	addwf	___fladd@b+2,f
  6983  0714  3000               	movlw	0
  6984  0715  1803               	skipnc
  6985  0716  3001               	movlw	1
  6986  0717  07D9               	addwf	___fladd@b+3,f
  6987  0718  2F27               	goto	l669
  6988  0719                     l2454:
  6989  0719  085A               	movf	___fladd@a,w
  6990  071A  02D6               	subwf	___fladd@b,f
  6991  071B  085B               	movf	___fladd@a+1,w
  6992  071C  1C03               	skipc
  6993  071D  0F5B               	incfsz	___fladd@a+1,w
  6994  071E  02D7               	subwf	___fladd@b+1,f
  6995  071F  085C               	movf	___fladd@a+2,w
  6996  0720  1C03               	skipc
  6997  0721  0F5C               	incfsz	___fladd@a+2,w
  6998  0722  02D8               	subwf	___fladd@b+2,f
  6999  0723  085D               	movf	___fladd@a+3,w
  7000  0724  1C03               	skipc
  7001  0725  0F5D               	incfsz	___fladd@a+3,w
  7002  0726  02D9               	subwf	___fladd@b+3,f
  7003  0727                     l669:
  7004  0727  0859               	movf	___fladd@b+3,w
  7005  0728  0458               	iorwf	___fladd@b+2,w
  7006  0729  0457               	iorwf	___fladd@b+1,w
  7007  072A  0456               	iorwf	___fladd@b,w
  7008  072B  1D03               	skipz
  7009  072C  2F2E               	goto	u3461
  7010  072D  2F2F               	goto	u3460
  7011  072E                     u3461:
  7012  072E  2F5B               	goto	l2476
  7013  072F                     u3460:
  7014  072F                     l2456:
  7015  072F  0869               	movf	___fladd@grs,w
  7016  0730  1D03               	btfss	3,2
  7017  0731  2F33               	goto	u3471
  7018  0732  2F34               	goto	u3470
  7019  0733                     u3471:
  7020  0733  2F5B               	goto	l2476
  7021  0734                     u3470:
  7022  0734                     l2458:
  7023  0734  3000               	movlw	0
  7024  0735  00D9               	movwf	?___fladd+3
  7025  0736  3000               	movlw	0
  7026  0737  00D8               	movwf	?___fladd+2
  7027  0738  3000               	movlw	0
  7028  0739  00D7               	movwf	?___fladd+1
  7029  073A  3000               	movlw	0
  7030  073B  00D6               	movwf	?___fladd
  7031  073C  2FD9               	goto	l661
  7032  073D                     l2462:
  7033  073D  3001               	movlw	1
  7034  073E  00DE               	movwf	??___fladd
  7035  073F                     u3485:
  7036  073F  1003               	clrc
  7037  0740  0DD6               	rlf	___fladd@b,f
  7038  0741  0DD7               	rlf	___fladd@b+1,f
  7039  0742  0DD8               	rlf	___fladd@b+2,f
  7040  0743  0DD9               	rlf	___fladd@b+3,f
  7041  0744  0BDE               	decfsz	??___fladd,f
  7042  0745  2F3F               	goto	u3485
  7043  0746                     l2464:
  7044  0746  1FE9               	btfss	___fladd@grs,7
  7045  0747  2F49               	goto	u3491
  7046  0748  2F4A               	goto	u3490
  7047  0749                     u3491:
  7048  0749  2F4B               	goto	l673
  7049  074A                     u3490:
  7050  074A                     l2466:
  7051  074A  1456               	bsf	___fladd@b,0
  7052  074B                     l673:
  7053  074B  1C69               	btfss	___fladd@grs,0
  7054  074C  2F4E               	goto	u3501
  7055  074D  2F4F               	goto	u3500
  7056  074E                     u3501:
  7057  074E  2F52               	goto	l2470
  7058  074F                     u3500:
  7059  074F                     l2468:
  7060  074F  1403               	setc
  7061  0750  0DE9               	rlf	___fladd@grs,f
  7062  0751  2F54               	goto	l2472
  7063  0752                     l2470:
  7064  0752  1003               	clrc
  7065  0753  0DE9               	rlf	___fladd@grs,f
  7066  0754                     l2472:
  7067  0754  0868               	movf	___fladd@bexp,w
  7068  0755  1903               	btfsc	3,2
  7069  0756  2F58               	goto	u3511
  7070  0757  2F59               	goto	u3510
  7071  0758                     u3511:
  7072  0758  2F5B               	goto	l2476
  7073  0759                     u3510:
  7074  0759                     l2474:
  7075  0759  3001               	movlw	1
  7076  075A  02E8               	subwf	___fladd@bexp,f
  7077  075B                     l2476:
  7078  075B  1FD8               	btfss	___fladd@b+2,7
  7079  075C  2F5E               	goto	u3521
  7080  075D  2F5F               	goto	u3520
  7081  075E                     u3521:
  7082  075E  2F3D               	goto	l2462
  7083  075F                     u3520:
  7084  075F                     l2478:
  7085  075F  01E7               	clrf	___fladd@aexp
  7086  0760                     l2480:
  7087  0760  1FE9               	btfss	___fladd@grs,7
  7088  0761  2F63               	goto	u3531
  7089  0762  2F64               	goto	u3530
  7090  0763                     u3531:
  7091  0763  2F72               	goto	l2488
  7092  0764                     u3530:
  7093  0764                     l2482:
  7094  0764  0869               	movf	___fladd@grs,w
  7095  0765  397F               	andlw	127
  7096  0766  1903               	btfsc	3,2
  7097  0767  2F69               	goto	u3541
  7098  0768  2F6A               	goto	u3540
  7099  0769                     u3541:
  7100  0769  2F6D               	goto	l679
  7101  076A                     u3540:
  7102  076A                     l2484:
  7103  076A  01E7               	clrf	___fladd@aexp
  7104  076B  0AE7               	incf	___fladd@aexp,f
  7105  076C  2F72               	goto	l2488
  7106  076D                     l679:
  7107  076D  1C56               	btfss	___fladd@b,0
  7108  076E  2F70               	goto	u3551
  7109  076F  2F71               	goto	u3550
  7110  0770                     u3551:
  7111  0770  2F72               	goto	l2488
  7112  0771                     u3550:
  7113  0771  2F6A               	goto	l2484
  7114  0772                     l2488:
  7115  0772  0867               	movf	___fladd@aexp,w
  7116  0773  1903               	btfsc	3,2
  7117  0774  2F76               	goto	u3561
  7118  0775  2F77               	goto	u3560
  7119  0776                     u3561:
  7120  0776  2FAB               	goto	l682
  7121  0777                     u3560:
  7122  0777                     l2490:
  7123  0777  3001               	movlw	1
  7124  0778  07D6               	addwf	___fladd@b,f
  7125  0779  3000               	movlw	0
  7126  077A  1803               	skipnc
  7127  077B  3001               	movlw	1
  7128  077C  07D7               	addwf	___fladd@b+1,f
  7129  077D  3000               	movlw	0
  7130  077E  1803               	skipnc
  7131  077F  3001               	movlw	1
  7132  0780  07D8               	addwf	___fladd@b+2,f
  7133  0781  3000               	movlw	0
  7134  0782  1803               	skipnc
  7135  0783  3001               	movlw	1
  7136  0784  07D9               	addwf	___fladd@b+3,f
  7137  0785                     l2492:
  7138  0785  1C59               	btfss	___fladd@b+3,0
  7139  0786  2F88               	goto	u3571
  7140  0787  2F89               	goto	u3570
  7141  0788                     u3571:
  7142  0788  2FAB               	goto	l682
  7143  0789                     u3570:
  7144  0789                     l2494:
  7145  0789  0856               	movf	___fladd@b,w
  7146  078A  00DE               	movwf	??___fladd
  7147  078B  0857               	movf	___fladd@b+1,w
  7148  078C  00DF               	movwf	??___fladd+1
  7149  078D  0858               	movf	___fladd@b+2,w
  7150  078E  00E0               	movwf	??___fladd+2
  7151  078F  0859               	movf	___fladd@b+3,w
  7152  0790  00E1               	movwf	??___fladd+3
  7153  0791  3001               	movlw	1
  7154  0792  00E2               	movwf	??___fladd+4
  7155  0793                     u3585:
  7156  0793  0D61               	rlf	??___fladd+3,w
  7157  0794  0CE1               	rrf	??___fladd+3,f
  7158  0795  0CE0               	rrf	??___fladd+2,f
  7159  0796  0CDF               	rrf	??___fladd+1,f
  7160  0797  0CDE               	rrf	??___fladd,f
  7161  0798                     u3580:
  7162  0798  0BE2               	decfsz	??___fladd+4,f
  7163  0799  2F93               	goto	u3585
  7164  079A  0861               	movf	??___fladd+3,w
  7165  079B  00D9               	movwf	___fladd@b+3
  7166  079C  0860               	movf	??___fladd+2,w
  7167  079D  00D8               	movwf	___fladd@b+2
  7168  079E  085F               	movf	??___fladd+1,w
  7169  079F  00D7               	movwf	___fladd@b+1
  7170  07A0  085E               	movf	??___fladd,w
  7171  07A1  00D6               	movwf	___fladd@b
  7172  07A2  0A68               	incf	___fladd@bexp,w
  7173  07A3  1903               	btfsc	3,2
  7174  07A4  2FA6               	goto	u3591
  7175  07A5  2FA7               	goto	u3590
  7176  07A6                     u3591:
  7177  07A6  2FAB               	goto	l682
  7178  07A7                     u3590:
  7179  07A7                     l2496:
  7180  07A7  3001               	movlw	1
  7181  07A8  00DE               	movwf	??___fladd
  7182  07A9  085E               	movf	??___fladd,w
  7183  07AA  07E8               	addwf	___fladd@bexp,f
  7184  07AB                     l682:
  7185  07AB  0A68               	incf	___fladd@bexp,w
  7186  07AC  1903               	btfsc	3,2
  7187  07AD  2FAF               	goto	u3601
  7188  07AE  2FB0               	goto	u3600
  7189  07AF                     u3601:
  7190  07AF  2FB5               	goto	l2500
  7191  07B0                     u3600:
  7192  07B0                     l2498:
  7193  07B0  0868               	movf	___fladd@bexp,w
  7194  07B1  1D03               	btfss	3,2
  7195  07B2  2FB4               	goto	u3611
  7196  07B3  2FB5               	goto	u3610
  7197  07B4                     u3611:
  7198  07B4  2FC3               	goto	l2506
  7199  07B5                     u3610:
  7200  07B5                     l2500:
  7201  07B5  3000               	movlw	0
  7202  07B6  00D9               	movwf	___fladd@b+3
  7203  07B7  3000               	movlw	0
  7204  07B8  00D8               	movwf	___fladd@b+2
  7205  07B9  3000               	movlw	0
  7206  07BA  00D7               	movwf	___fladd@b+1
  7207  07BB  3000               	movlw	0
  7208  07BC  00D6               	movwf	___fladd@b
  7209  07BD                     l2502:
  7210  07BD  0868               	movf	___fladd@bexp,w
  7211  07BE  1D03               	btfss	3,2
  7212  07BF  2FC1               	goto	u3621
  7213  07C0  2FC2               	goto	u3620
  7214  07C1                     u3621:
  7215  07C1  2FC3               	goto	l2506
  7216  07C2                     u3620:
  7217  07C2                     l2504:
  7218  07C2  01E6               	clrf	___fladd@signs
  7219  07C3                     l2506:
  7220  07C3  1C68               	btfss	___fladd@bexp,0
  7221  07C4  2FC6               	goto	u3631
  7222  07C5  2FC7               	goto	u3630
  7223  07C6                     u3631:
  7224  07C6  2FC9               	goto	l2510
  7225  07C7                     u3630:
  7226  07C7                     l2508:
  7227  07C7  17D8               	bsf	___fladd@b+2,7
  7228  07C8  2FCD               	goto	l690
  7229  07C9                     l2510:
  7230  07C9  307F               	movlw	127
  7231  07CA  00DE               	movwf	??___fladd
  7232  07CB  085E               	movf	??___fladd,w
  7233  07CC  05D8               	andwf	___fladd@b+2,f
  7234  07CD                     l690:
  7235  07CD  0868               	movf	___fladd@bexp,w
  7236  07CE  00DE               	movwf	??___fladd
  7237  07CF  1003               	clrc
  7238  07D0  0C5E               	rrf	??___fladd,w
  7239  07D1  00DF               	movwf	??___fladd+1
  7240  07D2  085F               	movf	??___fladd+1,w
  7241  07D3  00D9               	movwf	___fladd@b+3
  7242  07D4                     l2512:
  7243  07D4  1FE6               	btfss	___fladd@signs,7
  7244  07D5  2FD7               	goto	u3641
  7245  07D6  2FD8               	goto	u3640
  7246  07D7                     u3641:
  7247  07D7  2FD9               	goto	l691
  7248  07D8                     u3640:
  7249  07D8                     l2514:
  7250  07D8  17D9               	bsf	___fladd@b+3,7
  7251  07D9                     l691:
  7252  07D9                     l661:
  7253  07D9  0008               	return
  7254  07DA                     __end_of___fladd:
  7255                           
  7256                           	psect	text19
  7257  109F                     __ptext19:	
  7258 ;; *************** function ___flneg *****************
  7259 ;; Defined at:
  7260 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  f1              4    3[COMMON] unsigned char 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;		None
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  4    3[COMMON] unsigned char 
  7267 ;; Registers used:
  7268 ;;		wreg
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7274 ;;      Params:         4       0       0       0       0
  7275 ;;      Locals:         0       0       0       0       0
  7276 ;;      Temps:          0       0       0       0       0
  7277 ;;      Totals:         4       0       0       0       0
  7278 ;;Total ram usage:        4 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    1
  7281 ;; This function calls:
  7282 ;;		Nothing
  7283 ;; This function is called by:
  7284 ;;		_sprintf
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           
  7289                           ;psect for function ___flneg
  7290  109F                     ___flneg:
  7291  109F                     l2904:	
  7292                           ;incstack = 0
  7293                           ; Regs used in ___flneg: [wreg]
  7294                           
  7295  109F  0876               	movf	___flneg@f1+3,w
  7296  10A0  0475               	iorwf	___flneg@f1+2,w
  7297  10A1  0474               	iorwf	___flneg@f1+1,w
  7298  10A2  0473               	iorwf	___flneg@f1,w
  7299  10A3  1903               	skipnz
  7300  10A4  28A6               	goto	u4771
  7301  10A5  28A7               	goto	u4770
  7302  10A6                     u4771:
  7303  10A6  28A9               	goto	l2908
  7304  10A7                     u4770:
  7305  10A7                     l2906:
  7306  10A7  3080               	movlw	128
  7307  10A8  06F6               	xorwf	___flneg@f1+3,f
  7308  10A9                     l2908:
  7309  10A9                     l520:
  7310  10A9  0008               	return
  7311  10AA                     __end_of___flneg:
  7312                           
  7313                           	psect	text20
  7314  10D3                     __ptext20:	
  7315 ;; *************** function ___flge *****************
  7316 ;; Defined at:
  7317 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  ff1             4    3[COMMON] unsigned char 
  7320 ;;  ff2             4    7[COMMON] unsigned char 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;		None               void
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7332 ;;      Params:         8       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0
  7334 ;;      Temps:          0       4       0       0       0
  7335 ;;      Totals:         8       4       0       0       0
  7336 ;;Total ram usage:       12 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:    1
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_sprintf
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           
  7347                           ;psect for function ___flge
  7348  10D3                     ___flge:
  7349  10D3                     l2884:	
  7350                           ;incstack = 0
  7351                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7352                           
  7353  10D3  3000               	movlw	0
  7354  10D4  0573               	andwf	___flge@ff1,w
  7355  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  7356  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  7357  10D7  00A0               	movwf	??___flge
  7358  10D8  3000               	movlw	0
  7359  10D9  0574               	andwf	___flge@ff1+1,w
  7360  10DA  00A1               	movwf	??___flge+1
  7361  10DB  3080               	movlw	128
  7362  10DC  0575               	andwf	___flge@ff1+2,w
  7363  10DD  00A2               	movwf	??___flge+2
  7364  10DE  307F               	movlw	127
  7365  10DF  0576               	andwf	___flge@ff1+3,w
  7366  10E0  00A3               	movwf	??___flge+3
  7367  10E1  0823               	movf	??___flge+3,w
  7368  10E2  0422               	iorwf	??___flge+2,w
  7369  10E3  0421               	iorwf	??___flge+1,w
  7370  10E4  0420               	iorwf	??___flge,w
  7371  10E5  1D03               	skipz
  7372  10E6  28E8               	goto	u4701
  7373  10E7  28E9               	goto	u4700
  7374  10E8                     u4701:
  7375  10E8  28F1               	goto	l512
  7376  10E9                     u4700:
  7377  10E9                     l2886:
  7378  10E9  3000               	movlw	0
  7379  10EA  00F6               	movwf	___flge@ff1+3
  7380  10EB  3000               	movlw	0
  7381  10EC  00F5               	movwf	___flge@ff1+2
  7382  10ED  3000               	movlw	0
  7383  10EE  00F4               	movwf	___flge@ff1+1
  7384  10EF  3000               	movlw	0
  7385  10F0  00F3               	movwf	___flge@ff1
  7386  10F1                     l512:
  7387  10F1  3000               	movlw	0
  7388  10F2  0577               	andwf	___flge@ff2,w
  7389  10F3  00A0               	movwf	??___flge
  7390  10F4  3000               	movlw	0
  7391  10F5  0578               	andwf	___flge@ff2+1,w
  7392  10F6  00A1               	movwf	??___flge+1
  7393  10F7  3080               	movlw	128
  7394  10F8  0579               	andwf	___flge@ff2+2,w
  7395  10F9  00A2               	movwf	??___flge+2
  7396  10FA  307F               	movlw	127
  7397  10FB  057A               	andwf	___flge@ff2+3,w
  7398  10FC  00A3               	movwf	??___flge+3
  7399  10FD  0823               	movf	??___flge+3,w
  7400  10FE  0422               	iorwf	??___flge+2,w
  7401  10FF  0421               	iorwf	??___flge+1,w
  7402  1100  0420               	iorwf	??___flge,w
  7403  1101  1D03               	skipz
  7404  1102  2904               	goto	u4711
  7405  1103  2905               	goto	u4710
  7406  1104                     u4711:
  7407  1104  290D               	goto	l2890
  7408  1105                     u4710:
  7409  1105                     l2888:
  7410  1105  3000               	movlw	0
  7411  1106  00FA               	movwf	___flge@ff2+3
  7412  1107  3000               	movlw	0
  7413  1108  00F9               	movwf	___flge@ff2+2
  7414  1109  3000               	movlw	0
  7415  110A  00F8               	movwf	___flge@ff2+1
  7416  110B  3000               	movlw	0
  7417  110C  00F7               	movwf	___flge@ff2
  7418  110D                     l2890:
  7419  110D  1FF6               	btfss	___flge@ff1+3,7
  7420  110E  2910               	goto	u4721
  7421  110F  2911               	goto	u4720
  7422  1110                     u4721:
  7423  1110  2935               	goto	l2894
  7424  1111                     u4720:
  7425  1111                     l2892:
  7426  1111  3000               	movlw	0
  7427  1112  00A0               	movwf	??___flge
  7428  1113  3000               	movlw	0
  7429  1114  00A1               	movwf	??___flge+1
  7430  1115  3000               	movlw	0
  7431  1116  00A2               	movwf	??___flge+2
  7432  1117  3080               	movlw	128
  7433  1118  00A3               	movwf	??___flge+3
  7434  1119  0873               	movf	___flge@ff1,w
  7435  111A  02A0               	subwf	??___flge,f
  7436  111B  0874               	movf	___flge@ff1+1,w
  7437  111C  1C03               	skipc
  7438  111D  0F74               	incfsz	___flge@ff1+1,w
  7439  111E  2920               	goto	u4731
  7440  111F  2921               	goto	u4732
  7441  1120                     u4731:
  7442  1120  02A1               	subwf	??___flge+1,f
  7443  1121                     u4732:
  7444  1121  0875               	movf	___flge@ff1+2,w
  7445  1122  1C03               	skipc
  7446  1123  0F75               	incfsz	___flge@ff1+2,w
  7447  1124  2926               	goto	u4733
  7448  1125  2927               	goto	u4734
  7449  1126                     u4733:
  7450  1126  02A2               	subwf	??___flge+2,f
  7451  1127                     u4734:
  7452  1127  0876               	movf	___flge@ff1+3,w
  7453  1128  1C03               	skipc
  7454  1129  0F76               	incfsz	___flge@ff1+3,w
  7455  112A  292C               	goto	u4735
  7456  112B  292D               	goto	u4736
  7457  112C                     u4735:
  7458  112C  02A3               	subwf	??___flge+3,f
  7459  112D                     u4736:
  7460  112D  0823               	movf	??___flge+3,w
  7461  112E  00F6               	movwf	___flge@ff1+3
  7462  112F  0822               	movf	??___flge+2,w
  7463  1130  00F5               	movwf	___flge@ff1+2
  7464  1131  0821               	movf	??___flge+1,w
  7465  1132  00F4               	movwf	___flge@ff1+1
  7466  1133  0820               	movf	??___flge,w
  7467  1134  00F3               	movwf	___flge@ff1
  7468  1135                     l2894:
  7469  1135  1FFA               	btfss	___flge@ff2+3,7
  7470  1136  2938               	goto	u4741
  7471  1137  2939               	goto	u4740
  7472  1138                     u4741:
  7473  1138  295D               	goto	l515
  7474  1139                     u4740:
  7475  1139                     l2896:
  7476  1139  3000               	movlw	0
  7477  113A  00A0               	movwf	??___flge
  7478  113B  3000               	movlw	0
  7479  113C  00A1               	movwf	??___flge+1
  7480  113D  3000               	movlw	0
  7481  113E  00A2               	movwf	??___flge+2
  7482  113F  3080               	movlw	128
  7483  1140  00A3               	movwf	??___flge+3
  7484  1141  0877               	movf	___flge@ff2,w
  7485  1142  02A0               	subwf	??___flge,f
  7486  1143  0878               	movf	___flge@ff2+1,w
  7487  1144  1C03               	skipc
  7488  1145  0F78               	incfsz	___flge@ff2+1,w
  7489  1146  2948               	goto	u4751
  7490  1147  2949               	goto	u4752
  7491  1148                     u4751:
  7492  1148  02A1               	subwf	??___flge+1,f
  7493  1149                     u4752:
  7494  1149  0879               	movf	___flge@ff2+2,w
  7495  114A  1C03               	skipc
  7496  114B  0F79               	incfsz	___flge@ff2+2,w
  7497  114C  294E               	goto	u4753
  7498  114D  294F               	goto	u4754
  7499  114E                     u4753:
  7500  114E  02A2               	subwf	??___flge+2,f
  7501  114F                     u4754:
  7502  114F  087A               	movf	___flge@ff2+3,w
  7503  1150  1C03               	skipc
  7504  1151  0F7A               	incfsz	___flge@ff2+3,w
  7505  1152  2954               	goto	u4755
  7506  1153  2955               	goto	u4756
  7507  1154                     u4755:
  7508  1154  02A3               	subwf	??___flge+3,f
  7509  1155                     u4756:
  7510  1155  0823               	movf	??___flge+3,w
  7511  1156  00FA               	movwf	___flge@ff2+3
  7512  1157  0822               	movf	??___flge+2,w
  7513  1158  00F9               	movwf	___flge@ff2+2
  7514  1159  0821               	movf	??___flge+1,w
  7515  115A  00F8               	movwf	___flge@ff2+1
  7516  115B  0820               	movf	??___flge,w
  7517  115C  00F7               	movwf	___flge@ff2
  7518  115D                     l515:
  7519  115D  3080               	movlw	128
  7520  115E  06F6               	xorwf	___flge@ff1+3,f
  7521  115F  3080               	movlw	128
  7522  1160  06FA               	xorwf	___flge@ff2+3,f
  7523  1161  087A               	movf	___flge@ff2+3,w
  7524  1162  0276               	subwf	___flge@ff1+3,w
  7525  1163  1D03               	skipz
  7526  1164  296F               	goto	u4765
  7527  1165  0879               	movf	___flge@ff2+2,w
  7528  1166  0275               	subwf	___flge@ff1+2,w
  7529  1167  1D03               	skipz
  7530  1168  296F               	goto	u4765
  7531  1169  0878               	movf	___flge@ff2+1,w
  7532  116A  0274               	subwf	___flge@ff1+1,w
  7533  116B  1D03               	skipz
  7534  116C  296F               	goto	u4765
  7535  116D  0877               	movf	___flge@ff2,w
  7536  116E  0273               	subwf	___flge@ff1,w
  7537  116F                     u4765:
  7538  116F  1803               	skipnc
  7539  1170  2972               	goto	u4761
  7540  1171  2973               	goto	u4760
  7541  1172                     u4761:
  7542  1172  2975               	goto	l2900
  7543  1173                     u4760:
  7544  1173                     l2898:
  7545  1173  1003               	clrc
  7546  1174  2976               	goto	l516
  7547  1175                     l2900:
  7548  1175  1403               	setc
  7549  1176                     l516:
  7550  1176  0008               	return
  7551  1177                     __end_of___flge:
  7552                           
  7553                           	psect	text21
  7554  1D7B                     __ptext21:	
  7555 ;; *************** function ___fleq *****************
  7556 ;; Defined at:
  7557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  ff1             4    3[COMMON] unsigned char 
  7560 ;;  ff2             4    7[COMMON] unsigned char 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;		None               void
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7572 ;;      Params:         8       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0
  7574 ;;      Temps:          0       4       0       0       0
  7575 ;;      Totals:         8       4       0       0       0
  7576 ;;Total ram usage:       12 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    1
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_sprintf
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function ___fleq
  7588  1D7B                     ___fleq:
  7589  1D7B                     l2872:	
  7590                           ;incstack = 0
  7591                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7592                           
  7593  1D7B  3000               	movlw	0
  7594  1D7C  0573               	andwf	___fleq@ff1,w
  7595  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  7596  1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  7597  1D7F  00A0               	movwf	??___fleq
  7598  1D80  3000               	movlw	0
  7599  1D81  0574               	andwf	___fleq@ff1+1,w
  7600  1D82  00A1               	movwf	??___fleq+1
  7601  1D83  3080               	movlw	128
  7602  1D84  0575               	andwf	___fleq@ff1+2,w
  7603  1D85  00A2               	movwf	??___fleq+2
  7604  1D86  307F               	movlw	127
  7605  1D87  0576               	andwf	___fleq@ff1+3,w
  7606  1D88  00A3               	movwf	??___fleq+3
  7607  1D89  0823               	movf	??___fleq+3,w
  7608  1D8A  0422               	iorwf	??___fleq+2,w
  7609  1D8B  0421               	iorwf	??___fleq+1,w
  7610  1D8C  0420               	iorwf	??___fleq,w
  7611  1D8D  1D03               	skipz
  7612  1D8E  2D90               	goto	u4671
  7613  1D8F  2D91               	goto	u4670
  7614  1D90                     u4671:
  7615  1D90  2D99               	goto	l507
  7616  1D91                     u4670:
  7617  1D91                     l2874:
  7618  1D91  3000               	movlw	0
  7619  1D92  00F6               	movwf	___fleq@ff1+3
  7620  1D93  3000               	movlw	0
  7621  1D94  00F5               	movwf	___fleq@ff1+2
  7622  1D95  3000               	movlw	0
  7623  1D96  00F4               	movwf	___fleq@ff1+1
  7624  1D97  3000               	movlw	0
  7625  1D98  00F3               	movwf	___fleq@ff1
  7626  1D99                     l507:
  7627  1D99  3000               	movlw	0
  7628  1D9A  0577               	andwf	___fleq@ff2,w
  7629  1D9B  00A0               	movwf	??___fleq
  7630  1D9C  3000               	movlw	0
  7631  1D9D  0578               	andwf	___fleq@ff2+1,w
  7632  1D9E  00A1               	movwf	??___fleq+1
  7633  1D9F  3080               	movlw	128
  7634  1DA0  0579               	andwf	___fleq@ff2+2,w
  7635  1DA1  00A2               	movwf	??___fleq+2
  7636  1DA2  307F               	movlw	127
  7637  1DA3  057A               	andwf	___fleq@ff2+3,w
  7638  1DA4  00A3               	movwf	??___fleq+3
  7639  1DA5  0823               	movf	??___fleq+3,w
  7640  1DA6  0422               	iorwf	??___fleq+2,w
  7641  1DA7  0421               	iorwf	??___fleq+1,w
  7642  1DA8  0420               	iorwf	??___fleq,w
  7643  1DA9  1D03               	skipz
  7644  1DAA  2DAC               	goto	u4681
  7645  1DAB  2DAD               	goto	u4680
  7646  1DAC                     u4681:
  7647  1DAC  2DB5               	goto	l508
  7648  1DAD                     u4680:
  7649  1DAD                     l2876:
  7650  1DAD  3000               	movlw	0
  7651  1DAE  00FA               	movwf	___fleq@ff2+3
  7652  1DAF  3000               	movlw	0
  7653  1DB0  00F9               	movwf	___fleq@ff2+2
  7654  1DB1  3000               	movlw	0
  7655  1DB2  00F8               	movwf	___fleq@ff2+1
  7656  1DB3  3000               	movlw	0
  7657  1DB4  00F7               	movwf	___fleq@ff2
  7658  1DB5                     l508:
  7659  1DB5  087A               	movf	___fleq@ff2+3,w
  7660  1DB6  0676               	xorwf	___fleq@ff1+3,w
  7661  1DB7  1D03               	skipz
  7662  1DB8  2DC3               	goto	u4695
  7663  1DB9  0879               	movf	___fleq@ff2+2,w
  7664  1DBA  0675               	xorwf	___fleq@ff1+2,w
  7665  1DBB  1D03               	skipz
  7666  1DBC  2DC3               	goto	u4695
  7667  1DBD  0878               	movf	___fleq@ff2+1,w
  7668  1DBE  0674               	xorwf	___fleq@ff1+1,w
  7669  1DBF  1D03               	skipz
  7670  1DC0  2DC3               	goto	u4695
  7671  1DC1  0877               	movf	___fleq@ff2,w
  7672  1DC2  0673               	xorwf	___fleq@ff1,w
  7673  1DC3                     u4695:
  7674  1DC3  1903               	skipnz
  7675  1DC4  2DC6               	goto	u4691
  7676  1DC5  2DC7               	goto	u4690
  7677  1DC6                     u4691:
  7678  1DC6  2DC9               	goto	l2880
  7679  1DC7                     u4690:
  7680  1DC7                     l2878:
  7681  1DC7  1003               	clrc
  7682  1DC8  2DCA               	goto	l509
  7683  1DC9                     l2880:
  7684  1DC9  1403               	setc
  7685  1DCA                     l509:
  7686  1DCA  0008               	return
  7687  1DCB                     __end_of___fleq:
  7688                           
  7689                           	psect	text22
  7690  1CF9                     __ptext22:	
  7691 ;; *************** function _setup *****************
  7692 ;; Defined at:
  7693 ;;		line 87 in file "main.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7707 ;;      Params:         0       0       0       0       0
  7708 ;;      Locals:         0       0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0
  7710 ;;      Totals:         0       0       0       0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    1
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_main
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           
  7722                           ;psect for function _setup
  7723  1CF9                     _setup:
  7724  1CF9                     l3018:	
  7725                           ;incstack = 0
  7726                           ; Regs used in _setup: [wreg+status,2]
  7727                           
  7728                           
  7729                           ;main.c: 88:     ANSEL = 0;
  7730  1CF9  1683               	bsf	3,5	;RP0=1, select bank3
  7731  1CFA  1703               	bsf	3,6	;RP1=1, select bank3
  7732  1CFB  0188               	clrf	8	;volatile
  7733                           
  7734                           ;main.c: 89:     ANSELH = 0;
  7735  1CFC  0189               	clrf	9	;volatile
  7736                           
  7737                           ;main.c: 91:     TRISA = 0;
  7738  1CFD  1683               	bsf	3,5	;RP0=1, select bank1
  7739  1CFE  1303               	bcf	3,6	;RP1=0, select bank1
  7740  1CFF  0185               	clrf	5	;volatile
  7741  1D00                     l3020:
  7742                           
  7743                           ;main.c: 92:     TRISB = 0x03;
  7744  1D00  3003               	movlw	3
  7745  1D01  0086               	movwf	6	;volatile
  7746  1D02                     l3022:
  7747                           
  7748                           ;main.c: 93:     TRISC = 0x80;
  7749  1D02  3080               	movlw	128
  7750  1D03  0087               	movwf	7	;volatile
  7751                           
  7752                           ;main.c: 94:     TRISD = 0;
  7753  1D04  0188               	clrf	8	;volatile
  7754                           
  7755                           ;main.c: 95:     TRISE = 0;
  7756  1D05  0189               	clrf	9	;volatile
  7757                           
  7758                           ;main.c: 97:     PORTA = 0;
  7759  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  7760  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  7761  1D08  0185               	clrf	5	;volatile
  7762                           
  7763                           ;main.c: 98:     PORTB = 0;
  7764  1D09  0186               	clrf	6	;volatile
  7765                           
  7766                           ;main.c: 99:     PORTC = 0;
  7767  1D0A  0187               	clrf	7	;volatile
  7768                           
  7769                           ;main.c: 100:     PORTD = 0;
  7770  1D0B  0188               	clrf	8	;volatile
  7771                           
  7772                           ;main.c: 101:     PORTE = 0;
  7773  1D0C  0189               	clrf	9	;volatile
  7774  1D0D                     l3024:
  7775                           
  7776                           ;main.c: 104:     OSCCONbits.IRCF2 = 1;
  7777  1D0D  1683               	bsf	3,5	;RP0=1, select bank1
  7778  1D0E  1303               	bcf	3,6	;RP1=0, select bank1
  7779  1D0F  170F               	bsf	15,6	;volatile
  7780  1D10                     l3026:
  7781                           
  7782                           ;main.c: 105:     OSCCONbits.IRCF1 = 1;
  7783  1D10  168F               	bsf	15,5	;volatile
  7784  1D11                     l3028:
  7785                           
  7786                           ;main.c: 106:     OSCCONbits.IRCF0 = 1;
  7787  1D11  160F               	bsf	15,4	;volatile
  7788  1D12                     l3030:
  7789                           
  7790                           ;main.c: 107:     OSCCONbits.SCS = 1;
  7791  1D12  140F               	bsf	15,0	;volatile
  7792  1D13                     l3032:
  7793                           
  7794                           ;main.c: 110:     INTCONbits.PEIE = 1;
  7795  1D13  170B               	bsf	11,6	;volatile
  7796  1D14                     l3034:
  7797                           
  7798                           ;main.c: 111:     PIE1bits.RCIE = 1;
  7799  1D14  168C               	bsf	12,5	;volatile
  7800  1D15                     l3036:
  7801                           
  7802                           ;main.c: 112:     PIR1bits.RCIF = 0;
  7803  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  7804  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  7805  1D17  128C               	bcf	12,5	;volatile
  7806  1D18                     l3038:
  7807                           
  7808                           ;main.c: 113:     INTCONbits.RBIE = 1;
  7809  1D18  158B               	bsf	11,3	;volatile
  7810  1D19                     l3040:
  7811                           
  7812                           ;main.c: 114:     INTCONbits.RBIF = 0;
  7813  1D19  100B               	bcf	11,0	;volatile
  7814  1D1A                     l3042:
  7815                           
  7816                           ;main.c: 115:     INTCONbits.GIE = 1;
  7817  1D1A  178B               	bsf	11,7	;volatile
  7818  1D1B                     l3044:
  7819                           
  7820                           ;main.c: 118:     OPTION_REGbits.nRBPU = 0;
  7821  1D1B  1683               	bsf	3,5	;RP0=1, select bank1
  7822  1D1C  1303               	bcf	3,6	;RP1=0, select bank1
  7823  1D1D  1381               	bcf	1,7	;volatile
  7824  1D1E                     l3046:
  7825                           
  7826                           ;main.c: 119:     WPUBbits.WPUB0 = 1;
  7827  1D1E  1415               	bsf	21,0	;volatile
  7828  1D1F                     l3048:
  7829                           
  7830                           ;main.c: 120:     WPUBbits.WPUB1 = 1;
  7831  1D1F  1495               	bsf	21,1	;volatile
  7832  1D20                     l3050:
  7833                           
  7834                           ;main.c: 123:     IOCBbits.IOCB0 = 1;
  7835  1D20  1416               	bsf	22,0	;volatile
  7836  1D21                     l3052:
  7837                           
  7838                           ;main.c: 124:     IOCBbits.IOCB1 = 1;
  7839  1D21  1496               	bsf	22,1	;volatile
  7840  1D22                     l3054:
  7841                           
  7842                           ;main.c: 127:     TXSTAbits.SYNC = 0;
  7843  1D22  1218               	bcf	24,4	;volatile
  7844  1D23                     l3056:
  7845                           
  7846                           ;main.c: 128:     TXSTAbits.BRGH = 0;
  7847  1D23  1118               	bcf	24,2	;volatile
  7848  1D24                     l3058:
  7849                           
  7850                           ;main.c: 130:     BAUDCTLbits.BRG16 = 1;
  7851  1D24  1683               	bsf	3,5	;RP0=1, select bank3
  7852  1D25  1703               	bsf	3,6	;RP1=1, select bank3
  7853  1D26  1587               	bsf	7,3	;volatile
  7854  1D27                     l3060:
  7855                           
  7856                           ;main.c: 132:     SPBRG = 51;
  7857  1D27  3033               	movlw	51
  7858  1D28  1683               	bsf	3,5	;RP0=1, select bank1
  7859  1D29  1303               	bcf	3,6	;RP1=0, select bank1
  7860  1D2A  0099               	movwf	25	;volatile
  7861  1D2B                     l3062:
  7862                           
  7863                           ;main.c: 133:     SPBRGH = 0;
  7864  1D2B  019A               	clrf	26	;volatile
  7865  1D2C                     l3064:
  7866                           
  7867                           ;main.c: 135:     RCSTAbits.SPEN =1;
  7868  1D2C  1283               	bcf	3,5	;RP0=0, select bank0
  7869  1D2D  1303               	bcf	3,6	;RP1=0, select bank0
  7870  1D2E  1798               	bsf	24,7	;volatile
  7871  1D2F                     l3066:
  7872                           
  7873                           ;main.c: 136:     RCSTAbits.RX9 = 0;
  7874  1D2F  1318               	bcf	24,6	;volatile
  7875  1D30                     l3068:
  7876                           
  7877                           ;main.c: 137:     RCSTAbits.CREN = 1;
  7878  1D30  1618               	bsf	24,4	;volatile
  7879  1D31                     l3070:
  7880                           
  7881                           ;main.c: 139:     TXSTAbits.TXEN = 1;
  7882  1D31  1683               	bsf	3,5	;RP0=1, select bank1
  7883  1D32  1303               	bcf	3,6	;RP1=0, select bank1
  7884  1D33  1698               	bsf	24,5	;volatile
  7885  1D34                     l92:
  7886  1D34  0008               	return
  7887  1D35                     __end_of_setup:
  7888                           
  7889                           	psect	text23
  7890  1C51                     __ptext23:	
  7891 ;; *************** function _envio_caract *****************
  7892 ;; Defined at:
  7893 ;;		line 149 in file "main.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  st              1    wreg     PTR unsigned char 
  7896 ;;		 -> s(10), 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  st              1    7[COMMON] PTR unsigned char 
  7899 ;;		 -> s(10), 
  7900 ;;  i               2    5[COMMON] int 
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1    wreg      void 
  7903 ;; Registers used:
  7904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7910 ;;      Params:         0       0       0       0       0
  7911 ;;      Locals:         3       0       0       0       0
  7912 ;;      Temps:          1       0       0       0       0
  7913 ;;      Totals:         4       0       0       0       0
  7914 ;;Total ram usage:        4 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:    2
  7917 ;; This function calls:
  7918 ;;		_envio_char
  7919 ;; This function is called by:
  7920 ;;		_main
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           
  7925                           ;psect for function _envio_caract
  7926  1C51                     _envio_caract:
  7927                           
  7928                           ;incstack = 0
  7929                           ; Regs used in _envio_caract: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7930                           ;envio_caract@st stored from wreg
  7931  1C51  00F7               	movwf	envio_caract@st
  7932  1C52                     l3384:
  7933                           
  7934                           ;main.c: 150:     int i = 0;
  7935  1C52  01F5               	clrf	envio_caract@i
  7936  1C53  01F6               	clrf	envio_caract@i+1
  7937                           
  7938                           ;main.c: 151:     while (st[i] != 0){
  7939  1C54  2C66               	goto	l3390
  7940  1C55                     l3386:
  7941                           
  7942                           ;main.c: 152:         envio_char(st[i]);
  7943  1C55  0875               	movf	envio_caract@i,w
  7944  1C56  0777               	addwf	envio_caract@st,w
  7945  1C57  00F4               	movwf	??_envio_caract
  7946  1C58  0874               	movf	??_envio_caract,w
  7947  1C59  0084               	movwf	4
  7948  1C5A  0800               	movf	0,w
  7949  1C5B  160A  158A  2435  160A  158A  	fcall	_envio_char
  7950  1C60                     l3388:
  7951                           
  7952                           ;main.c: 153:         i++;
  7953  1C60  3001               	movlw	1
  7954  1C61  07F5               	addwf	envio_caract@i,f
  7955  1C62  1803               	skipnc
  7956  1C63  0AF6               	incf	envio_caract@i+1,f
  7957  1C64  3000               	movlw	0
  7958  1C65  07F6               	addwf	envio_caract@i+1,f
  7959  1C66                     l3390:
  7960                           
  7961                           ;main.c: 151:     while (st[i] != 0){
  7962  1C66  0875               	movf	envio_caract@i,w
  7963  1C67  0777               	addwf	envio_caract@st,w
  7964  1C68  00F4               	movwf	??_envio_caract
  7965  1C69  0874               	movf	??_envio_caract,w
  7966  1C6A  0084               	movwf	4
  7967  1C6B  1383               	bcf	3,7	;select IRP bank0
  7968  1C6C  0800               	movf	0,w
  7969  1C6D  1D03               	btfss	3,2
  7970  1C6E  2C70               	goto	u5621
  7971  1C6F  2C71               	goto	u5620
  7972  1C70                     u5621:
  7973  1C70  2C55               	goto	l3386
  7974  1C71                     u5620:
  7975  1C71                     l104:
  7976  1C71  0008               	return
  7977  1C72                     __end_of_envio_caract:
  7978                           
  7979                           	psect	text24
  7980  1C35                     __ptext24:	
  7981 ;; *************** function _envio_char *****************
  7982 ;; Defined at:
  7983 ;;		line 144 in file "main.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  dato            1    wreg     unsigned char 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  dato            1    3[COMMON] unsigned char 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7997 ;;      Params:         0       0       0       0       0
  7998 ;;      Locals:         1       0       0       0       0
  7999 ;;      Temps:          0       0       0       0       0
  8000 ;;      Totals:         1       0       0       0       0
  8001 ;;Total ram usage:        1 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_envio_caract
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function _envio_char
  8013  1C35                     _envio_char:
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in _envio_char: [wreg]
  8017                           ;envio_char@dato stored from wreg
  8018  1C35  00F3               	movwf	envio_char@dato
  8019  1C36                     l2656:
  8020  1C36                     l95:	
  8021                           ;main.c: 145:     while(!TXIF);
  8022                           
  8023  1C36  1283               	bcf	3,5	;RP0=0, select bank0
  8024  1C37  1303               	bcf	3,6	;RP1=0, select bank0
  8025  1C38  1E0C               	btfss	12,4	;volatile
  8026  1C39  2C3B               	goto	u4021
  8027  1C3A  2C3C               	goto	u4020
  8028  1C3B                     u4021:
  8029  1C3B  2C36               	goto	l95
  8030  1C3C                     u4020:
  8031  1C3C                     l2658:
  8032                           
  8033                           ;main.c: 146:     TXREG = dato;
  8034  1C3C  0873               	movf	envio_char@dato,w
  8035  1C3D  0099               	movwf	25	;volatile
  8036  1C3E                     l98:
  8037  1C3E  0008               	return
  8038  1C3F                     __end_of_envio_char:
  8039                           
  8040                           	psect	text25
  8041  1C96                     __ptext25:	
  8042 ;; *************** function _conversion *****************
  8043 ;; Defined at:
  8044 ;;		line 156 in file "main.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  valor           1    wreg     unsigned char 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  valor           1   18[BANK0 ] unsigned char 
  8049 ;;  dato            4   14[BANK0 ] float 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  4    6[BANK0 ] float 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, status,0, pclath, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8059 ;;      Params:         0       4       0       0       0
  8060 ;;      Locals:         0       5       0       0       0
  8061 ;;      Temps:          0       4       0       0       0
  8062 ;;      Totals:         0      13       0       0       0
  8063 ;;Total ram usage:       13 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    2
  8066 ;; This function calls:
  8067 ;;		___xxtofl
  8068 ;; This function is called by:
  8069 ;;		_main
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           
  8074                           ;psect for function _conversion
  8075  1C96                     _conversion:
  8076                           
  8077                           ;incstack = 0
  8078                           ; Regs used in _conversion: [wreg+status,2+status,0+pclath+cstack]
  8079                           ;conversion@valor stored from wreg
  8080  1C96  1283               	bcf	3,5	;RP0=0, select bank0
  8081  1C97  1303               	bcf	3,6	;RP1=0, select bank0
  8082  1C98  00B2               	movwf	conversion@valor
  8083  1C99                     l3072:
  8084                           
  8085                           ;main.c: 157:     float dato;;main.c: 158:     dato = valor*1;
  8086  1C99  0832               	movf	conversion@valor,w
  8087  1C9A  00AA               	movwf	??_conversion
  8088  1C9B  01AB               	clrf	??_conversion+1
  8089  1C9C  01AC               	clrf	??_conversion+2
  8090  1C9D  01AD               	clrf	??_conversion+3
  8091  1C9E  082D               	movf	??_conversion+3,w
  8092  1C9F  00F6               	movwf	___xxtofl@val+3
  8093  1CA0  082C               	movf	??_conversion+2,w
  8094  1CA1  00F5               	movwf	___xxtofl@val+2
  8095  1CA2  082B               	movf	??_conversion+1,w
  8096  1CA3  00F4               	movwf	___xxtofl@val+1
  8097  1CA4  082A               	movf	??_conversion,w
  8098  1CA5  00F3               	movwf	___xxtofl@val
  8099  1CA6  3001               	movlw	1
  8100  1CA7  160A  118A  2177  160A  158A  	fcall	___xxtofl
  8101  1CAC  0876               	movf	?___xxtofl+3,w
  8102  1CAD  1283               	bcf	3,5	;RP0=0, select bank0
  8103  1CAE  1303               	bcf	3,6	;RP1=0, select bank0
  8104  1CAF  00B1               	movwf	conversion@dato+3
  8105  1CB0  0875               	movf	?___xxtofl+2,w
  8106  1CB1  00B0               	movwf	conversion@dato+2
  8107  1CB2  0874               	movf	?___xxtofl+1,w
  8108  1CB3  00AF               	movwf	conversion@dato+1
  8109  1CB4  0873               	movf	?___xxtofl,w
  8110  1CB5  00AE               	movwf	conversion@dato
  8111  1CB6                     l3074:
  8112                           
  8113                           ;main.c: 159:     return dato;
  8114  1CB6  0831               	movf	conversion@dato+3,w
  8115  1CB7  00A9               	movwf	?_conversion+3
  8116  1CB8  0830               	movf	conversion@dato+2,w
  8117  1CB9  00A8               	movwf	?_conversion+2
  8118  1CBA  082F               	movf	conversion@dato+1,w
  8119  1CBB  00A7               	movwf	?_conversion+1
  8120  1CBC  082E               	movf	conversion@dato,w
  8121  1CBD  00A6               	movwf	?_conversion
  8122  1CBE                     l107:
  8123  1CBE  0008               	return
  8124  1CBF                     __end_of_conversion:
  8125                           
  8126                           	psect	text26
  8127  1177                     __ptext26:	
  8128 ;; *************** function ___xxtofl *****************
  8129 ;; Defined at:
  8130 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  sign            1    wreg     unsigned char 
  8133 ;;  val             4    3[COMMON] long 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  sign            1    0[BANK0 ] unsigned char 
  8136 ;;  arg             4    2[BANK0 ] unsigned long 
  8137 ;;  exp             1    1[BANK0 ] unsigned char 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  4    3[COMMON] unsigned char 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2, status,0
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8147 ;;      Params:         4       0       0       0       0
  8148 ;;      Locals:         0       6       0       0       0
  8149 ;;      Temps:          4       0       0       0       0
  8150 ;;      Totals:         8       6       0       0       0
  8151 ;;Total ram usage:       14 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:    1
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		_conversion
  8158 ;;		_sprintf
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function ___xxtofl
  8164  1177                     ___xxtofl:
  8165                           
  8166                           ;incstack = 0
  8167                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8168                           ;___xxtofl@sign stored from wreg
  8169  1177  1283               	bcf	3,5	;RP0=0, select bank0
  8170  1178  1303               	bcf	3,6	;RP1=0, select bank0
  8171  1179  00A0               	movwf	___xxtofl@sign
  8172  117A                     l2974:
  8173  117A  0820               	movf	___xxtofl@sign,w
  8174  117B  1903               	btfsc	3,2
  8175  117C  297E               	goto	u4941
  8176  117D  297F               	goto	u4940
  8177  117E                     u4941:
  8178  117E  2993               	goto	l2980
  8179  117F                     u4940:
  8180  117F                     l2976:
  8181  117F  1FF6               	btfss	___xxtofl@val+3,7
  8182  1180  2982               	goto	u4951
  8183  1181  2983               	goto	u4950
  8184  1182                     u4951:
  8185  1182  2993               	goto	l2980
  8186  1183                     u4950:
  8187  1183                     l2978:
  8188  1183  0973               	comf	___xxtofl@val,w
  8189  1184  00A2               	movwf	___xxtofl@arg
  8190  1185  0974               	comf	___xxtofl@val+1,w
  8191  1186  00A3               	movwf	___xxtofl@arg+1
  8192  1187  0975               	comf	___xxtofl@val+2,w
  8193  1188  00A4               	movwf	___xxtofl@arg+2
  8194  1189  0976               	comf	___xxtofl@val+3,w
  8195  118A  00A5               	movwf	___xxtofl@arg+3
  8196  118B  0AA2               	incf	___xxtofl@arg,f
  8197  118C  1903               	skipnz
  8198  118D  0AA3               	incf	___xxtofl@arg+1,f
  8199  118E  1903               	skipnz
  8200  118F  0AA4               	incf	___xxtofl@arg+2,f
  8201  1190  1903               	skipnz
  8202  1191  0AA5               	incf	___xxtofl@arg+3,f
  8203  1192  299B               	goto	l788
  8204  1193                     l2980:
  8205  1193  0876               	movf	___xxtofl@val+3,w
  8206  1194  00A5               	movwf	___xxtofl@arg+3
  8207  1195  0875               	movf	___xxtofl@val+2,w
  8208  1196  00A4               	movwf	___xxtofl@arg+2
  8209  1197  0874               	movf	___xxtofl@val+1,w
  8210  1198  00A3               	movwf	___xxtofl@arg+1
  8211  1199  0873               	movf	___xxtofl@val,w
  8212  119A  00A2               	movwf	___xxtofl@arg
  8213  119B                     l788:
  8214  119B  0876               	movf	___xxtofl@val+3,w
  8215  119C  0475               	iorwf	___xxtofl@val+2,w
  8216  119D  0474               	iorwf	___xxtofl@val+1,w
  8217  119E  0473               	iorwf	___xxtofl@val,w
  8218  119F  1D03               	skipz
  8219  11A0  29A2               	goto	u4961
  8220  11A1  29A3               	goto	u4960
  8221  11A2                     u4961:
  8222  11A2  29AC               	goto	l2986
  8223  11A3                     u4960:
  8224  11A3                     l2982:
  8225  11A3  3000               	movlw	0
  8226  11A4  00F6               	movwf	?___xxtofl+3
  8227  11A5  3000               	movlw	0
  8228  11A6  00F5               	movwf	?___xxtofl+2
  8229  11A7  3000               	movlw	0
  8230  11A8  00F4               	movwf	?___xxtofl+1
  8231  11A9  3000               	movlw	0
  8232  11AA  00F3               	movwf	?___xxtofl
  8233  11AB  2A32               	goto	l790
  8234  11AC                     l2986:
  8235  11AC  3096               	movlw	150
  8236  11AD  00F7               	movwf	??___xxtofl
  8237  11AE  0877               	movf	??___xxtofl,w
  8238  11AF  00A1               	movwf	___xxtofl@exp
  8239  11B0  29BE               	goto	l2990
  8240  11B1                     l2988:
  8241  11B1  3001               	movlw	1
  8242  11B2  00F7               	movwf	??___xxtofl
  8243  11B3  0877               	movf	??___xxtofl,w
  8244  11B4  07A1               	addwf	___xxtofl@exp,f
  8245  11B5  3001               	movlw	1
  8246  11B6                     u4975:
  8247  11B6  1003               	clrc
  8248  11B7  0CA5               	rrf	___xxtofl@arg+3,f
  8249  11B8  0CA4               	rrf	___xxtofl@arg+2,f
  8250  11B9  0CA3               	rrf	___xxtofl@arg+1,f
  8251  11BA  0CA2               	rrf	___xxtofl@arg,f
  8252  11BB  3EFF               	addlw	-1
  8253  11BC  1D03               	skipz
  8254  11BD  29B6               	goto	u4975
  8255  11BE                     l2990:
  8256  11BE  30FE               	movlw	254
  8257  11BF  0525               	andwf	___xxtofl@arg+3,w
  8258  11C0  1D03               	btfss	3,2
  8259  11C1  29C3               	goto	u4981
  8260  11C2  29C4               	goto	u4980
  8261  11C3                     u4981:
  8262  11C3  29B1               	goto	l2988
  8263  11C4                     u4980:
  8264  11C4  29E0               	goto	l794
  8265  11C5                     l2992:
  8266  11C5  3001               	movlw	1
  8267  11C6  00F7               	movwf	??___xxtofl
  8268  11C7  0877               	movf	??___xxtofl,w
  8269  11C8  07A1               	addwf	___xxtofl@exp,f
  8270  11C9                     l2994:
  8271  11C9  3001               	movlw	1
  8272  11CA  07A2               	addwf	___xxtofl@arg,f
  8273  11CB  3000               	movlw	0
  8274  11CC  1803               	skipnc
  8275  11CD  3001               	movlw	1
  8276  11CE  07A3               	addwf	___xxtofl@arg+1,f
  8277  11CF  3000               	movlw	0
  8278  11D0  1803               	skipnc
  8279  11D1  3001               	movlw	1
  8280  11D2  07A4               	addwf	___xxtofl@arg+2,f
  8281  11D3  3000               	movlw	0
  8282  11D4  1803               	skipnc
  8283  11D5  3001               	movlw	1
  8284  11D6  07A5               	addwf	___xxtofl@arg+3,f
  8285  11D7                     l2996:
  8286  11D7  3001               	movlw	1
  8287  11D8                     u4995:
  8288  11D8  1003               	clrc
  8289  11D9  0CA5               	rrf	___xxtofl@arg+3,f
  8290  11DA  0CA4               	rrf	___xxtofl@arg+2,f
  8291  11DB  0CA3               	rrf	___xxtofl@arg+1,f
  8292  11DC  0CA2               	rrf	___xxtofl@arg,f
  8293  11DD  3EFF               	addlw	-1
  8294  11DE  1D03               	skipz
  8295  11DF  29D8               	goto	u4995
  8296  11E0                     l794:
  8297  11E0  30FF               	movlw	255
  8298  11E1  0525               	andwf	___xxtofl@arg+3,w
  8299  11E2  1D03               	btfss	3,2
  8300  11E3  29E5               	goto	u5001
  8301  11E4  29E6               	goto	u5000
  8302  11E5                     u5001:
  8303  11E5  29C5               	goto	l2992
  8304  11E6                     u5000:
  8305  11E6  29F2               	goto	l3000
  8306  11E7                     l2998:
  8307  11E7  3001               	movlw	1
  8308  11E8  02A1               	subwf	___xxtofl@exp,f
  8309  11E9  3001               	movlw	1
  8310  11EA  00F7               	movwf	??___xxtofl
  8311  11EB                     u5015:
  8312  11EB  1003               	clrc
  8313  11EC  0DA2               	rlf	___xxtofl@arg,f
  8314  11ED  0DA3               	rlf	___xxtofl@arg+1,f
  8315  11EE  0DA4               	rlf	___xxtofl@arg+2,f
  8316  11EF  0DA5               	rlf	___xxtofl@arg+3,f
  8317  11F0  0BF7               	decfsz	??___xxtofl,f
  8318  11F1  29EB               	goto	u5015
  8319  11F2                     l3000:
  8320  11F2  1BA4               	btfsc	___xxtofl@arg+2,7
  8321  11F3  29F5               	goto	u5021
  8322  11F4  29F6               	goto	u5020
  8323  11F5                     u5021:
  8324  11F5  29FC               	goto	l801
  8325  11F6                     u5020:
  8326  11F6                     l3002:
  8327  11F6  3002               	movlw	2
  8328  11F7  0221               	subwf	___xxtofl@exp,w
  8329  11F8  1803               	skipnc
  8330  11F9  29FB               	goto	u5031
  8331  11FA  29FC               	goto	u5030
  8332  11FB                     u5031:
  8333  11FB  29E7               	goto	l2998
  8334  11FC                     u5030:
  8335  11FC                     l801:
  8336  11FC  1821               	btfsc	___xxtofl@exp,0
  8337  11FD  29FF               	goto	u5041
  8338  11FE  2A00               	goto	u5040
  8339  11FF                     u5041:
  8340  11FF  2A08               	goto	l802
  8341  1200                     u5040:
  8342  1200                     l3004:
  8343  1200  30FF               	movlw	255
  8344  1201  05A2               	andwf	___xxtofl@arg,f
  8345  1202  30FF               	movlw	255
  8346  1203  05A3               	andwf	___xxtofl@arg+1,f
  8347  1204  307F               	movlw	127
  8348  1205  05A4               	andwf	___xxtofl@arg+2,f
  8349  1206  30FF               	movlw	255
  8350  1207  05A5               	andwf	___xxtofl@arg+3,f
  8351  1208                     l802:
  8352  1208  1003               	clrc
  8353  1209  0CA1               	rrf	___xxtofl@exp,f
  8354  120A                     l3006:
  8355  120A  0821               	movf	___xxtofl@exp,w
  8356  120B  00F7               	movwf	??___xxtofl
  8357  120C  01F8               	clrf	??___xxtofl+1
  8358  120D  01F9               	clrf	??___xxtofl+2
  8359  120E  01FA               	clrf	??___xxtofl+3
  8360  120F  3018               	movlw	24
  8361  1210                     u5055:
  8362  1210  1003               	clrc
  8363  1211  0DF7               	rlf	??___xxtofl,f
  8364  1212  0DF8               	rlf	??___xxtofl+1,f
  8365  1213  0DF9               	rlf	??___xxtofl+2,f
  8366  1214  0DFA               	rlf	??___xxtofl+3,f
  8367  1215                     u5050:
  8368  1215  3EFF               	addlw	-1
  8369  1216  1D03               	skipz
  8370  1217  2A10               	goto	u5055
  8371  1218  0877               	movf	??___xxtofl,w
  8372  1219  04A2               	iorwf	___xxtofl@arg,f
  8373  121A  0878               	movf	??___xxtofl+1,w
  8374  121B  04A3               	iorwf	___xxtofl@arg+1,f
  8375  121C  0879               	movf	??___xxtofl+2,w
  8376  121D  04A4               	iorwf	___xxtofl@arg+2,f
  8377  121E  087A               	movf	??___xxtofl+3,w
  8378  121F  04A5               	iorwf	___xxtofl@arg+3,f
  8379  1220                     l3008:
  8380  1220  0820               	movf	___xxtofl@sign,w
  8381  1221  1903               	btfsc	3,2
  8382  1222  2A24               	goto	u5061
  8383  1223  2A25               	goto	u5060
  8384  1224                     u5061:
  8385  1224  2A2A               	goto	l3014
  8386  1225                     u5060:
  8387  1225                     l3010:
  8388  1225  1FF6               	btfss	___xxtofl@val+3,7
  8389  1226  2A28               	goto	u5071
  8390  1227  2A29               	goto	u5070
  8391  1228                     u5071:
  8392  1228  2A2A               	goto	l3014
  8393  1229                     u5070:
  8394  1229                     l3012:
  8395  1229  17A5               	bsf	___xxtofl@arg+3,7
  8396  122A                     l3014:
  8397  122A  0825               	movf	___xxtofl@arg+3,w
  8398  122B  00F6               	movwf	?___xxtofl+3
  8399  122C  0824               	movf	___xxtofl@arg+2,w
  8400  122D  00F5               	movwf	?___xxtofl+2
  8401  122E  0823               	movf	___xxtofl@arg+1,w
  8402  122F  00F4               	movwf	?___xxtofl+1
  8403  1230  0822               	movf	___xxtofl@arg,w
  8404  1231  00F3               	movwf	?___xxtofl
  8405  1232                     l790:
  8406  1232  0008               	return
  8407  1233                     __end_of___xxtofl:
  8408                           
  8409                           	psect	text27
  8410  1C72                     __ptext27:	
  8411 ;; *************** function _isr *****************
  8412 ;; Defined at:
  8413 ;;		line 56 in file "main.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;		None
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg, status,2, status,0
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8427 ;;      Params:         0       0       0       0       0
  8428 ;;      Locals:         0       0       0       0       0
  8429 ;;      Temps:          3       0       0       0       0
  8430 ;;      Totals:         3       0       0       0       0
  8431 ;;Total ram usage:        3 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		Interrupt level 1
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           
  8441                           ;psect for function _isr
  8442  1C72                     _isr:
  8443  1C72                     i1l3392:
  8444                           
  8445                           ;main.c: 57:     if(INTCONbits.RBIF){
  8446  1C72  1C0B               	btfss	11,0	;volatile
  8447  1C73  2C75               	goto	u563_21
  8448  1C74  2C76               	goto	u563_20
  8449  1C75                     u563_21:
  8450  1C75  2C87               	goto	i1l3404
  8451  1C76                     u563_20:
  8452  1C76                     i1l3394:
  8453                           
  8454                           ;main.c: 58:         if (PORTBbits.RB0 == 0)
  8455  1C76  1283               	bcf	3,5	;RP0=0, select bank0
  8456  1C77  1303               	bcf	3,6	;RP1=0, select bank0
  8457  1C78  1806               	btfsc	6,0	;volatile
  8458  1C79  2C7B               	goto	u564_21
  8459  1C7A  2C7C               	goto	u564_20
  8460  1C7B                     u564_21:
  8461  1C7B  2C80               	goto	i1l3398
  8462  1C7C                     u564_20:
  8463  1C7C                     i1l3396:
  8464                           
  8465                           ;main.c: 59:             contador++;
  8466  1C7C  3001               	movlw	1
  8467  1C7D  00F0               	movwf	??_isr
  8468  1C7E  0870               	movf	??_isr,w
  8469  1C7F  07EF               	addwf	_contador,f
  8470  1C80                     i1l3398:
  8471                           
  8472                           ;main.c: 60:         if (PORTBbits.RB1 == 0)
  8473  1C80  1886               	btfsc	6,1	;volatile
  8474  1C81  2C83               	goto	u565_21
  8475  1C82  2C84               	goto	u565_20
  8476  1C83                     u565_21:
  8477  1C83  2C86               	goto	i1l3402
  8478  1C84                     u565_20:
  8479  1C84                     i1l3400:
  8480                           
  8481                           ;main.c: 61:             contador--;
  8482  1C84  3001               	movlw	1
  8483  1C85  02EF               	subwf	_contador,f
  8484  1C86                     i1l3402:
  8485                           
  8486                           ;main.c: 62:         INTCONbits.RBIF = 0;
  8487  1C86  100B               	bcf	11,0	;volatile
  8488  1C87                     i1l3404:
  8489                           
  8490                           ;main.c: 64:     if(PIR1bits.RCIF){
  8491  1C87  1283               	bcf	3,5	;RP0=0, select bank0
  8492  1C88  1303               	bcf	3,6	;RP1=0, select bank0
  8493  1C89  1E8C               	btfss	12,5	;volatile
  8494  1C8A  2C8C               	goto	u566_21
  8495  1C8B  2C8D               	goto	u566_20
  8496  1C8C                     u566_21:
  8497  1C8C  2C8F               	goto	i1l81
  8498  1C8D                     u566_20:
  8499  1C8D                     i1l3406:
  8500                           
  8501                           ;main.c: 65:        PORTD = RCREG;
  8502  1C8D  081A               	movf	26,w	;volatile
  8503  1C8E  0088               	movwf	8	;volatile
  8504  1C8F                     i1l81:
  8505  1C8F  0872               	movf	??_isr+2,w
  8506  1C90  008A               	movwf	10
  8507  1C91  0E71               	swapf	??_isr+1,w
  8508  1C92  0083               	movwf	3
  8509  1C93  0EFE               	swapf	btemp,f
  8510  1C94  0E7E               	swapf	btemp,w
  8511  1C95  0009               	retfie
  8512  1C96                     __end_of_isr:
  8513  007E                     btemp	set	126	;btemp
  8514  007E                     wtemp0	set	126
  8515                           
  8516                           	psect	intentry
  8517  0004                     __pintentry:	
  8518                           ;incstack = 0
  8519                           ; Regs used in _isr: [wreg+status,2+status,0]
  8520                           
  8521  0004                     interrupt_function:
  8522  007E                     saved_w	set	btemp
  8523  0004  00FE               	movwf	btemp
  8524  0005  0E03               	swapf	3,w
  8525  0006  00F1               	movwf	??_isr+1
  8526  0007  080A               	movf	10,w
  8527  0008  00F2               	movwf	??_isr+2
  8528  0009  160A  158A  2C72   	ljmp	_isr
  8529                           
  8530                           	psect	config
  8531                           
  8532                           ;Config register CONFIG1 @ 0x2007
  8533                           ;	Oscillator Selection bits
  8534                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  8535                           ;	Watchdog Timer Enable bit
  8536                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8537                           ;	Power-up Timer Enable bit
  8538                           ;	PWRTE = OFF, PWRT disabled
  8539                           ;	RE3/MCLR pin function select bit
  8540                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8541                           ;	Code Protection bit
  8542                           ;	CP = OFF, Program memory code protection is disabled
  8543                           ;	Data Code Protection bit
  8544                           ;	CPD = OFF, Data memory code protection is disabled
  8545                           ;	Brown Out Reset Selection bits
  8546                           ;	BOREN = OFF, BOR disabled
  8547                           ;	Internal External Switchover bit
  8548                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8549                           ;	Fail-Safe Clock Monitor Enabled bit
  8550                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8551                           ;	Low Voltage Programming Enable bit
  8552                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8553                           ;	In-Circuit Debugger Mode bit
  8554                           ;	DEBUG = 0x1, unprogrammed default
  8555  2007                     	org	8199
  8556  2007  20D5               	dw	8405
  8557                           
  8558                           ;Config register CONFIG2 @ 0x2008
  8559                           ;	Brown-out Reset Selection bit
  8560                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8561                           ;	Flash Program Memory Self Write Enable bits
  8562                           ;	WRT = OFF, Write protection off
  8563  2008                     	org	8200
  8564  2008  3FFF               	dw	16383
  8565                           
  8566                           	psect	text1_split_1
  8567  0022                     u5210:
  8568  0022                     l3180:
  8569  0022  1683               	bsf	3,5	;RP0=1, select bank1
  8570  0023  1303               	bcf	3,6	;RP1=0, select bank1
  8571  0024  0843               	movf	(sprintf@fval+3)^(0+128),w
  8572  0025  00F6               	movwf	___fleq@ff1+3
  8573  0026  0842               	movf	(sprintf@fval+2)^(0+128),w
  8574  0027  00F5               	movwf	___fleq@ff1+2
  8575  0028  0841               	movf	(sprintf@fval+1)^(0+128),w
  8576  0029  00F4               	movwf	___fleq@ff1+1
  8577  002A  0840               	movf	sprintf@fval^(0+128),w
  8578  002B  00F3               	movwf	___fleq@ff1
  8579  002C  3000               	movlw	0
  8580  002D  00FA               	movwf	___fleq@ff2+3
  8581  002E  3000               	movlw	0
  8582  002F  00F9               	movwf	___fleq@ff2+2
  8583  0030  3000               	movlw	0
  8584  0031  00F8               	movwf	___fleq@ff2+1
  8585  0032  3000               	movlw	0
  8586  0033  00F7               	movwf	___fleq@ff2
  8587  0034  160A  158A  257B  120A  118A  	fcall	___fleq
  8588  0039  1803               	btfsc	3,0
  8589  003A  283C               	goto	u5221
  8590  003B  283D               	goto	u5220
  8591  003C                     u5221:
  8592  003C  28E5               	goto	l3200
  8593  003D                     u5220:
  8594  003D                     l3182:
  8595  003D  1683               	bsf	3,5	;RP0=1, select bank1
  8596  003E  1303               	bcf	3,6	;RP1=0, select bank1
  8597  003F  0843               	movf	(sprintf@fval+3)^(0+128),w
  8598  0040  1283               	bcf	3,5	;RP0=0, select bank0
  8599  0041  1303               	bcf	3,6	;RP1=0, select bank0
  8600  0042  00D8               	movwf	___fltol@f1+3
  8601  0043  1683               	bsf	3,5	;RP0=1, select bank1
  8602  0044  1303               	bcf	3,6	;RP1=0, select bank1
  8603  0045  0842               	movf	(sprintf@fval+2)^(0+128),w
  8604  0046  1283               	bcf	3,5	;RP0=0, select bank0
  8605  0047  1303               	bcf	3,6	;RP1=0, select bank0
  8606  0048  00D7               	movwf	___fltol@f1+2
  8607  0049  1683               	bsf	3,5	;RP0=1, select bank1
  8608  004A  1303               	bcf	3,6	;RP1=0, select bank1
  8609  004B  0841               	movf	(sprintf@fval+1)^(0+128),w
  8610  004C  1283               	bcf	3,5	;RP0=0, select bank0
  8611  004D  1303               	bcf	3,6	;RP1=0, select bank0
  8612  004E  00D6               	movwf	___fltol@f1+1
  8613  004F  1683               	bsf	3,5	;RP0=1, select bank1
  8614  0050  1303               	bcf	3,6	;RP1=0, select bank1
  8615  0051  0840               	movf	sprintf@fval^(0+128),w
  8616  0052  1283               	bcf	3,5	;RP0=0, select bank0
  8617  0053  1303               	bcf	3,6	;RP1=0, select bank0
  8618  0054  00D5               	movwf	___fltol@f1
  8619  0055  120A  158A  2002  120A  118A  	fcall	___fltol
  8620  005A  1283               	bcf	3,5	;RP0=0, select bank0
  8621  005B  1303               	bcf	3,6	;RP1=0, select bank0
  8622  005C  0858               	movf	?___fltol+3,w
  8623  005D  0457               	iorwf	?___fltol+2,w
  8624  005E  0456               	iorwf	?___fltol+1,w
  8625  005F  0455               	iorwf	?___fltol,w
  8626  0060  1D03               	skipz
  8627  0061  2863               	goto	u5231
  8628  0062  2864               	goto	u5230
  8629  0063                     u5231:
  8630  0063  28E5               	goto	l3200
  8631  0064                     u5230:
  8632  0064                     l3184:
  8633  0064  1683               	bsf	3,5	;RP0=1, select bank1
  8634  0065  1303               	bcf	3,6	;RP1=0, select bank1
  8635  0066  083B               	movf	(sprintf@eexp+1)^(0+128),w
  8636  0067  3A80               	xorlw	128
  8637  0068  00FF               	movwf	btemp+1
  8638  0069  3080               	movlw	128
  8639  006A  027F               	subwf	btemp+1,w
  8640  006B  1D03               	skipz
  8641  006C  286F               	goto	u5245
  8642  006D  3002               	movlw	2
  8643  006E  023A               	subwf	sprintf@eexp^(0+128),w
  8644  006F                     u5245:
  8645  006F  1C03               	skipc
  8646  0070  2872               	goto	u5241
  8647  0071  2873               	goto	u5240
  8648  0072                     u5241:
  8649  0072  28E5               	goto	l3200
  8650  0073                     u5240:
  8651  0073                     l3186:
  8652                           
  8653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8654  0073  1683               	bsf	3,5	;RP0=1, select bank1
  8655  0074  1303               	bcf	3,6	;RP1=0, select bank1
  8656  0075  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  8657  0076  00F6               	movwf	___flge@ff1+3
  8658  0077  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  8659  0078  00F5               	movwf	___flge@ff1+2
  8660  0079  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  8661  007A  00F4               	movwf	___flge@ff1+1
  8662  007B  0836               	movf	sprintf@tmpval^(0+128),w
  8663  007C  00F3               	movwf	___flge@ff1
  8664  007D  3040               	movlw	64
  8665  007E  00FA               	movwf	___flge@ff2+3
  8666  007F  3089               	movlw	137
  8667  0080  00F9               	movwf	___flge@ff2+2
  8668  0081  3070               	movlw	112
  8669  0082  00F8               	movwf	___flge@ff2+1
  8670  0083  305F               	movlw	95
  8671  0084  00F7               	movwf	___flge@ff2
  8672  0085  160A  118A  20D3  120A  118A  	fcall	___flge
  8673  008A  1803               	btfsc	3,0
  8674  008B  288D               	goto	u5251
  8675  008C  288E               	goto	u5250
  8676  008D                     u5251:
  8677  008D  2897               	goto	l3190
  8678  008E                     u5250:
  8679  008E                     l3188:
  8680                           
  8681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8682  008E  30F7               	movlw	247
  8683  008F  1683               	bsf	3,5	;RP0=1, select bank1
  8684  0090  1303               	bcf	3,6	;RP1=0, select bank1
  8685  0091  07BA               	addwf	sprintf@eexp^(0+128),f
  8686  0092  1803               	skipnc
  8687  0093  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8688  0094  30FF               	movlw	255
  8689  0095  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8690                           
  8691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8692  0096  289F               	goto	l3192
  8693  0097                     l3190:
  8694                           
  8695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8696  0097  30F8               	movlw	248
  8697  0098  1683               	bsf	3,5	;RP0=1, select bank1
  8698  0099  1303               	bcf	3,6	;RP1=0, select bank1
  8699  009A  07BA               	addwf	sprintf@eexp^(0+128),f
  8700  009B  1803               	skipnc
  8701  009C  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8702  009D  30FF               	movlw	255
  8703  009E  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8704  009F                     l3192:
  8705                           
  8706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8707  009F  083A               	movf	sprintf@eexp^(0+128),w
  8708  00A0  120A  158A  249D  120A  118A  	fcall	_scale
  8709  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  8710  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  8711  00A7  0845               	movf	?_scale+3,w
  8712  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  8713  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  8714  00AA  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  8715  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  8716  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  8717  00AD  0844               	movf	?_scale+2,w
  8718  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  8719  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  8720  00B0  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  8721  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  8722  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  8723  00B3  0843               	movf	?_scale+1,w
  8724  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  8725  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  8726  00B6  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  8727  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  8728  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  8729  00B9  0842               	movf	?_scale,w
  8730  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  8731  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  8732  00BC  00B6               	movwf	sprintf@tmpval^(0+128)
  8733  00BD                     l3194:
  8734  00BD  0843               	movf	(sprintf@fval+3)^(0+128),w
  8735  00BE  00F6               	movwf	__div_to_l_@f1+3
  8736  00BF  0842               	movf	(sprintf@fval+2)^(0+128),w
  8737  00C0  00F5               	movwf	__div_to_l_@f1+2
  8738  00C1  0841               	movf	(sprintf@fval+1)^(0+128),w
  8739  00C2  00F4               	movwf	__div_to_l_@f1+1
  8740  00C3  0840               	movf	sprintf@fval^(0+128),w
  8741  00C4  00F3               	movwf	__div_to_l_@f1
  8742  00C5  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  8743  00C6  00FA               	movwf	__div_to_l_@f2+3
  8744  00C7  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  8745  00C8  00F9               	movwf	__div_to_l_@f2+2
  8746  00C9  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  8747  00CA  00F8               	movwf	__div_to_l_@f2+1
  8748  00CB  0836               	movf	sprintf@tmpval^(0+128),w
  8749  00CC  00F7               	movwf	__div_to_l_@f2
  8750  00CD  120A  158A  207E  120A  118A  	fcall	__div_to_l_
  8751  00D2  0876               	movf	?__div_to_l_+3,w
  8752  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  8753  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  8754  00D5  00B5               	movwf	(sprintf@val+3)^(0+128)
  8755  00D6  0875               	movf	?__div_to_l_+2,w
  8756  00D7  00B4               	movwf	(sprintf@val+2)^(0+128)
  8757  00D8  0874               	movf	?__div_to_l_+1,w
  8758  00D9  00B3               	movwf	(sprintf@val+1)^(0+128)
  8759  00DA  0873               	movf	?__div_to_l_,w
  8760  00DB  00B2               	movwf	sprintf@val^(0+128)
  8761  00DC                     l3198:
  8762                           
  8763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8764  00DC  3000               	movlw	0
  8765  00DD  00C3               	movwf	(sprintf@fval+3)^(0+128)
  8766  00DE  3000               	movlw	0
  8767  00DF  00C2               	movwf	(sprintf@fval+2)^(0+128)
  8768  00E0  3000               	movlw	0
  8769  00E1  00C1               	movwf	(sprintf@fval+1)^(0+128)
  8770  00E2  3000               	movlw	0
  8771  00E3  00C0               	movwf	sprintf@fval^(0+128)
  8772                           
  8773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8774  00E4  294B               	goto	l3206
  8775  00E5                     l3200:
  8776                           
  8777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8778  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  8779  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  8780  00E7  0843               	movf	(sprintf@fval+3)^(0+128),w
  8781  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  8782  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  8783  00EA  00D8               	movwf	___fltol@f1+3
  8784  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  8785  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  8786  00ED  0842               	movf	(sprintf@fval+2)^(0+128),w
  8787  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  8788  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  8789  00F0  00D7               	movwf	___fltol@f1+2
  8790  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  8791  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  8792  00F3  0841               	movf	(sprintf@fval+1)^(0+128),w
  8793  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  8794  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  8795  00F6  00D6               	movwf	___fltol@f1+1
  8796  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  8797  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  8798  00F9  0840               	movf	sprintf@fval^(0+128),w
  8799  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  8800  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  8801  00FC  00D5               	movwf	___fltol@f1
  8802  00FD  120A  158A  2002  120A  118A  	fcall	___fltol
  8803  0102  1283               	bcf	3,5	;RP0=0, select bank0
  8804  0103  1303               	bcf	3,6	;RP1=0, select bank0
  8805  0104  0858               	movf	?___fltol+3,w
  8806  0105  1683               	bsf	3,5	;RP0=1, select bank1
  8807  0106  1303               	bcf	3,6	;RP1=0, select bank1
  8808  0107  00B5               	movwf	(sprintf@val+3)^(0+128)
  8809  0108  1283               	bcf	3,5	;RP0=0, select bank0
  8810  0109  1303               	bcf	3,6	;RP1=0, select bank0
  8811  010A  0857               	movf	?___fltol+2,w
  8812  010B  1683               	bsf	3,5	;RP0=1, select bank1
  8813  010C  1303               	bcf	3,6	;RP1=0, select bank1
  8814  010D  00B4               	movwf	(sprintf@val+2)^(0+128)
  8815  010E  1283               	bcf	3,5	;RP0=0, select bank0
  8816  010F  1303               	bcf	3,6	;RP1=0, select bank0
  8817  0110  0856               	movf	?___fltol+1,w
  8818  0111  1683               	bsf	3,5	;RP0=1, select bank1
  8819  0112  1303               	bcf	3,6	;RP1=0, select bank1
  8820  0113  00B3               	movwf	(sprintf@val+1)^(0+128)
  8821  0114  1283               	bcf	3,5	;RP0=0, select bank0
  8822  0115  1303               	bcf	3,6	;RP1=0, select bank0
  8823  0116  0855               	movf	?___fltol,w
  8824  0117  1683               	bsf	3,5	;RP0=1, select bank1
  8825  0118  1303               	bcf	3,6	;RP1=0, select bank1
  8826  0119  00B2               	movwf	sprintf@val^(0+128)
  8827  011A                     l3202:
  8828                           
  8829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8830  011A  0835               	movf	(sprintf@val+3)^(0+128),w
  8831  011B  00F6               	movwf	___xxtofl@val+3
  8832  011C  0834               	movf	(sprintf@val+2)^(0+128),w
  8833  011D  00F5               	movwf	___xxtofl@val+2
  8834  011E  0833               	movf	(sprintf@val+1)^(0+128),w
  8835  011F  00F4               	movwf	___xxtofl@val+1
  8836  0120  0832               	movf	sprintf@val^(0+128),w
  8837  0121  00F3               	movwf	___xxtofl@val
  8838  0122  3000               	movlw	0
  8839  0123  160A  118A  2177  120A  118A  	fcall	___xxtofl
  8840  0128  0876               	movf	?___xxtofl+3,w
  8841  0129  1683               	bsf	3,5	;RP0=1, select bank1
  8842  012A  1303               	bcf	3,6	;RP1=0, select bank1
  8843  012B  00A3               	movwf	(___flsub@a+3)^(0+128)
  8844  012C  0875               	movf	?___xxtofl+2,w
  8845  012D  00A2               	movwf	(___flsub@a+2)^(0+128)
  8846  012E  0874               	movf	?___xxtofl+1,w
  8847  012F  00A1               	movwf	(___flsub@a+1)^(0+128)
  8848  0130  0873               	movf	?___xxtofl,w
  8849  0131  00A0               	movwf	___flsub@a^(0+128)
  8850  0132  0843               	movf	(sprintf@fval+3)^(0+128),w
  8851  0133  00A7               	movwf	(___flsub@b+3)^(0+128)
  8852  0134  0842               	movf	(sprintf@fval+2)^(0+128),w
  8853  0135  00A6               	movwf	(___flsub@b+2)^(0+128)
  8854  0136  0841               	movf	(sprintf@fval+1)^(0+128),w
  8855  0137  00A5               	movwf	(___flsub@b+1)^(0+128)
  8856  0138  0840               	movf	sprintf@fval^(0+128),w
  8857  0139  00A4               	movwf	___flsub@b^(0+128)
  8858  013A  160A  158A  25CB  120A  118A  	fcall	___flsub
  8859  013F  1683               	bsf	3,5	;RP0=1, select bank1
  8860  0140  1303               	bcf	3,6	;RP1=0, select bank1
  8861  0141  0823               	movf	(?___flsub+3)^(0+128),w
  8862  0142  00C3               	movwf	(sprintf@fval+3)^(0+128)
  8863  0143  0822               	movf	(?___flsub+2)^(0+128),w
  8864  0144  00C2               	movwf	(sprintf@fval+2)^(0+128)
  8865  0145  0821               	movf	(?___flsub+1)^(0+128),w
  8866  0146  00C1               	movwf	(sprintf@fval+1)^(0+128)
  8867  0147  0820               	movf	?___flsub^(0+128),w
  8868  0148  00C0               	movwf	sprintf@fval^(0+128)
  8869  0149                     l3204:
  8870                           
  8871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8872  0149  01BA               	clrf	sprintf@eexp^(0+128)
  8873  014A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  8874  014B                     l3206:
  8875                           
  8876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8877  014B  01C7               	clrf	sprintf@c^(0+128)
  8878  014C  0AC7               	incf	sprintf@c^(0+128),f
  8879  014D                     l3212:
  8880                           
  8881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  8882  014D  0847               	movf	sprintf@c^(0+128),w
  8883  014E  00A8               	movwf	??_sprintf^(0+128)
  8884  014F  3001               	movlw	1
  8885  0150                     u5265:
  8886  0150  1003               	clrc
  8887  0151  0DA8               	rlf	??_sprintf^(0+128),f
  8888  0152  3EFF               	addlw	-1
  8889  0153  1D03               	skipz
  8890  0154  2950               	goto	u5265
  8891  0155  1003               	clrc
  8892  0156  0D28               	rlf	??_sprintf^(0+128),w
  8893  0157  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8894  0158  0084               	movwf	4
  8895  0159  160A  118A  2000  120A  118A  	fcall	stringdir
  8896  015E  00A9               	movwf	(??_sprintf+1)^(0+128)
  8897  015F  160A  118A  2000  120A  118A  	fcall	stringdir
  8898  0164  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  8899  0165  160A  118A  2000  120A  118A  	fcall	stringdir
  8900  016A  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  8901  016B  160A  118A  2000  120A  118A  	fcall	stringdir
  8902  0170  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  8903  0171  082C               	movf	(??_sprintf+4)^(0+128),w
  8904  0172  0235               	subwf	(sprintf@val+3)^(0+128),w
  8905  0173  1D03               	skipz
  8906  0174  297F               	goto	u5275
  8907  0175  082B               	movf	(??_sprintf+3)^(0+128),w
  8908  0176  0234               	subwf	(sprintf@val+2)^(0+128),w
  8909  0177  1D03               	skipz
  8910  0178  297F               	goto	u5275
  8911  0179  082A               	movf	(??_sprintf+2)^(0+128),w
  8912  017A  0233               	subwf	(sprintf@val+1)^(0+128),w
  8913  017B  1D03               	skipz
  8914  017C  297F               	goto	u5275
  8915  017D  0829               	movf	(??_sprintf+1)^(0+128),w
  8916  017E  0232               	subwf	sprintf@val^(0+128),w
  8917  017F                     u5275:
  8918  017F  1803               	skipnc
  8919  0180  2982               	goto	u5271
  8920  0181  2983               	goto	u5270
  8921  0182                     u5271:
  8922  0182  2984               	goto	l3216
  8923  0183                     u5270:
  8924  0183  298E               	goto	l3218
  8925  0184                     l3216:
  8926  0184  3001               	movlw	1
  8927  0185  00A8               	movwf	??_sprintf^(0+128)
  8928  0186  0828               	movf	??_sprintf^(0+128),w
  8929  0187  07C7               	addwf	sprintf@c^(0+128),f
  8930  0188  300A               	movlw	10
  8931  0189  0647               	xorwf	sprintf@c^(0+128),w
  8932  018A  1D03               	btfss	3,2
  8933  018B  298D               	goto	u5281
  8934  018C  298E               	goto	u5280
  8935  018D                     u5281:
  8936  018D  294D               	goto	l3212
  8937  018E                     u5280:
  8938  018E                     l3218:
  8939                           
  8940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  8941  018E  0847               	movf	sprintf@c^(0+128),w
  8942  018F  0744               	addwf	sprintf@prec^(0+128),w
  8943  0190  00A8               	movwf	??_sprintf^(0+128)
  8944  0191  0845               	movf	(sprintf@prec+1)^(0+128),w
  8945  0192  1803               	skipnc
  8946  0193  0A45               	incf	(sprintf@prec+1)^(0+128),w
  8947  0194  00A9               	movwf	(??_sprintf^(0+128)+1)
  8948  0195  083A               	movf	sprintf@eexp^(0+128),w
  8949  0196  0728               	addwf	??_sprintf^(0+128),w
  8950  0197  00AA               	movwf	(??_sprintf+2)^(0+128)
  8951  0198  083B               	movf	(sprintf@eexp+1)^(0+128),w
  8952  0199  1803               	skipnc
  8953  019A  0A3B               	incf	(sprintf@eexp+1)^(0+128),w
  8954  019B  0729               	addwf	(??_sprintf+1)^(0+128),w
  8955  019C  00AB               	movwf	(??_sprintf+3)^(0+128)
  8956  019D  082A               	movf	(??_sprintf+2)^(0+128),w
  8957  019E  02BE               	subwf	sprintf@width^(0+128),f
  8958  019F  082B               	movf	(??_sprintf+3)^(0+128),w
  8959  01A0  1C03               	skipc
  8960  01A1  03BF               	decf	(sprintf@width+1)^(0+128),f
  8961  01A2  02BF               	subwf	(sprintf@width+1)^(0+128),f
  8962                           
  8963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  8964  01A3  0844               	movf	sprintf@prec^(0+128),w
  8965  01A4  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  8966  01A5  1903               	btfsc	3,2
  8967  01A6  29A8               	goto	u5291
  8968  01A7  29A9               	goto	u5290
  8969  01A8                     u5291:
  8970  01A8  29AF               	goto	l3222
  8971  01A9                     u5290:
  8972  01A9                     l3220:
  8973                           
  8974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  8975  01A9  30FF               	movlw	255
  8976  01AA  07BE               	addwf	sprintf@width^(0+128),f
  8977  01AB  1803               	skipnc
  8978  01AC  0ABF               	incf	(sprintf@width+1)^(0+128),f
  8979  01AD  30FF               	movlw	255
  8980  01AE  07BF               	addwf	(sprintf@width+1)^(0+128),f
  8981  01AF                     l3222:
  8982                           
  8983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  8984  01AF  3003               	movlw	3
  8985  01B0  053C               	andwf	sprintf@flag^(0+128),w
  8986  01B1  00A8               	movwf	??_sprintf^(0+128)
  8987  01B2  3000               	movlw	0
  8988  01B3  053D               	andwf	(sprintf@flag+1)^(0+128),w
  8989  01B4  00A9               	movwf	(??_sprintf+1)^(0+128)
  8990  01B5  0828               	movf	??_sprintf^(0+128),w
  8991  01B6  0429               	iorwf	(??_sprintf^(0+128)+1),w
  8992  01B7  1903               	btfsc	3,2
  8993  01B8  29BA               	goto	u5301
  8994  01B9  29BB               	goto	u5300
  8995  01BA                     u5301:
  8996  01BA  29C1               	goto	l3226
  8997  01BB                     u5300:
  8998  01BB                     l3224:
  8999                           
  9000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9001  01BB  30FF               	movlw	255
  9002  01BC  07BE               	addwf	sprintf@width^(0+128),f
  9003  01BD  1803               	skipnc
  9004  01BE  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9005  01BF  30FF               	movlw	255
  9006  01C0  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9007  01C1                     l3226:
  9008                           
  9009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9010  01C1  1D3C               	btfss	sprintf@flag^(0+128),2
  9011  01C2  29C4               	goto	u5311
  9012  01C3  29C5               	goto	u5310
  9013  01C4                     u5311:
  9014  01C4  2A11               	goto	l3248
  9015  01C5                     u5310:
  9016  01C5                     l3228:
  9017                           
  9018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9019  01C5  3003               	movlw	3
  9020  01C6  053C               	andwf	sprintf@flag^(0+128),w
  9021  01C7  00A8               	movwf	??_sprintf^(0+128)
  9022  01C8  3000               	movlw	0
  9023  01C9  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9024  01CA  00A9               	movwf	(??_sprintf+1)^(0+128)
  9025  01CB  0828               	movf	??_sprintf^(0+128),w
  9026  01CC  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9027  01CD  1903               	btfsc	3,2
  9028  01CE  29D0               	goto	u5321
  9029  01CF  29D1               	goto	u5320
  9030  01D0                     u5321:
  9031  01D0  29F0               	goto	l3240
  9032  01D1                     u5320:
  9033  01D1                     l3230:
  9034                           
  9035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9036  01D1  302D               	movlw	45
  9037  01D2  00A8               	movwf	??_sprintf^(0+128)
  9038  01D3  0846               	movf	sprintf@sp^(0+128),w
  9039  01D4  0084               	movwf	4
  9040  01D5  0828               	movf	??_sprintf^(0+128),w
  9041  01D6  1383               	bcf	3,7	;select IRP bank0
  9042  01D7  0080               	movwf	0
  9043  01D8                     l3232:
  9044  01D8  3001               	movlw	1
  9045  01D9  00A8               	movwf	??_sprintf^(0+128)
  9046  01DA  0828               	movf	??_sprintf^(0+128),w
  9047  01DB  07C6               	addwf	sprintf@sp^(0+128),f
  9048  01DC  29F0               	goto	l3240
  9049  01DD                     l3234:
  9050                           
  9051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9052  01DD  3030               	movlw	48
  9053  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  9054  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  9055  01E0  00A8               	movwf	??_sprintf^(0+128)
  9056  01E1  0846               	movf	sprintf@sp^(0+128),w
  9057  01E2  0084               	movwf	4
  9058  01E3  0828               	movf	??_sprintf^(0+128),w
  9059  01E4  1383               	bcf	3,7	;select IRP bank0
  9060  01E5  0080               	movwf	0
  9061  01E6                     l3236:
  9062  01E6  3001               	movlw	1
  9063  01E7  00A8               	movwf	??_sprintf^(0+128)
  9064  01E8  0828               	movf	??_sprintf^(0+128),w
  9065  01E9  07C6               	addwf	sprintf@sp^(0+128),f
  9066  01EA                     l3238:
  9067                           
  9068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9069  01EA  30FF               	movlw	255
  9070  01EB  07BE               	addwf	sprintf@width^(0+128),f
  9071  01EC  1803               	skipnc
  9072  01ED  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9073  01EE  30FF               	movlw	255
  9074  01EF  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9075  01F0                     l3240:
  9076                           
  9077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9078  01F0  083F               	movf	(sprintf@width+1)^(0+128),w
  9079  01F1  3A80               	xorlw	128
  9080  01F2  00FF               	movwf	btemp+1
  9081  01F3  3080               	movlw	128
  9082  01F4  027F               	subwf	btemp+1,w
  9083  01F5  1D03               	skipz
  9084  01F6  29F9               	goto	u5335
  9085  01F7  3001               	movlw	1
  9086  01F8  023E               	subwf	sprintf@width^(0+128),w
  9087  01F9                     u5335:
  9088  01F9  1803               	skipnc
  9089  01FA  29FC               	goto	u5331
  9090  01FB  29FD               	goto	u5330
  9091  01FC                     u5331:
  9092  01FC  29DD               	goto	l3234
  9093  01FD                     u5330:
  9094  01FD  2A9E               	goto	l281
  9095  01FE                     l3242:
  9096                           
  9097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9098  01FE  3020               	movlw	32
  9099  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  9100  0200  1303               	bcf	3,6	;RP1=0, select bank1
  9101  0201  00A8               	movwf	??_sprintf^(0+128)
  9102  0202  0846               	movf	sprintf@sp^(0+128),w
  9103  0203  0084               	movwf	4
  9104  0204  0828               	movf	??_sprintf^(0+128),w
  9105  0205  1383               	bcf	3,7	;select IRP bank0
  9106  0206  0080               	movwf	0
  9107  0207                     l3244:
  9108  0207  3001               	movlw	1
  9109  0208  00A8               	movwf	??_sprintf^(0+128)
  9110  0209  0828               	movf	??_sprintf^(0+128),w
  9111  020A  07C6               	addwf	sprintf@sp^(0+128),f
  9112  020B                     l3246:
  9113                           
  9114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9115  020B  30FF               	movlw	255
  9116  020C  07BE               	addwf	sprintf@width^(0+128),f
  9117  020D  1803               	skipnc
  9118  020E  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9119  020F  30FF               	movlw	255
  9120  0210  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9121  0211                     l3248:
  9122                           
  9123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9124  0211  083F               	movf	(sprintf@width+1)^(0+128),w
  9125  0212  3A80               	xorlw	128
  9126  0213  00FF               	movwf	btemp+1
  9127  0214  3080               	movlw	128
  9128  0215  027F               	subwf	btemp+1,w
  9129  0216  1D03               	skipz
  9130  0217  2A1A               	goto	u5345
  9131  0218  3001               	movlw	1
  9132  0219  023E               	subwf	sprintf@width^(0+128),w
  9133  021A                     u5345:
  9134  021A  1803               	skipnc
  9135  021B  2A1D               	goto	u5341
  9136  021C  2A1E               	goto	u5340
  9137  021D                     u5341:
  9138  021D  29FE               	goto	l3242
  9139  021E                     u5340:
  9140  021E                     l3250:
  9141                           
  9142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9143  021E  3003               	movlw	3
  9144  021F  1683               	bsf	3,5	;RP0=1, select bank1
  9145  0220  1303               	bcf	3,6	;RP1=0, select bank1
  9146  0221  053C               	andwf	sprintf@flag^(0+128),w
  9147  0222  00A8               	movwf	??_sprintf^(0+128)
  9148  0223  3000               	movlw	0
  9149  0224  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9150  0225  00A9               	movwf	(??_sprintf+1)^(0+128)
  9151  0226  0828               	movf	??_sprintf^(0+128),w
  9152  0227  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9153  0228  1903               	btfsc	3,2
  9154  0229  2A2B               	goto	u5351
  9155  022A  2A2C               	goto	u5350
  9156  022B                     u5351:
  9157  022B  2A9E               	goto	l281
  9158  022C                     u5350:
  9159  022C                     l3252:
  9160                           
  9161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9162  022C  302D               	movlw	45
  9163  022D  00A8               	movwf	??_sprintf^(0+128)
  9164  022E  0846               	movf	sprintf@sp^(0+128),w
  9165  022F  0084               	movwf	4
  9166  0230  0828               	movf	??_sprintf^(0+128),w
  9167  0231  1383               	bcf	3,7	;select IRP bank0
  9168  0232  0080               	movwf	0
  9169  0233                     l3254:
  9170  0233  3001               	movlw	1
  9171  0234  00A8               	movwf	??_sprintf^(0+128)
  9172  0235  0828               	movf	??_sprintf^(0+128),w
  9173  0236  07C6               	addwf	sprintf@sp^(0+128),f
  9174  0237  2A9E               	goto	l281
  9175  0238                     l3256:
  9176                           
  9177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9178  0238  0847               	movf	sprintf@c^(0+128),w
  9179  0239  00A8               	movwf	??_sprintf^(0+128)
  9180  023A  3001               	movlw	1
  9181  023B                     u5365:
  9182  023B  1003               	clrc
  9183  023C  0DA8               	rlf	??_sprintf^(0+128),f
  9184  023D  3EFF               	addlw	-1
  9185  023E  1D03               	skipz
  9186  023F  2A3B               	goto	u5365
  9187  0240  1003               	clrc
  9188  0241  0D28               	rlf	??_sprintf^(0+128),w
  9189  0242  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9190  0243  0084               	movwf	4
  9191  0244  160A  118A  2000  120A  118A  	fcall	stringdir
  9192  0249  00F3               	movwf	___lldiv@divisor
  9193  024A  160A  118A  2000  120A  118A  	fcall	stringdir
  9194  024F  00F4               	movwf	___lldiv@divisor+1
  9195  0250  160A  118A  2000  120A  118A  	fcall	stringdir
  9196  0255  00F5               	movwf	___lldiv@divisor+2
  9197  0256  160A  118A  2000  120A  118A  	fcall	stringdir
  9198  025B  00F6               	movwf	___lldiv@divisor+3
  9199  025C  0835               	movf	(sprintf@val+3)^(0+128),w
  9200  025D  00FA               	movwf	___lldiv@dividend+3
  9201  025E  0834               	movf	(sprintf@val+2)^(0+128),w
  9202  025F  00F9               	movwf	___lldiv@dividend+2
  9203  0260  0833               	movf	(sprintf@val+1)^(0+128),w
  9204  0261  00F8               	movwf	___lldiv@dividend+1
  9205  0262  0832               	movf	sprintf@val^(0+128),w
  9206  0263  00F7               	movwf	___lldiv@dividend
  9207  0264  160A  158A  272F  120A  118A  	fcall	___lldiv
  9208  0269  0876               	movf	?___lldiv+3,w
  9209  026A  1683               	bsf	3,5	;RP0=1, select bank1
  9210  026B  1303               	bcf	3,6	;RP1=0, select bank1
  9211  026C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9212  026D  0875               	movf	?___lldiv+2,w
  9213  026E  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9214  026F  0874               	movf	?___lldiv+1,w
  9215  0270  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9216  0271  0873               	movf	?___lldiv,w
  9217  0272  00B6               	movwf	sprintf@tmpval^(0+128)
  9218  0273                     l3258:
  9219                           
  9220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9221  0273  3000               	movlw	0
  9222  0274  00F6               	movwf	___llmod@divisor+3
  9223  0275  3000               	movlw	0
  9224  0276  00F5               	movwf	___llmod@divisor+2
  9225  0277  3000               	movlw	0
  9226  0278  00F4               	movwf	___llmod@divisor+1
  9227  0279  300A               	movlw	10
  9228  027A  00F3               	movwf	___llmod@divisor
  9229  027B  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9230  027C  00FA               	movwf	___llmod@dividend+3
  9231  027D  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9232  027E  00F9               	movwf	___llmod@dividend+2
  9233  027F  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9234  0280  00F8               	movwf	___llmod@dividend+1
  9235  0281  0836               	movf	sprintf@tmpval^(0+128),w
  9236  0282  00F7               	movwf	___llmod@dividend
  9237  0283  160A  158A  261B  120A  118A  	fcall	___llmod
  9238  0288  0876               	movf	?___llmod+3,w
  9239  0289  1683               	bsf	3,5	;RP0=1, select bank1
  9240  028A  1303               	bcf	3,6	;RP1=0, select bank1
  9241  028B  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9242  028C  0875               	movf	?___llmod+2,w
  9243  028D  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9244  028E  0874               	movf	?___llmod+1,w
  9245  028F  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9246  0290  0873               	movf	?___llmod,w
  9247  0291  00B6               	movwf	sprintf@tmpval^(0+128)
  9248  0292                     l3260:
  9249                           
  9250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9251  0292  0836               	movf	sprintf@tmpval^(0+128),w
  9252  0293  3E30               	addlw	48
  9253  0294  00A8               	movwf	??_sprintf^(0+128)
  9254  0295  0846               	movf	sprintf@sp^(0+128),w
  9255  0296  0084               	movwf	4
  9256  0297  0828               	movf	??_sprintf^(0+128),w
  9257  0298  1383               	bcf	3,7	;select IRP bank0
  9258  0299  0080               	movwf	0
  9259  029A  3001               	movlw	1
  9260  029B  00A8               	movwf	??_sprintf^(0+128)
  9261  029C  0828               	movf	??_sprintf^(0+128),w
  9262  029D  07C6               	addwf	sprintf@sp^(0+128),f
  9263  029E                     l281:	
  9264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9265                           
  9266                           
  9267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9268  029E  3001               	movlw	1
  9269  029F  1683               	bsf	3,5	;RP0=1, select bank1
  9270  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  9271  02A1  02C7               	subwf	sprintf@c^(0+128),f
  9272  02A2  0A47               	incf	sprintf@c^(0+128),w
  9273  02A3  1D03               	btfss	3,2
  9274  02A4  2AA6               	goto	u5371
  9275  02A5  2AA7               	goto	u5370
  9276  02A6                     u5371:
  9277  02A6  2A38               	goto	l3256
  9278  02A7                     u5370:
  9279  02A7  2ABB               	goto	l3268
  9280  02A8                     l3262:
  9281                           
  9282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9283  02A8  3030               	movlw	48
  9284  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  9285  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  9286  02AB  00A8               	movwf	??_sprintf^(0+128)
  9287  02AC  0846               	movf	sprintf@sp^(0+128),w
  9288  02AD  0084               	movwf	4
  9289  02AE  0828               	movf	??_sprintf^(0+128),w
  9290  02AF  1383               	bcf	3,7	;select IRP bank0
  9291  02B0  0080               	movwf	0
  9292  02B1                     l3264:
  9293  02B1  3001               	movlw	1
  9294  02B2  00A8               	movwf	??_sprintf^(0+128)
  9295  02B3  0828               	movf	??_sprintf^(0+128),w
  9296  02B4  07C6               	addwf	sprintf@sp^(0+128),f
  9297  02B5                     l3266:
  9298                           
  9299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9300  02B5  30FF               	movlw	255
  9301  02B6  07BA               	addwf	sprintf@eexp^(0+128),f
  9302  02B7  1803               	skipnc
  9303  02B8  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9304  02B9  30FF               	movlw	255
  9305  02BA  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9306  02BB                     l3268:
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9309  02BB  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9310  02BC  3A80               	xorlw	128
  9311  02BD  00FF               	movwf	btemp+1
  9312  02BE  3080               	movlw	128
  9313  02BF  027F               	subwf	btemp+1,w
  9314  02C0  1D03               	skipz
  9315  02C1  2AC4               	goto	u5385
  9316  02C2  3001               	movlw	1
  9317  02C3  023A               	subwf	sprintf@eexp^(0+128),w
  9318  02C4                     u5385:
  9319  02C4  1803               	skipnc
  9320  02C5  2AC7               	goto	u5381
  9321  02C6  2AC8               	goto	u5380
  9322  02C7                     u5381:
  9323  02C7  2AA8               	goto	l3262
  9324  02C8                     u5380:
  9325  02C8                     l3270:
  9326                           
  9327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9328  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  9329  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  9330  02CA  0845               	movf	(sprintf@prec+1)^(0+128),w
  9331  02CB  3A80               	xorlw	128
  9332  02CC  00FF               	movwf	btemp+1
  9333  02CD  3080               	movlw	128
  9334  02CE  027F               	subwf	btemp+1,w
  9335  02CF  1D03               	skipz
  9336  02D0  2AD3               	goto	u5395
  9337  02D1  3009               	movlw	9
  9338  02D2  0244               	subwf	sprintf@prec^(0+128),w
  9339  02D3                     u5395:
  9340  02D3  1C03               	skipc
  9341  02D4  2AD6               	goto	u5391
  9342  02D5  2AD7               	goto	u5390
  9343  02D6                     u5391:
  9344  02D6  2ADE               	goto	l3274
  9345  02D7                     u5390:
  9346  02D7                     l3272:
  9347                           
  9348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9349  02D7  3008               	movlw	8
  9350  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  9351  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  9352  02DA  00A8               	movwf	??_sprintf^(0+128)
  9353  02DB  0828               	movf	??_sprintf^(0+128),w
  9354  02DC  00C7               	movwf	sprintf@c^(0+128)
  9355  02DD  2AE4               	goto	l288
  9356  02DE                     l3274:
  9357                           
  9358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9359  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  9360  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  9361  02E0  0844               	movf	sprintf@prec^(0+128),w
  9362  02E1  00A8               	movwf	??_sprintf^(0+128)
  9363  02E2  0828               	movf	??_sprintf^(0+128),w
  9364  02E3  00C7               	movwf	sprintf@c^(0+128)
  9365  02E4                     l288:
  9366                           
  9367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9368  02E4  0847               	movf	sprintf@c^(0+128),w
  9369  02E5  00A8               	movwf	??_sprintf^(0+128)
  9370  02E6  01A9               	clrf	(??_sprintf^(0+128)+1)
  9371  02E7  0828               	movf	??_sprintf^(0+128),w
  9372  02E8  02C4               	subwf	sprintf@prec^(0+128),f
  9373  02E9  0829               	movf	(??_sprintf+1)^(0+128),w
  9374  02EA  1C03               	skipc
  9375  02EB  03C5               	decf	(sprintf@prec+1)^(0+128),f
  9376  02EC  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  9377  02ED                     l3276:
  9378                           
  9379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9380  02ED  0847               	movf	sprintf@c^(0+128),w
  9381  02EE  1903               	btfsc	3,2
  9382  02EF  2AF1               	goto	u5401
  9383  02F0  2AF2               	goto	u5400
  9384  02F1                     u5401:
  9385  02F1  2AFD               	goto	l3282
  9386  02F2                     u5400:
  9387  02F2                     l3278:
  9388                           
  9389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9390  02F2  302E               	movlw	46
  9391  02F3  00A8               	movwf	??_sprintf^(0+128)
  9392  02F4  0846               	movf	sprintf@sp^(0+128),w
  9393  02F5  0084               	movwf	4
  9394  02F6  0828               	movf	??_sprintf^(0+128),w
  9395  02F7  1383               	bcf	3,7	;select IRP bank0
  9396  02F8  0080               	movwf	0
  9397  02F9                     l3280:
  9398  02F9  3001               	movlw	1
  9399  02FA  00A8               	movwf	??_sprintf^(0+128)
  9400  02FB  0828               	movf	??_sprintf^(0+128),w
  9401  02FC  07C6               	addwf	sprintf@sp^(0+128),f
  9402  02FD                     l3282:
  9403                           
  9404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9405  02FD  0847               	movf	sprintf@c^(0+128),w
  9406  02FE  120A  158A  249D  120A  118A  	fcall	_scale
  9407  0303  1283               	bcf	3,5	;RP0=0, select bank0
  9408  0304  1303               	bcf	3,6	;RP1=0, select bank0
  9409  0305  0845               	movf	?_scale+3,w
  9410  0306  1683               	bsf	3,5	;RP0=1, select bank1
  9411  0307  1303               	bcf	3,6	;RP1=0, select bank1
  9412  0308  00B0               	movwf	(_sprintf$1133+3)^(0+128)
  9413  0309  1283               	bcf	3,5	;RP0=0, select bank0
  9414  030A  1303               	bcf	3,6	;RP1=0, select bank0
  9415  030B  0844               	movf	?_scale+2,w
  9416  030C  1683               	bsf	3,5	;RP0=1, select bank1
  9417  030D  1303               	bcf	3,6	;RP1=0, select bank1
  9418  030E  00AF               	movwf	(_sprintf$1133+2)^(0+128)
  9419  030F  1283               	bcf	3,5	;RP0=0, select bank0
  9420  0310  1303               	bcf	3,6	;RP1=0, select bank0
  9421  0311  0843               	movf	?_scale+1,w
  9422  0312  1683               	bsf	3,5	;RP0=1, select bank1
  9423  0313  1303               	bcf	3,6	;RP1=0, select bank1
  9424  0314  00AE               	movwf	(_sprintf$1133+1)^(0+128)
  9425  0315  1283               	bcf	3,5	;RP0=0, select bank0
  9426  0316  1303               	bcf	3,6	;RP1=0, select bank0
  9427  0317  0842               	movf	?_scale,w
  9428  0318  1683               	bsf	3,5	;RP0=1, select bank1
  9429  0319  1303               	bcf	3,6	;RP1=0, select bank1
  9430  031A  00AD               	movwf	_sprintf$1133^(0+128)
  9431  031B                     l3284:
  9432                           
  9433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9434  031B  0830               	movf	(_sprintf$1133+3)^(0+128),w
  9435  031C  1283               	bcf	3,5	;RP0=0, select bank0
  9436  031D  1303               	bcf	3,6	;RP1=0, select bank0
  9437  031E  00AF               	movwf	___flmul@a+3
  9438  031F  1683               	bsf	3,5	;RP0=1, select bank1
  9439  0320  1303               	bcf	3,6	;RP1=0, select bank1
  9440  0321  082F               	movf	(_sprintf$1133+2)^(0+128),w
  9441  0322  1283               	bcf	3,5	;RP0=0, select bank0
  9442  0323  1303               	bcf	3,6	;RP1=0, select bank0
  9443  0324  00AE               	movwf	___flmul@a+2
  9444  0325  1683               	bsf	3,5	;RP0=1, select bank1
  9445  0326  1303               	bcf	3,6	;RP1=0, select bank1
  9446  0327  082E               	movf	(_sprintf$1133+1)^(0+128),w
  9447  0328  1283               	bcf	3,5	;RP0=0, select bank0
  9448  0329  1303               	bcf	3,6	;RP1=0, select bank0
  9449  032A  00AD               	movwf	___flmul@a+1
  9450  032B  1683               	bsf	3,5	;RP0=1, select bank1
  9451  032C  1303               	bcf	3,6	;RP1=0, select bank1
  9452  032D  082D               	movf	_sprintf$1133^(0+128),w
  9453  032E  1283               	bcf	3,5	;RP0=0, select bank0
  9454  032F  1303               	bcf	3,6	;RP1=0, select bank0
  9455  0330  00AC               	movwf	___flmul@a
  9456  0331  1683               	bsf	3,5	;RP0=1, select bank1
  9457  0332  1303               	bcf	3,6	;RP1=0, select bank1
  9458  0333  0843               	movf	(sprintf@fval+3)^(0+128),w
  9459  0334  1283               	bcf	3,5	;RP0=0, select bank0
  9460  0335  1303               	bcf	3,6	;RP1=0, select bank0
  9461  0336  00AB               	movwf	___flmul@b+3
  9462  0337  1683               	bsf	3,5	;RP0=1, select bank1
  9463  0338  1303               	bcf	3,6	;RP1=0, select bank1
  9464  0339  0842               	movf	(sprintf@fval+2)^(0+128),w
  9465  033A  1283               	bcf	3,5	;RP0=0, select bank0
  9466  033B  1303               	bcf	3,6	;RP1=0, select bank0
  9467  033C  00AA               	movwf	___flmul@b+2
  9468  033D  1683               	bsf	3,5	;RP0=1, select bank1
  9469  033E  1303               	bcf	3,6	;RP1=0, select bank1
  9470  033F  0841               	movf	(sprintf@fval+1)^(0+128),w
  9471  0340  1283               	bcf	3,5	;RP0=0, select bank0
  9472  0341  1303               	bcf	3,6	;RP1=0, select bank0
  9473  0342  00A9               	movwf	___flmul@b+1
  9474  0343  1683               	bsf	3,5	;RP0=1, select bank1
  9475  0344  1303               	bcf	3,6	;RP1=0, select bank1
  9476  0345  0840               	movf	sprintf@fval^(0+128),w
  9477  0346  1283               	bcf	3,5	;RP0=0, select bank0
  9478  0347  1303               	bcf	3,6	;RP1=0, select bank0
  9479  0348  00A8               	movwf	___flmul@b
  9480  0349  120A  158A  213C  120A  118A  	fcall	___flmul
  9481  034E  1283               	bcf	3,5	;RP0=0, select bank0
  9482  034F  1303               	bcf	3,6	;RP1=0, select bank0
  9483  0350  082B               	movf	?___flmul+3,w
  9484  0351  00D8               	movwf	___fltol@f1+3
  9485  0352  082A               	movf	?___flmul+2,w
  9486  0353  00D7               	movwf	___fltol@f1+2
  9487  0354  0829               	movf	?___flmul+1,w
  9488  0355  00D6               	movwf	___fltol@f1+1
  9489  0356  0828               	movf	?___flmul,w
  9490  0357  00D5               	movwf	___fltol@f1
  9491  0358  120A  158A  2002  120A  118A  	fcall	___fltol
  9492  035D  1283               	bcf	3,5	;RP0=0, select bank0
  9493  035E  1303               	bcf	3,6	;RP1=0, select bank0
  9494  035F  0858               	movf	?___fltol+3,w
  9495  0360  1683               	bsf	3,5	;RP0=1, select bank1
  9496  0361  1303               	bcf	3,6	;RP1=0, select bank1
  9497  0362  00B5               	movwf	(sprintf@val+3)^(0+128)
  9498  0363  1283               	bcf	3,5	;RP0=0, select bank0
  9499  0364  1303               	bcf	3,6	;RP1=0, select bank0
  9500  0365  0857               	movf	?___fltol+2,w
  9501  0366  1683               	bsf	3,5	;RP0=1, select bank1
  9502  0367  1303               	bcf	3,6	;RP1=0, select bank1
  9503  0368  00B4               	movwf	(sprintf@val+2)^(0+128)
  9504  0369  1283               	bcf	3,5	;RP0=0, select bank0
  9505  036A  1303               	bcf	3,6	;RP1=0, select bank0
  9506  036B  0856               	movf	?___fltol+1,w
  9507  036C  1683               	bsf	3,5	;RP0=1, select bank1
  9508  036D  1303               	bcf	3,6	;RP1=0, select bank1
  9509  036E  00B3               	movwf	(sprintf@val+1)^(0+128)
  9510  036F  1283               	bcf	3,5	;RP0=0, select bank0
  9511  0370  1303               	bcf	3,6	;RP1=0, select bank0
  9512  0371  0855               	movf	?___fltol,w
  9513  0372  1683               	bsf	3,5	;RP0=1, select bank1
  9514  0373  1303               	bcf	3,6	;RP1=0, select bank1
  9515  0374  00B2               	movwf	sprintf@val^(0+128)
  9516                           
  9517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9518  0375  2C17               	goto	l3294
  9519  0376                     l3286:
  9520                           
  9521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9522  0376  0847               	movf	sprintf@c^(0+128),w
  9523  0377  00A8               	movwf	??_sprintf^(0+128)
  9524  0378  3001               	movlw	1
  9525  0379                     u5415:
  9526  0379  1003               	clrc
  9527  037A  0DA8               	rlf	??_sprintf^(0+128),f
  9528  037B  3EFF               	addlw	-1
  9529  037C  1D03               	skipz
  9530  037D  2B79               	goto	u5415
  9531  037E  1003               	clrc
  9532  037F  0D28               	rlf	??_sprintf^(0+128),w
  9533  0380  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9534  0381  0084               	movwf	4
  9535  0382  160A  118A  2000  120A  118A  	fcall	stringdir
  9536  0387  00F3               	movwf	___lldiv@divisor
  9537  0388  160A  118A  2000  120A  118A  	fcall	stringdir
  9538  038D  00F4               	movwf	___lldiv@divisor+1
  9539  038E  160A  118A  2000  120A  118A  	fcall	stringdir
  9540  0393  00F5               	movwf	___lldiv@divisor+2
  9541  0394  160A  118A  2000  120A  118A  	fcall	stringdir
  9542  0399  00F6               	movwf	___lldiv@divisor+3
  9543  039A  0835               	movf	(sprintf@val+3)^(0+128),w
  9544  039B  00FA               	movwf	___lldiv@dividend+3
  9545  039C  0834               	movf	(sprintf@val+2)^(0+128),w
  9546  039D  00F9               	movwf	___lldiv@dividend+2
  9547  039E  0833               	movf	(sprintf@val+1)^(0+128),w
  9548  039F  00F8               	movwf	___lldiv@dividend+1
  9549  03A0  0832               	movf	sprintf@val^(0+128),w
  9550  03A1  00F7               	movwf	___lldiv@dividend
  9551  03A2  160A  158A  272F  120A  118A  	fcall	___lldiv
  9552  03A7  0876               	movf	?___lldiv+3,w
  9553  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  9554  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  9555  03AA  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9556  03AB  0875               	movf	?___lldiv+2,w
  9557  03AC  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9558  03AD  0874               	movf	?___lldiv+1,w
  9559  03AE  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9560  03AF  0873               	movf	?___lldiv,w
  9561  03B0  00B6               	movwf	sprintf@tmpval^(0+128)
  9562  03B1                     l3288:
  9563                           
  9564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9565  03B1  3000               	movlw	0
  9566  03B2  00F6               	movwf	___llmod@divisor+3
  9567  03B3  3000               	movlw	0
  9568  03B4  00F5               	movwf	___llmod@divisor+2
  9569  03B5  3000               	movlw	0
  9570  03B6  00F4               	movwf	___llmod@divisor+1
  9571  03B7  300A               	movlw	10
  9572  03B8  00F3               	movwf	___llmod@divisor
  9573  03B9  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9574  03BA  00FA               	movwf	___llmod@dividend+3
  9575  03BB  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9576  03BC  00F9               	movwf	___llmod@dividend+2
  9577  03BD  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9578  03BE  00F8               	movwf	___llmod@dividend+1
  9579  03BF  0836               	movf	sprintf@tmpval^(0+128),w
  9580  03C0  00F7               	movwf	___llmod@dividend
  9581  03C1  160A  158A  261B  120A  118A  	fcall	___llmod
  9582  03C6  0876               	movf	?___llmod+3,w
  9583  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  9584  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  9585  03C9  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9586  03CA  0875               	movf	?___llmod+2,w
  9587  03CB  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9588  03CC  0874               	movf	?___llmod+1,w
  9589  03CD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9590  03CE  0873               	movf	?___llmod,w
  9591  03CF  00B6               	movwf	sprintf@tmpval^(0+128)
  9592  03D0                     l3290:
  9593                           
  9594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9595  03D0  0836               	movf	sprintf@tmpval^(0+128),w
  9596  03D1  3E30               	addlw	48
  9597  03D2  00A8               	movwf	??_sprintf^(0+128)
  9598  03D3  0846               	movf	sprintf@sp^(0+128),w
  9599  03D4  0084               	movwf	4
  9600  03D5  0828               	movf	??_sprintf^(0+128),w
  9601  03D6  1383               	bcf	3,7	;select IRP bank0
  9602  03D7  0080               	movwf	0
  9603  03D8  3001               	movlw	1
  9604  03D9  00A8               	movwf	??_sprintf^(0+128)
  9605  03DA  0828               	movf	??_sprintf^(0+128),w
  9606  03DB  07C6               	addwf	sprintf@sp^(0+128),f
  9607  03DC                     l3292:
  9608                           
  9609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9610  03DC  0847               	movf	sprintf@c^(0+128),w
  9611  03DD  00A8               	movwf	??_sprintf^(0+128)
  9612  03DE  3001               	movlw	1
  9613  03DF                     u5425:
  9614  03DF  1003               	clrc
  9615  03E0  0DA8               	rlf	??_sprintf^(0+128),f
  9616  03E1  3EFF               	addlw	-1
  9617  03E2  1D03               	skipz
  9618  03E3  2BDF               	goto	u5425
  9619  03E4  1003               	clrc
  9620  03E5  0D28               	rlf	??_sprintf^(0+128),w
  9621  03E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9622  03E7  0084               	movwf	4
  9623  03E8  160A  118A  2000  120A  118A  	fcall	stringdir
  9624  03ED  00F3               	movwf	___llmod@divisor
  9625  03EE  160A  118A  2000  120A  118A  	fcall	stringdir
  9626  03F3  00F4               	movwf	___llmod@divisor+1
  9627  03F4  160A  118A  2000  120A  118A  	fcall	stringdir
  9628  03F9  00F5               	movwf	___llmod@divisor+2
  9629  03FA  160A  118A  2000  120A  118A  	fcall	stringdir
  9630  03FF  00F6               	movwf	___llmod@divisor+3
  9631  0400  0835               	movf	(sprintf@val+3)^(0+128),w
  9632  0401  00FA               	movwf	___llmod@dividend+3
  9633  0402  0834               	movf	(sprintf@val+2)^(0+128),w
  9634  0403  00F9               	movwf	___llmod@dividend+2
  9635  0404  0833               	movf	(sprintf@val+1)^(0+128),w
  9636  0405  00F8               	movwf	___llmod@dividend+1
  9637  0406  0832               	movf	sprintf@val^(0+128),w
  9638  0407  00F7               	movwf	___llmod@dividend
  9639  0408  160A  158A  261B  120A  118A  	fcall	___llmod
  9640  040D  0876               	movf	?___llmod+3,w
  9641  040E  1683               	bsf	3,5	;RP0=1, select bank1
  9642  040F  1303               	bcf	3,6	;RP1=0, select bank1
  9643  0410  00B5               	movwf	(sprintf@val+3)^(0+128)
  9644  0411  0875               	movf	?___llmod+2,w
  9645  0412  00B4               	movwf	(sprintf@val+2)^(0+128)
  9646  0413  0874               	movf	?___llmod+1,w
  9647  0414  00B3               	movwf	(sprintf@val+1)^(0+128)
  9648  0415  0873               	movf	?___llmod,w
  9649  0416  00B2               	movwf	sprintf@val^(0+128)
  9650  0417                     l3294:
  9651                           
  9652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9653  0417  3001               	movlw	1
  9654  0418  02C7               	subwf	sprintf@c^(0+128),f
  9655  0419  0A47               	incf	sprintf@c^(0+128),w
  9656  041A  1D03               	btfss	3,2
  9657  041B  2C1D               	goto	u5431
  9658  041C  2C1E               	goto	u5430
  9659  041D                     u5431:
  9660  041D  2B76               	goto	l3286
  9661  041E                     u5430:
  9662  041E  2C30               	goto	l3302
  9663  041F                     l3296:
  9664                           
  9665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9666  041F  3030               	movlw	48
  9667  0420  00A8               	movwf	??_sprintf^(0+128)
  9668  0421  0846               	movf	sprintf@sp^(0+128),w
  9669  0422  0084               	movwf	4
  9670  0423  0828               	movf	??_sprintf^(0+128),w
  9671  0424  1383               	bcf	3,7	;select IRP bank0
  9672  0425  0080               	movwf	0
  9673  0426                     l3298:
  9674  0426  3001               	movlw	1
  9675  0427  00A8               	movwf	??_sprintf^(0+128)
  9676  0428  0828               	movf	??_sprintf^(0+128),w
  9677  0429  07C6               	addwf	sprintf@sp^(0+128),f
  9678  042A                     l3300:
  9679                           
  9680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9681  042A  30FF               	movlw	255
  9682  042B  07C4               	addwf	sprintf@prec^(0+128),f
  9683  042C  1803               	skipnc
  9684  042D  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  9685  042E  30FF               	movlw	255
  9686  042F  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  9687  0430                     l3302:
  9688                           
  9689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9690  0430  0844               	movf	sprintf@prec^(0+128),w
  9691  0431  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9692  0432  1D03               	btfss	3,2
  9693  0433  2C35               	goto	u5441
  9694  0434  2C36               	goto	u5440
  9695  0435                     u5441:
  9696  0435  2C1F               	goto	l3296
  9697  0436                     u5440:
  9698  0436  2D35               	goto	l3366
  9699  0437                     l3304:
  9700                           
  9701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  9702  0437  0844               	movf	sprintf@prec^(0+128),w
  9703  0438  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9704  0439  1D03               	btfss	3,2
  9705  043A  2C3C               	goto	u5451
  9706  043B  2C3D               	goto	u5450
  9707  043C                     u5451:
  9708  043C  2C4B               	goto	l296
  9709  043D                     u5450:
  9710  043D                     l3306:
  9711  043D  0835               	movf	(sprintf@val+3)^(0+128),w
  9712  043E  0434               	iorwf	(sprintf@val+2)^(0+128),w
  9713  043F  0433               	iorwf	(sprintf@val+1)^(0+128),w
  9714  0440  0432               	iorwf	sprintf@val^(0+128),w
  9715  0441  1D03               	skipz
  9716  0442  2C44               	goto	u5461
  9717  0443  2C45               	goto	u5460
  9718  0444                     u5461:
  9719  0444  2C4B               	goto	l296
  9720  0445                     u5460:
  9721  0445                     l3308:
  9722                           
  9723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9724  0445  3001               	movlw	1
  9725  0446  07C4               	addwf	sprintf@prec^(0+128),f
  9726  0447  1803               	skipnc
  9727  0448  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  9728  0449  3000               	movlw	0
  9729  044A  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  9730  044B                     l296:
  9731                           
  9732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  9733  044B  0845               	movf	(sprintf@prec+1)^(0+128),w
  9734  044C  3A80               	xorlw	128
  9735  044D  3C80               	sublw	128
  9736  044E  1D03               	skipz
  9737  044F  2C52               	goto	u5475
  9738  0450  0844               	movf	sprintf@prec^(0+128),w
  9739  0451  0247               	subwf	sprintf@c^(0+128),w
  9740  0452                     u5475:
  9741  0452  1803               	skipnc
  9742  0453  2C55               	goto	u5471
  9743  0454  2C56               	goto	u5470
  9744  0455                     u5471:
  9745  0455  2C5D               	goto	l3312
  9746  0456                     u5470:
  9747  0456                     l3310:
  9748                           
  9749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  9750  0456  1683               	bsf	3,5	;RP0=1, select bank1
  9751  0457  1303               	bcf	3,6	;RP1=0, select bank1
  9752  0458  0844               	movf	sprintf@prec^(0+128),w
  9753  0459  00A8               	movwf	??_sprintf^(0+128)
  9754  045A  0828               	movf	??_sprintf^(0+128),w
  9755  045B  00C7               	movwf	sprintf@c^(0+128)
  9756  045C  2C75               	goto	l3316
  9757  045D                     l3312:
  9758  045D  1683               	bsf	3,5	;RP0=1, select bank1
  9759  045E  1303               	bcf	3,6	;RP1=0, select bank1
  9760  045F  0845               	movf	(sprintf@prec+1)^(0+128),w
  9761  0460  3A80               	xorlw	128
  9762  0461  00A8               	movwf	??_sprintf^(0+128)
  9763  0462  3080               	movlw	128
  9764  0463  0228               	subwf	??_sprintf^(0+128),w
  9765  0464  1D03               	skipz
  9766  0465  2C68               	goto	u5485
  9767  0466  0847               	movf	sprintf@c^(0+128),w
  9768  0467  0244               	subwf	sprintf@prec^(0+128),w
  9769  0468                     u5485:
  9770  0468  1803               	skipnc
  9771  0469  2C6B               	goto	u5481
  9772  046A  2C6C               	goto	u5480
  9773  046B                     u5481:
  9774  046B  2C75               	goto	l3316
  9775  046C                     u5480:
  9776  046C                     l3314:
  9777                           
  9778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  9779  046C  1683               	bsf	3,5	;RP0=1, select bank1
  9780  046D  1303               	bcf	3,6	;RP1=0, select bank1
  9781  046E  0847               	movf	sprintf@c^(0+128),w
  9782  046F  00A8               	movwf	??_sprintf^(0+128)
  9783  0470  01A9               	clrf	(??_sprintf^(0+128)+1)
  9784  0471  0828               	movf	??_sprintf^(0+128),w
  9785  0472  00C4               	movwf	sprintf@prec^(0+128)
  9786  0473  0829               	movf	(??_sprintf+1)^(0+128),w
  9787  0474  00C5               	movwf	(sprintf@prec+1)^(0+128)
  9788  0475                     l3316:
  9789                           
  9790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  9791  0475  1683               	bsf	3,5	;RP0=1, select bank1
  9792  0476  1303               	bcf	3,6	;RP1=0, select bank1
  9793  0477  083E               	movf	sprintf@width^(0+128),w
  9794  0478  043F               	iorwf	(sprintf@width+1)^(0+128),w
  9795  0479  1903               	btfsc	3,2
  9796  047A  2C7C               	goto	u5491
  9797  047B  2C7D               	goto	u5490
  9798  047C                     u5491:
  9799  047C  2C8F               	goto	l3322
  9800  047D                     u5490:
  9801  047D                     l3318:
  9802  047D  3003               	movlw	3
  9803  047E  053C               	andwf	sprintf@flag^(0+128),w
  9804  047F  00A8               	movwf	??_sprintf^(0+128)
  9805  0480  3000               	movlw	0
  9806  0481  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9807  0482  00A9               	movwf	(??_sprintf+1)^(0+128)
  9808  0483  0828               	movf	??_sprintf^(0+128),w
  9809  0484  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9810  0485  1903               	btfsc	3,2
  9811  0486  2C88               	goto	u5501
  9812  0487  2C89               	goto	u5500
  9813  0488                     u5501:
  9814  0488  2C8F               	goto	l3322
  9815  0489                     u5500:
  9816  0489                     l3320:
  9817                           
  9818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9819  0489  30FF               	movlw	255
  9820  048A  07BE               	addwf	sprintf@width^(0+128),f
  9821  048B  1803               	skipnc
  9822  048C  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9823  048D  30FF               	movlw	255
  9824  048E  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9825  048F                     l3322:
  9826                           
  9827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  9828  048F  1F3D               	btfss	(sprintf@flag+1)^(0+128),6
  9829  0490  2C92               	goto	u5511
  9830  0491  2C93               	goto	u5510
  9831  0492                     u5511:
  9832  0492  2CAE               	goto	l3330
  9833  0493                     u5510:
  9834  0493                     l3324:
  9835                           
  9836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  9837  0493  0845               	movf	(sprintf@prec+1)^(0+128),w
  9838  0494  3A80               	xorlw	128
  9839  0495  00A8               	movwf	??_sprintf^(0+128)
  9840  0496  083F               	movf	(sprintf@width+1)^(0+128),w
  9841  0497  3A80               	xorlw	128
  9842  0498  0228               	subwf	??_sprintf^(0+128),w
  9843  0499  1D03               	skipz
  9844  049A  2C9D               	goto	u5525
  9845  049B  083E               	movf	sprintf@width^(0+128),w
  9846  049C  0244               	subwf	sprintf@prec^(0+128),w
  9847  049D                     u5525:
  9848  049D  1803               	skipnc
  9849  049E  2CA0               	goto	u5521
  9850  049F  2CA1               	goto	u5520
  9851  04A0                     u5521:
  9852  04A0  2CAA               	goto	l3328
  9853  04A1                     u5520:
  9854  04A1                     l3326:
  9855                           
  9856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  9857  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  9858  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  9859  04A3  0844               	movf	sprintf@prec^(0+128),w
  9860  04A4  02BE               	subwf	sprintf@width^(0+128),f
  9861  04A5  0845               	movf	(sprintf@prec+1)^(0+128),w
  9862  04A6  1C03               	skipc
  9863  04A7  03BF               	decf	(sprintf@width+1)^(0+128),f
  9864  04A8  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9865  04A9  2CAE               	goto	l3330
  9866  04AA                     l3328:
  9867                           
  9868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  9869  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  9870  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  9871  04AC  01BE               	clrf	sprintf@width^(0+128)
  9872  04AD  01BF               	clrf	(sprintf@width+1)^(0+128)
  9873  04AE                     l3330:
  9874                           
  9875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  9876  04AE  083F               	movf	(sprintf@width+1)^(0+128),w
  9877  04AF  3A80               	xorlw	128
  9878  04B0  3C80               	sublw	128
  9879  04B1  1D03               	skipz
  9880  04B2  2CB5               	goto	u5535
  9881  04B3  083E               	movf	sprintf@width^(0+128),w
  9882  04B4  0247               	subwf	sprintf@c^(0+128),w
  9883  04B5                     u5535:
  9884  04B5  1803               	skipnc
  9885  04B6  2CB8               	goto	u5531
  9886  04B7  2CB9               	goto	u5530
  9887  04B8                     u5531:
  9888  04B8  2CC5               	goto	l3334
  9889  04B9                     u5530:
  9890  04B9                     l3332:
  9891                           
  9892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  9893  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  9894  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  9895  04BB  0847               	movf	sprintf@c^(0+128),w
  9896  04BC  00A8               	movwf	??_sprintf^(0+128)
  9897  04BD  01A9               	clrf	(??_sprintf^(0+128)+1)
  9898  04BE  0828               	movf	??_sprintf^(0+128),w
  9899  04BF  02BE               	subwf	sprintf@width^(0+128),f
  9900  04C0  0829               	movf	(??_sprintf+1)^(0+128),w
  9901  04C1  1C03               	skipc
  9902  04C2  03BF               	decf	(sprintf@width+1)^(0+128),f
  9903  04C3  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9904  04C4  2CC9               	goto	l3336
  9905  04C5                     l3334:
  9906                           
  9907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  9908  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  9909  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  9910  04C7  01BE               	clrf	sprintf@width^(0+128)
  9911  04C8  01BF               	clrf	(sprintf@width+1)^(0+128)
  9912  04C9                     l3336:
  9913                           
  9914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  9915  04C9  1D3C               	btfss	sprintf@flag^(0+128),2
  9916  04CA  2CCC               	goto	u5541
  9917  04CB  2CCD               	goto	u5540
  9918  04CC                     u5541:
  9919  04CC  2D02               	goto	l3352
  9920  04CD                     u5540:
  9921  04CD                     l3338:
  9922                           
  9923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  9924  04CD  3003               	movlw	3
  9925  04CE  053C               	andwf	sprintf@flag^(0+128),w
  9926  04CF  00A8               	movwf	??_sprintf^(0+128)
  9927  04D0  3000               	movlw	0
  9928  04D1  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9929  04D2  00A9               	movwf	(??_sprintf+1)^(0+128)
  9930  04D3  0828               	movf	??_sprintf^(0+128),w
  9931  04D4  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9932  04D5  1903               	btfsc	3,2
  9933  04D6  2CD8               	goto	u5551
  9934  04D7  2CD9               	goto	u5550
  9935  04D8                     u5551:
  9936  04D8  2CE4               	goto	l3344
  9937  04D9                     u5550:
  9938  04D9                     l3340:
  9939                           
  9940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  9941  04D9  302D               	movlw	45
  9942  04DA  00A8               	movwf	??_sprintf^(0+128)
  9943  04DB  0846               	movf	sprintf@sp^(0+128),w
  9944  04DC  0084               	movwf	4
  9945  04DD  0828               	movf	??_sprintf^(0+128),w
  9946  04DE  1383               	bcf	3,7	;select IRP bank0
  9947  04DF  0080               	movwf	0
  9948  04E0                     l3342:
  9949  04E0  3001               	movlw	1
  9950  04E1  00A8               	movwf	??_sprintf^(0+128)
  9951  04E2  0828               	movf	??_sprintf^(0+128),w
  9952  04E3  07C6               	addwf	sprintf@sp^(0+128),f
  9953  04E4                     l3344:
  9954                           
  9955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  9956  04E4  083E               	movf	sprintf@width^(0+128),w
  9957  04E5  043F               	iorwf	(sprintf@width+1)^(0+128),w
  9958  04E6  1903               	btfsc	3,2
  9959  04E7  2CE9               	goto	u5561
  9960  04E8  2CEA               	goto	u5560
  9961  04E9                     u5561:
  9962  04E9  2D35               	goto	l3366
  9963  04EA                     u5560:
  9964  04EA                     l3346:
  9965                           
  9966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  9967  04EA  3030               	movlw	48
  9968  04EB  00A8               	movwf	??_sprintf^(0+128)
  9969  04EC  0846               	movf	sprintf@sp^(0+128),w
  9970  04ED  0084               	movwf	4
  9971  04EE  0828               	movf	??_sprintf^(0+128),w
  9972  04EF  1383               	bcf	3,7	;select IRP bank0
  9973  04F0  0080               	movwf	0
  9974  04F1                     l3348:
  9975  04F1  3001               	movlw	1
  9976  04F2  00A8               	movwf	??_sprintf^(0+128)
  9977  04F3  0828               	movf	??_sprintf^(0+128),w
  9978  04F4  07C6               	addwf	sprintf@sp^(0+128),f
  9979  04F5                     l3350:
  9980  04F5  30FF               	movlw	255
  9981  04F6  07BE               	addwf	sprintf@width^(0+128),f
  9982  04F7  1803               	skipnc
  9983  04F8  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9984  04F9  30FF               	movlw	255
  9985  04FA  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9986  04FB  083E               	movf	sprintf@width^(0+128),w
  9987  04FC  043F               	iorwf	(sprintf@width+1)^(0+128),w
  9988  04FD  1D03               	btfss	3,2
  9989  04FE  2D00               	goto	u5571
  9990  04FF  2D01               	goto	u5570
  9991  0500                     u5571:
  9992  0500  2CEA               	goto	l3346
  9993  0501                     u5570:
  9994  0501  2D35               	goto	l3366
  9995  0502                     l3352:
  9996                           
  9997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  9998  0502  083E               	movf	sprintf@width^(0+128),w
  9999  0503  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10000  0504  1903               	btfsc	3,2
 10001  0505  2D07               	goto	u5581
 10002  0506  2D08               	goto	u5580
 10003  0507                     u5581:
 10004  0507  2D1F               	goto	l3360
 10005  0508                     u5580:
 10006  0508                     l3354:
 10007                           
 10008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10009  0508  3020               	movlw	32
 10010  0509  00A8               	movwf	??_sprintf^(0+128)
 10011  050A  0846               	movf	sprintf@sp^(0+128),w
 10012  050B  0084               	movwf	4
 10013  050C  0828               	movf	??_sprintf^(0+128),w
 10014  050D  1383               	bcf	3,7	;select IRP bank0
 10015  050E  0080               	movwf	0
 10016  050F                     l3356:
 10017  050F  3001               	movlw	1
 10018  0510  00A8               	movwf	??_sprintf^(0+128)
 10019  0511  0828               	movf	??_sprintf^(0+128),w
 10020  0512  07C6               	addwf	sprintf@sp^(0+128),f
 10021  0513                     l3358:
 10022  0513  30FF               	movlw	255
 10023  0514  07BE               	addwf	sprintf@width^(0+128),f
 10024  0515  1803               	skipnc
 10025  0516  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10026  0517  30FF               	movlw	255
 10027  0518  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10028  0519  083E               	movf	sprintf@width^(0+128),w
 10029  051A  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10030  051B  1D03               	btfss	3,2
 10031  051C  2D1E               	goto	u5591
 10032  051D  2D1F               	goto	u5590
 10033  051E                     u5591:
 10034  051E  2D08               	goto	l3354
 10035  051F                     u5590:
 10036  051F                     l3360:
 10037                           
 10038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10039  051F  3003               	movlw	3
 10040  0520  053C               	andwf	sprintf@flag^(0+128),w
 10041  0521  00A8               	movwf	??_sprintf^(0+128)
 10042  0522  3000               	movlw	0
 10043  0523  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10044  0524  00A9               	movwf	(??_sprintf+1)^(0+128)
 10045  0525  0828               	movf	??_sprintf^(0+128),w
 10046  0526  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10047  0527  1903               	btfsc	3,2
 10048  0528  2D2A               	goto	u5601
 10049  0529  2D2B               	goto	u5600
 10050  052A                     u5601:
 10051  052A  2D35               	goto	l3366
 10052  052B                     u5600:
 10053  052B                     l3362:
 10054                           
 10055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10056  052B  302D               	movlw	45
 10057  052C  00A8               	movwf	??_sprintf^(0+128)
 10058  052D  0846               	movf	sprintf@sp^(0+128),w
 10059  052E  0084               	movwf	4
 10060  052F  0828               	movf	??_sprintf^(0+128),w
 10061  0530  1383               	bcf	3,7	;select IRP bank0
 10062  0531  0080               	movwf	0
 10063  0532  160A  118A  2D14   	goto	l3084
 10064  0535                     l3366:
 10065                           
 10066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10067  0535  3001               	movlw	1
 10068  0536  1283               	bcf	3,5	;RP0=0, select bank0
 10069  0537  1303               	bcf	3,6	;RP1=0, select bank0
 10070  0538  07EA               	addwf	sprintf@f,f
 10071  0539  30FF               	movlw	-1
 10072  053A  076A               	addwf	sprintf@f,w
 10073  053B  0084               	movwf	4
 10074  053C  160A  118A  2000  120A  118A  	fcall	stringdir
 10075  0541  1683               	bsf	3,5	;RP0=1, select bank1
 10076  0542  1303               	bcf	3,6	;RP1=0, select bank1
 10077  0543  00A8               	movwf	??_sprintf^(0+128)
 10078  0544  0828               	movf	??_sprintf^(0+128),w
 10079  0545  00C7               	movwf	sprintf@c^(0+128)
 10080  0546  0847               	movf	sprintf@c^(0+128),w
 10081  0547  1D03               	btfss	3,2
 10082  0548  2D4A               	goto	u5611
 10083  0549  2D4D               	goto	u5610
 10084  054A                     u5611:
 10085  054A  160A  118A  2D07   	goto	l3080
 10086  054D                     u5610:
 10087  054D                     l3368:
 10088                           
 10089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10090  054D  0846               	movf	sprintf@sp^(0+128),w
 10091  054E  0084               	movwf	4
 10092  054F  1383               	bcf	3,7	;select IRP bank0
 10093  0550  0180               	clrf	0
 10094  0551                     l317:
 10095  0551  0008               	return
 10096  0552                     __end_of_sprintf:

Data Sizes:
    Strings     6
    Constant    144
    Data        0
    BSS         11
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     43      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> s(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    envio_caract@st	PTR unsigned char  size(1) Largest target is 10
		 -> s(BANK1[10]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flsub->___xxtofl
    _envio_caract->_envio_char
    _conversion->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversion->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   32107
                                             40 BANK1      3     3      0
                         _conversion
                       _envio_caract
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31443
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _envio_caract                                         4     4      0     145
                                              4 COMMON     4     4      0
                         _envio_char
 ---------------------------------------------------------------------------------
 (2) _envio_char                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                          13     9      4     519
                                              6 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion
     ___xxtofl
   _envio_caract
     _envio_char
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      39       7       71.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      94      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 18 23:48:12 2021

                      _f 00D5                        _s 00CB                        pc 0002  
                     l92 1D34                       l86 1ECF                       l95 1C36  
                     l98 1C3E             ___awdiv@sign 0025                       fsr 0004  
    ___wmul@multiplicand 0075      __Umul8_16@word_mpld 0022                      l104 1C71  
                    l107 1CBE                      l216 0FFF                      l321 07E6  
                    l209 14FC                      l323 07FE                      l244 15F9  
                    l317 0551                      l229 151E                      l502 092E  
                    l512 10F1                      l520 10A9                      l281 029E  
                    l507 1D99                      l515 115D                      l531 0868  
                    l508 1DB5                      l516 1176                      l524 087D  
                    l509 1DCA                      l357 1F96                      l534 087D  
                    l542 12B2                      l296 044B                      l288 02E4  
                    l801 11FC                      l802 1208                      l538 12EF  
                    l474 1FFF                      l491 093B                      l539 1261  
                    l627 1D7A                      l652 065C                      l492 08A0  
                    l661 07D9                      l549 12E2                      l637 1CF8  
                    l654 0633                      l750 0C08                      l495 08FE  
                    l487 1EC9                      l648 05B5                      l744 0C9C  
                    l808 1C50                      l673 074B                      l577 1E70  
                    l690 07CD                      l682 07AB                      l691 07D9  
                    l763 10C0                      l756 0C90                      l669 0727  
                    l765 10D2                      l790 1232                      l694 1E1A  
                    l679 076D                      l794 11E0                      l788 119B  
                    _isr 1C72                      fsr0 0004                      indf 0000  
           ___awmod@sign 0079             ___flmul@aexp 003A             ___flmul@bexp 003B  
           ___flmul@sign 0035             ___flmul@temp 0040             ___flmul@prod 003C  
           ___fltol@exp1 005F                     l3000 11F2                     l2200 1FA5  
                   l3010 1225                     l3002 11F6                     l2210 1FBA  
                   l2202 1FA9                     l3012 1229                     l3004 1200  
                   l3020 1D00                     l2300 1CBF                     l2220 1FDD  
                   l2212 1FBD                     l2204 1FAE                     l3100 1566  
                   l3014 122A                     l3006 120A                     l3030 1D12  
                   l3022 1D02                     l2310 1CD7                     l2302 1CC5  
                   l2230 1FF6                     l2222 1FE3                     l2214 1FC4  
                   l2206 1FB2                     l3110 15A4                     l3102 157D  
                   l3008 1220                     l3040 1D19                     l3032 1D13  
                   l3024 1D0D                     l2400 05FF                     l2312 1CE1  
                   l2304 1CC8                     l2232 1FFB                     l2224 1FE4  
                   l2216 1FC8                     l2208 1FB4                     l2240 1E76  
                   l3200 00E5                     l3120 15E1                     l3112 15AA  
                   l3104 1583                     l3050 1D20                     l3042 1D1A  
                   l3034 1D14                     l3026 1D10                     l3018 1CF9  
                   l2410 0642                     l2402 0600                     l2330 0564  
                   l2322 0552                     l2314 1CE7                     l2306 1CCF  
                   l2226 1FEB                     l2218 1FCC                     l2250 1E8C  
                   l2242 1E7B                     l3202 011A                     l3130 1619  
                   l3114 15AF                     l3122 15F3                     l3106 1593  
                   l3060 1D27                     l3052 1D21                     l3044 1D1B  
                   l3036 1D15                     l3028 1D11                     l2500 07B5  
                   l2420 0660                     l2412 0646                     l2404 0617  
                   l2332 0569                     l2340 0579                     l2324 0559  
                   l2180 10AF                     l2316 1CEE                     l2308 1CD3  
                   l2228 1FF1                     l2260 1EA8                     l2252 1E8F  
                   l2244 1E7D                     l2236 1E71                     l3300 042A  
                   l3220 01A9                     l3212 014D                     l3204 0149  
                   l3140 1641                     l3132 1627                     l3124 15F7  
                   l3116 15C4                     l3108 15A1                     l3070 1D31  
                   l3062 1D2B                     l3054 1D22                     l3046 1D1E  
                   l3038 1D18                     l2510 07C9                     l2502 07BD  
                   l2430 0689                     l2422 0665                     l2414 0647  
                   l2406 0637                     l2350 0593                     l2342 0581  
                   l2334 056E                     l2326 055F                     l2182 10B6  
                   l2318 1CF4                     l2270 1EC5                     l2262 1EAE  
                   l2254 1E96                     l2246 1E81                     l2238 1E72  
                   l3310 0456                     l3302 0430                     l3230 01D1  
                   l3222 01AF                     l3206 014B                     l3150 1694  
                   l3142 165A                     l3134 162B                     l3118 15DB  
                   l3072 1C99                     l3064 1D2C                     l3056 1D23  
                   l3048 1D1F                     l2512 07D4                     l2504 07C2  
                   l2440 069D                     l2432 068D                     l2416 0650  
                   l2408 0640                     l2360 05AA                     l2352 0597  
                   l2344 0586                     l2336 0576                     l2328 0563  
                   l2184 10BA                     l2600 0BBD                     l2520 0949  
                   l2280 1D42                     l2192 1F97                     l2264 1EB5  
                   l2256 1E9A                     l2248 1E86                     l3320 0489  
                   l3312 045D                     l3232 01D8                     l3240 01F0  
                   l3224 01BB                     l3216 0184                     l3160 16DF  
                   l3152 169F                     l3144 1673                     l3136 162F  
                   l3304 0437                     l3128 15FB                     l3080 1507  
                   l3074 1CB6                     l3066 1D2F                     l3058 1D24  
                   l2514 07D8                     l2506 07C3                     l2450 0705  
                   l2442 06A6                     l2434 0696                     l2426 066E  
                   l2418 0654                     l2370 05C3                     l2362 05AB  
                   l2354 0598                     l2346 058C                     l2338 0577  
                   l2186 10C9                     l2178 10AD                     l2610 0BE2  
                   l2602 0BCB                     l2530 0960                     l2522 094D  
                   l2290 1D68                     l2282 1D49                     l2274 1D35  
                   l2194 1F9A                     l2258 1E9E                     l2266 1EBB  
                   l3330 04AE                     l3322 048F                     l3314 046C  
                   l3306 043D                     l3250 021E                     l3242 01FE  
                   l3234 01DD                     l3226 01C1                     l3218 018E  
                   l3170 1771                     l3162 16E5                     l3154 16A5  
                   l3146 1677                     l3138 163D                     l3082 150D  
                   l3410 1EEF                     l3068 1D30                     l2508 07C7  
                   l2452 070A                     l2436 0698                     l2428 0685  
                   l2444 06AB                     l2380 05D7                     l2372 05C7  
                   l2356 059D                     l2364 05AD                     l2348 058D  
                   l2188 10CE                     l2620 0C05                     l2604 0BD4  
                   l2612 0BE8                     l2540 0979                     l2532 0962  
                   l2524 094E                     l2516 093C                     l2292 1D69  
                   l2284 1D4D                     l2276 1D39                     l2196 1F9E  
                   l2268 1EC0                     l2700 0E53                     l3340 04D9  
                   l3332 04B9                     l3324 0493                     l3316 0475  
                   l3308 0445                     l3260 0292                     l3252 022C  
                   l3244 0207                     l3236 01E6                     l3228 01C5  
                   l3180 0022                     l3172 178C                     l3164 1704  
                   l3156 16B8                     l3148 167B                     l3092 1525  
                   l3084 1514                     l3412 1F13                     l2470 0752  
                   l2462 073D                     l2446 06C1                     l2454 0719  
                   l2438 069C                     l2390 05EB                     l2382 05DB  
                   l2374 05CB                     l2366 05BB                     l2358 05A2  
                   l2630 0C24                     l2614 0BEC                     l2606 0BD8  
                   l2550 098E                     l2542 097A                     l2534 096A  
                   l2526 0953                     l2518 0943                     l2294 1D70  
                   l2286 1D51                     l2278 1D3F                     l2198 1FA3  
                   l2710 0F4B                     l2702 0E5A                     l3350 04F5  
                   l3342 04E0                     l3334 04C5                     l3326 04A1  
                   l3318 047D                     l3270 02C8                     l3262 02A8  
                   l3254 0233                     l3246 020B                     l3238 01EA  
                   l3190 0097                     l3182 003D                     l3166 174F  
                   l3158 16DB                     l3174 1794                     l3094 153B  
                   l3086 1519                     l3078 1500                     l3414 1F17  
                   l2480 0760                     l2472 0754                     l2464 0746  
                   l2456 072F                     l2448 06FF                     l2392 05EF  
                   l2384 05DF                     l2376 05CF                     l2368 05BF  
                   l2800 08BC                     l2640 0C6A                     l2632 0C3D  
                   l2624 0C0D                     l2616 0BED                     l2608 0BD9  
                   l2560 09A9                     l2552 0996                     l2544 097F  
                   l2536 096F                     l2528 0958                     l2288 1D62  
                   l2296 1D76                     l2720 1C41                     l3360 051F  
                   l3344 04E4                     l3352 0502                     l3336 04C9  
                   l3328 04AA                     l3280 02F9                     l3272 02D7  
                   l3264 02B1                     l3256 0238                     l3248 0211  
                   l3192 009F                     l3184 0064                     l3176 17A3  
                   l3168 1768                     l3096 154D                     l3088 151F  
                   l3416 1F1D                     l3408 1ECA                     l2490 0777  
                   l2482 0764                     l2474 0759                     l2466 074A  
                   l2458 0734                     l2394 05F3                     l2386 05E3  
                   l2378 05D3                     l2810 08EF                     l2802 08C5  
                   l2730 1233                     l2650 0C89                     l2642 0C74  
                   l2626 0C12                     l2634 0C43                     l2618 0BF1  
                   l2570 0A2B                     l2562 09B9                     l2554 099B  
                   l2546 0984                     l2538 0975                     l2722 1C47  
                   l2714 0FD3                     l3362 052B                     l3354 0508  
                   l3346 04EA                     l3338 04CD                     l3290 03D0  
                   l3282 02FD                     l3274 02DE                     l3266 02B5  
                   l3258 0273                     l3194 00BD                     l3186 0073  
                   l3178 17EA                     l3098 1551                     l2900 1175  
                   l2492 0785                     l2484 076A                     l2468 074F  
                   l2476 075B                     l2396 05F7                     l2388 05E7  
                   l2820 090A                     l2812 08F8                     l2804 08CE  
                   l2732 1246                     l2652 0C94                     l2644 0C76  
                   l2636 0C50                     l2628 0C20                     l2580 0A99  
                   l2572 0A47                     l2564 09C6                     l2556 09A0  
                   l2548 098C                     l2660 12F3                     l2724 1C4D  
                   l2708 0F44                     l3356 050F                     l3348 04F1  
                   l3292 03DC                     l3284 031B                     l3276 02ED  
                   l3268 02BB                     l3188 008E                     l3390 1C66  
                   l2494 0789                     l2478 075F                     l2398 05FB  
                   l2830 0933                     l2814 0902                     l2822 091C  
                   l2806 08E0                     l2750 1282                     l2742 1262  
                   l2646 0C84                     l2638 0C5B                     l2590 0B29  
                   l2582 0AA9                     l2574 0A63                     l2566 09E3  
                   l2670 140E                     l2662 12F9                     l2726 1C4F  
                   l2718 1C40                     l3358 0513                     l3286 0376  
                   l3294 0417                     l3278 02F2                     l3198 00DC  
                   l3366 0535                     l2656 1C36                     l3384 1C52  
                   l2904 109F                     l2496 07A7                     l2488 0772  
                   l2920 082D                     l2912 0802                     l2840 07ED  
                   l2808 08EE                     l2760 12AC                     l2752 128B  
                   l2744 1268                     l2736 124F                     l2648 0C88  
                   l2592 0B39                     l2584 0AC6                     l2576 0A6C  
                   l2568 09FF                     l2680 0CA4                     l3296 041F  
                   l3288 03B1                     l3368 054D                     l3480 1611  
                   l2658 1C3C                     l3386 1C55                     l2906 10A7  
                   l2498 07B0                     l2922 082E                     l2914 080F  
                   l2850 1F41                     l2842 07F4                     l2834 07DA  
                   l2762 12B6                     l2770 12D0                     l2754 1299  
                   l2746 1277                     l2594 0B66                     l2586 0ADF  
                   l2578 0A7C                     l2674 14B9                     l2690 0D97  
                   l2682 0CA6                     l3298 0426                     l3388 1C60  
                   l2908 10A9                     l2924 0836                     l2860 1F70  
                   l2852 1F44                     l2844 07FA                     l2836 07DC  
                   l2828 0923                     l2756 12A3                     l2748 1279  
                   l2596 0B8C                     l2588 0AFC                     l2668 1408  
                   l2692 0D9E                     l2684 0CAD                     l2942 085D  
                   l2934 0844                     l2926 0838                     l2918 0818  
                   l2862 1F7E                     l2854 1F51                     l2950 1E23  
                   l2838 07E0                     l2782 087E                     l2758 12A4  
                   l2598 0BB4                     l2678 0CA0                     l3478 1536  
                   l2880 1DC9                     l2872 1D7B                     l2944 086D  
                   l2928 083C                     l2936 0856                     l2864 1F7F  
                   l2856 1F55                     l2848 1F2F                     l2960 1E59  
                   l2952 1E28                     l2784 088B                     l2776 12D7  
                   l2768 12BE                     l2696 0E26                     l2874 1D91  
                   l2890 110D                     l2970 1DCF                     l2946 0872  
                   l2866 1F88                     l2858 1F5E                     l2962 1E62  
                   l2954 1E35                     l2794 08A1                     l2778 12E7  
                   l2980 1193                     l2876 1DAD                     l2892 1111  
                   l2884 10D3                     l2868 1F8E                     l2956 1E39  
                   l2964 1E68                     l2948 1E1B                     l2796 08A9  
                   l2788 0894                     l2990 11BE                     l2982 11A3  
                   l2974 117A                     l2878 1DC7                     l2894 1135  
                   l2886 10E9                     l2958 1E4B                     l2798 08BA  
                   l2992 11C5                     l2976 117F                     l2896 1139  
                   l2888 1105                     l2968 1DCB                     l2994 11C9  
                   l2986 11AC                     l2978 1183                     l2898 1173  
                   l2996 11D7                     l2988 11B1                     l2998 11E7  
                   ?_isr 0070                     STR_1 1096                     u3010 1E9E  
                   u3011 1E9D                     u3100 1D62                     u3020 1EA8  
                   u3101 1D61                     u3021 1EA7                     u3005 1E90  
                   u3200 0569                     u4000 0C6A                     u3120 1D76  
                   u3040 1EBB                     u3201 0568                     u4001 0C69  
                   u3121 1D75                     u3105 1D5E                     u3041 1EBA  
                   u3025 1EA4                     u3210 056E                     u4010 0C88  
                   u3130 1CC5                     u3050 1EC0                     u3211 056D  
                   u4011 0C87                     u3115 1D6A                     u3131 1CC4  
                   u3051 1EBF                     u3035 1EAF                     u4020 1C3C  
                   u3300 0623                     u3220 058C                     u3060 1D3F  
                   u4021 1C3B                     u3221 058B                     u4005 0C66  
                   u3061 1D3E                     u3310 0637                     u3230 0597  
                   u3150 1CD7                     u4030 12F9                     u4110 0CA4  
                   u3311 0636                     u3231 0596                     u3151 1CD6  
                   u4031 12F8                     u4111 0CA3                     u5000 11E6  
                   u3400 069C                     u3320 0646                     u3240 059D  
                   u3080 1D51                     u3160 1CE1                     u4200 0E5A  
                   u4120 0CAD                     u5001 11E5                     u3401 069B  
                   u3321 0645                     u3241 059C                     u3081 1D50  
                   u3161 1CE0                     u3145 1CC9                     u4105 14C4  
                   u4201 0E59                     u4121 0CAC                     u3250 05A2  
                   u3251 05A1                     u3075 1D43                     u5020 11F6  
                   u3500 074F                     u3420 06C1                     u3340 065C  
                   u3260 05BB                     u4300 1246                     u3180 1CF4  
                   u5100 1593                     u5021 11F5                     u3501 074E  
                   u3421 06C0                     u3341 065B                     u3261 05BA  
                   u4301 1245                     u3181 1CF3                     u3165 1CDD  
                   u4045 1316                     u5101 1592                     u5030 11FC  
                   u3510 0759                     u3350 0660                     u3270 05BF  
                   u3190 0563                     u4310 1260                     u4070 140E  
                   u5110 15A1                     u5031 11FB                     u5015 11EB  
                   u3511 0758                     u3431 06D8                     u3423 06BD  
                   u3415 069F                     u3351 065F                     u3335 0649  
                   u3271 05BE                     u3191 0562                     u4311 125F  
                   u3095 1D52                     u3175 1CE8                     u4071 140D  
                   u4055 1372                     u4215 0E7C                     u4135 0CCF  
                   u5111 15A0                     u5040 1200                     u3600 07B0  
                   u3520 075F                     u3440 06EC                     u3432 06D9  
                   u3360 0665                     u3280 0617                     u4400 12D6  
                   u4240 0F4B                     u4160 0D9E                     u5200 17A3  
                   u5120 15F2                     u5041 11FF                     u3601 07AF  
                   u3521 075E                     u3441 06ED                     u3433 06DE  
                   u3361 0664                     u3281 0616                     u4401 12D5  
                   u4065 13C7                     u4241 0F4A                     u4225 0EB8  
                   u4161 0D9D                     u4145 0D0B                     u5201 17A2  
                   u5121 15F1                     u5050 1215                     u3610 07B5  
                   u3530 0764                     u3450 070A                     u3442 06F2  
                   u3434 06DF                     u3290 0622                     u4330 1299  
                   u5210 0022                     u5130 1627                     u3611 07B4  
                   u3531 0763                     u3451 0709                     u3443 06F3  
                   u3435 06E4                     u3371 0677                     u3291 0620  
                   u4331 1298                     u4235 0F03                     u4155 0D56  
                   u5211 17FA                     u5131 1624                     u5060 1225  
                   u3620 07C2                     u3540 076A                     u3460 072F  
                   u3436 06E5                     u3380 0689                     u3372 067E  
                   u4500 0909                     u4420 12E7                     u3700 0984  
                   u5300 01BB                     u5220 003D                     u5140 162B  
                   u5061 1224                     u3621 07C1                     u3541 0769  
                   u3461 072E                     u3381 0688                     u3373 0685  
                   u3285 0613                     u4501 0908                     u4421 12E6  
                   u4325 1284                     u3701 0983                     u4085 142B  
                   u5301 01BA                     u5221 003C                     u5205 179F  
                   u5141 162A                     u5070 1229                     u3630 07C7  
                   u3550 0771                     u3470 0734                     u3390 068D  
                   u4430 088B                     u4350 12B2                     u3710 099B  
                   u2910 1FCC                     u5310 01C5                     u5230 0064  
                   u5150 165A                     u5071 1228                     u5055 1210  
                   u3631 07C6                     u3551 0770                     u3471 0733  
                   u3391 068C                     u4431 088A                     u4415 12D9  
                   u4351 12B1                     u4335 1295                     u3711 099A  
                   u4095 1478                     u2911 1FCB                     u4255 0F5E  
                   u4175 0DB1                     u5311 01C4                     u5231 0063  
                   u5215 17F5                     u5151 1659                     u3640 07D8  
                   u3560 0777                     u4600 1F41                     u4520 091B  
                   u4440 089F                     u4360 12B6                     u2840 10BA  
                   u3720 09A0                     u4280 1C47                     u5400 02F2  
                   u5320 01D1                     u5240 0073                     u5160 1694  
                   u5080 150D                     u3641 07D7                     u3561 0776  
                   u4601 1F40                     u4521 091A                     u4441 089E  
                   u4361 12B5                     u4345 12A5                     u2841 10B9  
                   u3721 099F                     u4281 1C46                     u2905 1FBE  
                   u4265 0F9A                     u4185 0DED                     u5401 02F1  
                   u5321 01D0                     u5241 0072                     u5161 1693  
                   u5081 150C                     u3570 0789                     u3490 074A  
                   u4530 0922                     u4370 12BD                     u3650 094D  
                   u4290 1C4D                     u2930 1FDD                     u5330 01FD  
                   u5250 008E                     u5170 16DF                     u5090 154D  
                   u3571 0788                     u3491 0749                     u4531 0921  
                   u4515 090B                     u4371 12BC                     u3811 0AEE  
                   u3731 09F1                     u3651 094C                     u4291 1C4C  
                   u2931 1FDC                     u4275 0FD6                     u4195 0E29  
                   u5331 01FC                     u5251 008D                     u5171 16DE  
                   u5091 154C                     u4700 10E9                     u3580 0798  
                   u4620 1F55                     u4460 08E0                     u2860 10CE  
                   u3900 0BD8                     u3812 0AF5                     u3732 09F8  
                   u3660 0953                     u5500 0489                     u5340 021E  
                   u5180 1768                     u4701 10E8                     u3485 073F  
                   u4621 1F54                     u4461 08DF                     u2861 10CD  
                   u3901 0BD7                     u3821 0B1B                     u3813 0AFC  
                   u3805 0AC8                     u3741 0A0D                     u3733 09FF  
                   u3661 0952                     u2925 1FCD                     u5501 0488  
                   u5341 021D                     u5245 006F                     u5181 1767  
                   u4710 1105                     u3590 07A7                     u4550 0933  
                   u4390 12CF                     u3822 0B22                     u3742 0A14  
                   u3670 0958                     u2950 1FF1                     u2870 1F9E  
                   u5510 0493                     u5430 041E                     u5350 022C  
                   u5270 0183                     u5190 178C                     u4711 1104  
                   u3591 07A6                     u4615 1F46                     u4551 0932  
                   u4455 08C7                     u4391 12CE                     u2855 10C1  
                   u3831 0B48                     u3823 0B29                     u3751 0A39  
                   u3743 0A1B                     u3671 0957                     u2951 1FF0  
                   u2935 1FD9                     u2871 1F9D                     u5511 0492  
                   u5431 041D                     u5415 0379                     u5351 022B  
                   u5335 01F9                     u5271 0182                     u5191 178B  
                   u4720 1111                     u4800 083C                     u4640 1F70  
                   u4560 07E0                     u4480 08FE                     u3920 0BEC  
                   u3840 0B72                     u3832 0B4F                     u3752 0A40  
                   u3680 0979                     u2960 1FF6                     u2880 1FA9  
                   u5600 052B                     u5520 04A1                     u5440 0436  
                   u5280 018E                     u4721 1110                     u3585 0793  
                   u4801 083B                     u4641 1F6F                     u4561 07DF  
                   u4545 0925                     u4481 08FD                     u4465 08DC  
                   u4385 12BF                     u3921 0BEB                     u3833 0B56  
                   u3761 0A55                     u3753 0A47                     u3681 0978  
                   u2961 1FF5                     u2945 1FE5                     u2881 1FA8  
                   u5601 052A                     u5521 04A0                     u5441 0435  
                   u5425 03DF                     u5345 021A                     u5281 018D  
                   u5265 0150                     u4810 0843                     u4490 0902  
                   u3930 0BF1                     u3762 0A5C                     u3690 097F  
                   u2890 1FBA                     u2970 1E76                     u5610 054D  
                   u5530 04B9                     u5450 043D                     u5370 02A7  
                   u5290 01A9                     u4731 1120                     u4811 0842  
                   u4635 1F57                     u4491 0901                     u4475 08F1  
                   u3931 0BF0                     u3915 0BDB                     u3851 0B7E  
                   u3763 0A63                     u3691 097E                     u2891 1FB9  
                   u2971 1E75                     u5611 054A                     u5531 04B8  
                   u5451 043C                     u5371 02A6                     u5291 01A8  
                   u5275 017F                     u5620 1C71                     u4740 1139  
                   u4732 1121                     u4660 1F8E                     u4900 1E39  
                   u3940 0C05                     u3860 0B9A                     u3852 0B85  
                   u2980 1E81                     u5540 04CD                     u5460 0445  
                   u5380 02C8                     u5621 1C70                     u4741 1138  
                   u4733 1126                     u4661 1F8D                     u4645 1F6C  
                   u4901 1E38                     u3941 0C04                     u3853 0B8C  
                   u3845 0B6D                     u3781 0A8B                     u2981 1E80  
                   u5541 04CC                     u5525 049D                     u5461 0444  
                   u5381 02C7                     u5365 023B                     u4670 1D91  
                   u4734 1127                     u4830 0855                     u4910 1E4B  
                   u4590 07FA                     u3950 0C0C                     u3782 0A92  
                   u2990 1E8C                     u5550 04D9                     u5470 0456  
                   u5390 02D7                     u4671 1D90                     u4751 1148  
                   u4735 112C                     u4831 0854                     u4655 1F80  
                   u4911 1E4A                     u4591 07F9                     u4575 07E7  
                   u3951 0C0B                     u3871 0BA6                     u3791 0AB8  
                   u3783 0A99                     u3775 0A65                     u2991 1E8B  
                   u5551 04D8                     u5535 04B5                     u5471 0455  
                   u5391 02D6                     u4680 1DAD                     u4760 1173  
                   u4752 1149                     u4736 112D                     u4840 085C  
                   u3960 0C12                     u3872 0BAD                     u3792 0ABF  
                   u5560 04EA                     u5480 046C                     i1l81 1C8F  
                   u4681 1DAC                     u4761 1172                     u4753 114E  
                   u4841 085B                     u4825 0845                     u4585 07EE  
                   u3961 0C11                     u3873 0BB4                     u3865 0B95  
                   u3793 0AC6                     u5561 04E9                     u5481 046B  
                   u5385 02C4                     u4690 1DC7                     u4754 114F  
                   u4770 10A7                     u4930 1E68                     u3970 0C24  
                   u5570 0501                     u5490 047D                     u4691 1DC6  
                   u4755 1154                     u4771 10A6                     u4931 1E67  
                   u4915 1E47                     u3971 0C23                     u5571 0500  
                   u5491 047C                     u5475 0452                     u5395 02D3  
                   u4940 117F                     u4756 1155                     u4860 086D  
                   u4780 080F                     u3980 0C33                     u5580 0508  
                   u4941 117E                     u4765 116F                     u4861 086C  
                   u4781 080E                     u4925 1E5A                     u3885 0BB6  
                   u5581 0507                     u5485 0468                     u4950 1183  
                   u4870 0872                     u4790 0826                     u3990 0C50  
                   u5590 051F                     u4951 1182                     u4695 1DC3  
                   u4871 0871                     u4855 085F                     u3991 0C4F  
                   u3895 0BCD                     u5591 051E                     u4960 11A3  
                   u4880 1E23                     u4961 11A2                     u4881 1E22  
                   u3985 0C2E                     u4795 0821                     u3995 0C4C  
                   u4980 11C4                     u4981 11C3                     u5677 1F25  
                   u4975 11B6                     u4895 1E2A                     u4995 11D8  
                   _TXIF 0064                     _main 1ECA                     btemp 007E  
                   start 000C             _sprintf$1133 00AD                    ??_isr 0070  
          ___fltol@sign1 005E          __end_of___fladd 07DA                    ?_main 0070  
        __end_of___awdiv 2000          __end_of___flneg 10AA          __end_of___awmod 1ECA  
        __end_of___flmul 0C9D          __end_of___flsub 1E1B          __end_of___fltol 087E  
                  _ANSEL 0188          __end_of___lldiv 1F97          ___awdiv@divisor 0020  
        __end_of___llmod 1E71          __end_of___lwdiv 1D7B          __end_of___lwmod 1CF9  
        ___awdiv@counter 0024                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019          __end_of_dpowers 1096  
                  _scale 0C9D          __end_of_isdigit 1C51                    _setup 1CF9  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0552            ?_envio_caract 0070          __initialization 000F  
           __end_of_main 1F2F                   ??_main 00C8     __size_of__tdiv_to_l_ 00BD  
       ___llmod@dividend 0077                   ?_scale 0042         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l3400 1C84  
                 i1l3402 1C86                   i1l3404 1C87                   i1l3406 1C8D  
                 i1l3392 1C72                   i1l3394 1C76                   i1l3396 1C7C  
                 i1l3398 1C80                   u563_20 1C76                   u563_21 1C75  
                 u564_20 1C7C                   u564_21 1C7B                   u565_20 1C84  
                 u565_21 1C83                   u566_20 1C8D                   u566_21 1C8C  
                 _SPBRGH 009A         __end_of___xxtofl 1233           ??_envio_caract 0074  
       __end_of__powers_ 103A                   ___flge 10D3                   ___fleq 1D7B  
              ??___fladd 005E                   ___wmul 07DA                ??___awdiv 007A  
              ??___flneg 0077                ??___awmod 0077                ??___flmul 0030  
              ??___flsub 007B                ??___fltol 0059                ??___lldiv 0020  
              ??___llmod 0020                ??___lwdiv 0079                ??___lwmod 0077  
                 _fround 12F0         ___awdiv@quotient 0026          ___awmod@divisor 0073  
        ___awmod@counter 0078                ??_isdigit 0073       __size_of__Umul8_16 0029  
                 saved_w 007E                ??_sprintf 00A8               ___flge@ff1 0073  
             ___flge@ff2 0077             ___xxtofl@arg 0022             ___xxtofl@exp 0021  
           ___xxtofl@val 0073               ___fleq@ff1 0073               ___fleq@ff2 0077  
__end_of__initialization 001E               ___flneg@f1 0073               ___fltol@f1 0055  
         __pcstackCOMMON 0070            __end_of_scale 1000            __end_of_setup 1D35  
             __div_to_l_ 087E           _OPTION_REGbits 0081          __div_to_l_@exp1 0026  
        __div_to_l_@cntr 0025                  ??_scale 0046          __div_to_l_@quot 0021  
           sprintf@width 00BE                  ??_setup 0073               __pbssBANK0 006F  
             __pbssBANK1 00CB           envio_char@dato 0073            __div_to_l_@f1 0073  
          __div_to_l_@f2 0077           envio_caract@st 0077        __end_of__Umul8_16 10D3  
             __pmaintext 1ECA                  ?___flge 0073                  ?___fleq 0073  
                ?___wmul 0073               __pintentry 0004                  ?_fround 0042  
              ?___xxtofl 0073     __end_of_envio_caract 1C72               __stringtab 1000  
             _conversion 1C96        __end_of__npowers_ 106E               _scale$1132 0050  
             _envio_char 1C35          __size_of___flge 00A4          __size_of___fleq 0050  
                ___fladd 0552                  ___awdiv 1F97                  ___flneg 109F  
                ___awmod 1E71                  ___flmul 093C                  ___flsub 1DCB  
                ___fltol 0802                  ___lldiv 1F2F          __size_of___wmul 0025  
                ___llmod 1E1B                  ___lwdiv 1D35                  ___lwmod 1CBF  
        __size_of_fround 020D                  __ptext1 14FD                  __ptext2 0C9D  
                __ptext3 1E71                  __ptext4 1F97                  __ptext5 1C3F  
                __ptext6 12F0                  __ptext7 1CBF                  __ptext8 1D35  
                __ptext9 093C              ?__div_to_l_ 0073                  _dpowers 106E  
                _isdigit 1C3F             __size_of_isr 0024               ??___xxtofl 0077  
       ___awmod@dividend 0075                  _sprintf 14FD     end_of_initialization 001E  
        ___lldiv@divisor 0073          ___lldiv@counter 0025                _RCSTAbits 0018  
                psplit$0 B0028           __tdiv_to_l_@f1 0073           __tdiv_to_l_@f2 0077  
          ??__tdiv_to_l_ 0020                _PORTBbits 0006              ___fladd@grs 0069  
          ___xxtofl@sign 0020              ___flmul@grs 0036              ?_conversion 0026  
              _TXSTAbits 0098      __size_of__div_to_l_ 00BE              ?_envio_char 0070  
         __end_of___flge 1177           __end_of___fleq 1DCB           __end_of___wmul 07FF  
  __size_of_envio_caract 0021        pnum$text1_split_1 0028              _BAUDCTLbits 0187  
         __end_of_fround 14FD      start_initialization 000F      __end_of__tdiv_to_l_ 12F0  
            __end_of_isr 1C96          ___llmod@divisor 0073          ___llmod@counter 0021  
           _envio_caract 1C51                 ??___flge 0020                 ??___fleq 0020  
               ??___wmul 0077                __Umul8_16 10AA                 ??_fround 0046  
          sprintf@tmpval 00B6                ___fladd@a 005A                ___fladd@b 0056  
    __size_of_conversion 0029               fround@prec 0055                ___flmul@a 002C  
              ___flmul@b 0028                ___flsub@a 00A0                ___flsub@b 00A4  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
    __size_of_envio_char 000A        __size_of___xxtofl 00BC              sprintf@flag 00BC  
            sprintf@eexp 00BA              sprintf@fval 00C0              sprintf@prec 00C4  
              __pnvBANK1 00D5            envio_caract@i 0075         ___lwdiv@dividend 0022  
               ?___fladd 0056                 ?___awdiv 0020                 ?___flneg 0073  
               ?___awmod 0073                 ?___flmul 0028                 ?___flsub 00A0  
               ?___fltol 0055                 ?___lldiv 0073                 ?___llmod 0073  
              __npowers_ 103A               ?__Umul8_16 0073                 ?___lwdiv 0020  
               ?___lwmod 0073                __pstrings 1000              __tdiv_to_l_ 1233  
           ??__div_to_l_ 0020                 ?_isdigit 0070         ___lwdiv@quotient 0024  
               ?_sprintf 006A           __size_of_scale 0363           __size_of_setup 003C  
      interrupt_function 0004           ___wmul@product 0077                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C       __end_of__div_to_l_ 093C  
            __stringbase 1005        ___wmul@multiplier 0073                 _WPUBbits 0095  
           ??_conversion 002A          conversion@valor 0032             ??_envio_char 0073  
            ??__Umul8_16 0075         __size_of___fladd 0288         __size_of___awdiv 0069  
       __size_of___flneg 000B         __size_of___awmod 0059         __size_of___flmul 0361  
       __size_of___flsub 0050         __size_of___fltol 007C         __size_of___lldiv 0068  
       __size_of___llmod 0056         __size_of___lwdiv 0046         __size_of___lwmod 003A  
            _fround$1130 0051              _fround$1131 004D       __end_of__stringtab 1006  
            _isdigit$959 0073               sprintf@val 00B2       __end_of_conversion 1CBF  
               ___xxtofl 1177         __size_of_isdigit 0012          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0026                 __ptext10 10AA                 __ptext11 1233  
               __ptext20 10D3                 __ptext12 087E                 __ptext21 1D7B  
               __ptext13 07DA                 __ptext22 1CF9                 __ptext14 1E1B  
               __ptext23 1C51                 __ptext15 1F2F                 __ptext24 1C35  
               __ptext16 0802                 __ptext25 1C96                 __ptext17 1DCB  
               __ptext26 1177                 __ptext18 0552                 __ptext27 1C72  
               __ptext19 109F                 __powers_ 1006       __end_of_envio_char 1C3F  
               _contador 006F         __size_of_sprintf F055            __size_of_main 0065  
              pnum$text1 000B           conversion@dato 002E               _INTCONbits 000B  
               isdigit@c 0074                 scale@scl 0054                 intlevel1 0000  
              sprintf@ap 00B1         __tdiv_to_l_@exp1 0029         __tdiv_to_l_@cntr 0028  
              sprintf@sp 00C6         __tdiv_to_l_@quot 0024         ___lwmod@dividend 0075  
       ___lldiv@dividend 0077                stringcode 1000               _OSCCONbits 008F  
           ?__tdiv_to_l_ 0073   __Umul8_16@multiplicand 0073                 sprintf@c 00C7  
               sprintf@f 006A         ___lldiv@quotient 0021          ___lwmod@divisor 0073  
        ___lwmod@counter 0078                 stringdir 1000                 stringtab 1000  
          ___fladd@signs 0066             ___fladd@aexp 0067             ___fladd@bexp 0068  
   __Umul8_16@multiplier 0024        __Umul8_16@product 0020  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 08 15:32:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377                           
   378                           	psect	strings
   379  0003                     __pstrings:
   380  0003                     stringtab:
   381  0003                     __stringtab:
   382                           
   383                           ;	String table - string pointers are 1 byte each
   384  0003  1BFF               	btfsc	btemp+1,7
   385  0004  280D               	ljmp	stringcode
   386  0005  1383               	bcf	3,7
   387  0006  187F               	btfsc	btemp+1,0
   388  0007  1783               	bsf	3,7
   389  0008  0800               	movf	0,w
   390  0009  0A84               	incf	4,f
   391  000A  1903               	skipnz
   392  000B  0AFF               	incf	btemp+1,f
   393  000C  0008               	return
   394  000D                     stringcode:
   395  000D                     stringdir:
   396  000D  3000               	movlw	high stringdir
   397  000E  008A               	movwf	10
   398  000F  0804               	movf	4,w
   399  0010  0A84               	incf	4,f
   400  0011  0782               	addwf	2,f
   401  0012                     __stringbase:
   402  0012  3400               	retlw	0
   403  0013                     __end_of__stringtab:
   404  0013                     _dpowers:
   405  0013  3401               	retlw	1
   406  0014  3400               	retlw	0
   407  0015  340A               	retlw	10
   408  0016  3400               	retlw	0
   409  0017  3464               	retlw	100
   410  0018  3400               	retlw	0
   411  0019  34E8               	retlw	232
   412  001A  3403               	retlw	3
   413  001B  3410               	retlw	16
   414  001C  3427               	retlw	39
   415  001D                     __end_of_dpowers:
   416  0009                     _PORTEbits	set	9
   417  0013                     _SSPBUF	set	19
   418  0014                     _SSPCON	set	20
   419  0009                     _PORTE	set	9
   420  0008                     _PORTD	set	8
   421  0007                     _PORTC	set	7
   422  0006                     _PORTB	set	6
   423  0063                     _SSPIF	set	99
   424  005E                     _PEIE	set	94
   425  005F                     _GIE	set	95
   426  0091                     _SSPCON2bits	set	145
   427  0087                     _TRISCbits	set	135
   428  0094                     _SSPSTAT	set	148
   429  0093                     _SSPADD	set	147
   430  0091                     _SSPCON2	set	145
   431  008F                     _OSCCONbits	set	143
   432  0089                     _TRISE	set	137
   433  0088                     _TRISD	set	136
   434  0087                     _TRISC	set	135
   435  0086                     _TRISB	set	134
   436  0463                     _SSPIE	set	1123
   437  043C                     _TRISC4	set	1084
   438  043B                     _TRISC3	set	1083
   439  0189                     _ANSELH	set	393
   440  0188                     _ANSEL	set	392
   441  001D                     STR_1:
   442  001D  3453               	retlw	83	;'S'
   443  001E  3431               	retlw	49	;'1'
   444  001F  343A               	retlw	58	;':'
   445  0020  3420               	retlw	32	;' '
   446  0021  3420               	retlw	32	;' '
   447  0022  3420               	retlw	32	;' '
   448  0023  3453               	retlw	83	;'S'
   449  0024  3432               	retlw	50	;'2'
   450  0025  343A               	retlw	58	;':'
   451  0026  3420               	retlw	32	;' '
   452  0027  3420               	retlw	32	;' '
   453  0028  3420               	retlw	32	;' '
   454  0029  3453               	retlw	83	;'S'
   455  002A  3433               	retlw	51	;'3'
   456  002B  343A               	retlw	58	;':'
   457  002C  3400               	retlw	0
   458  002D                     STR_2:
   459  002D  3425               	retlw	37	;'%'
   460  002E  3475               	retlw	117	;'u'
   461  002F  3400               	retlw	0
   462  002D                     
   463                           	psect	cinit
   464  07ED                     start_initialization:	
   465                           ; #config settings
   466                           
   467  07ED                     __initialization:
   468                           
   469                           ; Clear objects allocated to BANK0
   470  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   471  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   472  07EF  01B0               	clrf	__pbssBANK0& (0+127)
   473  07F0  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   474  07F1  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   475  07F2  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   476  07F3  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   477  07F4  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   478  07F5  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   479  07F6  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   480  07F7  01B8               	clrf	(__pbssBANK0+8)& (0+127)
   481  07F8  01B9               	clrf	(__pbssBANK0+9)& (0+127)
   482  07F9  01BA               	clrf	(__pbssBANK0+10)& (0+127)
   483  07FA  01BB               	clrf	(__pbssBANK0+11)& (0+127)
   484  07FB  01BC               	clrf	(__pbssBANK0+12)& (0+127)
   485  07FC                     end_of_initialization:	
   486                           ;End of C runtime variable initialization code
   487                           
   488  07FC                     __end_of__initialization:
   489  07FC  0183               	clrf	3
   490  07FD  120A  118A  2E9A   	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssBANK0
   493  0030                     __pbssBANK0:
   494  0030                     _contador:
   495  0030                     	ds	1
   496  0031                     _pot:
   497  0031                     	ds	1
   498  0032                     _sensor:
   499  0032                     	ds	1
   500  0033                     _s:
   501  0033                     	ds	10
   502                           
   503                           	psect	cstackCOMMON
   504  0070                     __pcstackCOMMON:
   505  0070                     ?_setup:
   506  0070                     ?_Lcd_Init:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_Lcd_Clear:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_I2C_Master_Start:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_I2C_Master_Start:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_I2C_Master_Write:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_I2C_Master_Stop:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_I2C_Master_Stop:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_main:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_I2C_Master_Wait:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ??_I2C_Master_Wait:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_Lcd_Port:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_Lcd_Port:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_Lcd_Cmd:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_Lcd_Write_Char:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_I2C_Master_Read:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?___lwdiv:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     ?___lldiv:	
   555                           ; 2 bytes @ 0x0
   556                           
   557  0070                     Lcd_Port@a:	
   558                           ; 4 bytes @ 0x0
   559                           
   560  0070                     I2C_Master_Write@d:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     I2C_Master_Read@a:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ___lwdiv@divisor:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ___lldiv@divisor:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 4 bytes @ 0x0
   574  0070                     	ds	1
   575  0071                     ??_Lcd_Cmd:
   576  0071                     ??_Lcd_Write_Char:	
   577                           ; 1 bytes @ 0x1
   578                           
   579                           
   580                           ; 1 bytes @ 0x1
   581  0071                     	ds	1
   582  0072                     ??_I2C_Master_Write:
   583  0072                     ??_I2C_Master_Read:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     Lcd_Write_Char@a:	
   587                           ; 1 bytes @ 0x2
   588                           
   589  0072                     ___lwdiv@dividend:	
   590                           ; 1 bytes @ 0x2
   591                           
   592                           
   593                           ; 2 bytes @ 0x2
   594  0072                     	ds	1
   595  0073                     ?_Lcd_Write_String:
   596  0073                     Lcd_Cmd@a:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0073                     Lcd_Write_String@a:	
   600                           ; 1 bytes @ 0x3
   601                           
   602                           
   603                           ; 2 bytes @ 0x3
   604  0073                     	ds	1
   605  0074                     ??_Lcd_Init:
   606  0074                     ??_Lcd_Clear:	
   607                           ; 1 bytes @ 0x4
   608                           
   609  0074                     ?_Lcd_Set_Cursor:	
   610                           ; 1 bytes @ 0x4
   611                           
   612  0074                     ??___lwdiv:	
   613                           ; 1 bytes @ 0x4
   614                           
   615  0074                     Lcd_Set_Cursor@b:	
   616                           ; 1 bytes @ 0x4
   617                           
   618  0074                     I2C_Master_Read@temp:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0074                     ___lldiv@dividend:	
   622                           ; 2 bytes @ 0x4
   623                           
   624                           
   625                           ; 4 bytes @ 0x4
   626  0074                     	ds	1
   627  0075                     ??_Lcd_Set_Cursor:
   628  0075                     ??_Lcd_Write_String:	
   629                           ; 1 bytes @ 0x5
   630                           
   631  0075                     ___lwdiv@quotient:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 2 bytes @ 0x5
   636  0075                     	ds	1
   637  0076                     Lcd_Set_Cursor@a:
   638                           
   639                           ; 1 bytes @ 0x6
   640  0076                     	ds	1
   641  0077                     Lcd_Set_Cursor@temp:
   642  0077                     ___lwdiv@counter:	
   643                           ; 1 bytes @ 0x7
   644                           
   645                           
   646                           ; 1 bytes @ 0x7
   647  0077                     	ds	1
   648  0078                     ??___lldiv:
   649  0078                     ?___lwmod:	
   650                           ; 1 bytes @ 0x8
   651                           
   652  0078                     Lcd_Write_String@i:	
   653                           ; 2 bytes @ 0x8
   654                           
   655  0078                     ___lwmod@divisor:	
   656                           ; 2 bytes @ 0x8
   657                           
   658                           
   659                           ; 2 bytes @ 0x8
   660  0078                     	ds	1
   661  0079                     ___lldiv@quotient:
   662                           
   663                           ; 4 bytes @ 0x9
   664  0079                     	ds	1
   665  007A                     ___lwmod@dividend:
   666                           
   667                           ; 2 bytes @ 0xA
   668  007A                     	ds	2
   669  007C                     ??___lwmod:
   670                           
   671                           ; 1 bytes @ 0xC
   672  007C                     	ds	1
   673  007D                     ___lldiv@counter:
   674  007D                     ___lwmod@counter:	
   675                           ; 1 bytes @ 0xD
   676                           
   677                           
   678                           ; 1 bytes @ 0xD
   679  007D                     	ds	1
   680  007E                     ??_setup:
   681                           
   682                           	psect	cstackBANK0
   683  0020                     __pcstackBANK0:	
   684                           ; 1 bytes @ 0xE
   685                           
   686  0020                     ?_I2C_Master_Init:
   687  0020                     ?_sprintf:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0020                     sprintf@f:	
   691                           ; 2 bytes @ 0x0
   692                           
   693  0020                     I2C_Master_Init@c:	
   694                           ; 1 bytes @ 0x0
   695                           
   696                           
   697                           ; 4 bytes @ 0x0
   698  0020                     	ds	3
   699  0023                     ??_sprintf:
   700                           
   701                           ; 1 bytes @ 0x3
   702  0023                     	ds	1
   703  0024                     ??_I2C_Master_Init:
   704                           
   705                           ; 1 bytes @ 0x4
   706  0024                     	ds	2
   707  0026                     sprintf@flag:
   708                           
   709                           ; 1 bytes @ 0x6
   710  0026                     	ds	1
   711  0027                     sprintf@ap:
   712                           
   713                           ; 1 bytes @ 0x7
   714  0027                     	ds	1
   715  0028                     sprintf@val:
   716                           
   717                           ; 2 bytes @ 0x8
   718  0028                     	ds	2
   719  002A                     sprintf@prec:
   720                           
   721                           ; 1 bytes @ 0xA
   722  002A                     	ds	1
   723  002B                     sprintf@sp:
   724                           
   725                           ; 1 bytes @ 0xB
   726  002B                     	ds	1
   727  002C                     sprintf@c:
   728                           
   729                           ; 1 bytes @ 0xC
   730  002C                     	ds	1
   731  002D                     ??_main:
   732                           
   733                           ; 1 bytes @ 0xD
   734  002D                     	ds	3
   735                           
   736                           	psect	maintext
   737  069A                     __pmaintext:	
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 55 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : B00/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       3       0       0       0
   760 ;;      Totals:         0       3       0       0       0
   761 ;;Total ram usage:        3 bytes
   762 ;; Hardware stack levels required when called:    3
   763 ;; This function calls:
   764 ;;		_I2C_Master_Read
   765 ;;		_I2C_Master_Start
   766 ;;		_I2C_Master_Stop
   767 ;;		_I2C_Master_Write
   768 ;;		_Lcd_Clear
   769 ;;		_Lcd_Init
   770 ;;		_Lcd_Set_Cursor
   771 ;;		_Lcd_Write_String
   772 ;;		_setup
   773 ;;		_sprintf
   774 ;; This function is called by:
   775 ;;		Startup code after reset
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _main
   781  069A                     _main:
   782  069A                     l1318:	
   783                           ;incstack = 0
   784                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   785                           
   786                           
   787                           ;main.c: 56:     setup();
   788  069A  120A  118A  23DC  120A  118A  	fcall	_setup
   789                           
   790                           ;main.c: 57:     Lcd_Init();
   791  069F  120A  118A  24A0  120A  118A  	fcall	_Lcd_Init
   792                           
   793                           ;main.c: 58:     Lcd_Clear();
   794  06A4  120A  118A  2376  120A  118A  	fcall	_Lcd_Clear
   795  06A9                     l59:	
   796                           ;main.c: 59:     while(1){
   797                           
   798                           
   799                           ;main.c: 61:         I2C_Master_Start();
   800  06A9  120A  118A  234D  120A  118A  	fcall	_I2C_Master_Start
   801                           
   802                           ;main.c: 62:         I2C_Master_Write(0x80);
   803  06AE  3080               	movlw	128
   804  06AF  00F0               	movwf	I2C_Master_Write@d
   805  06B0  3000               	movlw	0
   806  06B1  00F1               	movwf	I2C_Master_Write@d+1
   807  06B2  120A  118A  235F  120A  118A  	fcall	_I2C_Master_Write
   808                           
   809                           ;main.c: 63:         I2C_Master_Write(0xF3);
   810  06B7  30F3               	movlw	243
   811  06B8  00F0               	movwf	I2C_Master_Write@d
   812  06B9  3000               	movlw	0
   813  06BA  00F1               	movwf	I2C_Master_Write@d+1
   814  06BB  120A  118A  235F  120A  118A  	fcall	_I2C_Master_Write
   815                           
   816                           ;main.c: 64:         I2C_Master_Stop();
   817  06C0  120A  118A  2356  120A  118A  	fcall	_I2C_Master_Stop
   818  06C5                     l1320:
   819                           
   820                           ;main.c: 65:         _delay((unsigned long)((200)*(8000000/4000.0)));
   821  06C5  3003               	movlw	3
   822  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   823  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   824  06C8  00AF               	movwf	??_main+2
   825  06C9  3008               	movlw	8
   826  06CA  00AE               	movwf	??_main+1
   827  06CB  3076               	movlw	118
   828  06CC  00AD               	movwf	??_main
   829  06CD                     u697:
   830  06CD  0BAD               	decfsz	??_main,f
   831  06CE  2ECD               	goto	u697
   832  06CF  0BAE               	decfsz	??_main+1,f
   833  06D0  2ECD               	goto	u697
   834  06D1  0BAF               	decfsz	??_main+2,f
   835  06D2  2ECD               	goto	u697
   836  06D3  0000               	nop
   837  06D4                     l1322:
   838                           
   839                           ;main.c: 67:         I2C_Master_Start();
   840  06D4  120A  118A  234D  120A  118A  	fcall	_I2C_Master_Start
   841  06D9                     l1324:
   842                           
   843                           ;main.c: 68:         I2C_Master_Write(0x81);
   844  06D9  3081               	movlw	129
   845  06DA  00F0               	movwf	I2C_Master_Write@d
   846  06DB  3000               	movlw	0
   847  06DC  00F1               	movwf	I2C_Master_Write@d+1
   848  06DD  120A  118A  235F  120A  118A  	fcall	_I2C_Master_Write
   849  06E2                     l1326:
   850                           
   851                           ;main.c: 69:         sensor = I2C_Master_Read(0);
   852  06E2  3000               	movlw	0
   853  06E3  00F0               	movwf	I2C_Master_Read@a
   854  06E4  00F1               	movwf	I2C_Master_Read@a+1
   855  06E5  120A  118A  2400  120A  118A  	fcall	_I2C_Master_Read
   856  06EA  0870               	movf	?_I2C_Master_Read,w
   857  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   858  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   859  06ED  00AD               	movwf	??_main
   860  06EE  082D               	movf	??_main,w
   861  06EF  00B2               	movwf	_sensor
   862  06F0                     l1328:
   863                           
   864                           ;main.c: 70:         I2C_Master_Stop();
   865  06F0  120A  118A  2356  120A  118A  	fcall	_I2C_Master_Stop
   866  06F5                     l1330:
   867                           
   868                           ;main.c: 71:         _delay((unsigned long)((200)*(8000000/4000.0)));
   869  06F5  3003               	movlw	3
   870  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   871  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   872  06F8  00AF               	movwf	??_main+2
   873  06F9  3008               	movlw	8
   874  06FA  00AE               	movwf	??_main+1
   875  06FB  3076               	movlw	118
   876  06FC  00AD               	movwf	??_main
   877  06FD                     u707:
   878  06FD  0BAD               	decfsz	??_main,f
   879  06FE  2EFD               	goto	u707
   880  06FF  0BAE               	decfsz	??_main+1,f
   881  0700  2EFD               	goto	u707
   882  0701  0BAF               	decfsz	??_main+2,f
   883  0702  2EFD               	goto	u707
   884  0703  0000               	nop
   885                           
   886                           ;main.c: 74:         I2C_Master_Start();
   887  0704  120A  118A  234D  120A  118A  	fcall	_I2C_Master_Start
   888                           
   889                           ;main.c: 75:         I2C_Master_Write(0x51);
   890  0709  3051               	movlw	81
   891  070A  00F0               	movwf	I2C_Master_Write@d
   892  070B  3000               	movlw	0
   893  070C  00F1               	movwf	I2C_Master_Write@d+1
   894  070D  120A  118A  235F  120A  118A  	fcall	_I2C_Master_Write
   895                           
   896                           ;main.c: 76:         pot = I2C_Master_Read(0);
   897  0712  3000               	movlw	0
   898  0713  00F0               	movwf	I2C_Master_Read@a
   899  0714  00F1               	movwf	I2C_Master_Read@a+1
   900  0715  120A  118A  2400  120A  118A  	fcall	_I2C_Master_Read
   901  071A  0870               	movf	?_I2C_Master_Read,w
   902  071B  1283               	bcf	3,5	;RP0=0, select bank0
   903  071C  1303               	bcf	3,6	;RP1=0, select bank0
   904  071D  00AD               	movwf	??_main
   905  071E  082D               	movf	??_main,w
   906  071F  00B1               	movwf	_pot
   907                           
   908                           ;main.c: 77:         I2C_Master_Stop();
   909  0720  120A  118A  2356  120A  118A  	fcall	_I2C_Master_Stop
   910  0725                     l1332:
   911                           
   912                           ;main.c: 78:         _delay((unsigned long)((200)*(8000000/4000.0)));
   913  0725  3003               	movlw	3
   914  0726  1283               	bcf	3,5	;RP0=0, select bank0
   915  0727  1303               	bcf	3,6	;RP1=0, select bank0
   916  0728  00AF               	movwf	??_main+2
   917  0729  3008               	movlw	8
   918  072A  00AE               	movwf	??_main+1
   919  072B  3076               	movlw	118
   920  072C  00AD               	movwf	??_main
   921  072D                     u717:
   922  072D  0BAD               	decfsz	??_main,f
   923  072E  2F2D               	goto	u717
   924  072F  0BAE               	decfsz	??_main+1,f
   925  0730  2F2D               	goto	u717
   926  0731  0BAF               	decfsz	??_main+2,f
   927  0732  2F2D               	goto	u717
   928  0733  0000               	nop
   929  0734                     l1334:
   930                           
   931                           ;main.c: 81:         I2C_Master_Start();
   932  0734  120A  118A  234D  120A  118A  	fcall	_I2C_Master_Start
   933  0739                     l1336:
   934                           
   935                           ;main.c: 82:         I2C_Master_Write(0x61);
   936  0739  3061               	movlw	97
   937  073A  00F0               	movwf	I2C_Master_Write@d
   938  073B  3000               	movlw	0
   939  073C  00F1               	movwf	I2C_Master_Write@d+1
   940  073D  120A  118A  235F  120A  118A  	fcall	_I2C_Master_Write
   941  0742                     l1338:
   942                           
   943                           ;main.c: 83:         contador = I2C_Master_Read(0);
   944  0742  3000               	movlw	0
   945  0743  00F0               	movwf	I2C_Master_Read@a
   946  0744  00F1               	movwf	I2C_Master_Read@a+1
   947  0745  120A  118A  2400  120A  118A  	fcall	_I2C_Master_Read
   948  074A  0870               	movf	?_I2C_Master_Read,w
   949  074B  1283               	bcf	3,5	;RP0=0, select bank0
   950  074C  1303               	bcf	3,6	;RP1=0, select bank0
   951  074D  00AD               	movwf	??_main
   952  074E  082D               	movf	??_main,w
   953  074F  00B0               	movwf	_contador
   954  0750                     l1340:
   955                           
   956                           ;main.c: 84:         I2C_Master_Stop();
   957  0750  120A  118A  2356  120A  118A  	fcall	_I2C_Master_Stop
   958  0755                     l1342:
   959                           
   960                           ;main.c: 85:         _delay((unsigned long)((200)*(8000000/4000.0)));
   961  0755  3003               	movlw	3
   962  0756  1283               	bcf	3,5	;RP0=0, select bank0
   963  0757  1303               	bcf	3,6	;RP1=0, select bank0
   964  0758  00AF               	movwf	??_main+2
   965  0759  3008               	movlw	8
   966  075A  00AE               	movwf	??_main+1
   967  075B  3076               	movlw	118
   968  075C  00AD               	movwf	??_main
   969  075D                     u727:
   970  075D  0BAD               	decfsz	??_main,f
   971  075E  2F5D               	goto	u727
   972  075F  0BAE               	decfsz	??_main+1,f
   973  0760  2F5D               	goto	u727
   974  0761  0BAF               	decfsz	??_main+2,f
   975  0762  2F5D               	goto	u727
   976  0763  0000               	nop
   977                           
   978                           ;main.c: 87:         Lcd_Set_Cursor(1,1);
   979  0764  01F4               	clrf	Lcd_Set_Cursor@b
   980  0765  0AF4               	incf	Lcd_Set_Cursor@b,f
   981  0766  3001               	movlw	1
   982  0767  120A  118A  23B8  120A  118A  	fcall	_Lcd_Set_Cursor
   983  076C                     l1344:
   984                           
   985                           ;main.c: 88:         Lcd_Write_String("S1:   S2:   S3:");
   986  076C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   987  076D  00F3               	movwf	Lcd_Write_String@a
   988  076E  3080               	movlw	128
   989  076F  00F4               	movwf	Lcd_Write_String@a+1
   990  0770  120A  118A  24E1  120A  118A  	fcall	_Lcd_Write_String
   991  0775                     l1346:
   992                           
   993                           ;main.c: 91:         Lcd_Set_Cursor(2,1);
   994  0775  01F4               	clrf	Lcd_Set_Cursor@b
   995  0776  0AF4               	incf	Lcd_Set_Cursor@b,f
   996  0777  3002               	movlw	2
   997  0778  120A  118A  23B8  120A  118A  	fcall	_Lcd_Set_Cursor
   998                           
   999                           ;main.c: 92:         sprintf(s, "%u",pot);
  1000  077D  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1001  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1002  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0780  00AD               	movwf	??_main
  1004  0781  082D               	movf	??_main,w
  1005  0782  00A0               	movwf	sprintf@f
  1006  0783  0831               	movf	_pot,w
  1007  0784  00AE               	movwf	??_main+1
  1008  0785  01AF               	clrf	??_main+2
  1009  0786  082E               	movf	??_main+1,w
  1010  0787  00A1               	movwf	?_sprintf+1
  1011  0788  082F               	movf	??_main+2,w
  1012  0789  00A2               	movwf	?_sprintf+2
  1013  078A  3033               	movlw	(low (_s| 0))& (0+255)
  1014  078B  120A  118A  25CD  120A  118A  	fcall	_sprintf
  1015                           
  1016                           ;main.c: 93:         Lcd_Write_String(s);
  1017  0790  3033               	movlw	(low (_s| 0))& (0+255)
  1018  0791  00F3               	movwf	Lcd_Write_String@a
  1019  0792  3000               	movlw	0
  1020  0793  00F4               	movwf	Lcd_Write_String@a+1
  1021  0794  120A  118A  24E1  120A  118A  	fcall	_Lcd_Write_String
  1022  0799                     l1348:
  1023                           
  1024                           ;main.c: 96:         Lcd_Set_Cursor(2,8);
  1025  0799  3008               	movlw	8
  1026  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1027  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1028  079C  00AD               	movwf	??_main
  1029  079D  082D               	movf	??_main,w
  1030  079E  00F4               	movwf	Lcd_Set_Cursor@b
  1031  079F  3002               	movlw	2
  1032  07A0  120A  118A  23B8  120A  118A  	fcall	_Lcd_Set_Cursor
  1033  07A5                     l1350:
  1034                           
  1035                           ;main.c: 97:         sprintf(s, "%u",contador);
  1036  07A5  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1037  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1038  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1039  07A8  00AD               	movwf	??_main
  1040  07A9  082D               	movf	??_main,w
  1041  07AA  00A0               	movwf	sprintf@f
  1042  07AB  0830               	movf	_contador,w
  1043  07AC  00AE               	movwf	??_main+1
  1044  07AD  01AF               	clrf	??_main+2
  1045  07AE  082E               	movf	??_main+1,w
  1046  07AF  00A1               	movwf	?_sprintf+1
  1047  07B0  082F               	movf	??_main+2,w
  1048  07B1  00A2               	movwf	?_sprintf+2
  1049  07B2  3033               	movlw	(low (_s| 0))& (0+255)
  1050  07B3  120A  118A  25CD  120A  118A  	fcall	_sprintf
  1051  07B8                     l1352:
  1052                           
  1053                           ;main.c: 98:         Lcd_Write_String(s);
  1054  07B8  3033               	movlw	(low (_s| 0))& (0+255)
  1055  07B9  00F3               	movwf	Lcd_Write_String@a
  1056  07BA  3000               	movlw	0
  1057  07BB  00F4               	movwf	Lcd_Write_String@a+1
  1058  07BC  120A  118A  24E1  120A  118A  	fcall	_Lcd_Write_String
  1059  07C1                     l1354:
  1060                           
  1061                           ;main.c: 101:         Lcd_Set_Cursor(2,14);
  1062  07C1  300E               	movlw	14
  1063  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1064  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1065  07C4  00AD               	movwf	??_main
  1066  07C5  082D               	movf	??_main,w
  1067  07C6  00F4               	movwf	Lcd_Set_Cursor@b
  1068  07C7  3002               	movlw	2
  1069  07C8  120A  118A  23B8  120A  118A  	fcall	_Lcd_Set_Cursor
  1070                           
  1071                           ;main.c: 102:         sprintf(s, "%u",sensor);
  1072  07CD  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1073  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1074  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1075  07D0  00AD               	movwf	??_main
  1076  07D1  082D               	movf	??_main,w
  1077  07D2  00A0               	movwf	sprintf@f
  1078  07D3  0832               	movf	_sensor,w
  1079  07D4  00AE               	movwf	??_main+1
  1080  07D5  01AF               	clrf	??_main+2
  1081  07D6  082E               	movf	??_main+1,w
  1082  07D7  00A1               	movwf	?_sprintf+1
  1083  07D8  082F               	movf	??_main+2,w
  1084  07D9  00A2               	movwf	?_sprintf+2
  1085  07DA  3033               	movlw	(low (_s| 0))& (0+255)
  1086  07DB  120A  118A  25CD  120A  118A  	fcall	_sprintf
  1087                           
  1088                           ;main.c: 103:         Lcd_Write_String(s);
  1089  07E0  3033               	movlw	(low (_s| 0))& (0+255)
  1090  07E1  00F3               	movwf	Lcd_Write_String@a
  1091  07E2  3000               	movlw	0
  1092  07E3  00F4               	movwf	Lcd_Write_String@a+1
  1093  07E4  120A  118A  24E1  120A  118A  	fcall	_Lcd_Write_String
  1094  07E9  2EA9               	goto	l59
  1095  07EA  120A  118A  2800   	ljmp	start
  1096  07ED                     __end_of_main:
  1097                           
  1098                           	psect	text1
  1099  05CD                     __ptext1:	
  1100 ;; *************** function _sprintf *****************
  1101 ;; Defined at:
  1102 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  sp              1    wreg     PTR unsigned char 
  1105 ;;		 -> s(10), 
  1106 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1107 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1110 ;;		 -> s(10), 
  1111 ;;  tmpval          4    0        struct .
  1112 ;;  val             2    8[BANK0 ] unsigned int 
  1113 ;;  cp              2    0        PTR const unsigned char 
  1114 ;;  len             2    0        unsigned int 
  1115 ;;  c               1   12[BANK0 ] unsigned char 
  1116 ;;  prec            1   10[BANK0 ] char 
  1117 ;;  ap              1    7[BANK0 ] PTR void [1]
  1118 ;;		 -> ?_sprintf(2), 
  1119 ;;  flag            1    6[BANK0 ] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  2    0[BANK0 ] int 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       3       0       0       0
  1130 ;;      Locals:         0       7       0       0       0
  1131 ;;      Temps:          0       3       0       0       0
  1132 ;;      Totals:         0      13       0       0       0
  1133 ;;Total ram usage:       13 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    1
  1136 ;; This function calls:
  1137 ;;		___lwdiv
  1138 ;;		___lwmod
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           
  1145                           ;psect for function _sprintf
  1146  05CD                     _sprintf:
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1150                           ;sprintf@sp stored from wreg
  1151  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1152  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1153  05CF  00AB               	movwf	sprintf@sp
  1154  05D0                     l1266:
  1155                           
  1156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1157  05D0  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1158  05D1  00A3               	movwf	??_sprintf
  1159  05D2  0823               	movf	??_sprintf,w
  1160  05D3  00A7               	movwf	sprintf@ap
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1163  05D4  2E83               	goto	l1308
  1164  05D5                     l1268:
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1167  05D5  3025               	movlw	37
  1168  05D6  062C               	xorwf	sprintf@c,w
  1169  05D7  1903               	btfsc	3,2
  1170  05D8  2DDA               	goto	u641
  1171  05D9  2DDB               	goto	u640
  1172  05DA                     u641:
  1173  05DA  2DE7               	goto	l1274
  1174  05DB                     u640:
  1175  05DB                     l1270:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1178  05DB  082C               	movf	sprintf@c,w
  1179  05DC  00A3               	movwf	??_sprintf
  1180  05DD  082B               	movf	sprintf@sp,w
  1181  05DE  0084               	movwf	4
  1182  05DF  0823               	movf	??_sprintf,w
  1183  05E0  1383               	bcf	3,7	;select IRP bank0
  1184  05E1  0080               	movwf	0
  1185  05E2                     l1272:
  1186  05E2  3001               	movlw	1
  1187  05E3  00A3               	movwf	??_sprintf
  1188  05E4  0823               	movf	??_sprintf,w
  1189  05E5  07AB               	addwf	sprintf@sp,f
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1192  05E6  2E83               	goto	l1308
  1193  05E7                     l1274:
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1196  05E7  01A6               	clrf	sprintf@flag
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1199  05E8  2DEE               	goto	l1280
  1200  05E9                     l1276:
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1203  05E9  30C0               	movlw	192
  1204  05EA  00A3               	movwf	??_sprintf
  1205  05EB  0823               	movf	??_sprintf,w
  1206  05EC  04A6               	iorwf	sprintf@flag,f
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  1209  05ED  2E08               	goto	l1282
  1210  05EE                     l1280:
  1211  05EE  3001               	movlw	1
  1212  05EF  07A0               	addwf	sprintf@f,f
  1213  05F0  30FF               	movlw	-1
  1214  05F1  0720               	addwf	sprintf@f,w
  1215  05F2  0084               	movwf	4
  1216  05F3  120A  118A  200D  120A  118A  	fcall	stringdir
  1217  05F8  00AC               	movwf	sprintf@c
  1218  05F9  00A3               	movwf	??_sprintf
  1219  05FA  01A4               	clrf	??_sprintf+1
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ; direct_byte           11     8 (fixed)
  1228                           ; jumptable            260     6 (fixed)
  1229                           ;	Chosen strategy is simple_byte
  1230  05FB  0824               	movf	??_sprintf+1,w
  1231  05FC  3A00               	xorlw	0	; case 0
  1232  05FD  1903               	skipnz
  1233  05FE  2E00               	goto	l1380
  1234  05FF  2E83               	goto	l1308
  1235  0600                     l1380:
  1236                           
  1237                           ; Switch size 1, requested type "simple"
  1238                           ; Number of cases is 2, Range of values is 0 to 117
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte            7     4 (average)
  1242                           ; jumptable            260     6 (fixed)
  1243                           ;	Chosen strategy is simple_byte
  1244  0600  0823               	movf	??_sprintf,w
  1245  0601  3A00               	xorlw	0	; case 0
  1246  0602  1903               	skipnz
  1247  0603  2E95               	goto	l1310
  1248  0604  3A75               	xorlw	117	; case 117
  1249  0605  1903               	skipnz
  1250  0606  2DE9               	goto	l1276
  1251  0607  2E83               	goto	l1308
  1252  0608                     l1282:
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1255  0608  0827               	movf	sprintf@ap,w
  1256  0609  0084               	movwf	4
  1257  060A  1383               	bcf	3,7	;select IRP bank0
  1258  060B  0800               	movf	0,w
  1259  060C  00A8               	movwf	sprintf@val
  1260  060D  0A84               	incf	4,f
  1261  060E  0800               	movf	0,w
  1262  060F  00A9               	movwf	sprintf@val+1
  1263  0610                     l1284:
  1264  0610  3002               	movlw	2
  1265  0611  00A3               	movwf	??_sprintf
  1266  0612  0823               	movf	??_sprintf,w
  1267  0613  07A7               	addwf	sprintf@ap,f
  1268  0614                     l1286:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1271  0614  01AC               	clrf	sprintf@c
  1272  0615  0AAC               	incf	sprintf@c,f
  1273  0616                     l1292:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1276  0616  082C               	movf	sprintf@c,w
  1277  0617  00A3               	movwf	??_sprintf
  1278  0618  0723               	addwf	??_sprintf,w
  1279  0619  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1280  061A  0084               	movwf	4
  1281  061B  120A  118A  200D  120A  118A  	fcall	stringdir
  1282  0620  00A4               	movwf	??_sprintf+1
  1283  0621  120A  118A  200D  120A  118A  	fcall	stringdir
  1284  0626  00A5               	movwf	??_sprintf+2
  1285  0627  0825               	movf	??_sprintf+2,w
  1286  0628  0229               	subwf	sprintf@val+1,w
  1287  0629  1D03               	skipz
  1288  062A  2E2D               	goto	u655
  1289  062B  0824               	movf	??_sprintf+1,w
  1290  062C  0228               	subwf	sprintf@val,w
  1291  062D                     u655:
  1292  062D  1803               	skipnc
  1293  062E  2E30               	goto	u651
  1294  062F  2E31               	goto	u650
  1295  0630                     u651:
  1296  0630  2E32               	goto	l1296
  1297  0631                     u650:
  1298  0631  2E3C               	goto	l1298
  1299  0632                     l1296:
  1300  0632  3001               	movlw	1
  1301  0633  00A3               	movwf	??_sprintf
  1302  0634  0823               	movf	??_sprintf,w
  1303  0635  07AC               	addwf	sprintf@c,f
  1304  0636  3005               	movlw	5
  1305  0637  062C               	xorwf	sprintf@c,w
  1306  0638  1D03               	btfss	3,2
  1307  0639  2E3B               	goto	u661
  1308  063A  2E3C               	goto	u660
  1309  063B                     u661:
  1310  063B  2E16               	goto	l1292
  1311  063C                     u660:
  1312  063C                     l1298:
  1313                           
  1314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1315  063C  082C               	movf	sprintf@c,w
  1316  063D  00A3               	movwf	??_sprintf
  1317  063E  0823               	movf	??_sprintf,w
  1318  063F  00AA               	movwf	sprintf@prec
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1321  0640  2E7A               	goto	l1306
  1322  0641                     l1300:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1325  0641  300A               	movlw	10
  1326  0642  00F8               	movwf	___lwmod@divisor
  1327  0643  3000               	movlw	0
  1328  0644  00F9               	movwf	___lwmod@divisor+1
  1329  0645  082A               	movf	sprintf@prec,w
  1330  0646  00A3               	movwf	??_sprintf
  1331  0647  0723               	addwf	??_sprintf,w
  1332  0648  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1333  0649  0084               	movwf	4
  1334  064A  120A  118A  200D  120A  118A  	fcall	stringdir
  1335  064F  00F0               	movwf	___lwdiv@divisor
  1336  0650  120A  118A  200D  120A  118A  	fcall	stringdir
  1337  0655  00F1               	movwf	___lwdiv@divisor+1
  1338  0656  0829               	movf	sprintf@val+1,w
  1339  0657  00F3               	movwf	___lwdiv@dividend+1
  1340  0658  0828               	movf	sprintf@val,w
  1341  0659  00F2               	movwf	___lwdiv@dividend
  1342  065A  120A  118A  2523  120A  118A  	fcall	___lwdiv
  1343  065F  0871               	movf	?___lwdiv+1,w
  1344  0660  00FB               	movwf	___lwmod@dividend+1
  1345  0661  0870               	movf	?___lwdiv,w
  1346  0662  00FA               	movwf	___lwmod@dividend
  1347  0663  120A  118A  2466  120A  118A  	fcall	___lwmod
  1348  0668  0878               	movf	?___lwmod,w
  1349  0669  3E30               	addlw	48
  1350  066A  1283               	bcf	3,5	;RP0=0, select bank0
  1351  066B  1303               	bcf	3,6	;RP1=0, select bank0
  1352  066C  00A4               	movwf	??_sprintf+1
  1353  066D  0824               	movf	??_sprintf+1,w
  1354  066E  00AC               	movwf	sprintf@c
  1355  066F                     l1302:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1358  066F  082C               	movf	sprintf@c,w
  1359  0670  00A3               	movwf	??_sprintf
  1360  0671  082B               	movf	sprintf@sp,w
  1361  0672  0084               	movwf	4
  1362  0673  0823               	movf	??_sprintf,w
  1363  0674  1383               	bcf	3,7	;select IRP bank0
  1364  0675  0080               	movwf	0
  1365  0676                     l1304:
  1366  0676  3001               	movlw	1
  1367  0677  00A3               	movwf	??_sprintf
  1368  0678  0823               	movf	??_sprintf,w
  1369  0679  07AB               	addwf	sprintf@sp,f
  1370  067A                     l1306:
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1373  067A  30FF               	movlw	255
  1374  067B  00A3               	movwf	??_sprintf
  1375  067C  0823               	movf	??_sprintf,w
  1376  067D  07AA               	addwf	sprintf@prec,f
  1377  067E  0A2A               	incf	sprintf@prec,w
  1378  067F  1D03               	btfss	3,2
  1379  0680  2E82               	goto	u671
  1380  0681  2E83               	goto	u670
  1381  0682                     u671:
  1382  0682  2E41               	goto	l1300
  1383  0683                     u670:
  1384  0683                     l1308:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1387  0683  3001               	movlw	1
  1388  0684  07A0               	addwf	sprintf@f,f
  1389  0685  30FF               	movlw	-1
  1390  0686  0720               	addwf	sprintf@f,w
  1391  0687  0084               	movwf	4
  1392  0688  120A  118A  200D  120A  118A  	fcall	stringdir
  1393  068D  00A3               	movwf	??_sprintf
  1394  068E  0823               	movf	??_sprintf,w
  1395  068F  00AC               	movwf	sprintf@c
  1396  0690  082C               	movf	sprintf@c,w
  1397  0691  1D03               	btfss	3,2
  1398  0692  2E94               	goto	u681
  1399  0693  2E95               	goto	u680
  1400  0694                     u681:
  1401  0694  2DD5               	goto	l1268
  1402  0695                     u680:
  1403  0695                     l1310:
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1406  0695  082B               	movf	sprintf@sp,w
  1407  0696  0084               	movwf	4
  1408  0697  1383               	bcf	3,7	;select IRP bank0
  1409  0698  0180               	clrf	0
  1410  0699                     l260:
  1411  0699  0008               	return
  1412  069A                     __end_of_sprintf:
  1413                           
  1414                           	psect	text2
  1415  0466                     __ptext2:	
  1416 ;; *************** function ___lwmod *****************
  1417 ;; Defined at:
  1418 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  divisor         2    8[COMMON] unsigned int 
  1421 ;;  dividend        2   10[COMMON] unsigned int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  counter         1   13[COMMON] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2    8[COMMON] unsigned int 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         4       0       0       0       0
  1434 ;;      Locals:         1       0       0       0       0
  1435 ;;      Temps:          1       0       0       0       0
  1436 ;;      Totals:         6       0       0       0       0
  1437 ;;Total ram usage:        6 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_sprintf
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function ___lwmod
  1448  0466                     ___lwmod:
  1449  0466                     l1172:	
  1450                           ;incstack = 0
  1451                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1452                           
  1453  0466  0878               	movf	___lwmod@divisor,w
  1454  0467  0479               	iorwf	___lwmod@divisor+1,w
  1455  0468  1903               	btfsc	3,2
  1456  0469  2C6B               	goto	u521
  1457  046A  2C6C               	goto	u520
  1458  046B                     u521:
  1459  046B  2C9B               	goto	l1190
  1460  046C                     u520:
  1461  046C                     l1174:
  1462  046C  01FD               	clrf	___lwmod@counter
  1463  046D  0AFD               	incf	___lwmod@counter,f
  1464  046E  2C7A               	goto	l1180
  1465  046F                     l1176:
  1466  046F  3001               	movlw	1
  1467  0470                     u535:
  1468  0470  1003               	clrc
  1469  0471  0DF8               	rlf	___lwmod@divisor,f
  1470  0472  0DF9               	rlf	___lwmod@divisor+1,f
  1471  0473  3EFF               	addlw	-1
  1472  0474  1D03               	skipz
  1473  0475  2C70               	goto	u535
  1474  0476                     l1178:
  1475  0476  3001               	movlw	1
  1476  0477  00FC               	movwf	??___lwmod
  1477  0478  087C               	movf	??___lwmod,w
  1478  0479  07FD               	addwf	___lwmod@counter,f
  1479  047A                     l1180:
  1480  047A  1FF9               	btfss	___lwmod@divisor+1,7
  1481  047B  2C7D               	goto	u541
  1482  047C  2C7E               	goto	u540
  1483  047D                     u541:
  1484  047D  2C6F               	goto	l1176
  1485  047E                     u540:
  1486  047E                     l1182:
  1487  047E  0879               	movf	___lwmod@divisor+1,w
  1488  047F  027B               	subwf	___lwmod@dividend+1,w
  1489  0480  1D03               	skipz
  1490  0481  2C84               	goto	u555
  1491  0482  0878               	movf	___lwmod@divisor,w
  1492  0483  027A               	subwf	___lwmod@dividend,w
  1493  0484                     u555:
  1494  0484  1C03               	skipc
  1495  0485  2C87               	goto	u551
  1496  0486  2C88               	goto	u550
  1497  0487                     u551:
  1498  0487  2C8E               	goto	l1186
  1499  0488                     u550:
  1500  0488                     l1184:
  1501  0488  0878               	movf	___lwmod@divisor,w
  1502  0489  02FA               	subwf	___lwmod@dividend,f
  1503  048A  0879               	movf	___lwmod@divisor+1,w
  1504  048B  1C03               	skipc
  1505  048C  03FB               	decf	___lwmod@dividend+1,f
  1506  048D  02FB               	subwf	___lwmod@dividend+1,f
  1507  048E                     l1186:
  1508  048E  3001               	movlw	1
  1509  048F                     u565:
  1510  048F  1003               	clrc
  1511  0490  0CF9               	rrf	___lwmod@divisor+1,f
  1512  0491  0CF8               	rrf	___lwmod@divisor,f
  1513  0492  3EFF               	addlw	-1
  1514  0493  1D03               	skipz
  1515  0494  2C8F               	goto	u565
  1516  0495                     l1188:
  1517  0495  3001               	movlw	1
  1518  0496  02FD               	subwf	___lwmod@counter,f
  1519  0497  1D03               	btfss	3,2
  1520  0498  2C9A               	goto	u571
  1521  0499  2C9B               	goto	u570
  1522  049A                     u571:
  1523  049A  2C7E               	goto	l1182
  1524  049B                     u570:
  1525  049B                     l1190:
  1526  049B  087B               	movf	___lwmod@dividend+1,w
  1527  049C  00F9               	movwf	?___lwmod+1
  1528  049D  087A               	movf	___lwmod@dividend,w
  1529  049E  00F8               	movwf	?___lwmod
  1530  049F                     l546:
  1531  049F  0008               	return
  1532  04A0                     __end_of___lwmod:
  1533                           
  1534                           	psect	text3
  1535  0523                     __ptext3:	
  1536 ;; *************** function ___lwdiv *****************
  1537 ;; Defined at:
  1538 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  divisor         2    0[COMMON] unsigned int 
  1541 ;;  dividend        2    2[COMMON] unsigned int 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  quotient        2    5[COMMON] unsigned int 
  1544 ;;  counter         1    7[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    0[COMMON] unsigned int 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         4       0       0       0       0
  1555 ;;      Locals:         3       0       0       0       0
  1556 ;;      Temps:          1       0       0       0       0
  1557 ;;      Totals:         8       0       0       0       0
  1558 ;;Total ram usage:        8 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_sprintf
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function ___lwdiv
  1569  0523                     ___lwdiv:
  1570  0523                     l1146:	
  1571                           ;incstack = 0
  1572                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1573                           
  1574  0523  01F5               	clrf	___lwdiv@quotient
  1575  0524  01F6               	clrf	___lwdiv@quotient+1
  1576  0525                     l1148:
  1577  0525  0870               	movf	___lwdiv@divisor,w
  1578  0526  0471               	iorwf	___lwdiv@divisor+1,w
  1579  0527  1903               	btfsc	3,2
  1580  0528  2D2A               	goto	u451
  1581  0529  2D2B               	goto	u450
  1582  052A                     u451:
  1583  052A  2D62               	goto	l1168
  1584  052B                     u450:
  1585  052B                     l1150:
  1586  052B  01F7               	clrf	___lwdiv@counter
  1587  052C  0AF7               	incf	___lwdiv@counter,f
  1588  052D  2D39               	goto	l1156
  1589  052E                     l1152:
  1590  052E  3001               	movlw	1
  1591  052F                     u465:
  1592  052F  1003               	clrc
  1593  0530  0DF0               	rlf	___lwdiv@divisor,f
  1594  0531  0DF1               	rlf	___lwdiv@divisor+1,f
  1595  0532  3EFF               	addlw	-1
  1596  0533  1D03               	skipz
  1597  0534  2D2F               	goto	u465
  1598  0535                     l1154:
  1599  0535  3001               	movlw	1
  1600  0536  00F4               	movwf	??___lwdiv
  1601  0537  0874               	movf	??___lwdiv,w
  1602  0538  07F7               	addwf	___lwdiv@counter,f
  1603  0539                     l1156:
  1604  0539  1FF1               	btfss	___lwdiv@divisor+1,7
  1605  053A  2D3C               	goto	u471
  1606  053B  2D3D               	goto	u470
  1607  053C                     u471:
  1608  053C  2D2E               	goto	l1152
  1609  053D                     u470:
  1610  053D                     l1158:
  1611  053D  3001               	movlw	1
  1612  053E                     u485:
  1613  053E  1003               	clrc
  1614  053F  0DF5               	rlf	___lwdiv@quotient,f
  1615  0540  0DF6               	rlf	___lwdiv@quotient+1,f
  1616  0541  3EFF               	addlw	-1
  1617  0542  1D03               	skipz
  1618  0543  2D3E               	goto	u485
  1619  0544  0871               	movf	___lwdiv@divisor+1,w
  1620  0545  0273               	subwf	___lwdiv@dividend+1,w
  1621  0546  1D03               	skipz
  1622  0547  2D4A               	goto	u495
  1623  0548  0870               	movf	___lwdiv@divisor,w
  1624  0549  0272               	subwf	___lwdiv@dividend,w
  1625  054A                     u495:
  1626  054A  1C03               	skipc
  1627  054B  2D4D               	goto	u491
  1628  054C  2D4E               	goto	u490
  1629  054D                     u491:
  1630  054D  2D55               	goto	l1164
  1631  054E                     u490:
  1632  054E                     l1160:
  1633  054E  0870               	movf	___lwdiv@divisor,w
  1634  054F  02F2               	subwf	___lwdiv@dividend,f
  1635  0550  0871               	movf	___lwdiv@divisor+1,w
  1636  0551  1C03               	skipc
  1637  0552  03F3               	decf	___lwdiv@dividend+1,f
  1638  0553  02F3               	subwf	___lwdiv@dividend+1,f
  1639  0554                     l1162:
  1640  0554  1475               	bsf	___lwdiv@quotient,0
  1641  0555                     l1164:
  1642  0555  3001               	movlw	1
  1643  0556                     u505:
  1644  0556  1003               	clrc
  1645  0557  0CF1               	rrf	___lwdiv@divisor+1,f
  1646  0558  0CF0               	rrf	___lwdiv@divisor,f
  1647  0559  3EFF               	addlw	-1
  1648  055A  1D03               	skipz
  1649  055B  2D56               	goto	u505
  1650  055C                     l1166:
  1651  055C  3001               	movlw	1
  1652  055D  02F7               	subwf	___lwdiv@counter,f
  1653  055E  1D03               	btfss	3,2
  1654  055F  2D61               	goto	u511
  1655  0560  2D62               	goto	u510
  1656  0561                     u511:
  1657  0561  2D3D               	goto	l1158
  1658  0562                     u510:
  1659  0562                     l1168:
  1660  0562  0876               	movf	___lwdiv@quotient+1,w
  1661  0563  00F1               	movwf	?___lwdiv+1
  1662  0564  0875               	movf	___lwdiv@quotient,w
  1663  0565  00F0               	movwf	?___lwdiv
  1664  0566                     l536:
  1665  0566  0008               	return
  1666  0567                     __end_of___lwdiv:
  1667                           
  1668                           	psect	text4
  1669  03DC                     __ptext4:	
  1670 ;; *************** function _setup *****************
  1671 ;; Defined at:
  1672 ;;		line 110 in file "main.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0, pclath, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1686 ;;      Params:         0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    2
  1693 ;; This function calls:
  1694 ;;		_I2C_Master_Init
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _setup
  1702  03DC                     _setup:
  1703  03DC                     l1194:	
  1704                           ;incstack = 0
  1705                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1706                           
  1707                           
  1708                           ;main.c: 111:     ANSEL = 0;
  1709  03DC  1683               	bsf	3,5	;RP0=1, select bank3
  1710  03DD  1703               	bsf	3,6	;RP1=1, select bank3
  1711  03DE  0188               	clrf	8	;volatile
  1712                           
  1713                           ;main.c: 112:     ANSELH = 0;
  1714  03DF  0189               	clrf	9	;volatile
  1715                           
  1716                           ;main.c: 113:     TRISB = 0;
  1717  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1718  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  1719  03E2  0186               	clrf	6	;volatile
  1720                           
  1721                           ;main.c: 114:     TRISC = 0;
  1722  03E3  0187               	clrf	7	;volatile
  1723                           
  1724                           ;main.c: 115:     TRISD = 0;
  1725  03E4  0188               	clrf	8	;volatile
  1726                           
  1727                           ;main.c: 116:     TRISE = 0;
  1728  03E5  0189               	clrf	9	;volatile
  1729                           
  1730                           ;main.c: 118:     PORTB = 0;
  1731  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1732  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1733  03E8  0186               	clrf	6	;volatile
  1734                           
  1735                           ;main.c: 119:     PORTC = 0;
  1736  03E9  0187               	clrf	7	;volatile
  1737                           
  1738                           ;main.c: 120:     PORTD = 0;
  1739  03EA  0188               	clrf	8	;volatile
  1740                           
  1741                           ;main.c: 121:     PORTE = 0;
  1742  03EB  0189               	clrf	9	;volatile
  1743  03EC                     l1196:
  1744                           
  1745                           ;main.c: 122:     I2C_Master_Init(100000);
  1746  03EC  3000               	movlw	0
  1747  03ED  00A3               	movwf	I2C_Master_Init@c+3
  1748  03EE  3001               	movlw	1
  1749  03EF  00A2               	movwf	I2C_Master_Init@c+2
  1750  03F0  3086               	movlw	134
  1751  03F1  00A1               	movwf	I2C_Master_Init@c+1
  1752  03F2  30A0               	movlw	160
  1753  03F3  00A0               	movwf	I2C_Master_Init@c
  1754  03F4  120A  118A  242E  120A  118A  	fcall	_I2C_Master_Init
  1755  03F9                     l1198:
  1756                           
  1757                           ;main.c: 125:     OSCCONbits.IRCF2 = 1;
  1758  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  1759  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  1760  03FB  170F               	bsf	15,6	;volatile
  1761  03FC                     l1200:
  1762                           
  1763                           ;main.c: 126:     OSCCONbits.IRCF1 = 1;
  1764  03FC  168F               	bsf	15,5	;volatile
  1765  03FD                     l1202:
  1766                           
  1767                           ;main.c: 127:     OSCCONbits.IRCF0 = 1;
  1768  03FD  160F               	bsf	15,4	;volatile
  1769  03FE                     l1204:
  1770                           
  1771                           ;main.c: 128:     OSCCONbits.SCS = 1;
  1772  03FE  140F               	bsf	15,0	;volatile
  1773  03FF                     l65:
  1774  03FF  0008               	return
  1775  0400                     __end_of_setup:
  1776                           
  1777                           	psect	text5
  1778  042E                     __ptext5:	
  1779 ;; *************** function _I2C_Master_Init *****************
  1780 ;; Defined at:
  1781 ;;		line 16 in file "I2C.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  c               4    0[BANK0 ] const unsigned long 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         0       4       0       0       0
  1796 ;;      Locals:         0       0       0       0       0
  1797 ;;      Temps:          0       4       0       0       0
  1798 ;;      Totals:         0       8       0       0       0
  1799 ;;Total ram usage:        8 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    1
  1802 ;; This function calls:
  1803 ;;		___lldiv
  1804 ;; This function is called by:
  1805 ;;		_setup
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _I2C_Master_Init
  1811  042E                     _I2C_Master_Init:
  1812  042E                     l1108:	
  1813                           ;incstack = 0
  1814                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1815                           
  1816                           
  1817                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1818  042E  3028               	movlw	40
  1819  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0431  0094               	movwf	20	;volatile
  1822  0432                     l1110:
  1823                           
  1824                           ;I2C.c: 19:     SSPCON2 = 0;
  1825  0432  1683               	bsf	3,5	;RP0=1, select bank1
  1826  0433  1303               	bcf	3,6	;RP1=0, select bank1
  1827  0434  0191               	clrf	17	;volatile
  1828  0435                     l1112:
  1829                           
  1830                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1831  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1833  0437  0820               	movf	I2C_Master_Init@c,w
  1834  0438  00A4               	movwf	??_I2C_Master_Init
  1835  0439  0821               	movf	I2C_Master_Init@c+1,w
  1836  043A  00A5               	movwf	??_I2C_Master_Init+1
  1837  043B  0822               	movf	I2C_Master_Init@c+2,w
  1838  043C  00A6               	movwf	??_I2C_Master_Init+2
  1839  043D  0823               	movf	I2C_Master_Init@c+3,w
  1840  043E  00A7               	movwf	??_I2C_Master_Init+3
  1841  043F  3002               	movlw	2
  1842  0440                     u425:
  1843  0440  1003               	clrc
  1844  0441  0DA4               	rlf	??_I2C_Master_Init,f
  1845  0442  0DA5               	rlf	??_I2C_Master_Init+1,f
  1846  0443  0DA6               	rlf	??_I2C_Master_Init+2,f
  1847  0444  0DA7               	rlf	??_I2C_Master_Init+3,f
  1848  0445                     u420:
  1849  0445  3EFF               	addlw	-1
  1850  0446  1D03               	skipz
  1851  0447  2C40               	goto	u425
  1852  0448  0827               	movf	??_I2C_Master_Init+3,w
  1853  0449  00F3               	movwf	___lldiv@divisor+3
  1854  044A  0826               	movf	??_I2C_Master_Init+2,w
  1855  044B  00F2               	movwf	___lldiv@divisor+2
  1856  044C  0825               	movf	??_I2C_Master_Init+1,w
  1857  044D  00F1               	movwf	___lldiv@divisor+1
  1858  044E  0824               	movf	??_I2C_Master_Init,w
  1859  044F  00F0               	movwf	___lldiv@divisor
  1860  0450  3000               	movlw	0
  1861  0451  00F7               	movwf	___lldiv@dividend+3
  1862  0452  307A               	movlw	122
  1863  0453  00F6               	movwf	___lldiv@dividend+2
  1864  0454  3012               	movlw	18
  1865  0455  00F5               	movwf	___lldiv@dividend+1
  1866  0456  3000               	movlw	0
  1867  0457  00F4               	movwf	___lldiv@dividend
  1868  0458  120A  118A  2567  120A  118A  	fcall	___lldiv
  1869  045D  0870               	movf	?___lldiv,w
  1870  045E  3EFF               	addlw	255
  1871  045F  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0460  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0461  0093               	movwf	19	;volatile
  1874  0462                     l1114:
  1875                           
  1876                           ;I2C.c: 21:     SSPSTAT = 0;
  1877  0462  0194               	clrf	20	;volatile
  1878  0463                     l1116:
  1879                           
  1880                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1881  0463  1587               	bsf	7,3	;volatile
  1882  0464                     l1118:
  1883                           
  1884                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1885  0464  1607               	bsf	7,4	;volatile
  1886  0465                     l94:
  1887  0465  0008               	return
  1888  0466                     __end_of_I2C_Master_Init:
  1889                           
  1890                           	psect	text6
  1891  0567                     __ptext6:	
  1892 ;; *************** function ___lldiv *****************
  1893 ;; Defined at:
  1894 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  divisor         4    0[COMMON] unsigned long 
  1897 ;;  dividend        4    4[COMMON] unsigned long 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  quotient        4    9[COMMON] unsigned long 
  1900 ;;  counter         1   13[COMMON] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  4    0[COMMON] unsigned long 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         8       0       0       0       0
  1911 ;;      Locals:         5       0       0       0       0
  1912 ;;      Temps:          1       0       0       0       0
  1913 ;;      Totals:        14       0       0       0       0
  1914 ;;Total ram usage:       14 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_I2C_Master_Init
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function ___lldiv
  1925  0567                     ___lldiv:
  1926  0567                     l1084:	
  1927                           ;incstack = 0
  1928                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1929                           
  1930  0567  3000               	movlw	0
  1931  0568  00FC               	movwf	___lldiv@quotient+3
  1932  0569  3000               	movlw	0
  1933  056A  00FB               	movwf	___lldiv@quotient+2
  1934  056B  3000               	movlw	0
  1935  056C  00FA               	movwf	___lldiv@quotient+1
  1936  056D  3000               	movlw	0
  1937  056E  00F9               	movwf	___lldiv@quotient
  1938  056F  0873               	movf	___lldiv@divisor+3,w
  1939  0570  0472               	iorwf	___lldiv@divisor+2,w
  1940  0571  0471               	iorwf	___lldiv@divisor+1,w
  1941  0572  0470               	iorwf	___lldiv@divisor,w
  1942  0573  1903               	skipnz
  1943  0574  2D76               	goto	u351
  1944  0575  2D77               	goto	u350
  1945  0576                     u351:
  1946  0576  2DC4               	goto	l1104
  1947  0577                     u350:
  1948  0577                     l1086:
  1949  0577  01FD               	clrf	___lldiv@counter
  1950  0578  0AFD               	incf	___lldiv@counter,f
  1951  0579  2D87               	goto	l1090
  1952  057A                     l1088:
  1953  057A  3001               	movlw	1
  1954  057B  00F8               	movwf	??___lldiv
  1955  057C                     u365:
  1956  057C  1003               	clrc
  1957  057D  0DF0               	rlf	___lldiv@divisor,f
  1958  057E  0DF1               	rlf	___lldiv@divisor+1,f
  1959  057F  0DF2               	rlf	___lldiv@divisor+2,f
  1960  0580  0DF3               	rlf	___lldiv@divisor+3,f
  1961  0581  0BF8               	decfsz	??___lldiv,f
  1962  0582  2D7C               	goto	u365
  1963  0583  3001               	movlw	1
  1964  0584  00F8               	movwf	??___lldiv
  1965  0585  0878               	movf	??___lldiv,w
  1966  0586  07FD               	addwf	___lldiv@counter,f
  1967  0587                     l1090:
  1968  0587  1FF3               	btfss	___lldiv@divisor+3,7
  1969  0588  2D8A               	goto	u371
  1970  0589  2D8B               	goto	u370
  1971  058A                     u371:
  1972  058A  2D7A               	goto	l1088
  1973  058B                     u370:
  1974  058B                     l1092:
  1975  058B  3001               	movlw	1
  1976  058C  00F8               	movwf	??___lldiv
  1977  058D                     u385:
  1978  058D  1003               	clrc
  1979  058E  0DF9               	rlf	___lldiv@quotient,f
  1980  058F  0DFA               	rlf	___lldiv@quotient+1,f
  1981  0590  0DFB               	rlf	___lldiv@quotient+2,f
  1982  0591  0DFC               	rlf	___lldiv@quotient+3,f
  1983  0592  0BF8               	decfsz	??___lldiv,f
  1984  0593  2D8D               	goto	u385
  1985  0594                     l1094:
  1986  0594  0873               	movf	___lldiv@divisor+3,w
  1987  0595  0277               	subwf	___lldiv@dividend+3,w
  1988  0596  1D03               	skipz
  1989  0597  2DA2               	goto	u395
  1990  0598  0872               	movf	___lldiv@divisor+2,w
  1991  0599  0276               	subwf	___lldiv@dividend+2,w
  1992  059A  1D03               	skipz
  1993  059B  2DA2               	goto	u395
  1994  059C  0871               	movf	___lldiv@divisor+1,w
  1995  059D  0275               	subwf	___lldiv@dividend+1,w
  1996  059E  1D03               	skipz
  1997  059F  2DA2               	goto	u395
  1998  05A0  0870               	movf	___lldiv@divisor,w
  1999  05A1  0274               	subwf	___lldiv@dividend,w
  2000  05A2                     u395:
  2001  05A2  1C03               	skipc
  2002  05A3  2DA5               	goto	u391
  2003  05A4  2DA6               	goto	u390
  2004  05A5                     u391:
  2005  05A5  2DB5               	goto	l1100
  2006  05A6                     u390:
  2007  05A6                     l1096:
  2008  05A6  0870               	movf	___lldiv@divisor,w
  2009  05A7  02F4               	subwf	___lldiv@dividend,f
  2010  05A8  0871               	movf	___lldiv@divisor+1,w
  2011  05A9  1C03               	skipc
  2012  05AA  0F71               	incfsz	___lldiv@divisor+1,w
  2013  05AB  02F5               	subwf	___lldiv@dividend+1,f
  2014  05AC  0872               	movf	___lldiv@divisor+2,w
  2015  05AD  1C03               	skipc
  2016  05AE  0F72               	incfsz	___lldiv@divisor+2,w
  2017  05AF  02F6               	subwf	___lldiv@dividend+2,f
  2018  05B0  0873               	movf	___lldiv@divisor+3,w
  2019  05B1  1C03               	skipc
  2020  05B2  0F73               	incfsz	___lldiv@divisor+3,w
  2021  05B3  02F7               	subwf	___lldiv@dividend+3,f
  2022  05B4                     l1098:
  2023  05B4  1479               	bsf	___lldiv@quotient,0
  2024  05B5                     l1100:
  2025  05B5  3001               	movlw	1
  2026  05B6                     u405:
  2027  05B6  1003               	clrc
  2028  05B7  0CF3               	rrf	___lldiv@divisor+3,f
  2029  05B8  0CF2               	rrf	___lldiv@divisor+2,f
  2030  05B9  0CF1               	rrf	___lldiv@divisor+1,f
  2031  05BA  0CF0               	rrf	___lldiv@divisor,f
  2032  05BB  3EFF               	addlw	-1
  2033  05BC  1D03               	skipz
  2034  05BD  2DB6               	goto	u405
  2035  05BE                     l1102:
  2036  05BE  3001               	movlw	1
  2037  05BF  02FD               	subwf	___lldiv@counter,f
  2038  05C0  1D03               	btfss	3,2
  2039  05C1  2DC3               	goto	u411
  2040  05C2  2DC4               	goto	u410
  2041  05C3                     u411:
  2042  05C3  2D8B               	goto	l1092
  2043  05C4                     u410:
  2044  05C4                     l1104:
  2045  05C4  087C               	movf	___lldiv@quotient+3,w
  2046  05C5  00F3               	movwf	?___lldiv+3
  2047  05C6  087B               	movf	___lldiv@quotient+2,w
  2048  05C7  00F2               	movwf	?___lldiv+2
  2049  05C8  087A               	movf	___lldiv@quotient+1,w
  2050  05C9  00F1               	movwf	?___lldiv+1
  2051  05CA  0879               	movf	___lldiv@quotient,w
  2052  05CB  00F0               	movwf	?___lldiv
  2053  05CC                     l300:
  2054  05CC  0008               	return
  2055  05CD                     __end_of___lldiv:
  2056                           
  2057                           	psect	text7
  2058  04E1                     __ptext7:	
  2059 ;; *************** function _Lcd_Write_String *****************
  2060 ;; Defined at:
  2061 ;;		line 69 in file "LCD.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  a               2    3[COMMON] PTR unsigned char 
  2064 ;;		 -> s(10), STR_1(16), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  i               2    8[COMMON] int 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         2       0       0       0       0
  2077 ;;      Locals:         2       0       0       0       0
  2078 ;;      Temps:          3       0       0       0       0
  2079 ;;      Totals:         7       0       0       0       0
  2080 ;;Total ram usage:        7 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    2
  2083 ;; This function calls:
  2084 ;;		_Lcd_Write_Char
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _Lcd_Write_String
  2092  04E1                     _Lcd_Write_String:
  2093  04E1                     l1258:	
  2094                           ;incstack = 0
  2095                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2096                           
  2097                           
  2098                           ;LCD.c: 70:     int i;;LCD.c: 71:     for (i = 0; a[i] != '\0'; i++)
  2099  04E1  01F8               	clrf	Lcd_Write_String@i
  2100  04E2  01F9               	clrf	Lcd_Write_String@i+1
  2101  04E3  2D06               	goto	l1264
  2102  04E4                     l1260:
  2103                           
  2104                           ;LCD.c: 72:         Lcd_Write_Char(a[i]);
  2105  04E4  0878               	movf	Lcd_Write_String@i,w
  2106  04E5  0773               	addwf	Lcd_Write_String@a,w
  2107  04E6  00F6               	movwf	??_Lcd_Write_String+1
  2108  04E7  0874               	movf	Lcd_Write_String@a+1,w
  2109  04E8  00F5               	movwf	??_Lcd_Write_String
  2110  04E9  1803               	skipnc
  2111  04EA  0AF5               	incf	??_Lcd_Write_String,f
  2112  04EB  1FF8               	btfss	Lcd_Write_String@i,7
  2113  04EC  2CEE               	goto	u610
  2114  04ED  03F5               	decf	??_Lcd_Write_String,f
  2115  04EE                     u610:
  2116  04EE  0875               	movf	??_Lcd_Write_String,w
  2117  04EF  00F7               	movwf	??_Lcd_Write_String+2
  2118  04F0  0877               	movf	??_Lcd_Write_String+2,w
  2119  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2120  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2121  04F3  00FF               	movwf	btemp+1
  2122  04F4  0876               	movf	??_Lcd_Write_String+1,w
  2123  04F5  0084               	movwf	4
  2124  04F6  120A  118A  2003  120A  118A  	fcall	stringtab
  2125  04FB  120A  118A  239D  120A  118A  	fcall	_Lcd_Write_Char
  2126  0500                     l1262:
  2127  0500  3001               	movlw	1
  2128  0501  07F8               	addwf	Lcd_Write_String@i,f
  2129  0502  1803               	skipnc
  2130  0503  0AF9               	incf	Lcd_Write_String@i+1,f
  2131  0504  3000               	movlw	0
  2132  0505  07F9               	addwf	Lcd_Write_String@i+1,f
  2133  0506                     l1264:
  2134  0506  0878               	movf	Lcd_Write_String@i,w
  2135  0507  0773               	addwf	Lcd_Write_String@a,w
  2136  0508  00F6               	movwf	??_Lcd_Write_String+1
  2137  0509  0874               	movf	Lcd_Write_String@a+1,w
  2138  050A  00F5               	movwf	??_Lcd_Write_String
  2139  050B  1803               	skipnc
  2140  050C  0AF5               	incf	??_Lcd_Write_String,f
  2141  050D  1FF8               	btfss	Lcd_Write_String@i,7
  2142  050E  2D10               	goto	u620
  2143  050F  03F5               	decf	??_Lcd_Write_String,f
  2144  0510                     u620:
  2145  0510  0875               	movf	??_Lcd_Write_String,w
  2146  0511  00F7               	movwf	??_Lcd_Write_String+2
  2147  0512  0877               	movf	??_Lcd_Write_String+2,w
  2148  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0514  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0515  00FF               	movwf	btemp+1
  2151  0516  0876               	movf	??_Lcd_Write_String+1,w
  2152  0517  0084               	movwf	4
  2153  0518  120A  118A  2003  120A  118A  	fcall	stringtab
  2154  051D  3A00               	xorlw	0
  2155  051E  1D03               	skipz
  2156  051F  2D21               	goto	u631
  2157  0520  2D22               	goto	u630
  2158  0521                     u631:
  2159  0521  2CE4               	goto	l1260
  2160  0522                     u630:
  2161  0522                     l153:
  2162  0522  0008               	return
  2163  0523                     __end_of_Lcd_Write_String:
  2164                           
  2165                           	psect	text8
  2166  039D                     __ptext8:	
  2167 ;; *************** function _Lcd_Write_Char *****************
  2168 ;; Defined at:
  2169 ;;		line 60 in file "LCD.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  a               1    wreg     unsigned char 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  a               1    2[COMMON] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, pclath, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       0       0       0       0
  2184 ;;      Locals:         1       0       0       0       0
  2185 ;;      Temps:          1       0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    1
  2190 ;; This function calls:
  2191 ;;		_Lcd_Port
  2192 ;; This function is called by:
  2193 ;;		_Lcd_Write_String
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _Lcd_Write_Char
  2199  039D                     _Lcd_Write_Char:
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2203                           ;Lcd_Write_Char@a stored from wreg
  2204  039D  00F2               	movwf	Lcd_Write_Char@a
  2205  039E                     l1134:
  2206                           
  2207                           ;LCD.c: 61:     PORTEbits.RE0 = 1;
  2208  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2209  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2210  03A0  1409               	bsf	9,0	;volatile
  2211  03A1                     l1136:
  2212                           
  2213                           ;LCD.c: 62:     Lcd_Port(a);
  2214  03A1  0872               	movf	Lcd_Write_Char@a,w
  2215  03A2  120A  118A  2347  120A  118A  	fcall	_Lcd_Port
  2216  03A7                     l1138:
  2217                           
  2218                           ;LCD.c: 63:     PORTEbits.RE1 = 1;
  2219  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2220  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2221  03A9  1489               	bsf	9,1	;volatile
  2222  03AA                     l1140:
  2223                           
  2224                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2225  03AA  301A               	movlw	26
  2226  03AB  00F1               	movwf	??_Lcd_Write_Char
  2227  03AC                     u737:
  2228  03AC  0BF1               	decfsz	??_Lcd_Write_Char,f
  2229  03AD  2BAC               	goto	u737
  2230  03AE  0000               	nop
  2231  03AF                     l1142:
  2232                           
  2233                           ;LCD.c: 65:     PORTEbits.RE1 = 0;
  2234  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2235  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2236  03B1  1089               	bcf	9,1	;volatile
  2237  03B2                     l1144:
  2238                           
  2239                           ;LCD.c: 66:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2240  03B2  301A               	movlw	26
  2241  03B3  00F1               	movwf	??_Lcd_Write_Char
  2242  03B4                     u747:
  2243  03B4  0BF1               	decfsz	??_Lcd_Write_Char,f
  2244  03B5  2BB4               	goto	u747
  2245  03B6  0000               	nop
  2246  03B7                     l147:
  2247  03B7  0008               	return
  2248  03B8                     __end_of_Lcd_Write_Char:
  2249                           
  2250                           	psect	text9
  2251  03B8                     __ptext9:	
  2252 ;; *************** function _Lcd_Set_Cursor *****************
  2253 ;; Defined at:
  2254 ;;		line 35 in file "LCD.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  a               1    wreg     unsigned char 
  2257 ;;  b               1    4[COMMON] unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  a               1    6[COMMON] unsigned char 
  2260 ;;  temp            1    7[COMMON] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         1       0       0       0       0
  2271 ;;      Locals:         2       0       0       0       0
  2272 ;;      Temps:          1       0       0       0       0
  2273 ;;      Totals:         4       0       0       0       0
  2274 ;;Total ram usage:        4 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    2
  2277 ;; This function calls:
  2278 ;;		_Lcd_Cmd
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _Lcd_Set_Cursor
  2286  03B8                     _Lcd_Set_Cursor:
  2287                           
  2288                           ;incstack = 0
  2289                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2290                           ;Lcd_Set_Cursor@a stored from wreg
  2291  03B8  00F6               	movwf	Lcd_Set_Cursor@a
  2292  03B9                     l1246:
  2293                           
  2294                           ;LCD.c: 36:     char temp;;LCD.c: 37:     if (a == 1) {
  2295  03B9  0376               	decf	Lcd_Set_Cursor@a,w
  2296  03BA  1D03               	btfss	3,2
  2297  03BB  2BBD               	goto	u591
  2298  03BC  2BBE               	goto	u590
  2299  03BD                     u591:
  2300  03BD  2BCA               	goto	l1252
  2301  03BE                     u590:
  2302  03BE                     l1248:
  2303                           
  2304                           ;LCD.c: 38:         temp = 0x80 + b - 1;
  2305  03BE  0874               	movf	Lcd_Set_Cursor@b,w
  2306  03BF  3E7F               	addlw	127
  2307  03C0  00F5               	movwf	??_Lcd_Set_Cursor
  2308  03C1  0875               	movf	??_Lcd_Set_Cursor,w
  2309  03C2  00F7               	movwf	Lcd_Set_Cursor@temp
  2310  03C3                     l1250:
  2311                           
  2312                           ;LCD.c: 39:         Lcd_Cmd(temp);
  2313  03C3  0877               	movf	Lcd_Set_Cursor@temp,w
  2314  03C4  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2315                           
  2316                           ;LCD.c: 40:     } else if (a == 2) {
  2317  03C9  2BDB               	goto	l141
  2318  03CA                     l1252:
  2319  03CA  3002               	movlw	2
  2320  03CB  0676               	xorwf	Lcd_Set_Cursor@a,w
  2321  03CC  1D03               	btfss	3,2
  2322  03CD  2BCF               	goto	u601
  2323  03CE  2BD0               	goto	u600
  2324  03CF                     u601:
  2325  03CF  2BDB               	goto	l141
  2326  03D0                     u600:
  2327  03D0                     l1254:
  2328                           
  2329                           ;LCD.c: 41:         temp = 0xC0 + b - 1;
  2330  03D0  0874               	movf	Lcd_Set_Cursor@b,w
  2331  03D1  3EBF               	addlw	191
  2332  03D2  00F5               	movwf	??_Lcd_Set_Cursor
  2333  03D3  0875               	movf	??_Lcd_Set_Cursor,w
  2334  03D4  00F7               	movwf	Lcd_Set_Cursor@temp
  2335  03D5                     l1256:
  2336                           
  2337                           ;LCD.c: 42:         Lcd_Cmd(temp);
  2338  03D5  0877               	movf	Lcd_Set_Cursor@temp,w
  2339  03D6  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2340  03DB                     l141:
  2341  03DB  0008               	return
  2342  03DC                     __end_of_Lcd_Set_Cursor:
  2343                           
  2344                           	psect	text10
  2345  04A0                     __ptext10:	
  2346 ;; *************** function _Lcd_Init *****************
  2347 ;; Defined at:
  2348 ;;		line 46 in file "LCD.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          2       0       0       0       0
  2365 ;;      Totals:         2       0       0       0       0
  2366 ;;Total ram usage:        2 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		_Lcd_Cmd
  2371 ;;		_Lcd_Port
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _Lcd_Init
  2379  04A0                     _Lcd_Init:
  2380  04A0                     l1206:	
  2381                           ;incstack = 0
  2382                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2383                           
  2384                           
  2385                           ;LCD.c: 47:     Lcd_Port(0x00);
  2386  04A0  3000               	movlw	0
  2387  04A1  120A  118A  2347  120A  118A  	fcall	_Lcd_Port
  2388  04A6                     l1208:
  2389                           
  2390                           ;LCD.c: 48:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2391  04A6  3034               	movlw	52
  2392  04A7  00F5               	movwf	??_Lcd_Init+1
  2393  04A8  30F1               	movlw	241
  2394  04A9  00F4               	movwf	??_Lcd_Init
  2395  04AA                     u757:
  2396  04AA  0BF4               	decfsz	??_Lcd_Init,f
  2397  04AB  2CAA               	goto	u757
  2398  04AC  0BF5               	decfsz	??_Lcd_Init+1,f
  2399  04AD  2CAA               	goto	u757
  2400  04AE  2CAF               	nop2
  2401  04AF                     l1210:
  2402                           
  2403                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  2404  04AF  303F               	movlw	63
  2405  04B0  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2406                           
  2407                           ;LCD.c: 50:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2408  04B5  301A               	movlw	26
  2409  04B6  00F5               	movwf	??_Lcd_Init+1
  2410  04B7  30F8               	movlw	248
  2411  04B8  00F4               	movwf	??_Lcd_Init
  2412  04B9                     u767:
  2413  04B9  0BF4               	decfsz	??_Lcd_Init,f
  2414  04BA  2CB9               	goto	u767
  2415  04BB  0BF5               	decfsz	??_Lcd_Init+1,f
  2416  04BC  2CB9               	goto	u767
  2417  04BD  0000               	nop
  2418  04BE                     l1212:
  2419                           
  2420                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  2421  04BE  303F               	movlw	63
  2422  04BF  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2423  04C4                     l1214:
  2424                           
  2425                           ;LCD.c: 52:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2426  04C4  3085               	movlw	133
  2427  04C5  00F4               	movwf	??_Lcd_Init
  2428  04C6                     u777:
  2429  04C6  0BF4               	decfsz	??_Lcd_Init,f
  2430  04C7  2CC6               	goto	u777
  2431                           
  2432                           ;LCD.c: 53:     Lcd_Cmd(0x3F);
  2433  04C8  303F               	movlw	63
  2434  04C9  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2435                           
  2436                           ;LCD.c: 55:     Lcd_Cmd(0x38);
  2437  04CE  3038               	movlw	56
  2438  04CF  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2439                           
  2440                           ;LCD.c: 56:     Lcd_Cmd(0x0C);
  2441  04D4  300C               	movlw	12
  2442  04D5  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2443                           
  2444                           ;LCD.c: 57:     Lcd_Cmd(0x06);
  2445  04DA  3006               	movlw	6
  2446  04DB  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2447  04E0                     l144:
  2448  04E0  0008               	return
  2449  04E1                     __end_of_Lcd_Init:
  2450                           
  2451                           	psect	text11
  2452  0376                     __ptext11:	
  2453 ;; *************** function _Lcd_Clear *****************
  2454 ;; Defined at:
  2455 ;;		line 30 in file "LCD.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    2
  2476 ;; This function calls:
  2477 ;;		_Lcd_Cmd
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _Lcd_Clear
  2485  0376                     _Lcd_Clear:
  2486  0376                     l1216:	
  2487                           ;incstack = 0
  2488                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2489                           
  2490                           
  2491                           ;LCD.c: 31:     Lcd_Cmd(0);
  2492  0376  3000               	movlw	0
  2493  0377  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2494                           
  2495                           ;LCD.c: 32:     Lcd_Cmd(1);
  2496  037C  3001               	movlw	1
  2497  037D  120A  118A  2383  120A  118A  	fcall	_Lcd_Cmd
  2498  0382                     l135:
  2499  0382  0008               	return
  2500  0383                     __end_of_Lcd_Clear:
  2501                           
  2502                           	psect	text12
  2503  0383                     __ptext12:	
  2504 ;; *************** function _Lcd_Cmd *****************
  2505 ;; Defined at:
  2506 ;;		line 22 in file "LCD.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  a               1    wreg     unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  a               1    3[COMMON] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         0       0       0       0       0
  2521 ;;      Locals:         1       0       0       0       0
  2522 ;;      Temps:          2       0       0       0       0
  2523 ;;      Totals:         3       0       0       0       0
  2524 ;;Total ram usage:        3 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    1
  2527 ;; This function calls:
  2528 ;;		_Lcd_Port
  2529 ;; This function is called by:
  2530 ;;		_Lcd_Clear
  2531 ;;		_Lcd_Set_Cursor
  2532 ;;		_Lcd_Init
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           
  2537                           ;psect for function _Lcd_Cmd
  2538  0383                     _Lcd_Cmd:
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2542                           ;Lcd_Cmd@a stored from wreg
  2543  0383  00F3               	movwf	Lcd_Cmd@a
  2544  0384                     l1124:
  2545                           
  2546                           ;LCD.c: 23:     PORTEbits.RE0 = 0;
  2547  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0386  1009               	bcf	9,0	;volatile
  2550  0387                     l1126:
  2551                           
  2552                           ;LCD.c: 24:     Lcd_Port(a);
  2553  0387  0873               	movf	Lcd_Cmd@a,w
  2554  0388  120A  118A  2347  120A  118A  	fcall	_Lcd_Port
  2555  038D                     l1128:
  2556                           
  2557                           ;LCD.c: 25:     PORTEbits.RE1 = 1;
  2558  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2559  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2560  038F  1489               	bsf	9,1	;volatile
  2561  0390                     l1130:
  2562                           
  2563                           ;LCD.c: 26:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2564  0390  300B               	movlw	11
  2565  0391  00F2               	movwf	??_Lcd_Cmd+1
  2566  0392  3062               	movlw	98
  2567  0393  00F1               	movwf	??_Lcd_Cmd
  2568  0394                     u787:
  2569  0394  0BF1               	decfsz	??_Lcd_Cmd,f
  2570  0395  2B94               	goto	u787
  2571  0396  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2572  0397  2B94               	goto	u787
  2573  0398  0000               	nop
  2574  0399                     l1132:
  2575                           
  2576                           ;LCD.c: 27:     PORTEbits.RE1 = 0;
  2577  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2578  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2579  039B  1089               	bcf	9,1	;volatile
  2580  039C                     l132:
  2581  039C  0008               	return
  2582  039D                     __end_of_Lcd_Cmd:
  2583                           
  2584                           	psect	text13
  2585  0347                     __ptext13:	
  2586 ;; *************** function _Lcd_Port *****************
  2587 ;; Defined at:
  2588 ;;		line 18 in file "LCD.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  a               1    wreg     unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  a               1    0[COMMON] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       0       0       0       0
  2603 ;;      Locals:         1       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0
  2605 ;;      Totals:         1       0       0       0       0
  2606 ;;Total ram usage:        1 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_Lcd_Cmd
  2612 ;;		_Lcd_Init
  2613 ;;		_Lcd_Write_Char
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function _Lcd_Port
  2619  0347                     _Lcd_Port:
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _Lcd_Port: [wreg]
  2623                           ;Lcd_Port@a stored from wreg
  2624  0347  00F0               	movwf	Lcd_Port@a
  2625  0348                     l1082:
  2626                           
  2627                           ;LCD.c: 19:     PORTD = a;
  2628  0348  0870               	movf	Lcd_Port@a,w
  2629  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2630  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2631  034B  0088               	movwf	8	;volatile
  2632  034C                     l129:
  2633  034C  0008               	return
  2634  034D                     __end_of_Lcd_Port:
  2635                           
  2636                           	psect	text14
  2637  035F                     __ptext14:	
  2638 ;; *************** function _I2C_Master_Write *****************
  2639 ;; Defined at:
  2640 ;;		line 65 in file "I2C.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  d               2    0[COMMON] unsigned int 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         2       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0
  2657 ;;      Totals:         2       0       0       0       0
  2658 ;;Total ram usage:        2 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    1
  2661 ;; This function calls:
  2662 ;;		_I2C_Master_Wait
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _I2C_Master_Write
  2670  035F                     _I2C_Master_Write:
  2671  035F                     l1222:	
  2672                           ;incstack = 0
  2673                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2674                           
  2675                           
  2676                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2677  035F  120A  118A  2369  120A  118A  	fcall	_I2C_Master_Wait
  2678  0364                     l1224:
  2679                           
  2680                           ;I2C.c: 68:     SSPBUF = d;
  2681  0364  0870               	movf	I2C_Master_Write@d,w
  2682  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0367  0093               	movwf	19	;volatile
  2685  0368                     l112:
  2686  0368  0008               	return
  2687  0369                     __end_of_I2C_Master_Write:
  2688                           
  2689                           	psect	text15
  2690  0356                     __ptext15:	
  2691 ;; *************** function _I2C_Master_Stop *****************
  2692 ;; Defined at:
  2693 ;;		line 55 in file "I2C.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2707 ;;      Params:         0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0
  2710 ;;      Totals:         0       0       0       0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    1
  2714 ;; This function calls:
  2715 ;;		_I2C_Master_Wait
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _I2C_Master_Stop
  2723  0356                     _I2C_Master_Stop:
  2724  0356                     l1226:	
  2725                           ;incstack = 0
  2726                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2727                           
  2728                           
  2729                           ;I2C.c: 57:     I2C_Master_Wait();
  2730  0356  120A  118A  2369  120A  118A  	fcall	_I2C_Master_Wait
  2731  035B                     l1228:
  2732                           
  2733                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2734  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2735  035C  1303               	bcf	3,6	;RP1=0, select bank1
  2736  035D  1511               	bsf	17,2	;volatile
  2737  035E                     l109:
  2738  035E  0008               	return
  2739  035F                     __end_of_I2C_Master_Stop:
  2740                           
  2741                           	psect	text16
  2742  034D                     __ptext16:	
  2743 ;; *************** function _I2C_Master_Start *****************
  2744 ;; Defined at:
  2745 ;;		line 39 in file "I2C.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    1
  2766 ;; This function calls:
  2767 ;;		_I2C_Master_Wait
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _I2C_Master_Start
  2775  034D                     _I2C_Master_Start:
  2776  034D                     l1218:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2779                           
  2780                           
  2781                           ;I2C.c: 41:     I2C_Master_Wait();
  2782  034D  120A  118A  2369  120A  118A  	fcall	_I2C_Master_Wait
  2783  0352                     l1220:
  2784                           
  2785                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2786  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2787  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2788  0354  1411               	bsf	17,0	;volatile
  2789  0355                     l103:
  2790  0355  0008               	return
  2791  0356                     __end_of_I2C_Master_Start:
  2792                           
  2793                           	psect	text17
  2794  0400                     __ptext17:	
  2795 ;; *************** function _I2C_Master_Read *****************
  2796 ;; Defined at:
  2797 ;;		line 74 in file "I2C.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  a               2    0[COMMON] unsigned short 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  temp            2    4[COMMON] unsigned short 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  2    0[COMMON] unsigned short 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0, pclath, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         2       0       0       0       0
  2812 ;;      Locals:         2       0       0       0       0
  2813 ;;      Temps:          2       0       0       0       0
  2814 ;;      Totals:         6       0       0       0       0
  2815 ;;Total ram usage:        6 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    1
  2818 ;; This function calls:
  2819 ;;		_I2C_Master_Wait
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _I2C_Master_Read
  2827  0400                     _I2C_Master_Read:
  2828  0400                     l1230:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2831                           
  2832                           
  2833                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2834  0400  120A  118A  2369  120A  118A  	fcall	_I2C_Master_Wait
  2835  0405                     l1232:
  2836                           
  2837                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2838  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0407  1591               	bsf	17,3	;volatile
  2841                           
  2842                           ;I2C.c: 79:     I2C_Master_Wait();
  2843  0408  120A  118A  2369  120A  118A  	fcall	_I2C_Master_Wait
  2844  040D                     l1234:
  2845                           
  2846                           ;I2C.c: 80:     temp = SSPBUF;
  2847  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2848  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2849  040F  0813               	movf	19,w	;volatile
  2850  0410  00F2               	movwf	??_I2C_Master_Read
  2851  0411  01F3               	clrf	??_I2C_Master_Read+1
  2852  0412  0872               	movf	??_I2C_Master_Read,w
  2853  0413  00F4               	movwf	I2C_Master_Read@temp
  2854  0414  0873               	movf	??_I2C_Master_Read+1,w
  2855  0415  00F5               	movwf	I2C_Master_Read@temp+1
  2856  0416                     l1236:
  2857                           
  2858                           ;I2C.c: 81:     I2C_Master_Wait();
  2859  0416  120A  118A  2369  120A  118A  	fcall	_I2C_Master_Wait
  2860  041B                     l1238:
  2861                           
  2862                           ;I2C.c: 82:     if(a == 1){
  2863  041B  0370               	decf	I2C_Master_Read@a,w
  2864  041C  0471               	iorwf	I2C_Master_Read@a+1,w
  2865  041D  1D03               	btfss	3,2
  2866  041E  2C20               	goto	u581
  2867  041F  2C21               	goto	u580
  2868  0420                     u581:
  2869  0420  2C25               	goto	l115
  2870  0421                     u580:
  2871  0421                     l1240:
  2872                           
  2873                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2874  0421  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0422  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0423  1291               	bcf	17,5	;volatile
  2877                           
  2878                           ;I2C.c: 84:     }else{
  2879  0424  2C28               	goto	l116
  2880  0425                     l115:
  2881                           
  2882                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2883  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2884  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2885  0427  1691               	bsf	17,5	;volatile
  2886  0428                     l116:	
  2887                           ;I2C.c: 86:     }
  2888                           
  2889                           
  2890                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2891  0428  1611               	bsf	17,4	;volatile
  2892  0429                     l1242:
  2893                           
  2894                           ;I2C.c: 88:     return temp;
  2895  0429  0875               	movf	I2C_Master_Read@temp+1,w
  2896  042A  00F1               	movwf	?_I2C_Master_Read+1
  2897  042B  0874               	movf	I2C_Master_Read@temp,w
  2898  042C  00F0               	movwf	?_I2C_Master_Read
  2899  042D                     l117:
  2900  042D  0008               	return
  2901  042E                     __end_of_I2C_Master_Read:
  2902                           
  2903                           	psect	text18
  2904  0369                     __ptext18:	
  2905 ;; *************** function _I2C_Master_Wait *****************
  2906 ;; Defined at:
  2907 ;;		line 32 in file "I2C.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_I2C_Master_Start
  2931 ;;		_I2C_Master_Stop
  2932 ;;		_I2C_Master_Write
  2933 ;;		_I2C_Master_Read
  2934 ;;		_I2C_Master_RepeatedStart
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _I2C_Master_Wait
  2940  0369                     _I2C_Master_Wait:
  2941  0369                     l1120:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2944                           
  2945  0369                     l97:	
  2946                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2947                           
  2948  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2949  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2950  036B  1914               	btfsc	20,2	;volatile
  2951  036C  2B6E               	goto	u431
  2952  036D  2B6F               	goto	u430
  2953  036E                     u431:
  2954  036E  2B69               	goto	l97
  2955  036F                     u430:
  2956  036F                     l1122:
  2957  036F  0811               	movf	17,w	;volatile
  2958  0370  391F               	andlw	31
  2959  0371  1D03               	btfss	3,2
  2960  0372  2B74               	goto	u441
  2961  0373  2B75               	goto	u440
  2962  0374                     u441:
  2963  0374  2B69               	goto	l97
  2964  0375                     u440:
  2965  0375                     l100:
  2966  0375  0008               	return
  2967  0376                     __end_of_I2C_Master_Wait:
  2968  007E                     btemp	set	126	;btemp
  2969  007E                     wtemp0	set	126
  2970                           
  2971                           	psect	config
  2972                           
  2973                           ;Config register CONFIG1 @ 0x2007
  2974                           ;	Oscillator Selection bits
  2975                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2976                           ;	Watchdog Timer Enable bit
  2977                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2978                           ;	Power-up Timer Enable bit
  2979                           ;	PWRTE = OFF, PWRT disabled
  2980                           ;	RE3/MCLR pin function select bit
  2981                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2982                           ;	Code Protection bit
  2983                           ;	CP = OFF, Program memory code protection is disabled
  2984                           ;	Data Code Protection bit
  2985                           ;	CPD = OFF, Data memory code protection is disabled
  2986                           ;	Brown Out Reset Selection bits
  2987                           ;	BOREN = OFF, BOR disabled
  2988                           ;	Internal External Switchover bit
  2989                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2990                           ;	Fail-Safe Clock Monitor Enabled bit
  2991                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2992                           ;	Low Voltage Programming Enable bit
  2993                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2994                           ;	In-Circuit Debugger Mode bit
  2995                           ;	DEBUG = 0x1, unprogrammed default
  2996  2007                     	org	8199
  2997  2007  20D5               	dw	8405
  2998                           
  2999                           ;Config register CONFIG2 @ 0x2008
  3000                           ;	Brown-out Reset Selection bit
  3001                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3002                           ;	Flash Program Memory Self Write Enable bits
  3003                           ;	WRT = OFF, Write protection off
  3004  2008                     	org	8200
  3005  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    10
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> s(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> s(BANK0[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3456
                                             13 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      1D       5       36.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 08 15:32:27 2021

                        _s 0033                          pc 0002                         l65 03FF  
                       l59 06A9                         l94 0465                         l97 0369  
                       fsr 0004                        l100 0375                        l103 0355  
                      l112 0368                        l115 0425                        l116 0428  
                      l132 039C                        l300 05CC                        l117 042D  
                      l109 035E                        l141 03DB                        l135 0382  
                      l144 04E0                        l129 034C                        l153 0522  
                      l147 03B7                        l260 0699                        l536 0566  
                      l546 049F                        _GIE 005F                        u410 05C4  
                      u411 05C3                        u420 0445                        u405 05B6  
                      u430 036F                        u350 0577                        u510 0562  
                      u431 036E                        u351 0576                        u511 0561  
                      u440 0375                        u600 03D0                        u520 046C  
                      u441 0374                        u601 03CF                        u425 0440  
                      u505 0556                        u521 046B                        u610 04EE  
                      u370 058B                        u450 052B                        u371 058A  
                      u451 052A                        u620 0510                        u540 047E  
                      u365 057C                        u541 047D                        u630 0522  
                      u390 05A6                        u470 053D                        u550 0488  
                      u631 0521                        u391 05A5                        u471 053C  
                      u551 0487                        u535 0470                        u640 05DB  
                      u385 058D                        u465 052F                        u641 05DA  
                      u490 054E                        u570 049B                        u650 0631  
                      u395 05A2                        u491 054D                        u571 049A  
                      u555 0484                        u651 0630                        u707 06FD  
                      u580 0421                        u660 063C                        u581 0420  
                      u485 053E                        u565 048F                        u661 063B  
                      u717 072D                        u590 03BE                        u670 0683  
                      u591 03BD                        u495 054A                        u671 0682  
                      u655 062D                        u727 075D                        u680 0695  
                      u737 03AC                        u681 0694                        u747 03B4  
                      u757 04AA                        u767 04B9                        u777 04C6  
                      u697 06CD                        u787 0394                        _pot 0031  
                      fsr0 0004                        indf 0000                       l1100 05B5  
                     l1102 05BE                       l1110 0432                       l1120 0369  
                     l1104 05C4                       l1112 0435                       l1200 03FC  
                     l1122 036F                       l1130 0390                       l1210 04AF  
                     l1114 0462                       l1202 03FD                       l1220 0352  
                     l1132 0399                       l1124 0384                       l1212 04BE  
                     l1140 03AA                       l1116 0463                       l1108 042E  
                     l1204 03FE                       l1300 0641                       l1230 0400  
                     l1222 035F                       l1126 0387                       l1214 04C4  
                     l1206 04A0                       l1142 03AF                       l1134 039E  
                     l1118 0464                       l1150 052B                       l1302 066F  
                     l1310 0695                       l1240 0421                       l1232 0405  
                     l1224 0364                       l1128 038D                       l1216 0376  
                     l1208 04A6                       l1144 03B2                       l1136 03A1  
                     l1160 054E                       l1152 052E                       l1304 0676  
                     l1320 06C5                       l1242 0429                       l1234 040D  
                     l1218 034D                       l1226 0356                       l1082 0348  
                     l1250 03C3                       l1138 03A7                       l1090 0587  
                     l1162 0554                       l1154 0535                       l1146 0523  
                     l1306 067A                       l1330 06F5                       l1322 06D4  
                     l1236 0416                       l1228 035B                       l1252 03CA  
                     l1260 04E4                       l1092 058B                       l1084 0567  
                     l1164 0555                       l1156 0539                       l1148 0525  
                     l1180 047A                       l1172 0466                       l1308 0683  
                     l1340 0750                       l1332 0725                       l1324 06D9  
                     l1238 041B                       l1254 03D0                       l1246 03B9  
                     l1262 0500                       l1094 0594                       l1086 0577  
                     l1166 055C                       l1158 053D                       l1182 047E  
                     l1174 046C                       l1190 049B                       l1270 05DB  
                     l1350 07A5                       l1342 0755                       l1334 0734  
                     l1326 06E2                       l1318 069A                       l1256 03D5  
                     l1248 03BE                       l1264 0506                       l1096 05A6  
                     l1088 057A                       l1168 0562                       l1184 0488  
                     l1176 046F                       l1280 05EE                       l1272 05E2  
                     l1352 07B8                       l1344 076C                       l1336 0739  
                     l1328 06F0                       l1258 04E1                       l1098 05B4  
                     l1194 03DC                       l1186 048E                       l1178 0476  
                     l1282 0608                       l1274 05E7                       l1266 05D0  
                     l1354 07C1                       l1346 0775                       l1338 0742  
                     l1196 03EC                       l1188 0495                       l1292 0616  
                     l1284 0610                       l1380 0600                       l1276 05E9  
                     l1268 05D5                       l1348 0799                       l1198 03F9  
                     l1286 0614                       l1296 0632                       l1298 063C  
                     STR_1 001D                       STR_2 002D                       STR_3 002D  
                     STR_4 002D                       _PEIE 005E          ?_Lcd_Write_String 0073  
                     _main 069A                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 039D           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 05CD  
          __end_of___lwdiv 0567            __end_of___lwmod 04A0                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063            __end_of_dpowers 001D                      _setup 03DC  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 069A           __end_of_Lcd_Init 04E1           __end_of_Lcd_Port 034D  
          __initialization 07ED               __end_of_main 07ED                     ??_main 002D  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001B  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 007C                     _sensor 0032  
                ??_sprintf 0023            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 0383             __pcstackCOMMON 0070  
            __end_of_setup 0400             _Lcd_Set_Cursor 03B8                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 007E                 __pbssBANK0 0030  
               __pmaintext 069A  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 03DC  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003             _Lcd_Write_Char 039D  
                  _Lcd_Cmd 0383                    ___lldiv 0567                    ___lwdiv 0523  
                  ___lwmod 0466            ?_Lcd_Set_Cursor 0074                    __ptext1 05CD  
                  __ptext2 0466                    __ptext3 0523                    __ptext4 03DC  
                  __ptext5 042E                    __ptext6 0567                    __ptext7 04E1  
                  __ptext8 039D                    __ptext9 03B8                    _dpowers 0013  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 05CD     __end_of_Lcd_Write_Char 03B8  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                  Lcd_Port@a 0070                  _PORTEbits 0009  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                  _Lcd_Clear 0376           _Lcd_Write_String 04E1  
      start_initialization 07ED          __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0072  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
              sprintf@flag 0026                sprintf@prec 002A           _I2C_Master_Start 034D  
         _I2C_Master_Write 035F           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075  
                 ?___lldiv 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
                __pstrings 0003           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           __size_of_setup 0024                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0012           ??_Lcd_Write_Char 0071                   _Lcd_Init 04A0  
                 _Lcd_Port 0347        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0523  
         __size_of_Lcd_Cmd 001A           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013                 sprintf@val 0028  
          _I2C_Master_Init 042E            _I2C_Master_Read 0400            _I2C_Master_Wait 0369  
          _I2C_Master_Stop 0356            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 04A0                   __ptext11 0376                   __ptext12 0383  
                 __ptext13 0347                   __ptext14 035F                   __ptext15 0356  
                 __ptext16 034D                   __ptext17 0400                   __ptext18 0369  
                 _contador 0030           __size_of_sprintf 00CD              __size_of_main 0153  
 __end_of_I2C_Master_Start 0356   __end_of_I2C_Master_Write 0369                  sprintf@ap 0027  
                sprintf@sp 002B           ___lwmod@dividend 007A           ___lldiv@dividend 0074  
                stringcode 000D                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0466  
  __end_of_I2C_Master_Read 042E    __end_of_I2C_Master_Wait 0376    __end_of_I2C_Master_Stop 035F  
       Lcd_Set_Cursor@temp 0077                   sprintf@c 002C                   sprintf@f 0020  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091  

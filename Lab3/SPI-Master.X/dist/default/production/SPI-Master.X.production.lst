

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 00:52:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.31
    50                           ; Generated 13/10/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001D                     	;# 
   351  001E                     	;# 
   352  001F                     	;# 
   353  0081                     	;# 
   354  0085                     	;# 
   355  0086                     	;# 
   356  0087                     	;# 
   357  0088                     	;# 
   358  0089                     	;# 
   359  008C                     	;# 
   360  008D                     	;# 
   361  008E                     	;# 
   362  008F                     	;# 
   363  0090                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009C                     	;# 
   378  009D                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  0105                     	;# 
   382  0107                     	;# 
   383  0108                     	;# 
   384  0109                     	;# 
   385  010C                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  010F                     	;# 
   390  0185                     	;# 
   391  0187                     	;# 
   392  0188                     	;# 
   393  0189                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396                           
   397                           	psect	strings
   398  0800                     __pstrings:
   399  0800                     stringtab:
   400  0800                     __stringtab:
   401  0800                     stringcode:	
   402                           ;	String table - string pointers are 1 byte each
   403                           
   404  0800                     stringdir:
   405  0800  3008               	movlw	high stringdir
   406  0801  008A               	movwf	10
   407  0802  0804               	movf	4,w
   408  0803  0A84               	incf	4,f
   409  0804  0782               	addwf	2,f
   410  0805                     __stringbase:
   411  0805  3400               	retlw	0
   412  0806                     __end_of__stringtab:
   413  0806                     __powers_:
   414  0806  3400               	retlw	0
   415  0807  3400               	retlw	0
   416  0808  3480               	retlw	128
   417  0809  343F               	retlw	63
   418  080A  3400               	retlw	0
   419  080B  3400               	retlw	0
   420  080C  3420               	retlw	32
   421  080D  3441               	retlw	65
   422  080E  3400               	retlw	0
   423  080F  3400               	retlw	0
   424  0810  34C8               	retlw	200
   425  0811  3442               	retlw	66
   426  0812  3400               	retlw	0
   427  0813  3400               	retlw	0
   428  0814  347A               	retlw	122
   429  0815  3444               	retlw	68
   430  0816  3400               	retlw	0
   431  0817  3440               	retlw	64
   432  0818  341C               	retlw	28
   433  0819  3446               	retlw	70
   434  081A  3400               	retlw	0
   435  081B  3450               	retlw	80
   436  081C  34C3               	retlw	195
   437  081D  3447               	retlw	71
   438  081E  3400               	retlw	0
   439  081F  3424               	retlw	36
   440  0820  3474               	retlw	116
   441  0821  3449               	retlw	73
   442  0822  3480               	retlw	128
   443  0823  3496               	retlw	150
   444  0824  3418               	retlw	24
   445  0825  344B               	retlw	75
   446  0826  3420               	retlw	32
   447  0827  34BC               	retlw	188
   448  0828  34BE               	retlw	190
   449  0829  344C               	retlw	76
   450  082A  3428               	retlw	40
   451  082B  346B               	retlw	107
   452  082C  346E               	retlw	110
   453  082D  344E               	retlw	78
   454  082E  34F9               	retlw	249
   455  082F  3402               	retlw	2
   456  0830  3415               	retlw	21
   457  0831  3450               	retlw	80
   458  0832  34EC               	retlw	236
   459  0833  3478               	retlw	120
   460  0834  34AD               	retlw	173
   461  0835  3460               	retlw	96
   462  0836  34CA               	retlw	202
   463  0837  34F2               	retlw	242
   464  0838  3449               	retlw	73
   465  0839  3471               	retlw	113
   466  083A                     __end_of__powers_:
   467  083A                     __npowers_:
   468  083A  3400               	retlw	0
   469  083B  3400               	retlw	0
   470  083C  3480               	retlw	128
   471  083D  343F               	retlw	63
   472  083E  34CD               	retlw	205
   473  083F  34CC               	retlw	204
   474  0840  34CC               	retlw	204
   475  0841  343D               	retlw	61
   476  0842  340A               	retlw	10
   477  0843  34D7               	retlw	215
   478  0844  3423               	retlw	35
   479  0845  343C               	retlw	60
   480  0846  346F               	retlw	111
   481  0847  3412               	retlw	18
   482  0848  3483               	retlw	131
   483  0849  343A               	retlw	58
   484  084A  3417               	retlw	23
   485  084B  34B7               	retlw	183
   486  084C  34D1               	retlw	209
   487  084D  3438               	retlw	56
   488  084E  34AC               	retlw	172
   489  084F  34C5               	retlw	197
   490  0850  3427               	retlw	39
   491  0851  3437               	retlw	55
   492  0852  34BD               	retlw	189
   493  0853  3437               	retlw	55
   494  0854  3486               	retlw	134
   495  0855  3435               	retlw	53
   496  0856  3495               	retlw	149
   497  0857  34BF               	retlw	191
   498  0858  34D6               	retlw	214
   499  0859  3433               	retlw	51
   500  085A  3477               	retlw	119
   501  085B  34CC               	retlw	204
   502  085C  342B               	retlw	43
   503  085D  3432               	retlw	50
   504  085E  345F               	retlw	95
   505  085F  3470               	retlw	112
   506  0860  3489               	retlw	137
   507  0861  3430               	retlw	48
   508  0862  34FF               	retlw	255
   509  0863  34E6               	retlw	230
   510  0864  34DB               	retlw	219
   511  0865  342E               	retlw	46
   512  0866  3408               	retlw	8
   513  0867  34E5               	retlw	229
   514  0868  343C               	retlw	60
   515  0869  341E               	retlw	30
   516  086A  3460               	retlw	96
   517  086B  3442               	retlw	66
   518  086C  34A2               	retlw	162
   519  086D  340D               	retlw	13
   520  086E                     __end_of__npowers_:
   521  086E                     _dpowers:
   522  086E  3401               	retlw	1
   523  086F  3400               	retlw	0
   524  0870  3400               	retlw	0
   525  0871  3400               	retlw	0
   526  0872  340A               	retlw	10
   527  0873  3400               	retlw	0
   528  0874  3400               	retlw	0
   529  0875  3400               	retlw	0
   530  0876  3464               	retlw	100
   531  0877  3400               	retlw	0
   532  0878  3400               	retlw	0
   533  0879  3400               	retlw	0
   534  087A  34E8               	retlw	232
   535  087B  3403               	retlw	3
   536  087C  3400               	retlw	0
   537  087D  3400               	retlw	0
   538  087E  3410               	retlw	16
   539  087F  3427               	retlw	39
   540  0880  3400               	retlw	0
   541  0881  3400               	retlw	0
   542  0882  34A0               	retlw	160
   543  0883  3486               	retlw	134
   544  0884  3401               	retlw	1
   545  0885  3400               	retlw	0
   546  0886  3440               	retlw	64
   547  0887  3442               	retlw	66
   548  0888  340F               	retlw	15
   549  0889  3400               	retlw	0
   550  088A  3480               	retlw	128
   551  088B  3496               	retlw	150
   552  088C  3498               	retlw	152
   553  088D  3400               	retlw	0
   554  088E  3400               	retlw	0
   555  088F  34E1               	retlw	225
   556  0890  34F5               	retlw	245
   557  0891  3405               	retlw	5
   558  0892  3400               	retlw	0
   559  0893  34CA               	retlw	202
   560  0894  349A               	retlw	154
   561  0895  343B               	retlw	59
   562  0896                     __end_of_dpowers:
   563  0013                     _SSPBUF	set	19
   564  0014                     _SSPCON	set	20
   565  0018                     _RCSTAbits	set	24
   566  000B                     _INTCONbits	set	11
   567  0006                     _PORTB	set	6
   568  0008                     _PORTD	set	8
   569  0019                     _TXREG	set	25
   570  0007                     _PORTCbits	set	7
   571  001A                     _RCREG	set	26
   572  000C                     _PIR1bits	set	12
   573  0064                     _TXIF	set	100
   574  0094                     _SSPSTATbits	set	148
   575  0094                     _SSPSTAT	set	148
   576  009A                     _SPBRGH	set	154
   577  0099                     _SPBRG	set	153
   578  0098                     _TXSTAbits	set	152
   579  008C                     _PIE1bits	set	140
   580  0088                     _TRISD	set	136
   581  0086                     _TRISB	set	134
   582  043B                     _TRISC3	set	1083
   583  043D                     _TRISC5	set	1085
   584  043A                     _TRISC2	set	1082
   585  0187                     _BAUDCTLbits	set	391
   586  0189                     _ANSELH	set	393
   587  0188                     _ANSEL	set	392
   588  0896                     STR_1:
   589  0896  3450               	retlw	80	;'P'
   590  0897  346F               	retlw	111	;'o'
   591  0898  3474               	retlw	116	;'t'
   592  0899  3465               	retlw	101	;'e'
   593  089A  346E               	retlw	110	;'n'
   594  089B  3463               	retlw	99	;'c'
   595  089C  3469               	retlw	105	;'i'
   596  089D  346F               	retlw	111	;'o'
   597  089E  346D               	retlw	109	;'m'
   598  089F  3465               	retlw	101	;'e'
   599  08A0  3474               	retlw	116	;'t'
   600  08A1  3472               	retlw	114	;'r'
   601  08A2  346F               	retlw	111	;'o'
   602  08A3  3420               	retlw	32	;' '
   603  08A4  3431               	retlw	49	;'1'
   604  08A5  343A               	retlw	58	;':'
   605  08A6  3420               	retlw	32	;' '
   606  08A7  3425               	retlw	37	;'%'
   607  08A8  3433               	retlw	51	;'3'
   608  08A9  342E               	retlw	46	;'.'
   609  08AA  3430               	retlw	48	;'0'
   610  08AB  3466               	retlw	102	;'f'
   611  08AC  3462               	retlw	98	;'b'
   612  08AD  3469               	retlw	105	;'i'
   613  08AE  3474               	retlw	116	;'t'
   614  08AF  3473               	retlw	115	;'s'
   615  08B0  3400               	retlw	0
   616  08B1                     STR_2:
   617  08B1  3450               	retlw	80	;'P'
   618  08B2  346F               	retlw	111	;'o'
   619  08B3  3474               	retlw	116	;'t'
   620  08B4  3465               	retlw	101	;'e'
   621  08B5  346E               	retlw	110	;'n'
   622  08B6  3463               	retlw	99	;'c'
   623  08B7  3469               	retlw	105	;'i'
   624  08B8  34F3               	retlw	-13
   625  08B9  346D               	retlw	109	;'m'
   626  08BA  3465               	retlw	101	;'e'
   627  08BB  3474               	retlw	116	;'t'
   628  08BC  3472               	retlw	114	;'r'
   629  08BD  346F               	retlw	111	;'o'
   630  08BE  3420               	retlw	32	;' '
   631  08BF  3432               	retlw	50	;'2'
   632  08C0  343A               	retlw	58	;':'
   633  08C1  3420               	retlw	32	;' '
   634  08C2  3425               	retlw	37	;'%'
   635  08C3  3433               	retlw	51	;'3'
   636  08C4  342E               	retlw	46	;'.'
   637  08C5  3430               	retlw	48	;'0'
   638  08C6  3466               	retlw	102	;'f'
   639  08C7  3462               	retlw	98	;'b'
   640  08C8  3469               	retlw	105	;'i'
   641  08C9  3474               	retlw	116	;'t'
   642  08CA  3473               	retlw	115	;'s'
   643  08CB  3400               	retlw	0
   644  08CC                     STR_3:
   645  08CC  3443               	retlw	67	;'C'
   646  08CD  346F               	retlw	111	;'o'
   647  08CE  346E               	retlw	110	;'n'
   648  08CF  3474               	retlw	116	;'t'
   649  08D0  3461               	retlw	97	;'a'
   650  08D1  3464               	retlw	100	;'d'
   651  08D2  346F               	retlw	111	;'o'
   652  08D3  3472               	retlw	114	;'r'
   653  08D4  343A               	retlw	58	;':'
   654  08D5  3420               	retlw	32	;' '
   655  08D6  3425               	retlw	37	;'%'
   656  08D7  3433               	retlw	51	;'3'
   657  08D8  342E               	retlw	46	;'.'
   658  08D9  3430               	retlw	48	;'0'
   659  08DA  3466               	retlw	102	;'f'
   660  08DB  3400               	retlw	0
   661                           
   662                           	psect	cinit
   663  000F                     start_initialization:	
   664                           ; #config settings
   665                           
   666  000F                     __initialization:
   667                           
   668                           ; Clear objects allocated to BANK0
   669  000F  1283               	bcf	3,5	;RP0=0, select bank0
   670  0010  1303               	bcf	3,6	;RP1=0, select bank0
   671  0011  01EF               	clrf	__pbssBANK0& (0+127)
   672                           
   673                           ; Clear objects allocated to BANK1
   674  0012  1383               	bcf	3,7	;select IRP bank0
   675  0013  30CD               	movlw	low __pbssBANK1
   676  0014  0084               	movwf	4
   677  0015  30EE               	movlw	low (__pbssBANK1+33)
   678  0016  160A  158A  225C  120A  118A  	fcall	clear_ram0
   679                           
   680                           ; Clear objects allocated to BANK3
   681  001B  1783               	bsf	3,7	;select IRP bank2
   682  001C  3090               	movlw	low __pbssBANK3
   683  001D  0084               	movwf	4
   684  001E  30C2               	movlw	low (__pbssBANK3+50)
   685  001F  160A  158A  225C  120A  118A  	fcall	clear_ram0
   686  0024                     end_of_initialization:	
   687                           ;End of C runtime variable initialization code
   688                           
   689  0024                     __end_of__initialization:
   690  0024  0183               	clrf	3
   691  0025  160A  118A  28E8   	ljmp	_main	;jump to C main() function
   692                           
   693                           	psect	bssBANK0
   694  006F                     __pbssBANK0:
   695  006F                     _bandera:
   696  006F                     	ds	1
   697                           
   698                           	psect	bssBANK1
   699  00CD                     __pbssBANK1:
   700  00CD                     _cont:
   701  00CD                     	ds	4
   702  00D1                     _val2:
   703  00D1                     	ds	4
   704  00D5                     _val1:
   705  00D5                     	ds	4
   706  00D9                     _dato:
   707  00D9                     	ds	1
   708  00DA                     _d:
   709  00DA                     	ds	20
   710                           
   711                           	psect	bssBANK3
   712  0190                     __pbssBANK3:
   713  0190                     _c:
   714  0190                     	ds	30
   715  01AE                     _e:
   716  01AE                     	ds	20
   717                           
   718                           	psect	clrtext
   719  1A5C                     clear_ram0:	
   720                           ;	Called with FSR containing the base address, and
   721                           ;	W with the last address+1
   722                           
   723  1A5C  0064               	clrwdt	;clear the watchdog before getting into this loop
   724  1A5D                     clrloop0:
   725  1A5D  0180               	clrf	0	;clear RAM location pointed to by FSR
   726  1A5E  0A84               	incf	4,f	;increment pointer
   727  1A5F  0604               	xorwf	4,w	;XOR with final address
   728  1A60  1903               	btfsc	3,2	;have we reached the end yet?
   729  1A61  3400               	retlw	0	;all done for this memory range, return
   730  1A62  0604               	xorwf	4,w	;XOR again to restore value
   731  1A63  2A5D               	goto	clrloop0	;do the next byte
   732                           
   733                           	psect	cstackBANK1
   734  00A0                     __pcstackBANK1:
   735  00A0                     ?___flsub:
   736  00A0                     ___flsub@a:	
   737                           ; 4 bytes @ 0x0
   738                           
   739                           
   740                           ; 4 bytes @ 0x0
   741  00A0                     	ds	4
   742  00A4                     ___flsub@b:
   743                           
   744                           ; 4 bytes @ 0x4
   745  00A4                     	ds	4
   746  00A8                     ?_sprintf:
   747  00A8                     sprintf@sp:	
   748                           ; 2 bytes @ 0x8
   749                           
   750                           
   751                           ; 2 bytes @ 0x8
   752  00A8                     	ds	2
   753  00AA                     sprintf@f:
   754                           
   755                           ; 1 bytes @ 0xA
   756  00AA                     	ds	5
   757  00AF                     _sprintf$1160:
   758                           
   759                           ; 4 bytes @ 0xF
   760  00AF                     	ds	4
   761  00B3                     sprintf@ap:
   762                           
   763                           ; 1 bytes @ 0x13
   764  00B3                     	ds	1
   765  00B4                     sprintf@val:
   766                           
   767                           ; 4 bytes @ 0x14
   768  00B4                     	ds	4
   769  00B8                     sprintf@flag:
   770                           
   771                           ; 2 bytes @ 0x18
   772  00B8                     	ds	2
   773  00BA                     sprintf@width:
   774                           
   775                           ; 2 bytes @ 0x1A
   776  00BA                     	ds	2
   777  00BC                     sprintf@tmpval:
   778                           
   779                           ; 4 bytes @ 0x1C
   780  00BC                     	ds	4
   781  00C0                     sprintf@eexp:
   782                           
   783                           ; 2 bytes @ 0x20
   784  00C0                     	ds	2
   785  00C2                     sprintf@fval:
   786                           
   787                           ; 4 bytes @ 0x22
   788  00C2                     	ds	4
   789  00C6                     sprintf@prec:
   790                           
   791                           ; 2 bytes @ 0x26
   792  00C6                     	ds	2
   793  00C8                     sprintf@c:
   794                           
   795                           ; 1 bytes @ 0x28
   796  00C8                     	ds	1
   797  00C9                     ??_main:
   798                           
   799                           ; 1 bytes @ 0x29
   800  00C9                     	ds	4
   801                           
   802                           	psect	cstackCOMMON
   803  0070                     __pcstackCOMMON:
   804  0070                     ?_isdigit:
   805  0070                     ?_setup:	
   806                           ; 1 bit 
   807                           
   808  0070                     ?_spiWrite:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_spiRead:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_Interrupciones:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ??_Interrupciones:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_main:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_spiReceiveWait:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_envio_char:	
   827                           ; 1 bytes @ 0x0
   828                           
   829                           
   830                           ; 1 bytes @ 0x0
   831  0070                     	ds	3
   832  0073                     ?___fleq:
   833  0073                     ?___flge:	
   834                           ; 1 bit 
   835                           
   836  0073                     ??_spiWrite:	
   837                           ; 1 bit 
   838                           
   839  0073                     ??_spiRead:	
   840                           ; 1 bytes @ 0x3
   841                           
   842  0073                     ?_spiInit:	
   843                           ; 1 bytes @ 0x3
   844                           
   845  0073                     ??_isdigit:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0073                     ??_spiReceiveWait:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0073                     ??_envio_char:	
   852                           ; 1 bytes @ 0x3
   853                           
   854  0073                     ?__Umul8_16:	
   855                           ; 1 bytes @ 0x3
   856                           
   857  0073                     ?___wmul:	
   858                           ; 2 bytes @ 0x3
   859                           
   860  0073                     ?___awmod:	
   861                           ; 2 bytes @ 0x3
   862                           
   863  0073                     ?___lwmod:	
   864                           ; 2 bytes @ 0x3
   865                           
   866  0073                     ?__tdiv_to_l_:	
   867                           ; 2 bytes @ 0x3
   868                           
   869  0073                     ?__div_to_l_:	
   870                           ; 4 bytes @ 0x3
   871                           
   872  0073                     ?___lldiv:	
   873                           ; 4 bytes @ 0x3
   874                           
   875  0073                     ?___flneg:	
   876                           ; 4 bytes @ 0x3
   877                           
   878  0073                     ?___llmod:	
   879                           ; 4 bytes @ 0x3
   880                           
   881  0073                     ?___xxtofl:	
   882                           ; 4 bytes @ 0x3
   883                           
   884  0073                     spiInit@sDataSample:	
   885                           ; 4 bytes @ 0x3
   886                           
   887  0073                     spiWrite@dat:	
   888                           ; 1 bytes @ 0x3
   889                           
   890  0073                     envio_char@dato:	
   891                           ; 1 bytes @ 0x3
   892                           
   893  0073                     __Umul8_16@multiplicand:	
   894                           ; 1 bytes @ 0x3
   895                           
   896  0073                     _isdigit$981:	
   897                           ; 1 bytes @ 0x3
   898                           
   899  0073                     ___wmul@multiplier:	
   900                           ; 1 bytes @ 0x3
   901                           
   902  0073                     ___awmod@divisor:	
   903                           ; 2 bytes @ 0x3
   904                           
   905  0073                     ___lwmod@divisor:	
   906                           ; 2 bytes @ 0x3
   907                           
   908  0073                     ___lldiv@divisor:	
   909                           ; 2 bytes @ 0x3
   910                           
   911  0073                     __div_to_l_@f1:	
   912                           ; 4 bytes @ 0x3
   913                           
   914  0073                     ___fleq@ff1:	
   915                           ; 4 bytes @ 0x3
   916                           
   917  0073                     ___flge@ff1:	
   918                           ; 4 bytes @ 0x3
   919                           
   920  0073                     ___flneg@f1:	
   921                           ; 4 bytes @ 0x3
   922                           
   923  0073                     __tdiv_to_l_@f1:	
   924                           ; 4 bytes @ 0x3
   925                           
   926  0073                     ___llmod@divisor:	
   927                           ; 4 bytes @ 0x3
   928                           
   929  0073                     ___xxtofl@val:	
   930                           ; 4 bytes @ 0x3
   931                           
   932                           
   933                           ; 4 bytes @ 0x3
   934  0073                     	ds	1
   935  0074                     ?_envio_caract:
   936  0074                     spiInit@sClockIdle:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0074                     isdigit@c:	
   940                           ; 1 bytes @ 0x4
   941                           
   942  0074                     envio_caract@st:	
   943                           ; 1 bytes @ 0x4
   944                           
   945                           
   946                           ; 2 bytes @ 0x4
   947  0074                     	ds	1
   948  0075                     ??__Umul8_16:
   949  0075                     spiInit@sTransmitEdge:	
   950                           ; 1 bytes @ 0x5
   951                           
   952  0075                     ___wmul@multiplicand:	
   953                           ; 1 bytes @ 0x5
   954                           
   955  0075                     ___awmod@dividend:	
   956                           ; 2 bytes @ 0x5
   957                           
   958  0075                     ___lwmod@dividend:	
   959                           ; 2 bytes @ 0x5
   960                           
   961                           
   962                           ; 2 bytes @ 0x5
   963  0075                     	ds	1
   964  0076                     ??_envio_caract:
   965  0076                     ??_spiInit:	
   966                           ; 1 bytes @ 0x6
   967                           
   968  0076                     spiInit@sType:	
   969                           ; 1 bytes @ 0x6
   970                           
   971                           
   972                           ; 1 bytes @ 0x6
   973  0076                     	ds	1
   974  0077                     ??_setup:
   975  0077                     ??___wmul:	
   976                           ; 1 bytes @ 0x7
   977                           
   978  0077                     ??___awmod:	
   979                           ; 1 bytes @ 0x7
   980                           
   981  0077                     ??___flneg:	
   982                           ; 1 bytes @ 0x7
   983                           
   984  0077                     ??___lwmod:	
   985                           ; 1 bytes @ 0x7
   986                           
   987  0077                     ??___xxtofl:	
   988                           ; 1 bytes @ 0x7
   989                           
   990  0077                     ___wmul@product:	
   991                           ; 1 bytes @ 0x7
   992                           
   993  0077                     ___lldiv@dividend:	
   994                           ; 2 bytes @ 0x7
   995                           
   996  0077                     __div_to_l_@f2:	
   997                           ; 4 bytes @ 0x7
   998                           
   999  0077                     ___fleq@ff2:	
  1000                           ; 4 bytes @ 0x7
  1001                           
  1002  0077                     ___flge@ff2:	
  1003                           ; 4 bytes @ 0x7
  1004                           
  1005  0077                     __tdiv_to_l_@f2:	
  1006                           ; 4 bytes @ 0x7
  1007                           
  1008  0077                     ___llmod@dividend:	
  1009                           ; 4 bytes @ 0x7
  1010                           
  1011                           
  1012                           ; 4 bytes @ 0x7
  1013  0077                     	ds	1
  1014  0078                     ___awmod@counter:
  1015  0078                     ___lwmod@counter:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x8
  1020  0078                     	ds	1
  1021  0079                     ??___lwdiv:
  1022  0079                     ___awmod@sign:	
  1023                           ; 1 bytes @ 0x9
  1024                           
  1025  0079                     envio_caract@i:	
  1026                           ; 1 bytes @ 0x9
  1027                           
  1028                           
  1029                           ; 2 bytes @ 0x9
  1030  0079                     	ds	1
  1031  007A                     ??___awdiv:
  1032                           
  1033                           ; 1 bytes @ 0xA
  1034  007A                     	ds	1
  1035  007B                     ??___flsub:
  1036                           
  1037                           	psect	cstackBANK0
  1038  0020                     __pcstackBANK0:	
  1039                           ; 1 bytes @ 0xB
  1040                           
  1041  0020                     ??__tdiv_to_l_:
  1042  0020                     ??__div_to_l_:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0020                     ??___lldiv:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     ??___fleq:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0020                     ??___flge:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0020                     ??___llmod:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  0020                     ?___awdiv:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  0020                     ?___lwdiv:	
  1061                           ; 2 bytes @ 0x0
  1062                           
  1063  0020                     ___xxtofl@sign:	
  1064                           ; 2 bytes @ 0x0
  1065                           
  1066  0020                     ___awdiv@divisor:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0020                     ___lwdiv@divisor:	
  1070                           ; 2 bytes @ 0x0
  1071                           
  1072  0020                     __Umul8_16@product:	
  1073                           ; 2 bytes @ 0x0
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x0
  1077  0020                     	ds	1
  1078  0021                     ___llmod@counter:
  1079  0021                     ___xxtofl@exp:	
  1080                           ; 1 bytes @ 0x1
  1081                           
  1082  0021                     ___lldiv@quotient:	
  1083                           ; 1 bytes @ 0x1
  1084                           
  1085  0021                     __div_to_l_@quot:	
  1086                           ; 4 bytes @ 0x1
  1087                           
  1088                           
  1089                           ; 4 bytes @ 0x1
  1090  0021                     	ds	1
  1091  0022                     ___awdiv@dividend:
  1092  0022                     ___lwdiv@dividend:	
  1093                           ; 2 bytes @ 0x2
  1094                           
  1095  0022                     __Umul8_16@word_mpld:	
  1096                           ; 2 bytes @ 0x2
  1097                           
  1098  0022                     ___xxtofl@arg:	
  1099                           ; 2 bytes @ 0x2
  1100                           
  1101                           
  1102                           ; 4 bytes @ 0x2
  1103  0022                     	ds	2
  1104  0024                     ___awdiv@counter:
  1105  0024                     __Umul8_16@multiplier:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0024                     ___lwdiv@quotient:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111  0024                     __tdiv_to_l_@quot:	
  1112                           ; 2 bytes @ 0x4
  1113                           
  1114                           
  1115                           ; 4 bytes @ 0x4
  1116  0024                     	ds	1
  1117  0025                     ___lldiv@counter:
  1118  0025                     ___awdiv@sign:	
  1119                           ; 1 bytes @ 0x5
  1120                           
  1121  0025                     __div_to_l_@cntr:	
  1122                           ; 1 bytes @ 0x5
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x5
  1126  0025                     	ds	1
  1127  0026                     __div_to_l_@exp1:
  1128  0026                     ___lwdiv@counter:	
  1129                           ; 1 bytes @ 0x6
  1130                           
  1131  0026                     ___awdiv@quotient:	
  1132                           ; 1 bytes @ 0x6
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x6
  1136  0026                     	ds	2
  1137  0028                     ?___flmul:
  1138  0028                     __tdiv_to_l_@cntr:	
  1139                           ; 4 bytes @ 0x8
  1140                           
  1141  0028                     ___flmul@b:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x8
  1146  0028                     	ds	1
  1147  0029                     __tdiv_to_l_@exp1:
  1148                           
  1149                           ; 1 bytes @ 0x9
  1150  0029                     	ds	3
  1151  002C                     ___flmul@a:
  1152                           
  1153                           ; 4 bytes @ 0xC
  1154  002C                     	ds	4
  1155  0030                     ??___flmul:
  1156                           
  1157                           ; 1 bytes @ 0x10
  1158  0030                     	ds	5
  1159  0035                     ___flmul@sign:
  1160                           
  1161                           ; 1 bytes @ 0x15
  1162  0035                     	ds	1
  1163  0036                     ___flmul@grs:
  1164                           
  1165                           ; 4 bytes @ 0x16
  1166  0036                     	ds	4
  1167  003A                     ___flmul@aexp:
  1168                           
  1169                           ; 1 bytes @ 0x1A
  1170  003A                     	ds	1
  1171  003B                     ___flmul@bexp:
  1172                           
  1173                           ; 1 bytes @ 0x1B
  1174  003B                     	ds	1
  1175  003C                     ___flmul@prod:
  1176                           
  1177                           ; 4 bytes @ 0x1C
  1178  003C                     	ds	4
  1179  0040                     ___flmul@temp:
  1180                           
  1181                           ; 2 bytes @ 0x20
  1182  0040                     	ds	2
  1183  0042                     ?_fround:
  1184  0042                     ?_scale:	
  1185                           ; 4 bytes @ 0x22
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0x22
  1189  0042                     	ds	4
  1190  0046                     ??_fround:
  1191  0046                     ??_scale:	
  1192                           ; 1 bytes @ 0x26
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x26
  1196  0046                     	ds	7
  1197  004D                     _fround$1158:
  1198                           
  1199                           ; 4 bytes @ 0x2D
  1200  004D                     	ds	3
  1201  0050                     _scale$1159:
  1202                           
  1203                           ; 4 bytes @ 0x30
  1204  0050                     	ds	1
  1205  0051                     _fround$1157:
  1206                           
  1207                           ; 4 bytes @ 0x31
  1208  0051                     	ds	3
  1209  0054                     scale@scl:
  1210                           
  1211                           ; 1 bytes @ 0x34
  1212  0054                     	ds	1
  1213  0055                     ?___fltol:
  1214  0055                     fround@prec:	
  1215                           ; 4 bytes @ 0x35
  1216                           
  1217  0055                     ___fltol@f1:	
  1218                           ; 1 bytes @ 0x35
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0x35
  1222  0055                     	ds	1
  1223  0056                     ?___fladd:
  1224  0056                     ___fladd@b:	
  1225                           ; 4 bytes @ 0x36
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0x36
  1229  0056                     	ds	3
  1230  0059                     ??___fltol:
  1231                           
  1232                           ; 1 bytes @ 0x39
  1233  0059                     	ds	1
  1234  005A                     ___fladd@a:
  1235                           
  1236                           ; 4 bytes @ 0x3A
  1237  005A                     	ds	4
  1238  005E                     ??___fladd:
  1239  005E                     ___fltol@sign1:	
  1240                           ; 1 bytes @ 0x3E
  1241                           
  1242                           
  1243                           ; 1 bytes @ 0x3E
  1244  005E                     	ds	1
  1245  005F                     ___fltol@exp1:
  1246                           
  1247                           ; 1 bytes @ 0x3F
  1248  005F                     	ds	7
  1249  0066                     ___fladd@signs:
  1250                           
  1251                           ; 1 bytes @ 0x46
  1252  0066                     	ds	1
  1253  0067                     ___fladd@aexp:
  1254                           
  1255                           ; 1 bytes @ 0x47
  1256  0067                     	ds	1
  1257  0068                     ___fladd@bexp:
  1258                           
  1259                           ; 1 bytes @ 0x48
  1260  0068                     	ds	1
  1261  0069                     ___fladd@grs:
  1262                           
  1263                           ; 1 bytes @ 0x49
  1264  0069                     	ds	1
  1265  006A                     ??_sprintf:
  1266                           
  1267                           ; 1 bytes @ 0x4A
  1268  006A                     	ds	5
  1269                           
  1270                           	psect	maintext
  1271  10E8                     __pmaintext:	
  1272 ;;
  1273 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1274 ;;
  1275 ;; *************** function _main *****************
  1276 ;; Defined at:
  1277 ;;		line 67 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : B00/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0
  1293 ;;      Temps:          0       0       4       0       0
  1294 ;;      Totals:         0       0       4       0       0
  1295 ;;Total ram usage:        4 bytes
  1296 ;; Hardware stack levels required when called:    5
  1297 ;; This function calls:
  1298 ;;		___fladd
  1299 ;;		___flsub
  1300 ;;		___fltol
  1301 ;;		___xxtofl
  1302 ;;		_envio_caract
  1303 ;;		_setup
  1304 ;;		_spiRead
  1305 ;;		_spiWrite
  1306 ;;		_sprintf
  1307 ;; This function is called by:
  1308 ;;		Startup code after reset
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _main
  1314  10E8                     _main:
  1315  10E8                     l3702:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1318                           
  1319                           
  1320                           ;main.c: 68:     setup();
  1321  10E8  160A  158A  22B4  160A  118A  	fcall	_setup
  1322  10ED                     l3704:
  1323                           
  1324                           ;main.c: 73:        PORTCbits.RC2 = 0;
  1325  10ED  1283               	bcf	3,5	;RP0=0, select bank0
  1326  10EE  1303               	bcf	3,6	;RP1=0, select bank0
  1327  10EF  1107               	bcf	7,2	;volatile
  1328  10F0                     l3706:
  1329                           
  1330                           ;main.c: 74:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1331  10F0  3003               	movlw	3
  1332  10F1  1683               	bsf	3,5	;RP0=1, select bank1
  1333  10F2  1303               	bcf	3,6	;RP1=0, select bank1
  1334  10F3  00CA               	movwf	(??_main^(0+128)+1)
  1335  10F4  3097               	movlw	151
  1336  10F5  00C9               	movwf	??_main^(0+128)
  1337  10F6                     u6157:
  1338  10F6  0BC9               	decfsz	??_main^(0+128),f
  1339  10F7  28F6               	goto	u6157
  1340  10F8  0BCA               	decfsz	(??_main^(0+128)+1),f
  1341  10F9  28F6               	goto	u6157
  1342  10FA                     l3708:
  1343                           
  1344                           ;main.c: 76:        if(dato == '+'){
  1345  10FA  302B               	movlw	43
  1346  10FB  1683               	bsf	3,5	;RP0=1, select bank1
  1347  10FC  1303               	bcf	3,6	;RP1=0, select bank1
  1348  10FD  0659               	xorwf	_dato^(0+128),w
  1349  10FE  1D03               	btfss	3,2
  1350  10FF  2901               	goto	u6111
  1351  1100  2902               	goto	u6110
  1352  1101                     u6111:
  1353  1101  2943               	goto	l3714
  1354  1102                     u6110:
  1355  1102                     l3710:
  1356                           
  1357                           ;main.c: 77:            cont++;
  1358  1102  303F               	movlw	63
  1359  1103  1283               	bcf	3,5	;RP0=0, select bank0
  1360  1104  1303               	bcf	3,6	;RP1=0, select bank0
  1361  1105  00D9               	movwf	___fladd@b+3
  1362  1106  3080               	movlw	128
  1363  1107  00D8               	movwf	___fladd@b+2
  1364  1108  3000               	movlw	0
  1365  1109  00D7               	movwf	___fladd@b+1
  1366  110A  3000               	movlw	0
  1367  110B  00D6               	movwf	___fladd@b
  1368  110C  1683               	bsf	3,5	;RP0=1, select bank1
  1369  110D  1303               	bcf	3,6	;RP1=0, select bank1
  1370  110E  0850               	movf	(_cont+3)^(0+128),w
  1371  110F  1283               	bcf	3,5	;RP0=0, select bank0
  1372  1110  1303               	bcf	3,6	;RP1=0, select bank0
  1373  1111  00DD               	movwf	___fladd@a+3
  1374  1112  1683               	bsf	3,5	;RP0=1, select bank1
  1375  1113  1303               	bcf	3,6	;RP1=0, select bank1
  1376  1114  084F               	movf	(_cont+2)^(0+128),w
  1377  1115  1283               	bcf	3,5	;RP0=0, select bank0
  1378  1116  1303               	bcf	3,6	;RP1=0, select bank0
  1379  1117  00DC               	movwf	___fladd@a+2
  1380  1118  1683               	bsf	3,5	;RP0=1, select bank1
  1381  1119  1303               	bcf	3,6	;RP1=0, select bank1
  1382  111A  084E               	movf	(_cont+1)^(0+128),w
  1383  111B  1283               	bcf	3,5	;RP0=0, select bank0
  1384  111C  1303               	bcf	3,6	;RP1=0, select bank0
  1385  111D  00DB               	movwf	___fladd@a+1
  1386  111E  1683               	bsf	3,5	;RP0=1, select bank1
  1387  111F  1303               	bcf	3,6	;RP1=0, select bank1
  1388  1120  084D               	movf	_cont^(0+128),w
  1389  1121  1283               	bcf	3,5	;RP0=0, select bank0
  1390  1122  1303               	bcf	3,6	;RP1=0, select bank0
  1391  1123  00DA               	movwf	___fladd@a
  1392  1124  160A  118A  2273  160A  118A  	fcall	___fladd
  1393  1129  1283               	bcf	3,5	;RP0=0, select bank0
  1394  112A  1303               	bcf	3,6	;RP1=0, select bank0
  1395  112B  0859               	movf	?___fladd+3,w
  1396  112C  1683               	bsf	3,5	;RP0=1, select bank1
  1397  112D  1303               	bcf	3,6	;RP1=0, select bank1
  1398  112E  00D0               	movwf	(_cont+3)^(0+128)
  1399  112F  1283               	bcf	3,5	;RP0=0, select bank0
  1400  1130  1303               	bcf	3,6	;RP1=0, select bank0
  1401  1131  0858               	movf	?___fladd+2,w
  1402  1132  1683               	bsf	3,5	;RP0=1, select bank1
  1403  1133  1303               	bcf	3,6	;RP1=0, select bank1
  1404  1134  00CF               	movwf	(_cont+2)^(0+128)
  1405  1135  1283               	bcf	3,5	;RP0=0, select bank0
  1406  1136  1303               	bcf	3,6	;RP1=0, select bank0
  1407  1137  0857               	movf	?___fladd+1,w
  1408  1138  1683               	bsf	3,5	;RP0=1, select bank1
  1409  1139  1303               	bcf	3,6	;RP1=0, select bank1
  1410  113A  00CE               	movwf	(_cont+1)^(0+128)
  1411  113B  1283               	bcf	3,5	;RP0=0, select bank0
  1412  113C  1303               	bcf	3,6	;RP1=0, select bank0
  1413  113D  0856               	movf	?___fladd,w
  1414  113E  1683               	bsf	3,5	;RP0=1, select bank1
  1415  113F  1303               	bcf	3,6	;RP1=0, select bank1
  1416  1140  00CD               	movwf	_cont^(0+128)
  1417  1141                     l3712:
  1418                           
  1419                           ;main.c: 78:            dato = 0;
  1420  1141  01D9               	clrf	_dato^(0+128)
  1421                           
  1422                           ;main.c: 79:        }
  1423  1142  2969               	goto	l3720
  1424  1143                     l3714:
  1425  1143  302D               	movlw	45
  1426  1144  0659               	xorwf	_dato^(0+128),w
  1427  1145  1D03               	btfss	3,2
  1428  1146  2948               	goto	u6121
  1429  1147  2949               	goto	u6120
  1430  1148                     u6121:
  1431  1148  2969               	goto	l3720
  1432  1149                     u6120:
  1433  1149                     l3716:
  1434                           
  1435                           ;main.c: 81:            cont--;
  1436  1149  303F               	movlw	63
  1437  114A  00A3               	movwf	(___flsub@a+3)^(0+128)
  1438  114B  3080               	movlw	128
  1439  114C  00A2               	movwf	(___flsub@a+2)^(0+128)
  1440  114D  3000               	movlw	0
  1441  114E  00A1               	movwf	(___flsub@a+1)^(0+128)
  1442  114F  3000               	movlw	0
  1443  1150  00A0               	movwf	___flsub@a^(0+128)
  1444  1151  0850               	movf	(_cont+3)^(0+128),w
  1445  1152  00A7               	movwf	(___flsub@b+3)^(0+128)
  1446  1153  084F               	movf	(_cont+2)^(0+128),w
  1447  1154  00A6               	movwf	(___flsub@b+2)^(0+128)
  1448  1155  084E               	movf	(_cont+1)^(0+128),w
  1449  1156  00A5               	movwf	(___flsub@b+1)^(0+128)
  1450  1157  084D               	movf	_cont^(0+128),w
  1451  1158  00A4               	movwf	___flsub@b^(0+128)
  1452  1159  160A  158A  23F0  160A  118A  	fcall	___flsub
  1453  115E  1683               	bsf	3,5	;RP0=1, select bank1
  1454  115F  1303               	bcf	3,6	;RP1=0, select bank1
  1455  1160  0823               	movf	(?___flsub+3)^(0+128),w
  1456  1161  00D0               	movwf	(_cont+3)^(0+128)
  1457  1162  0822               	movf	(?___flsub+2)^(0+128),w
  1458  1163  00CF               	movwf	(_cont+2)^(0+128)
  1459  1164  0821               	movf	(?___flsub+1)^(0+128),w
  1460  1165  00CE               	movwf	(_cont+1)^(0+128)
  1461  1166  0820               	movf	?___flsub^(0+128),w
  1462  1167  00CD               	movwf	_cont^(0+128)
  1463  1168  2941               	goto	l3712
  1464  1169                     l3720:
  1465                           
  1466                           ;main.c: 85:        spiWrite(bandera);
  1467  1169  1283               	bcf	3,5	;RP0=0, select bank0
  1468  116A  1303               	bcf	3,6	;RP1=0, select bank0
  1469  116B  086F               	movf	_bandera,w
  1470  116C  160A  158A  2256  160A  118A  	fcall	_spiWrite
  1471  1171                     l3722:
  1472                           
  1473                           ;main.c: 87:        if (bandera == 0){
  1474  1171  1283               	bcf	3,5	;RP0=0, select bank0
  1475  1172  1303               	bcf	3,6	;RP1=0, select bank0
  1476  1173  086F               	movf	_bandera,w
  1477  1174  1D03               	btfss	3,2
  1478  1175  2977               	goto	u6131
  1479  1176  2978               	goto	u6130
  1480  1177                     u6131:
  1481  1177  299E               	goto	l3728
  1482  1178                     u6130:
  1483  1178                     l3724:
  1484                           
  1485                           ;main.c: 88:            bandera = 1;
  1486  1178  01EF               	clrf	_bandera
  1487  1179  0AEF               	incf	_bandera,f
  1488  117A                     l3726:
  1489                           
  1490                           ;main.c: 89:            val1 = spiRead();
  1491  117A  120A  118A  27F7  160A  118A  	fcall	_spiRead
  1492  117F  1683               	bsf	3,5	;RP0=1, select bank1
  1493  1180  1303               	bcf	3,6	;RP1=0, select bank1
  1494  1181  00C9               	movwf	??_main^(0+128)
  1495  1182  01CA               	clrf	(??_main^(0+128)+1)
  1496  1183  01CB               	clrf	(??_main^(0+128)+2)
  1497  1184  01CC               	clrf	(??_main^(0+128)+3)
  1498  1185  084C               	movf	(??_main+3)^(0+128),w
  1499  1186  00F6               	movwf	___xxtofl@val+3
  1500  1187  084B               	movf	(??_main+2)^(0+128),w
  1501  1188  00F5               	movwf	___xxtofl@val+2
  1502  1189  084A               	movf	(??_main+1)^(0+128),w
  1503  118A  00F4               	movwf	___xxtofl@val+1
  1504  118B  0849               	movf	??_main^(0+128),w
  1505  118C  00F3               	movwf	___xxtofl@val
  1506  118D  3000               	movlw	0
  1507  118E  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1508  1193  0876               	movf	?___xxtofl+3,w
  1509  1194  1683               	bsf	3,5	;RP0=1, select bank1
  1510  1195  1303               	bcf	3,6	;RP1=0, select bank1
  1511  1196  00D8               	movwf	(_val1+3)^(0+128)
  1512  1197  0875               	movf	?___xxtofl+2,w
  1513  1198  00D7               	movwf	(_val1+2)^(0+128)
  1514  1199  0874               	movf	?___xxtofl+1,w
  1515  119A  00D6               	movwf	(_val1+1)^(0+128)
  1516  119B  0873               	movf	?___xxtofl,w
  1517  119C  00D5               	movwf	_val1^(0+128)
  1518                           
  1519                           ;main.c: 90:        }
  1520  119D  29C7               	goto	l3734
  1521  119E                     l3728:
  1522  119E  036F               	decf	_bandera,w
  1523  119F  1D03               	btfss	3,2
  1524  11A0  29A2               	goto	u6141
  1525  11A1  29A3               	goto	u6140
  1526  11A2                     u6141:
  1527  11A2  29C7               	goto	l3734
  1528  11A3                     u6140:
  1529  11A3                     l3730:
  1530                           
  1531                           ;main.c: 92:            bandera = 0;
  1532  11A3  01EF               	clrf	_bandera
  1533  11A4                     l3732:
  1534                           
  1535                           ;main.c: 93:            val2 = spiRead();
  1536  11A4  120A  118A  27F7  160A  118A  	fcall	_spiRead
  1537  11A9  1683               	bsf	3,5	;RP0=1, select bank1
  1538  11AA  1303               	bcf	3,6	;RP1=0, select bank1
  1539  11AB  00C9               	movwf	??_main^(0+128)
  1540  11AC  01CA               	clrf	(??_main^(0+128)+1)
  1541  11AD  01CB               	clrf	(??_main^(0+128)+2)
  1542  11AE  01CC               	clrf	(??_main^(0+128)+3)
  1543  11AF  084C               	movf	(??_main+3)^(0+128),w
  1544  11B0  00F6               	movwf	___xxtofl@val+3
  1545  11B1  084B               	movf	(??_main+2)^(0+128),w
  1546  11B2  00F5               	movwf	___xxtofl@val+2
  1547  11B3  084A               	movf	(??_main+1)^(0+128),w
  1548  11B4  00F4               	movwf	___xxtofl@val+1
  1549  11B5  0849               	movf	??_main^(0+128),w
  1550  11B6  00F3               	movwf	___xxtofl@val
  1551  11B7  3000               	movlw	0
  1552  11B8  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1553  11BD  0876               	movf	?___xxtofl+3,w
  1554  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  1555  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  1556  11C0  00D4               	movwf	(_val2+3)^(0+128)
  1557  11C1  0875               	movf	?___xxtofl+2,w
  1558  11C2  00D3               	movwf	(_val2+2)^(0+128)
  1559  11C3  0874               	movf	?___xxtofl+1,w
  1560  11C4  00D2               	movwf	(_val2+1)^(0+128)
  1561  11C5  0873               	movf	?___xxtofl,w
  1562  11C6  00D1               	movwf	_val2^(0+128)
  1563  11C7                     l3734:
  1564                           
  1565                           ;main.c: 96:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1566  11C7  3003               	movlw	3
  1567  11C8  1683               	bsf	3,5	;RP0=1, select bank1
  1568  11C9  1303               	bcf	3,6	;RP1=0, select bank1
  1569  11CA  00CA               	movwf	(??_main^(0+128)+1)
  1570  11CB  3097               	movlw	151
  1571  11CC  00C9               	movwf	??_main^(0+128)
  1572  11CD                     u6167:
  1573  11CD  0BC9               	decfsz	??_main^(0+128),f
  1574  11CE  29CD               	goto	u6167
  1575  11CF  0BCA               	decfsz	(??_main^(0+128)+1),f
  1576  11D0  29CD               	goto	u6167
  1577  11D1                     l3736:
  1578                           
  1579                           ;main.c: 97:        PORTCbits.RC2 = 1;
  1580  11D1  1283               	bcf	3,5	;RP0=0, select bank0
  1581  11D2  1303               	bcf	3,6	;RP1=0, select bank0
  1582  11D3  1507               	bsf	7,2	;volatile
  1583  11D4                     l3738:
  1584                           
  1585                           ;main.c: 99:        _delay((unsigned long)((1000)*(8000000/4000.0)));
  1586  11D4  300B               	movlw	11
  1587  11D5  1683               	bsf	3,5	;RP0=1, select bank1
  1588  11D6  1303               	bcf	3,6	;RP1=0, select bank1
  1589  11D7  00CB               	movwf	(??_main^(0+128)+2)
  1590  11D8  3026               	movlw	38
  1591  11D9  00CA               	movwf	(??_main^(0+128)+1)
  1592  11DA  305D               	movlw	93
  1593  11DB  00C9               	movwf	??_main^(0+128)
  1594  11DC                     u6177:
  1595  11DC  0BC9               	decfsz	??_main^(0+128),f
  1596  11DD  29DC               	goto	u6177
  1597  11DE  0BCA               	decfsz	(??_main^(0+128)+1),f
  1598  11DF  29DC               	goto	u6177
  1599  11E0  0BCB               	decfsz	(??_main^(0+128)+2),f
  1600  11E1  29DC               	goto	u6177
  1601  11E2                     l3740:
  1602                           
  1603                           ;main.c: 101:        sprintf(c,"Potenciometro 1: %3.0fbits",val1);
  1604  11E2  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1605  11E3  1683               	bsf	3,5	;RP0=1, select bank1
  1606  11E4  1303               	bcf	3,6	;RP1=0, select bank1
  1607  11E5  00A8               	movwf	sprintf@sp^(0+128)
  1608  11E6  3001               	movlw	1
  1609  11E7  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1610  11E8  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1611  11E9  00C9               	movwf	??_main^(0+128)
  1612  11EA  0849               	movf	??_main^(0+128),w
  1613  11EB  00AA               	movwf	sprintf@f^(0+128)
  1614  11EC  0858               	movf	(_val1+3)^(0+128),w
  1615  11ED  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1616  11EE  0857               	movf	(_val1+2)^(0+128),w
  1617  11EF  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1618  11F0  0856               	movf	(_val1+1)^(0+128),w
  1619  11F1  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1620  11F2  0855               	movf	_val1^(0+128),w
  1621  11F3  00AB               	movwf	(?_sprintf^(0+128)+3)
  1622  11F4  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1623  11F9                     l3742:
  1624                           
  1625                           ;main.c: 102:        sprintf(d,"Potenciómetro 2: %3.0fbits",val2);
  1626  11F9  30DA               	movlw	(low (_d| 0))& (0+255)
  1627  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  1628  11FB  1303               	bcf	3,6	;RP1=0, select bank1
  1629  11FC  00A8               	movwf	sprintf@sp^(0+128)
  1630  11FD  3000               	movlw	0
  1631  11FE  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1632  11FF  30AC               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1633  1200  00C9               	movwf	??_main^(0+128)
  1634  1201  0849               	movf	??_main^(0+128),w
  1635  1202  00AA               	movwf	sprintf@f^(0+128)
  1636  1203  0854               	movf	(_val2+3)^(0+128),w
  1637  1204  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1638  1205  0853               	movf	(_val2+2)^(0+128),w
  1639  1206  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1640  1207  0852               	movf	(_val2+1)^(0+128),w
  1641  1208  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1642  1209  0851               	movf	_val2^(0+128),w
  1643  120A  00AB               	movwf	(?_sprintf^(0+128)+3)
  1644  120B  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1645  1210                     l3744:
  1646                           
  1647                           ;main.c: 103:        sprintf(e,"Contador: %3.0f",cont);
  1648  1210  30AE               	movlw	(low (_e| (0+256)))& (0+255)
  1649  1211  1683               	bsf	3,5	;RP0=1, select bank1
  1650  1212  1303               	bcf	3,6	;RP1=0, select bank1
  1651  1213  00A8               	movwf	sprintf@sp^(0+128)
  1652  1214  3001               	movlw	1
  1653  1215  00A9               	movwf	(sprintf@sp+1)^(0+128)
  1654  1216  30C7               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1655  1217  00C9               	movwf	??_main^(0+128)
  1656  1218  0849               	movf	??_main^(0+128),w
  1657  1219  00AA               	movwf	sprintf@f^(0+128)
  1658  121A  0850               	movf	(_cont+3)^(0+128),w
  1659  121B  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  1660  121C  084F               	movf	(_cont+2)^(0+128),w
  1661  121D  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  1662  121E  084E               	movf	(_cont+1)^(0+128),w
  1663  121F  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1664  1220  084D               	movf	_cont^(0+128),w
  1665  1221  00AB               	movwf	(?_sprintf^(0+128)+3)
  1666  1222  160A  118A  24FB  160A  118A  	fcall	_sprintf
  1667  1227                     l3746:
  1668                           
  1669                           ;main.c: 105:        TXREG = '\f';
  1670  1227  300C               	movlw	12
  1671  1228  1283               	bcf	3,5	;RP0=0, select bank0
  1672  1229  1303               	bcf	3,6	;RP1=0, select bank0
  1673  122A  0099               	movwf	25	;volatile
  1674  122B                     l3748:
  1675                           
  1676                           ;main.c: 106:        envio_caract(c);
  1677  122B  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1678  122C  00F4               	movwf	envio_caract@st
  1679  122D  3001               	movlw	1
  1680  122E  00F5               	movwf	envio_caract@st+1
  1681  122F  160A  158A  22E9  160A  118A  	fcall	_envio_caract
  1682  1234                     l3750:
  1683                           
  1684                           ;main.c: 107:        TXREG = '\r';
  1685  1234  300D               	movlw	13
  1686  1235  1283               	bcf	3,5	;RP0=0, select bank0
  1687  1236  1303               	bcf	3,6	;RP1=0, select bank0
  1688  1237  0099               	movwf	25	;volatile
  1689  1238                     l3752:
  1690                           
  1691                           ;main.c: 108:        envio_caract(d);
  1692  1238  30DA               	movlw	(low (_d| 0))& (0+255)
  1693  1239  00F4               	movwf	envio_caract@st
  1694  123A  3000               	movlw	0
  1695  123B  00F5               	movwf	envio_caract@st+1
  1696  123C  160A  158A  22E9  160A  118A  	fcall	_envio_caract
  1697  1241                     l3754:
  1698                           
  1699                           ;main.c: 109:        TXREG = '\r';
  1700  1241  300D               	movlw	13
  1701  1242  1283               	bcf	3,5	;RP0=0, select bank0
  1702  1243  1303               	bcf	3,6	;RP1=0, select bank0
  1703  1244  0099               	movwf	25	;volatile
  1704  1245                     l3756:
  1705                           
  1706                           ;main.c: 110:        envio_caract(e);
  1707  1245  30AE               	movlw	(low (_e| (0+256)))& (0+255)
  1708  1246  00F4               	movwf	envio_caract@st
  1709  1247  3001               	movlw	1
  1710  1248  00F5               	movwf	envio_caract@st+1
  1711  1249  160A  158A  22E9  160A  118A  	fcall	_envio_caract
  1712  124E                     l3758:
  1713                           
  1714                           ;main.c: 112:        PORTD = cont;
  1715  124E  1683               	bsf	3,5	;RP0=1, select bank1
  1716  124F  1303               	bcf	3,6	;RP1=0, select bank1
  1717  1250  0850               	movf	(_cont+3)^(0+128),w
  1718  1251  1283               	bcf	3,5	;RP0=0, select bank0
  1719  1252  1303               	bcf	3,6	;RP1=0, select bank0
  1720  1253  00D8               	movwf	___fltol@f1+3
  1721  1254  1683               	bsf	3,5	;RP0=1, select bank1
  1722  1255  1303               	bcf	3,6	;RP1=0, select bank1
  1723  1256  084F               	movf	(_cont+2)^(0+128),w
  1724  1257  1283               	bcf	3,5	;RP0=0, select bank0
  1725  1258  1303               	bcf	3,6	;RP1=0, select bank0
  1726  1259  00D7               	movwf	___fltol@f1+2
  1727  125A  1683               	bsf	3,5	;RP0=1, select bank1
  1728  125B  1303               	bcf	3,6	;RP1=0, select bank1
  1729  125C  084E               	movf	(_cont+1)^(0+128),w
  1730  125D  1283               	bcf	3,5	;RP0=0, select bank0
  1731  125E  1303               	bcf	3,6	;RP1=0, select bank0
  1732  125F  00D6               	movwf	___fltol@f1+1
  1733  1260  1683               	bsf	3,5	;RP0=1, select bank1
  1734  1261  1303               	bcf	3,6	;RP1=0, select bank1
  1735  1262  084D               	movf	_cont^(0+128),w
  1736  1263  1283               	bcf	3,5	;RP0=0, select bank0
  1737  1264  1303               	bcf	3,6	;RP1=0, select bank0
  1738  1265  00D5               	movwf	___fltol@f1
  1739  1266  160A  158A  2567  160A  118A  	fcall	___fltol
  1740  126B  1283               	bcf	3,5	;RP0=0, select bank0
  1741  126C  1303               	bcf	3,6	;RP1=0, select bank0
  1742  126D  0855               	movf	?___fltol,w
  1743  126E  0088               	movwf	8	;volatile
  1744  126F  28ED               	goto	l3704
  1745  1270  120A  118A  280C   	ljmp	start
  1746  1273                     __end_of_main:
  1747                           
  1748                           	psect	text1
  1749  14FB                     __ptext1:	
  1750 ;; *************** function _sprintf *****************
  1751 ;; Defined at:
  1752 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  sp              2    8[BANK1 ] PTR unsigned char 
  1755 ;;		 -> e(20), d(20), c(30), 
  1756 ;;  f               1   10[BANK1 ] PTR const unsigned char 
  1757 ;;		 -> STR_3(16), STR_2(27), STR_1(27), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  fval            4   34[BANK1 ] PTR const unsigned char 
  1760 ;;  tmpval          4   28[BANK1 ] struct .
  1761 ;;  val             4   20[BANK1 ] unsigned long 
  1762 ;;  prec            2   38[BANK1 ] int 
  1763 ;;  eexp            2   32[BANK1 ] int 
  1764 ;;  width           2   26[BANK1 ] int 
  1765 ;;  flag            2   24[BANK1 ] unsigned short 
  1766 ;;  cp              2    0        PTR const unsigned char 
  1767 ;;  len             2    0        unsigned int 
  1768 ;;  c               1   40[BANK1 ] unsigned char 
  1769 ;;  ap              1   19[BANK1 ] PTR void [1]
  1770 ;;		 -> ?_sprintf(2), 
  1771 ;;  d               1    0        unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2    8[BANK1 ] int 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       7       0       0
  1782 ;;      Locals:         0       0      26       0       0
  1783 ;;      Temps:          0       5       0       0       0
  1784 ;;      Totals:         0       5      33       0       0
  1785 ;;Total ram usage:       38 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		___awdiv
  1790 ;;		___fladd
  1791 ;;		___fleq
  1792 ;;		___flge
  1793 ;;		___flmul
  1794 ;;		___flneg
  1795 ;;		___flsub
  1796 ;;		___fltol
  1797 ;;		___lldiv
  1798 ;;		___llmod
  1799 ;;		___wmul
  1800 ;;		___xxtofl
  1801 ;;		__div_to_l_
  1802 ;;		__tdiv_to_l_
  1803 ;;		_fround
  1804 ;;		_isdigit
  1805 ;;		_scale
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _sprintf
  1813  14FB                     _sprintf:
  1814  14FB                     l3430:	
  1815                           ;incstack = 0
  1816                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1817                           
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1820  14FB  30AB               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  1821  14FC  1283               	bcf	3,5	;RP0=0, select bank0
  1822  14FD  1303               	bcf	3,6	;RP1=0, select bank0
  1823  14FE  00EA               	movwf	??_sprintf
  1824  14FF  086A               	movf	??_sprintf,w
  1825  1500  1683               	bsf	3,5	;RP0=1, select bank1
  1826  1501  1303               	bcf	3,6	;RP1=0, select bank1
  1827  1502  00B3               	movwf	sprintf@ap^(0+128)
  1828  1503                     L1:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1831  1503  120A  118A  2D9E   	goto	l3684
  1832  1506                     l3432:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1835  1506  3025               	movlw	37
  1836  1507  0648               	xorwf	sprintf@c^(0+128),w
  1837  1508  1903               	btfsc	3,2
  1838  1509  2D0B               	goto	u5611
  1839  150A  2D0C               	goto	u5610
  1840  150B                     u5611:
  1841  150B  2D24               	goto	l3438
  1842  150C                     u5610:
  1843  150C                     l3434:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1846  150C  0848               	movf	sprintf@c^(0+128),w
  1847  150D  1283               	bcf	3,5	;RP0=0, select bank0
  1848  150E  1303               	bcf	3,6	;RP1=0, select bank0
  1849  150F  00EA               	movwf	??_sprintf
  1850  1510  1683               	bsf	3,5	;RP0=1, select bank1
  1851  1511  1303               	bcf	3,6	;RP1=0, select bank1
  1852  1512  0828               	movf	sprintf@sp^(0+128),w
  1853  1513  0084               	movwf	4
  1854  1514  1783               	bsf	3,7
  1855  1515  1C29               	btfss	(sprintf@sp+1)^(0+128),0
  1856  1516  1383               	bcf	3,7
  1857  1517  1283               	bcf	3,5	;RP0=0, select bank0
  1858  1518  1303               	bcf	3,6	;RP1=0, select bank0
  1859  1519  086A               	movf	??_sprintf,w
  1860  151A  0080               	movwf	0
  1861  151B                     l3436:
  1862  151B  3001               	movlw	1
  1863  151C  1683               	bsf	3,5	;RP0=1, select bank1
  1864  151D  1303               	bcf	3,6	;RP1=0, select bank1
  1865  151E  07A8               	addwf	sprintf@sp^(0+128),f
  1866  151F  1803               	skipnc
  1867  1520  0AA9               	incf	(sprintf@sp+1)^(0+128),f
  1868  1521  3000               	movlw	0
  1869  1522  07A9               	addwf	(sprintf@sp+1)^(0+128),f
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1872  1523  2D03               	goto	L1
  1873  1524                     l3438:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1876  1524  01BA               	clrf	sprintf@width^(0+128)
  1877  1525  01BB               	clrf	(sprintf@width+1)^(0+128)
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1880  1526  01B8               	clrf	sprintf@flag^(0+128)
  1881  1527  01B9               	clrf	(sprintf@flag+1)^(0+128)
  1882  1528                     l3440:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1885  1528  082A               	movf	sprintf@f^(0+128),w
  1886  1529  0084               	movwf	4
  1887  152A  120A  158A  2000  160A  118A  	fcall	stringdir
  1888  152F  160A  158A  2279  160A  118A  	fcall	_isdigit
  1889  1534  1C03               	btfss	3,0
  1890  1535  2D37               	goto	u5621
  1891  1536  2D38               	goto	u5620
  1892  1537                     u5621:
  1893  1537  2D84               	goto	l3452
  1894  1538                     u5620:
  1895  1538                     l3442:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1898  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1899  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1900  153A  01BA               	clrf	sprintf@width^(0+128)
  1901  153B  01BB               	clrf	(sprintf@width+1)^(0+128)
  1902  153C                     l3444:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1905  153C  300A               	movlw	10
  1906  153D  00F3               	movwf	___wmul@multiplier
  1907  153E  3000               	movlw	0
  1908  153F  00F4               	movwf	___wmul@multiplier+1
  1909  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1910  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1911  1542  083B               	movf	(sprintf@width+1)^(0+128),w
  1912  1543  00F6               	movwf	___wmul@multiplicand+1
  1913  1544  083A               	movf	sprintf@width^(0+128),w
  1914  1545  00F5               	movwf	___wmul@multiplicand
  1915  1546  160A  118A  2005  160A  118A  	fcall	___wmul
  1916  154B  0874               	movf	?___wmul+1,w
  1917  154C  1683               	bsf	3,5	;RP0=1, select bank1
  1918  154D  1303               	bcf	3,6	;RP1=0, select bank1
  1919  154E  00BB               	movwf	(sprintf@width+1)^(0+128)
  1920  154F  0873               	movf	?___wmul,w
  1921  1550  00BA               	movwf	sprintf@width^(0+128)
  1922  1551                     l3446:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1925  1551  082A               	movf	sprintf@f^(0+128),w
  1926  1552  0084               	movwf	4
  1927  1553  120A  158A  2000  160A  118A  	fcall	stringdir
  1928  1558  3ED0               	addlw	208
  1929  1559  1283               	bcf	3,5	;RP0=0, select bank0
  1930  155A  1303               	bcf	3,6	;RP1=0, select bank0
  1931  155B  00EA               	movwf	??_sprintf
  1932  155C  30FF               	movlw	255
  1933  155D  1803               	skipnc
  1934  155E  3000               	movlw	0
  1935  155F  00EB               	movwf	??_sprintf+1
  1936  1560  086A               	movf	??_sprintf,w
  1937  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1938  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1939  1563  07BA               	addwf	sprintf@width^(0+128),f
  1940  1564  1803               	skipnc
  1941  1565  0ABB               	incf	(sprintf@width+1)^(0+128),f
  1942  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1943  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1944  1568  086B               	movf	??_sprintf+1,w
  1945  1569  1683               	bsf	3,5	;RP0=1, select bank1
  1946  156A  1303               	bcf	3,6	;RP1=0, select bank1
  1947  156B  07BB               	addwf	(sprintf@width+1)^(0+128),f
  1948  156C                     l3448:
  1949  156C  3001               	movlw	1
  1950  156D  1283               	bcf	3,5	;RP0=0, select bank0
  1951  156E  1303               	bcf	3,6	;RP1=0, select bank0
  1952  156F  00EA               	movwf	??_sprintf
  1953  1570  086A               	movf	??_sprintf,w
  1954  1571  1683               	bsf	3,5	;RP0=1, select bank1
  1955  1572  1303               	bcf	3,6	;RP1=0, select bank1
  1956  1573  07AA               	addwf	sprintf@f^(0+128),f
  1957  1574                     l3450:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1960  1574  082A               	movf	sprintf@f^(0+128),w
  1961  1575  0084               	movwf	4
  1962  1576  120A  158A  2000  160A  118A  	fcall	stringdir
  1963  157B  160A  158A  2279  160A  118A  	fcall	_isdigit
  1964  1580  1803               	btfsc	3,0
  1965  1581  2D83               	goto	u5631
  1966  1582  2D84               	goto	u5630
  1967  1583                     u5631:
  1968  1583  2D3C               	goto	l3444
  1969  1584                     u5630:
  1970  1584                     l3452:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1973  1584  1683               	bsf	3,5	;RP0=1, select bank1
  1974  1585  1303               	bcf	3,6	;RP1=0, select bank1
  1975  1586  082A               	movf	sprintf@f^(0+128),w
  1976  1587  0084               	movwf	4
  1977  1588  120A  158A  2000  160A  118A  	fcall	stringdir
  1978  158D  3A2E               	xorlw	46
  1979  158E  1D03               	skipz
  1980  158F  2D91               	goto	u5641
  1981  1590  2D92               	goto	u5640
  1982  1591                     u5641:
  1983  1591  2DE7               	goto	l3468
  1984  1592                     u5640:
  1985  1592                     l3454:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1988  1592  1739               	bsf	(sprintf@flag^(0+128)+1),6
  1989  1593                     l3456:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1992  1593  3001               	movlw	1
  1993  1594  1283               	bcf	3,5	;RP0=0, select bank0
  1994  1595  1303               	bcf	3,6	;RP1=0, select bank0
  1995  1596  00EA               	movwf	??_sprintf
  1996  1597  086A               	movf	??_sprintf,w
  1997  1598  1683               	bsf	3,5	;RP0=1, select bank1
  1998  1599  1303               	bcf	3,6	;RP1=0, select bank1
  1999  159A  07AA               	addwf	sprintf@f^(0+128),f
  2000  159B                     l3458:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2003  159B  01C6               	clrf	sprintf@prec^(0+128)
  2004  159C  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2007  159D  2DD6               	goto	l3466
  2008  159E                     l3460:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2011  159E  300A               	movlw	10
  2012  159F  00F3               	movwf	___wmul@multiplier
  2013  15A0  3000               	movlw	0
  2014  15A1  00F4               	movwf	___wmul@multiplier+1
  2015  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  2016  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  2017  15A4  0847               	movf	(sprintf@prec+1)^(0+128),w
  2018  15A5  00F6               	movwf	___wmul@multiplicand+1
  2019  15A6  0846               	movf	sprintf@prec^(0+128),w
  2020  15A7  00F5               	movwf	___wmul@multiplicand
  2021  15A8  160A  118A  2005  160A  118A  	fcall	___wmul
  2022  15AD  0874               	movf	?___wmul+1,w
  2023  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2024  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2025  15B0  00C7               	movwf	(sprintf@prec+1)^(0+128)
  2026  15B1  0873               	movf	?___wmul,w
  2027  15B2  00C6               	movwf	sprintf@prec^(0+128)
  2028  15B3                     l3462:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2031  15B3  082A               	movf	sprintf@f^(0+128),w
  2032  15B4  0084               	movwf	4
  2033  15B5  120A  158A  2000  160A  118A  	fcall	stringdir
  2034  15BA  3ED0               	addlw	208
  2035  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  2036  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  2037  15BD  00EA               	movwf	??_sprintf
  2038  15BE  30FF               	movlw	255
  2039  15BF  1803               	skipnc
  2040  15C0  3000               	movlw	0
  2041  15C1  00EB               	movwf	??_sprintf+1
  2042  15C2  086A               	movf	??_sprintf,w
  2043  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  2044  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  2045  15C5  07C6               	addwf	sprintf@prec^(0+128),f
  2046  15C6  1803               	skipnc
  2047  15C7  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  2048  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  2049  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  2050  15CA  086B               	movf	??_sprintf+1,w
  2051  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  2052  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  2053  15CD  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  2054  15CE                     l3464:
  2055  15CE  3001               	movlw	1
  2056  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  2057  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  2058  15D1  00EA               	movwf	??_sprintf
  2059  15D2  086A               	movf	??_sprintf,w
  2060  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  2061  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  2062  15D5  07AA               	addwf	sprintf@f^(0+128),f
  2063  15D6                     l3466:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2066  15D6  082A               	movf	sprintf@f^(0+128),w
  2067  15D7  0084               	movwf	4
  2068  15D8  120A  158A  2000  160A  118A  	fcall	stringdir
  2069  15DD  160A  158A  2279  160A  118A  	fcall	_isdigit
  2070  15E2  1803               	btfsc	3,0
  2071  15E3  2DE5               	goto	u5651
  2072  15E4  2DE6               	goto	u5650
  2073  15E5                     u5651:
  2074  15E5  2D9E               	goto	l3460
  2075  15E6                     u5650:
  2076  15E6  2DEF               	goto	l3474
  2077  15E7                     l3468:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2080  15E7  01C6               	clrf	sprintf@prec^(0+128)
  2081  15E8  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2082  15E9                     l3470:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2085  15E9  1639               	bsf	(sprintf@flag^(0+128)+1),4
  2086  15EA  2DEF               	goto	l3474
  2087  15EB                     l270:	
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2089                           
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2092  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  2093  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  2094  15ED  1539               	bsf	(sprintf@flag^(0+128)+1),2
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2097  15EE  2E0D               	goto	l3476
  2098  15EF                     l3474:
  2099  15EF  3001               	movlw	1
  2100  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  2101  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  2102  15F2  07AA               	addwf	sprintf@f^(0+128),f
  2103  15F3  30FF               	movlw	-1
  2104  15F4  072A               	addwf	sprintf@f^(0+128),w
  2105  15F5  0084               	movwf	4
  2106  15F6  120A  158A  2000  160A  118A  	fcall	stringdir
  2107  15FB  00C8               	movwf	sprintf@c^(0+128)
  2108  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  2109  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  2110  15FE  00EA               	movwf	??_sprintf
  2111  15FF  01EB               	clrf	??_sprintf+1
  2112                           
  2113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2114                           ; Switch size 1, requested type "simple"
  2115                           ; Number of cases is 1, Range of values is 0 to 0
  2116                           ; switch strategies available:
  2117                           ; Name         Instructions Cycles
  2118                           ; simple_byte            4     3 (average)
  2119                           ; direct_byte           11     8 (fixed)
  2120                           ; jumptable            260     6 (fixed)
  2121                           ;	Chosen strategy is simple_byte
  2122  1600  086B               	movf	??_sprintf+1,w
  2123  1601  3A00               	xorlw	0	; case 0
  2124  1602  1903               	skipnz
  2125  1603  2E05               	goto	l3780
  2126  1604  2D03               	goto	L1
  2127  1605                     l3780:
  2128                           
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 2, Range of values is 0 to 102
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            7     4 (average)
  2134                           ; jumptable            260     6 (fixed)
  2135                           ;	Chosen strategy is simple_byte
  2136  1605  086A               	movf	??_sprintf,w
  2137  1606  3A00               	xorlw	0	; case 0
  2138  1607  1903               	skipnz
  2139  1608  2FFD               	goto	L3
  2140  1609  3A66               	xorlw	102	; case 102
  2141  160A  1903               	skipnz
  2142  160B  2DEB               	goto	l270
  2143  160C  2D03               	goto	L1
  2144  160D                     l3476:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2147  160D  3000               	movlw	0
  2148  160E  0538               	andwf	sprintf@flag^(0+128),w
  2149  160F  1283               	bcf	3,5	;RP0=0, select bank0
  2150  1610  1303               	bcf	3,6	;RP1=0, select bank0
  2151  1611  00EA               	movwf	??_sprintf
  2152  1612  3007               	movlw	7
  2153  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2154  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2155  1615  0539               	andwf	(sprintf@flag+1)^(0+128),w
  2156  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2157  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2158  1618  00EB               	movwf	??_sprintf+1
  2159  1619  086A               	movf	??_sprintf,w
  2160  161A  046B               	iorwf	??_sprintf+1,w
  2161  161B  1903               	btfsc	3,2
  2162  161C  2E1E               	goto	u5661
  2163  161D  2E21               	goto	u5660
  2164  161E                     u5661:
  2165  161E  120A  118A  2C95   	goto	l3638
  2166  1621                     u5660:
  2167  1621                     l3478:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2170  1621  1683               	bsf	3,5	;RP0=1, select bank1
  2171  1622  1303               	bcf	3,6	;RP1=0, select bank1
  2172  1623  1E39               	btfss	(sprintf@flag+1)^(0+128),4
  2173  1624  2E26               	goto	u5671
  2174  1625  2E27               	goto	u5670
  2175  1626                     u5671:
  2176  1626  2E2B               	goto	l3482
  2177  1627                     u5670:
  2178  1627                     l3480:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2181  1627  3006               	movlw	6
  2182  1628  00C6               	movwf	sprintf@prec^(0+128)
  2183  1629  3000               	movlw	0
  2184  162A  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2185  162B                     l3482:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2188  162B  0833               	movf	sprintf@ap^(0+128),w
  2189  162C  0084               	movwf	4
  2190  162D  1383               	bcf	3,7	;select IRP bank0
  2191  162E  0800               	movf	0,w
  2192  162F  00C2               	movwf	sprintf@fval^(0+128)
  2193  1630  0A84               	incf	4,f
  2194  1631  0800               	movf	0,w
  2195  1632  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2196  1633  0A84               	incf	4,f
  2197  1634  0800               	movf	0,w
  2198  1635  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2199  1636  0A84               	incf	4,f
  2200  1637  0800               	movf	0,w
  2201  1638  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2202  1639                     l3484:
  2203  1639  3004               	movlw	4
  2204  163A  1283               	bcf	3,5	;RP0=0, select bank0
  2205  163B  1303               	bcf	3,6	;RP1=0, select bank0
  2206  163C  00EA               	movwf	??_sprintf
  2207  163D  086A               	movf	??_sprintf,w
  2208  163E  1683               	bsf	3,5	;RP0=1, select bank1
  2209  163F  1303               	bcf	3,6	;RP1=0, select bank1
  2210  1640  07B3               	addwf	sprintf@ap^(0+128),f
  2211  1641                     l3486:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2214  1641  0845               	movf	(sprintf@fval+3)^(0+128),w
  2215  1642  00F6               	movwf	___flge@ff1+3
  2216  1643  0844               	movf	(sprintf@fval+2)^(0+128),w
  2217  1644  00F5               	movwf	___flge@ff1+2
  2218  1645  0843               	movf	(sprintf@fval+1)^(0+128),w
  2219  1646  00F4               	movwf	___flge@ff1+1
  2220  1647  0842               	movf	sprintf@fval^(0+128),w
  2221  1648  00F3               	movwf	___flge@ff1
  2222  1649  3000               	movlw	0
  2223  164A  00FA               	movwf	___flge@ff2+3
  2224  164B  3000               	movlw	0
  2225  164C  00F9               	movwf	___flge@ff2+2
  2226  164D  3000               	movlw	0
  2227  164E  00F8               	movwf	___flge@ff2+1
  2228  164F  3000               	movlw	0
  2229  1650  00F7               	movwf	___flge@ff2
  2230  1651  160A  158A  25E3  160A  118A  	fcall	___flge
  2231  1656  1803               	btfsc	3,0
  2232  1657  2E59               	goto	u5681
  2233  1658  2E5A               	goto	u5680
  2234  1659                     u5681:
  2235  1659  2E77               	goto	l3492
  2236  165A                     u5680:
  2237  165A                     l3488:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2240  165A  1683               	bsf	3,5	;RP0=1, select bank1
  2241  165B  1303               	bcf	3,6	;RP1=0, select bank1
  2242  165C  0845               	movf	(sprintf@fval+3)^(0+128),w
  2243  165D  00F6               	movwf	___flneg@f1+3
  2244  165E  0844               	movf	(sprintf@fval+2)^(0+128),w
  2245  165F  00F5               	movwf	___flneg@f1+2
  2246  1660  0843               	movf	(sprintf@fval+1)^(0+128),w
  2247  1661  00F4               	movwf	___flneg@f1+1
  2248  1662  0842               	movf	sprintf@fval^(0+128),w
  2249  1663  00F3               	movwf	___flneg@f1
  2250  1664  160A  158A  226E  160A  118A  	fcall	___flneg
  2251  1669  0876               	movf	?___flneg+3,w
  2252  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2253  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2254  166C  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2255  166D  0875               	movf	?___flneg+2,w
  2256  166E  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2257  166F  0874               	movf	?___flneg+1,w
  2258  1670  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2259  1671  0873               	movf	?___flneg,w
  2260  1672  00C2               	movwf	sprintf@fval^(0+128)
  2261  1673                     l3490:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2264  1673  3003               	movlw	3
  2265  1674  04B8               	iorwf	sprintf@flag^(0+128),f
  2266  1675  3000               	movlw	0
  2267  1676  04B9               	iorwf	(sprintf@flag+1)^(0+128),f
  2268  1677                     l3492:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2271  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2272  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2273  1679  01C0               	clrf	sprintf@eexp^(0+128)
  2274  167A  01C1               	clrf	(sprintf@eexp+1)^(0+128)
  2275  167B                     l3494:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2278  167B  0845               	movf	(sprintf@fval+3)^(0+128),w
  2279  167C  00F6               	movwf	___fleq@ff1+3
  2280  167D  0844               	movf	(sprintf@fval+2)^(0+128),w
  2281  167E  00F5               	movwf	___fleq@ff1+2
  2282  167F  0843               	movf	(sprintf@fval+1)^(0+128),w
  2283  1680  00F4               	movwf	___fleq@ff1+1
  2284  1681  0842               	movf	sprintf@fval^(0+128),w
  2285  1682  00F3               	movwf	___fleq@ff1
  2286  1683  3000               	movlw	0
  2287  1684  00FA               	movwf	___fleq@ff2+3
  2288  1685  3000               	movlw	0
  2289  1686  00F9               	movwf	___fleq@ff2+2
  2290  1687  3000               	movlw	0
  2291  1688  00F8               	movwf	___fleq@ff2+1
  2292  1689  3000               	movlw	0
  2293  168A  00F7               	movwf	___fleq@ff2
  2294  168B  160A  158A  23A0  160A  118A  	fcall	___fleq
  2295  1690  1803               	btfsc	3,0
  2296  1691  2E93               	goto	u5691
  2297  1692  2E94               	goto	u5690
  2298  1693                     u5691:
  2299  1693  2F94               	goto	l3520
  2300  1694                     u5690:
  2301  1694                     l3496:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2304  1694  1003               	clrc
  2305  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2306  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2307  1697  0D44               	rlf	(sprintf@fval+2)^(0+128),w
  2308  1698  0D45               	rlf	(sprintf@fval+3)^(0+128),w
  2309  1699  3E82               	addlw	130
  2310  169A  00C0               	movwf	sprintf@eexp^(0+128)
  2311  169B  30FF               	movlw	255
  2312  169C  1803               	skipnc
  2313  169D  3000               	movlw	0
  2314  169E  00C1               	movwf	(sprintf@eexp^(0+128)+1)
  2315  169F                     l3498:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2318  169F  30FF               	movlw	255
  2319  16A0  07C0               	addwf	sprintf@eexp^(0+128),f
  2320  16A1  1803               	skipnc
  2321  16A2  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2322  16A3  30FF               	movlw	255
  2323  16A4  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2324  16A5                     l3500:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2327  16A5  3003               	movlw	3
  2328  16A6  00F3               	movwf	___wmul@multiplier
  2329  16A7  3000               	movlw	0
  2330  16A8  00F4               	movwf	___wmul@multiplier+1
  2331  16A9  0841               	movf	(sprintf@eexp+1)^(0+128),w
  2332  16AA  00F6               	movwf	___wmul@multiplicand+1
  2333  16AB  0840               	movf	sprintf@eexp^(0+128),w
  2334  16AC  00F5               	movwf	___wmul@multiplicand
  2335  16AD  160A  118A  2005  160A  118A  	fcall	___wmul
  2336  16B2  0874               	movf	?___wmul+1,w
  2337  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2338  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2339  16B5  00C1               	movwf	(sprintf@eexp+1)^(0+128)
  2340  16B6  0873               	movf	?___wmul,w
  2341  16B7  00C0               	movwf	sprintf@eexp^(0+128)
  2342  16B8                     l3502:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2345  16B8  300A               	movlw	10
  2346  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2347  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2348  16BB  00A0               	movwf	___awdiv@divisor
  2349  16BC  3000               	movlw	0
  2350  16BD  00A1               	movwf	___awdiv@divisor+1
  2351  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2352  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2353  16C0  0841               	movf	(sprintf@eexp+1)^(0+128),w
  2354  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2355  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2356  16C3  00A3               	movwf	___awdiv@dividend+1
  2357  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2358  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2359  16C6  0840               	movf	sprintf@eexp^(0+128),w
  2360  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2361  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2362  16C9  00A2               	movwf	___awdiv@dividend
  2363  16CA  160A  158A  24FE  160A  118A  	fcall	___awdiv
  2364  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2365  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2366  16D1  0821               	movf	?___awdiv+1,w
  2367  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2368  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2369  16D4  00C1               	movwf	(sprintf@eexp+1)^(0+128)
  2370  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2371  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2372  16D7  0820               	movf	?___awdiv,w
  2373  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2374  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2375  16DA  00C0               	movwf	sprintf@eexp^(0+128)
  2376  16DB                     l3504:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2379  16DB  1FC1               	btfss	(sprintf@eexp+1)^(0+128),7
  2380  16DC  2EDE               	goto	u5701
  2381  16DD  2EDF               	goto	u5700
  2382  16DE                     u5701:
  2383  16DE  2EE5               	goto	l3508
  2384  16DF                     u5700:
  2385  16DF                     l3506:
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2388  16DF  30FF               	movlw	255
  2389  16E0  07C0               	addwf	sprintf@eexp^(0+128),f
  2390  16E1  1803               	skipnc
  2391  16E2  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2392  16E3  30FF               	movlw	255
  2393  16E4  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2394  16E5                     l3508:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2397  16E5  0340               	decf	sprintf@eexp^(0+128),w
  2398  16E6  3AFF               	xorlw	255
  2399  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2400  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2401  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2402  16EE  0845               	movf	?_scale+3,w
  2403  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2404  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2405  16F1  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2406  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2407  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2408  16F4  0844               	movf	?_scale+2,w
  2409  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2410  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2411  16F7  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2412  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2413  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2414  16FA  0843               	movf	?_scale+1,w
  2415  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2416  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2417  16FD  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2418  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2419  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2420  1700  0842               	movf	?_scale,w
  2421  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2422  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2423  1703  00BC               	movwf	sprintf@tmpval^(0+128)
  2424  1704                     l3510:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2427  1704  0845               	movf	(sprintf@fval+3)^(0+128),w
  2428  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2429  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2430  1707  00AB               	movwf	___flmul@b+3
  2431  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2432  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2433  170A  0844               	movf	(sprintf@fval+2)^(0+128),w
  2434  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2435  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2436  170D  00AA               	movwf	___flmul@b+2
  2437  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2438  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2439  1710  0843               	movf	(sprintf@fval+1)^(0+128),w
  2440  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2441  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2442  1713  00A9               	movwf	___flmul@b+1
  2443  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2444  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2445  1716  0842               	movf	sprintf@fval^(0+128),w
  2446  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2447  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2448  1719  00A8               	movwf	___flmul@b
  2449  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2450  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2451  171C  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2452  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2453  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2454  171F  00AF               	movwf	___flmul@a+3
  2455  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2456  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2457  1722  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2458  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2459  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2460  1725  00AE               	movwf	___flmul@a+2
  2461  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2462  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2463  1728  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2464  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2465  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2466  172B  00AD               	movwf	___flmul@a+1
  2467  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2468  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2469  172E  083C               	movf	sprintf@tmpval^(0+128),w
  2470  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2471  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2472  1731  00AC               	movwf	___flmul@a
  2473  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2474  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2475  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2476  1739  082B               	movf	?___flmul+3,w
  2477  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2478  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2479  173C  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2480  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2481  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2482  173F  082A               	movf	?___flmul+2,w
  2483  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2484  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2485  1742  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2486  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2487  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2488  1745  0829               	movf	?___flmul+1,w
  2489  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2490  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2491  1748  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2492  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2493  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2494  174B  0828               	movf	?___flmul,w
  2495  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2496  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2497  174E  00BC               	movwf	sprintf@tmpval^(0+128)
  2498  174F                     l3512:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2501  174F  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2502  1750  00F6               	movwf	___flge@ff1+3
  2503  1751  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2504  1752  00F5               	movwf	___flge@ff1+2
  2505  1753  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2506  1754  00F4               	movwf	___flge@ff1+1
  2507  1755  083C               	movf	sprintf@tmpval^(0+128),w
  2508  1756  00F3               	movwf	___flge@ff1
  2509  1757  303F               	movlw	63
  2510  1758  00FA               	movwf	___flge@ff2+3
  2511  1759  3080               	movlw	128
  2512  175A  00F9               	movwf	___flge@ff2+2
  2513  175B  3000               	movlw	0
  2514  175C  00F8               	movwf	___flge@ff2+1
  2515  175D  3000               	movlw	0
  2516  175E  00F7               	movwf	___flge@ff2
  2517  175F  160A  158A  25E3  160A  118A  	fcall	___flge
  2518  1764  1803               	btfsc	3,0
  2519  1765  2F67               	goto	u5711
  2520  1766  2F68               	goto	u5710
  2521  1767                     u5711:
  2522  1767  2F71               	goto	l3516
  2523  1768                     u5710:
  2524  1768                     l3514:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2527  1768  30FF               	movlw	255
  2528  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2529  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2530  176B  07C0               	addwf	sprintf@eexp^(0+128),f
  2531  176C  1803               	skipnc
  2532  176D  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2533  176E  30FF               	movlw	255
  2534  176F  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2535  1770  2F94               	goto	l3520
  2536  1771                     l3516:
  2537  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2538  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2539  1773  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2540  1774  00F6               	movwf	___flge@ff1+3
  2541  1775  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2542  1776  00F5               	movwf	___flge@ff1+2
  2543  1777  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2544  1778  00F4               	movwf	___flge@ff1+1
  2545  1779  083C               	movf	sprintf@tmpval^(0+128),w
  2546  177A  00F3               	movwf	___flge@ff1
  2547  177B  3041               	movlw	65
  2548  177C  00FA               	movwf	___flge@ff2+3
  2549  177D  3020               	movlw	32
  2550  177E  00F9               	movwf	___flge@ff2+2
  2551  177F  3000               	movlw	0
  2552  1780  00F8               	movwf	___flge@ff2+1
  2553  1781  3000               	movlw	0
  2554  1782  00F7               	movwf	___flge@ff2
  2555  1783  160A  158A  25E3  160A  118A  	fcall	___flge
  2556  1788  1C03               	btfss	3,0
  2557  1789  2F8B               	goto	u5721
  2558  178A  2F8C               	goto	u5720
  2559  178B                     u5721:
  2560  178B  2F94               	goto	l3520
  2561  178C                     u5720:
  2562  178C                     l3518:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2565  178C  3001               	movlw	1
  2566  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2567  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2568  178F  07C0               	addwf	sprintf@eexp^(0+128),f
  2569  1790  1803               	skipnc
  2570  1791  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  2571  1792  3000               	movlw	0
  2572  1793  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  2573  1794                     l3520:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2576  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2577  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2578  1796  0847               	movf	(sprintf@prec+1)^(0+128),w
  2579  1797  3A80               	xorlw	128
  2580  1798  00FF               	movwf	btemp+1
  2581  1799  3080               	movlw	128
  2582  179A  027F               	subwf	btemp+1,w
  2583  179B  1D03               	skipz
  2584  179C  2F9F               	goto	u5735
  2585  179D  300D               	movlw	13
  2586  179E  0246               	subwf	sprintf@prec^(0+128),w
  2587  179F                     u5735:
  2588  179F  1803               	skipnc
  2589  17A0  2FA2               	goto	u5731
  2590  17A1  2FA3               	goto	u5730
  2591  17A2                     u5731:
  2592  17A2  2FEA               	goto	l3524
  2593  17A3                     u5730:
  2594  17A3                     l3522:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2597  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2598  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2599  17A5  0846               	movf	sprintf@prec^(0+128),w
  2600  17A6  120A  118A  25C1  160A  118A  	fcall	_fround
  2601  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2602  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2603  17AD  0845               	movf	?_fround+3,w
  2604  17AE  00D9               	movwf	___fladd@b+3
  2605  17AF  0844               	movf	?_fround+2,w
  2606  17B0  00D8               	movwf	___fladd@b+2
  2607  17B1  0843               	movf	?_fround+1,w
  2608  17B2  00D7               	movwf	___fladd@b+1
  2609  17B3  0842               	movf	?_fround,w
  2610  17B4  00D6               	movwf	___fladd@b
  2611  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2612  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2613  17B7  0845               	movf	(sprintf@fval+3)^(0+128),w
  2614  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2615  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2616  17BA  00DD               	movwf	___fladd@a+3
  2617  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2618  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2619  17BD  0844               	movf	(sprintf@fval+2)^(0+128),w
  2620  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2621  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2622  17C0  00DC               	movwf	___fladd@a+2
  2623  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2624  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2625  17C3  0843               	movf	(sprintf@fval+1)^(0+128),w
  2626  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2627  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2628  17C6  00DB               	movwf	___fladd@a+1
  2629  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2630  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2631  17C9  0842               	movf	sprintf@fval^(0+128),w
  2632  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2633  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2634  17CC  00DA               	movwf	___fladd@a
  2635  17CD  160A  118A  2273  160A  118A  	fcall	___fladd
  2636  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2637  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2638  17D4  0859               	movf	?___fladd+3,w
  2639  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2640  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2641  17D7  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2642  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2643  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2644  17DA  0858               	movf	?___fladd+2,w
  2645  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2646  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2647  17DD  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2648  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2649  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2650  17E0  0857               	movf	?___fladd+1,w
  2651  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2652  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2653  17E3  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2654  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2655  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2656  17E6  0856               	movf	?___fladd,w
  2657  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2658  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2659  17E9  00C2               	movwf	sprintf@fval^(0+128)
  2660  17EA                     l3524:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2663  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2664  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2665  17EC  0841               	movf	(sprintf@eexp+1)^(0+128),w
  2666  17ED  3A80               	xorlw	128
  2667  17EE  00FF               	movwf	btemp+1
  2668  17EF  3080               	movlw	128
  2669  17F0  027F               	subwf	btemp+1,w
  2670  17F1  1D03               	skipz
  2671  17F2  2FF5               	goto	u5745
  2672  17F3  300A               	movlw	10
  2673  17F4  0240               	subwf	sprintf@eexp^(0+128),w
  2674  17F5                     u5745:
  2675  17F5  1803               	skipnc
  2676  17F6  2FFA               	goto	u5741
  2677  17F7  120A  118A  2828   	goto	u5740
  2678  17FA                     u5741:
  2679  17FA  120A  118A  2879   	goto	l3532
  2680  17FD                     L3:
  2681  17FD                     L2:
  2682  17FD  120A  118A  2DB8   	ljmp	l3686
  2683                           
  2684                           	psect	text2
  2685  0C9D                     __ptext2:	
  2686 ;; *************** function _scale *****************
  2687 ;; Defined at:
  2688 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  scl             1    wreg     char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  scl             1   52[BANK0 ] char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  4   34[BANK0 ] char 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       4       0       0       0
  2703 ;;      Locals:         0       5       0       0       0
  2704 ;;      Temps:          0      10       0       0       0
  2705 ;;      Totals:         0      19       0       0       0
  2706 ;;Total ram usage:       19 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    3
  2709 ;; This function calls:
  2710 ;;		___awdiv
  2711 ;;		___awmod
  2712 ;;		___flmul
  2713 ;; This function is called by:
  2714 ;;		_sprintf
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _scale
  2720  0C9D                     _scale:
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2724                           ;scale@scl stored from wreg
  2725  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0C9F  00D4               	movwf	scale@scl
  2728  0CA0                     l2692:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2731  0CA0  1FD4               	btfss	scale@scl,7
  2732  0CA1  2CA3               	goto	u4091
  2733  0CA2  2CA4               	goto	u4090
  2734  0CA3                     u4091:
  2735  0CA3  2E53               	goto	l2714
  2736  0CA4                     u4090:
  2737  0CA4                     l2694:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2740  0CA4  09D4               	comf	scale@scl,f
  2741  0CA5  0AD4               	incf	scale@scl,f
  2742  0CA6                     l2696:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2745  0CA6  0854               	movf	scale@scl,w
  2746  0CA7  3A80               	xorlw	128
  2747  0CA8  3E12               	addlw	-238
  2748  0CA9  1C03               	skipc
  2749  0CAA  2CAC               	goto	u4101
  2750  0CAB  2CAD               	goto	u4100
  2751  0CAC                     u4101:
  2752  0CAC  2D97               	goto	l2704
  2753  0CAD                     u4100:
  2754  0CAD                     l2698:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2757  0CAD  300A               	movlw	10
  2758  0CAE  00A0               	movwf	___awdiv@divisor
  2759  0CAF  3000               	movlw	0
  2760  0CB0  00A1               	movwf	___awdiv@divisor+1
  2761  0CB1  0854               	movf	scale@scl,w
  2762  0CB2  00F5               	movwf	___awmod@dividend
  2763  0CB3  01F6               	clrf	___awmod@dividend+1
  2764  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2765  0CB5  03F6               	decf	___awmod@dividend+1,f
  2766  0CB6  3064               	movlw	100
  2767  0CB7  00F3               	movwf	___awmod@divisor
  2768  0CB8  3000               	movlw	0
  2769  0CB9  00F4               	movwf	___awmod@divisor+1
  2770  0CBA  120A  158A  20E3  120A  158A  	fcall	___awmod
  2771  0CBF  0874               	movf	?___awmod+1,w
  2772  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0CC2  00A3               	movwf	___awdiv@dividend+1
  2775  0CC3  0873               	movf	?___awmod,w
  2776  0CC4  00A2               	movwf	___awdiv@dividend
  2777  0CC5  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2778  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0CCC  0820               	movf	?___awdiv,w
  2781  0CCD  00C6               	movwf	??_scale
  2782  0CCE  3001               	movlw	1
  2783  0CCF                     u4115:
  2784  0CCF  1003               	clrc
  2785  0CD0  0DC6               	rlf	??_scale,f
  2786  0CD1  3EFF               	addlw	-1
  2787  0CD2  1D03               	skipz
  2788  0CD3  2CCF               	goto	u4115
  2789  0CD4  1003               	clrc
  2790  0CD5  0D46               	rlf	??_scale,w
  2791  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2792  0CD7  0084               	movwf	4
  2793  0CD8  120A  158A  2000  120A  158A  	fcall	stringdir
  2794  0CDD  00C7               	movwf	??_scale+1
  2795  0CDE  120A  158A  2000  120A  158A  	fcall	stringdir
  2796  0CE3  00C8               	movwf	??_scale+2
  2797  0CE4  120A  158A  2000  120A  158A  	fcall	stringdir
  2798  0CE9  00C9               	movwf	??_scale+3
  2799  0CEA  120A  158A  2000  120A  158A  	fcall	stringdir
  2800  0CEF  00CA               	movwf	??_scale+4
  2801  0CF0  084A               	movf	??_scale+4,w
  2802  0CF1  00AB               	movwf	___flmul@b+3
  2803  0CF2  0849               	movf	??_scale+3,w
  2804  0CF3  00AA               	movwf	___flmul@b+2
  2805  0CF4  0848               	movf	??_scale+2,w
  2806  0CF5  00A9               	movwf	___flmul@b+1
  2807  0CF6  0847               	movf	??_scale+1,w
  2808  0CF7  00A8               	movwf	___flmul@b
  2809  0CF8  3064               	movlw	100
  2810  0CF9  00A0               	movwf	___awdiv@divisor
  2811  0CFA  3000               	movlw	0
  2812  0CFB  00A1               	movwf	___awdiv@divisor+1
  2813  0CFC  0854               	movf	scale@scl,w
  2814  0CFD  00A2               	movwf	___awdiv@dividend
  2815  0CFE  01A3               	clrf	___awdiv@dividend+1
  2816  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2817  0D00  03A3               	decf	___awdiv@dividend+1,f
  2818  0D01  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2819  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0D08  0820               	movf	?___awdiv,w
  2822  0D09  00CB               	movwf	??_scale+5
  2823  0D0A  3001               	movlw	1
  2824  0D0B                     u4125:
  2825  0D0B  1003               	clrc
  2826  0D0C  0DCB               	rlf	??_scale+5,f
  2827  0D0D  3EFF               	addlw	-1
  2828  0D0E  1D03               	skipz
  2829  0D0F  2D0B               	goto	u4125
  2830  0D10  1003               	clrc
  2831  0D11  0D4B               	rlf	??_scale+5,w
  2832  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2833  0D13  0084               	movwf	4
  2834  0D14  120A  158A  2000  120A  158A  	fcall	stringdir
  2835  0D19  00CC               	movwf	??_scale+6
  2836  0D1A  120A  158A  2000  120A  158A  	fcall	stringdir
  2837  0D1F  00CD               	movwf	??_scale+7
  2838  0D20  120A  158A  2000  120A  158A  	fcall	stringdir
  2839  0D25  00CE               	movwf	??_scale+8
  2840  0D26  120A  158A  2000  120A  158A  	fcall	stringdir
  2841  0D2B  00CF               	movwf	??_scale+9
  2842  0D2C  084F               	movf	??_scale+9,w
  2843  0D2D  00AF               	movwf	___flmul@a+3
  2844  0D2E  084E               	movf	??_scale+8,w
  2845  0D2F  00AE               	movwf	___flmul@a+2
  2846  0D30  084D               	movf	??_scale+7,w
  2847  0D31  00AD               	movwf	___flmul@a+1
  2848  0D32  084C               	movf	??_scale+6,w
  2849  0D33  00AC               	movwf	___flmul@a
  2850  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2851  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0D3B  082B               	movf	?___flmul+3,w
  2854  0D3C  00D3               	movwf	_scale$1159+3
  2855  0D3D  082A               	movf	?___flmul+2,w
  2856  0D3E  00D2               	movwf	_scale$1159+2
  2857  0D3F  0829               	movf	?___flmul+1,w
  2858  0D40  00D1               	movwf	_scale$1159+1
  2859  0D41  0828               	movf	?___flmul,w
  2860  0D42  00D0               	movwf	_scale$1159
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2863  0D43  300A               	movlw	10
  2864  0D44  00F3               	movwf	___awmod@divisor
  2865  0D45  3000               	movlw	0
  2866  0D46  00F4               	movwf	___awmod@divisor+1
  2867  0D47  0854               	movf	scale@scl,w
  2868  0D48  00F5               	movwf	___awmod@dividend
  2869  0D49  01F6               	clrf	___awmod@dividend+1
  2870  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2871  0D4B  03F6               	decf	___awmod@dividend+1,f
  2872  0D4C  120A  158A  20E3  120A  158A  	fcall	___awmod
  2873  0D51  0873               	movf	?___awmod,w
  2874  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0D54  00C6               	movwf	??_scale
  2877  0D55  3001               	movlw	1
  2878  0D56                     u4135:
  2879  0D56  1003               	clrc
  2880  0D57  0DC6               	rlf	??_scale,f
  2881  0D58  3EFF               	addlw	-1
  2882  0D59  1D03               	skipz
  2883  0D5A  2D56               	goto	u4135
  2884  0D5B  1003               	clrc
  2885  0D5C  0D46               	rlf	??_scale,w
  2886  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2887  0D5E  0084               	movwf	4
  2888  0D5F  120A  158A  2000  120A  158A  	fcall	stringdir
  2889  0D64  00C7               	movwf	??_scale+1
  2890  0D65  120A  158A  2000  120A  158A  	fcall	stringdir
  2891  0D6A  00C8               	movwf	??_scale+2
  2892  0D6B  120A  158A  2000  120A  158A  	fcall	stringdir
  2893  0D70  00C9               	movwf	??_scale+3
  2894  0D71  120A  158A  2000  120A  158A  	fcall	stringdir
  2895  0D76  00CA               	movwf	??_scale+4
  2896  0D77  084A               	movf	??_scale+4,w
  2897  0D78  00AB               	movwf	___flmul@b+3
  2898  0D79  0849               	movf	??_scale+3,w
  2899  0D7A  00AA               	movwf	___flmul@b+2
  2900  0D7B  0848               	movf	??_scale+2,w
  2901  0D7C  00A9               	movwf	___flmul@b+1
  2902  0D7D  0847               	movf	??_scale+1,w
  2903  0D7E  00A8               	movwf	___flmul@b
  2904  0D7F  0853               	movf	_scale$1159+3,w
  2905  0D80  00AF               	movwf	___flmul@a+3
  2906  0D81  0852               	movf	_scale$1159+2,w
  2907  0D82  00AE               	movwf	___flmul@a+2
  2908  0D83  0851               	movf	_scale$1159+1,w
  2909  0D84  00AD               	movwf	___flmul@a+1
  2910  0D85  0850               	movf	_scale$1159,w
  2911  0D86  00AC               	movwf	___flmul@a
  2912  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2913  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0D8E  082B               	movf	?___flmul+3,w
  2916  0D8F  00C5               	movwf	?_scale+3
  2917  0D90  082A               	movf	?___flmul+2,w
  2918  0D91  00C4               	movwf	?_scale+2
  2919  0D92  0829               	movf	?___flmul+1,w
  2920  0D93  00C3               	movwf	?_scale+1
  2921  0D94  0828               	movf	?___flmul,w
  2922  0D95  00C2               	movwf	?_scale
  2923  0D96  2FFF               	goto	l248
  2924  0D97                     l2704:
  2925  0D97  0854               	movf	scale@scl,w
  2926  0D98  3A80               	xorlw	128
  2927  0D99  3E75               	addlw	-139
  2928  0D9A  1C03               	skipc
  2929  0D9B  2D9D               	goto	u4141
  2930  0D9C  2D9E               	goto	u4140
  2931  0D9D                     u4141:
  2932  0D9D  2E26               	goto	l2710
  2933  0D9E                     u4140:
  2934  0D9E                     l2706:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2937  0D9E  300A               	movlw	10
  2938  0D9F  00F3               	movwf	___awmod@divisor
  2939  0DA0  3000               	movlw	0
  2940  0DA1  00F4               	movwf	___awmod@divisor+1
  2941  0DA2  0854               	movf	scale@scl,w
  2942  0DA3  00F5               	movwf	___awmod@dividend
  2943  0DA4  01F6               	clrf	___awmod@dividend+1
  2944  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2945  0DA6  03F6               	decf	___awmod@dividend+1,f
  2946  0DA7  120A  158A  20E3  120A  158A  	fcall	___awmod
  2947  0DAC  0873               	movf	?___awmod,w
  2948  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0DAF  00C6               	movwf	??_scale
  2951  0DB0  3001               	movlw	1
  2952  0DB1                     u4155:
  2953  0DB1  1003               	clrc
  2954  0DB2  0DC6               	rlf	??_scale,f
  2955  0DB3  3EFF               	addlw	-1
  2956  0DB4  1D03               	skipz
  2957  0DB5  2DB1               	goto	u4155
  2958  0DB6  1003               	clrc
  2959  0DB7  0D46               	rlf	??_scale,w
  2960  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2961  0DB9  0084               	movwf	4
  2962  0DBA  120A  158A  2000  120A  158A  	fcall	stringdir
  2963  0DBF  00C7               	movwf	??_scale+1
  2964  0DC0  120A  158A  2000  120A  158A  	fcall	stringdir
  2965  0DC5  00C8               	movwf	??_scale+2
  2966  0DC6  120A  158A  2000  120A  158A  	fcall	stringdir
  2967  0DCB  00C9               	movwf	??_scale+3
  2968  0DCC  120A  158A  2000  120A  158A  	fcall	stringdir
  2969  0DD1  00CA               	movwf	??_scale+4
  2970  0DD2  084A               	movf	??_scale+4,w
  2971  0DD3  00AB               	movwf	___flmul@b+3
  2972  0DD4  0849               	movf	??_scale+3,w
  2973  0DD5  00AA               	movwf	___flmul@b+2
  2974  0DD6  0848               	movf	??_scale+2,w
  2975  0DD7  00A9               	movwf	___flmul@b+1
  2976  0DD8  0847               	movf	??_scale+1,w
  2977  0DD9  00A8               	movwf	___flmul@b
  2978  0DDA  300A               	movlw	10
  2979  0DDB  00A0               	movwf	___awdiv@divisor
  2980  0DDC  3000               	movlw	0
  2981  0DDD  00A1               	movwf	___awdiv@divisor+1
  2982  0DDE  0854               	movf	scale@scl,w
  2983  0DDF  00A2               	movwf	___awdiv@dividend
  2984  0DE0  01A3               	clrf	___awdiv@dividend+1
  2985  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2986  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2987  0DE3  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2988  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0DEA  0820               	movf	?___awdiv,w
  2991  0DEB  00CB               	movwf	??_scale+5
  2992  0DEC  3001               	movlw	1
  2993  0DED                     u4165:
  2994  0DED  1003               	clrc
  2995  0DEE  0DCB               	rlf	??_scale+5,f
  2996  0DEF  3EFF               	addlw	-1
  2997  0DF0  1D03               	skipz
  2998  0DF1  2DED               	goto	u4165
  2999  0DF2  1003               	clrc
  3000  0DF3  0D4B               	rlf	??_scale+5,w
  3001  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3002  0DF5  0084               	movwf	4
  3003  0DF6  120A  158A  2000  120A  158A  	fcall	stringdir
  3004  0DFB  00CC               	movwf	??_scale+6
  3005  0DFC  120A  158A  2000  120A  158A  	fcall	stringdir
  3006  0E01  00CD               	movwf	??_scale+7
  3007  0E02  120A  158A  2000  120A  158A  	fcall	stringdir
  3008  0E07  00CE               	movwf	??_scale+8
  3009  0E08  120A  158A  2000  120A  158A  	fcall	stringdir
  3010  0E0D  00CF               	movwf	??_scale+9
  3011  0E0E  084F               	movf	??_scale+9,w
  3012  0E0F  00AF               	movwf	___flmul@a+3
  3013  0E10  084E               	movf	??_scale+8,w
  3014  0E11  00AE               	movwf	___flmul@a+2
  3015  0E12  084D               	movf	??_scale+7,w
  3016  0E13  00AD               	movwf	___flmul@a+1
  3017  0E14  084C               	movf	??_scale+6,w
  3018  0E15  00AC               	movwf	___flmul@a
  3019  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3020  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0E1D  082B               	movf	?___flmul+3,w
  3023  0E1E  00C5               	movwf	?_scale+3
  3024  0E1F  082A               	movf	?___flmul+2,w
  3025  0E20  00C4               	movwf	?_scale+2
  3026  0E21  0829               	movf	?___flmul+1,w
  3027  0E22  00C3               	movwf	?_scale+1
  3028  0E23  0828               	movf	?___flmul,w
  3029  0E24  00C2               	movwf	?_scale
  3030  0E25  2FFF               	goto	l248
  3031  0E26                     l2710:
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3034  0E26  0854               	movf	scale@scl,w
  3035  0E27  00C6               	movwf	??_scale
  3036  0E28  3001               	movlw	1
  3037  0E29                     u4175:
  3038  0E29  1003               	clrc
  3039  0E2A  0DC6               	rlf	??_scale,f
  3040  0E2B  3EFF               	addlw	-1
  3041  0E2C  1D03               	skipz
  3042  0E2D  2E29               	goto	u4175
  3043  0E2E  1003               	clrc
  3044  0E2F  0D46               	rlf	??_scale,w
  3045  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3046  0E31  0084               	movwf	4
  3047  0E32  120A  158A  2000  120A  158A  	fcall	stringdir
  3048  0E37  00C7               	movwf	??_scale+1
  3049  0E38  120A  158A  2000  120A  158A  	fcall	stringdir
  3050  0E3D  00C8               	movwf	??_scale+2
  3051  0E3E  120A  158A  2000  120A  158A  	fcall	stringdir
  3052  0E43  00C9               	movwf	??_scale+3
  3053  0E44  120A  158A  2000  120A  158A  	fcall	stringdir
  3054  0E49  00CA               	movwf	??_scale+4
  3055  0E4A  084A               	movf	??_scale+4,w
  3056  0E4B  00C5               	movwf	?_scale+3
  3057  0E4C  0849               	movf	??_scale+3,w
  3058  0E4D  00C4               	movwf	?_scale+2
  3059  0E4E  0848               	movf	??_scale+2,w
  3060  0E4F  00C3               	movwf	?_scale+1
  3061  0E50  0847               	movf	??_scale+1,w
  3062  0E51  00C2               	movwf	?_scale
  3063  0E52  2FFF               	goto	l248
  3064  0E53                     l2714:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3067  0E53  0854               	movf	scale@scl,w
  3068  0E54  3A80               	xorlw	128
  3069  0E55  3E12               	addlw	-238
  3070  0E56  1C03               	skipc
  3071  0E57  2E59               	goto	u4181
  3072  0E58  2E5A               	goto	u4180
  3073  0E59                     u4181:
  3074  0E59  2F44               	goto	l2722
  3075  0E5A                     u4180:
  3076  0E5A                     l2716:
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3079  0E5A  300A               	movlw	10
  3080  0E5B  00A0               	movwf	___awdiv@divisor
  3081  0E5C  3000               	movlw	0
  3082  0E5D  00A1               	movwf	___awdiv@divisor+1
  3083  0E5E  0854               	movf	scale@scl,w
  3084  0E5F  00F5               	movwf	___awmod@dividend
  3085  0E60  01F6               	clrf	___awmod@dividend+1
  3086  0E61  1BF5               	btfsc	___awmod@dividend,7
  3087  0E62  03F6               	decf	___awmod@dividend+1,f
  3088  0E63  3064               	movlw	100
  3089  0E64  00F3               	movwf	___awmod@divisor
  3090  0E65  3000               	movlw	0
  3091  0E66  00F4               	movwf	___awmod@divisor+1
  3092  0E67  120A  158A  20E3  120A  158A  	fcall	___awmod
  3093  0E6C  0874               	movf	?___awmod+1,w
  3094  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0E6F  00A3               	movwf	___awdiv@dividend+1
  3097  0E70  0873               	movf	?___awmod,w
  3098  0E71  00A2               	movwf	___awdiv@dividend
  3099  0E72  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3100  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0E79  0820               	movf	?___awdiv,w
  3103  0E7A  00C6               	movwf	??_scale
  3104  0E7B  3001               	movlw	1
  3105  0E7C                     u4195:
  3106  0E7C  1003               	clrc
  3107  0E7D  0DC6               	rlf	??_scale,f
  3108  0E7E  3EFF               	addlw	-1
  3109  0E7F  1D03               	skipz
  3110  0E80  2E7C               	goto	u4195
  3111  0E81  1003               	clrc
  3112  0E82  0D46               	rlf	??_scale,w
  3113  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3114  0E84  0084               	movwf	4
  3115  0E85  120A  158A  2000  120A  158A  	fcall	stringdir
  3116  0E8A  00C7               	movwf	??_scale+1
  3117  0E8B  120A  158A  2000  120A  158A  	fcall	stringdir
  3118  0E90  00C8               	movwf	??_scale+2
  3119  0E91  120A  158A  2000  120A  158A  	fcall	stringdir
  3120  0E96  00C9               	movwf	??_scale+3
  3121  0E97  120A  158A  2000  120A  158A  	fcall	stringdir
  3122  0E9C  00CA               	movwf	??_scale+4
  3123  0E9D  084A               	movf	??_scale+4,w
  3124  0E9E  00AB               	movwf	___flmul@b+3
  3125  0E9F  0849               	movf	??_scale+3,w
  3126  0EA0  00AA               	movwf	___flmul@b+2
  3127  0EA1  0848               	movf	??_scale+2,w
  3128  0EA2  00A9               	movwf	___flmul@b+1
  3129  0EA3  0847               	movf	??_scale+1,w
  3130  0EA4  00A8               	movwf	___flmul@b
  3131  0EA5  3064               	movlw	100
  3132  0EA6  00A0               	movwf	___awdiv@divisor
  3133  0EA7  3000               	movlw	0
  3134  0EA8  00A1               	movwf	___awdiv@divisor+1
  3135  0EA9  0854               	movf	scale@scl,w
  3136  0EAA  00A2               	movwf	___awdiv@dividend
  3137  0EAB  01A3               	clrf	___awdiv@dividend+1
  3138  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3139  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3140  0EAE  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3141  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0EB5  0820               	movf	?___awdiv,w
  3144  0EB6  00CB               	movwf	??_scale+5
  3145  0EB7  3001               	movlw	1
  3146  0EB8                     u4205:
  3147  0EB8  1003               	clrc
  3148  0EB9  0DCB               	rlf	??_scale+5,f
  3149  0EBA  3EFF               	addlw	-1
  3150  0EBB  1D03               	skipz
  3151  0EBC  2EB8               	goto	u4205
  3152  0EBD  1003               	clrc
  3153  0EBE  0D4B               	rlf	??_scale+5,w
  3154  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3155  0EC0  0084               	movwf	4
  3156  0EC1  120A  158A  2000  120A  158A  	fcall	stringdir
  3157  0EC6  00CC               	movwf	??_scale+6
  3158  0EC7  120A  158A  2000  120A  158A  	fcall	stringdir
  3159  0ECC  00CD               	movwf	??_scale+7
  3160  0ECD  120A  158A  2000  120A  158A  	fcall	stringdir
  3161  0ED2  00CE               	movwf	??_scale+8
  3162  0ED3  120A  158A  2000  120A  158A  	fcall	stringdir
  3163  0ED8  00CF               	movwf	??_scale+9
  3164  0ED9  084F               	movf	??_scale+9,w
  3165  0EDA  00AF               	movwf	___flmul@a+3
  3166  0EDB  084E               	movf	??_scale+8,w
  3167  0EDC  00AE               	movwf	___flmul@a+2
  3168  0EDD  084D               	movf	??_scale+7,w
  3169  0EDE  00AD               	movwf	___flmul@a+1
  3170  0EDF  084C               	movf	??_scale+6,w
  3171  0EE0  00AC               	movwf	___flmul@a
  3172  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3173  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0EE8  082B               	movf	?___flmul+3,w
  3176  0EE9  00D3               	movwf	_scale$1159+3
  3177  0EEA  082A               	movf	?___flmul+2,w
  3178  0EEB  00D2               	movwf	_scale$1159+2
  3179  0EEC  0829               	movf	?___flmul+1,w
  3180  0EED  00D1               	movwf	_scale$1159+1
  3181  0EEE  0828               	movf	?___flmul,w
  3182  0EEF  00D0               	movwf	_scale$1159
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3185  0EF0  300A               	movlw	10
  3186  0EF1  00F3               	movwf	___awmod@divisor
  3187  0EF2  3000               	movlw	0
  3188  0EF3  00F4               	movwf	___awmod@divisor+1
  3189  0EF4  0854               	movf	scale@scl,w
  3190  0EF5  00F5               	movwf	___awmod@dividend
  3191  0EF6  01F6               	clrf	___awmod@dividend+1
  3192  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3193  0EF8  03F6               	decf	___awmod@dividend+1,f
  3194  0EF9  120A  158A  20E3  120A  158A  	fcall	___awmod
  3195  0EFE  0873               	movf	?___awmod,w
  3196  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0F01  00C6               	movwf	??_scale
  3199  0F02  3001               	movlw	1
  3200  0F03                     u4215:
  3201  0F03  1003               	clrc
  3202  0F04  0DC6               	rlf	??_scale,f
  3203  0F05  3EFF               	addlw	-1
  3204  0F06  1D03               	skipz
  3205  0F07  2F03               	goto	u4215
  3206  0F08  1003               	clrc
  3207  0F09  0D46               	rlf	??_scale,w
  3208  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3209  0F0B  0084               	movwf	4
  3210  0F0C  120A  158A  2000  120A  158A  	fcall	stringdir
  3211  0F11  00C7               	movwf	??_scale+1
  3212  0F12  120A  158A  2000  120A  158A  	fcall	stringdir
  3213  0F17  00C8               	movwf	??_scale+2
  3214  0F18  120A  158A  2000  120A  158A  	fcall	stringdir
  3215  0F1D  00C9               	movwf	??_scale+3
  3216  0F1E  120A  158A  2000  120A  158A  	fcall	stringdir
  3217  0F23  00CA               	movwf	??_scale+4
  3218  0F24  084A               	movf	??_scale+4,w
  3219  0F25  00AB               	movwf	___flmul@b+3
  3220  0F26  0849               	movf	??_scale+3,w
  3221  0F27  00AA               	movwf	___flmul@b+2
  3222  0F28  0848               	movf	??_scale+2,w
  3223  0F29  00A9               	movwf	___flmul@b+1
  3224  0F2A  0847               	movf	??_scale+1,w
  3225  0F2B  00A8               	movwf	___flmul@b
  3226  0F2C  0853               	movf	_scale$1159+3,w
  3227  0F2D  00AF               	movwf	___flmul@a+3
  3228  0F2E  0852               	movf	_scale$1159+2,w
  3229  0F2F  00AE               	movwf	___flmul@a+2
  3230  0F30  0851               	movf	_scale$1159+1,w
  3231  0F31  00AD               	movwf	___flmul@a+1
  3232  0F32  0850               	movf	_scale$1159,w
  3233  0F33  00AC               	movwf	___flmul@a
  3234  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3235  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0F3B  082B               	movf	?___flmul+3,w
  3238  0F3C  00C5               	movwf	?_scale+3
  3239  0F3D  082A               	movf	?___flmul+2,w
  3240  0F3E  00C4               	movwf	?_scale+2
  3241  0F3F  0829               	movf	?___flmul+1,w
  3242  0F40  00C3               	movwf	?_scale+1
  3243  0F41  0828               	movf	?___flmul,w
  3244  0F42  00C2               	movwf	?_scale
  3245  0F43  2FFF               	goto	l248
  3246  0F44                     l2722:
  3247  0F44  0854               	movf	scale@scl,w
  3248  0F45  3A80               	xorlw	128
  3249  0F46  3E75               	addlw	-139
  3250  0F47  1C03               	skipc
  3251  0F48  2F4A               	goto	u4221
  3252  0F49  2F4B               	goto	u4220
  3253  0F4A                     u4221:
  3254  0F4A  2FD3               	goto	l2728
  3255  0F4B                     u4220:
  3256  0F4B                     l2724:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3259  0F4B  300A               	movlw	10
  3260  0F4C  00F3               	movwf	___awmod@divisor
  3261  0F4D  3000               	movlw	0
  3262  0F4E  00F4               	movwf	___awmod@divisor+1
  3263  0F4F  0854               	movf	scale@scl,w
  3264  0F50  00F5               	movwf	___awmod@dividend
  3265  0F51  01F6               	clrf	___awmod@dividend+1
  3266  0F52  1BF5               	btfsc	___awmod@dividend,7
  3267  0F53  03F6               	decf	___awmod@dividend+1,f
  3268  0F54  120A  158A  20E3  120A  158A  	fcall	___awmod
  3269  0F59  0873               	movf	?___awmod,w
  3270  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0F5C  00C6               	movwf	??_scale
  3273  0F5D  3001               	movlw	1
  3274  0F5E                     u4235:
  3275  0F5E  1003               	clrc
  3276  0F5F  0DC6               	rlf	??_scale,f
  3277  0F60  3EFF               	addlw	-1
  3278  0F61  1D03               	skipz
  3279  0F62  2F5E               	goto	u4235
  3280  0F63  1003               	clrc
  3281  0F64  0D46               	rlf	??_scale,w
  3282  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3283  0F66  0084               	movwf	4
  3284  0F67  120A  158A  2000  120A  158A  	fcall	stringdir
  3285  0F6C  00C7               	movwf	??_scale+1
  3286  0F6D  120A  158A  2000  120A  158A  	fcall	stringdir
  3287  0F72  00C8               	movwf	??_scale+2
  3288  0F73  120A  158A  2000  120A  158A  	fcall	stringdir
  3289  0F78  00C9               	movwf	??_scale+3
  3290  0F79  120A  158A  2000  120A  158A  	fcall	stringdir
  3291  0F7E  00CA               	movwf	??_scale+4
  3292  0F7F  084A               	movf	??_scale+4,w
  3293  0F80  00AB               	movwf	___flmul@b+3
  3294  0F81  0849               	movf	??_scale+3,w
  3295  0F82  00AA               	movwf	___flmul@b+2
  3296  0F83  0848               	movf	??_scale+2,w
  3297  0F84  00A9               	movwf	___flmul@b+1
  3298  0F85  0847               	movf	??_scale+1,w
  3299  0F86  00A8               	movwf	___flmul@b
  3300  0F87  300A               	movlw	10
  3301  0F88  00A0               	movwf	___awdiv@divisor
  3302  0F89  3000               	movlw	0
  3303  0F8A  00A1               	movwf	___awdiv@divisor+1
  3304  0F8B  0854               	movf	scale@scl,w
  3305  0F8C  00A2               	movwf	___awdiv@dividend
  3306  0F8D  01A3               	clrf	___awdiv@dividend+1
  3307  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3308  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3309  0F90  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3310  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3312  0F97  0820               	movf	?___awdiv,w
  3313  0F98  00CB               	movwf	??_scale+5
  3314  0F99  3001               	movlw	1
  3315  0F9A                     u4245:
  3316  0F9A  1003               	clrc
  3317  0F9B  0DCB               	rlf	??_scale+5,f
  3318  0F9C  3EFF               	addlw	-1
  3319  0F9D  1D03               	skipz
  3320  0F9E  2F9A               	goto	u4245
  3321  0F9F  1003               	clrc
  3322  0FA0  0D4B               	rlf	??_scale+5,w
  3323  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3324  0FA2  0084               	movwf	4
  3325  0FA3  120A  158A  2000  120A  158A  	fcall	stringdir
  3326  0FA8  00CC               	movwf	??_scale+6
  3327  0FA9  120A  158A  2000  120A  158A  	fcall	stringdir
  3328  0FAE  00CD               	movwf	??_scale+7
  3329  0FAF  120A  158A  2000  120A  158A  	fcall	stringdir
  3330  0FB4  00CE               	movwf	??_scale+8
  3331  0FB5  120A  158A  2000  120A  158A  	fcall	stringdir
  3332  0FBA  00CF               	movwf	??_scale+9
  3333  0FBB  084F               	movf	??_scale+9,w
  3334  0FBC  00AF               	movwf	___flmul@a+3
  3335  0FBD  084E               	movf	??_scale+8,w
  3336  0FBE  00AE               	movwf	___flmul@a+2
  3337  0FBF  084D               	movf	??_scale+7,w
  3338  0FC0  00AD               	movwf	___flmul@a+1
  3339  0FC1  084C               	movf	??_scale+6,w
  3340  0FC2  00AC               	movwf	___flmul@a
  3341  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3342  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0FCA  082B               	movf	?___flmul+3,w
  3345  0FCB  00C5               	movwf	?_scale+3
  3346  0FCC  082A               	movf	?___flmul+2,w
  3347  0FCD  00C4               	movwf	?_scale+2
  3348  0FCE  0829               	movf	?___flmul+1,w
  3349  0FCF  00C3               	movwf	?_scale+1
  3350  0FD0  0828               	movf	?___flmul,w
  3351  0FD1  00C2               	movwf	?_scale
  3352  0FD2  2FFF               	goto	l248
  3353  0FD3                     l2728:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3356  0FD3  0854               	movf	scale@scl,w
  3357  0FD4  00C6               	movwf	??_scale
  3358  0FD5  3001               	movlw	1
  3359  0FD6                     u4255:
  3360  0FD6  1003               	clrc
  3361  0FD7  0DC6               	rlf	??_scale,f
  3362  0FD8  3EFF               	addlw	-1
  3363  0FD9  1D03               	skipz
  3364  0FDA  2FD6               	goto	u4255
  3365  0FDB  1003               	clrc
  3366  0FDC  0D46               	rlf	??_scale,w
  3367  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3368  0FDE  0084               	movwf	4
  3369  0FDF  120A  158A  2000  120A  158A  	fcall	stringdir
  3370  0FE4  00C7               	movwf	??_scale+1
  3371  0FE5  120A  158A  2000  120A  158A  	fcall	stringdir
  3372  0FEA  00C8               	movwf	??_scale+2
  3373  0FEB  120A  158A  2000  120A  158A  	fcall	stringdir
  3374  0FF0  00C9               	movwf	??_scale+3
  3375  0FF1  120A  158A  2000  120A  158A  	fcall	stringdir
  3376  0FF6  00CA               	movwf	??_scale+4
  3377  0FF7  084A               	movf	??_scale+4,w
  3378  0FF8  00C5               	movwf	?_scale+3
  3379  0FF9  0849               	movf	??_scale+3,w
  3380  0FFA  00C4               	movwf	?_scale+2
  3381  0FFB  0848               	movf	??_scale+2,w
  3382  0FFC  00C3               	movwf	?_scale+1
  3383  0FFD  0847               	movf	??_scale+1,w
  3384  0FFE  00C2               	movwf	?_scale
  3385  0FFF                     l248:
  3386  0FFF  0008               	return
  3387  1000                     __end_of_scale:
  3388                           
  3389                           	psect	text3
  3390  08E3                     __ptext3:	
  3391 ;; *************** function ___awmod *****************
  3392 ;; Defined at:
  3393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  divisor         2    3[COMMON] int 
  3396 ;;  dividend        2    5[COMMON] int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  sign            1    9[COMMON] unsigned char 
  3399 ;;  counter         1    8[COMMON] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    3[COMMON] int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         4       0       0       0       0
  3410 ;;      Locals:         2       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0
  3412 ;;      Totals:         7       0       0       0       0
  3413 ;;Total ram usage:        7 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_scale
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function ___awmod
  3425  08E3                     ___awmod:
  3426  08E3                     l2238:	
  3427                           ;incstack = 0
  3428                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3429                           
  3430  08E3  01F9               	clrf	___awmod@sign
  3431  08E4                     l2240:
  3432  08E4  1FF6               	btfss	___awmod@dividend+1,7
  3433  08E5  28E7               	goto	u2931
  3434  08E6  28E8               	goto	u2930
  3435  08E7                     u2931:
  3436  08E7  28EF               	goto	l2246
  3437  08E8                     u2930:
  3438  08E8                     l2242:
  3439  08E8  09F5               	comf	___awmod@dividend,f
  3440  08E9  09F6               	comf	___awmod@dividend+1,f
  3441  08EA  0AF5               	incf	___awmod@dividend,f
  3442  08EB  1903               	skipnz
  3443  08EC  0AF6               	incf	___awmod@dividend+1,f
  3444  08ED                     l2244:
  3445  08ED  01F9               	clrf	___awmod@sign
  3446  08EE  0AF9               	incf	___awmod@sign,f
  3447  08EF                     l2246:
  3448  08EF  1FF4               	btfss	___awmod@divisor+1,7
  3449  08F0  28F2               	goto	u2941
  3450  08F1  28F3               	goto	u2940
  3451  08F2                     u2941:
  3452  08F2  28F8               	goto	l2250
  3453  08F3                     u2940:
  3454  08F3                     l2248:
  3455  08F3  09F3               	comf	___awmod@divisor,f
  3456  08F4  09F4               	comf	___awmod@divisor+1,f
  3457  08F5  0AF3               	incf	___awmod@divisor,f
  3458  08F6  1903               	skipnz
  3459  08F7  0AF4               	incf	___awmod@divisor+1,f
  3460  08F8                     l2250:
  3461  08F8  0873               	movf	___awmod@divisor,w
  3462  08F9  0474               	iorwf	___awmod@divisor+1,w
  3463  08FA  1903               	btfsc	3,2
  3464  08FB  28FD               	goto	u2951
  3465  08FC  28FE               	goto	u2950
  3466  08FD                     u2951:
  3467  08FD  292D               	goto	l2268
  3468  08FE                     u2950:
  3469  08FE                     l2252:
  3470  08FE  01F8               	clrf	___awmod@counter
  3471  08FF  0AF8               	incf	___awmod@counter,f
  3472  0900  290C               	goto	l2258
  3473  0901                     l2254:
  3474  0901  3001               	movlw	1
  3475  0902                     u2965:
  3476  0902  1003               	clrc
  3477  0903  0DF3               	rlf	___awmod@divisor,f
  3478  0904  0DF4               	rlf	___awmod@divisor+1,f
  3479  0905  3EFF               	addlw	-1
  3480  0906  1D03               	skipz
  3481  0907  2902               	goto	u2965
  3482  0908                     l2256:
  3483  0908  3001               	movlw	1
  3484  0909  00F7               	movwf	??___awmod
  3485  090A  0877               	movf	??___awmod,w
  3486  090B  07F8               	addwf	___awmod@counter,f
  3487  090C                     l2258:
  3488  090C  1FF4               	btfss	___awmod@divisor+1,7
  3489  090D  290F               	goto	u2971
  3490  090E  2910               	goto	u2970
  3491  090F                     u2971:
  3492  090F  2901               	goto	l2254
  3493  0910                     u2970:
  3494  0910                     l2260:
  3495  0910  0874               	movf	___awmod@divisor+1,w
  3496  0911  0276               	subwf	___awmod@dividend+1,w
  3497  0912  1D03               	skipz
  3498  0913  2916               	goto	u2985
  3499  0914  0873               	movf	___awmod@divisor,w
  3500  0915  0275               	subwf	___awmod@dividend,w
  3501  0916                     u2985:
  3502  0916  1C03               	skipc
  3503  0917  2919               	goto	u2981
  3504  0918  291A               	goto	u2980
  3505  0919                     u2981:
  3506  0919  2920               	goto	l2264
  3507  091A                     u2980:
  3508  091A                     l2262:
  3509  091A  0873               	movf	___awmod@divisor,w
  3510  091B  02F5               	subwf	___awmod@dividend,f
  3511  091C  0874               	movf	___awmod@divisor+1,w
  3512  091D  1C03               	skipc
  3513  091E  03F6               	decf	___awmod@dividend+1,f
  3514  091F  02F6               	subwf	___awmod@dividend+1,f
  3515  0920                     l2264:
  3516  0920  3001               	movlw	1
  3517  0921                     u2995:
  3518  0921  1003               	clrc
  3519  0922  0CF4               	rrf	___awmod@divisor+1,f
  3520  0923  0CF3               	rrf	___awmod@divisor,f
  3521  0924  3EFF               	addlw	-1
  3522  0925  1D03               	skipz
  3523  0926  2921               	goto	u2995
  3524  0927                     l2266:
  3525  0927  3001               	movlw	1
  3526  0928  02F8               	subwf	___awmod@counter,f
  3527  0929  1D03               	btfss	3,2
  3528  092A  292C               	goto	u3001
  3529  092B  292D               	goto	u3000
  3530  092C                     u3001:
  3531  092C  2910               	goto	l2260
  3532  092D                     u3000:
  3533  092D                     l2268:
  3534  092D  0879               	movf	___awmod@sign,w
  3535  092E  1903               	btfsc	3,2
  3536  092F  2931               	goto	u3011
  3537  0930  2932               	goto	u3010
  3538  0931                     u3011:
  3539  0931  2937               	goto	l2272
  3540  0932                     u3010:
  3541  0932                     l2270:
  3542  0932  09F5               	comf	___awmod@dividend,f
  3543  0933  09F6               	comf	___awmod@dividend+1,f
  3544  0934  0AF5               	incf	___awmod@dividend,f
  3545  0935  1903               	skipnz
  3546  0936  0AF6               	incf	___awmod@dividend+1,f
  3547  0937                     l2272:
  3548  0937  0876               	movf	___awmod@dividend+1,w
  3549  0938  00F4               	movwf	?___awmod+1
  3550  0939  0875               	movf	___awmod@dividend,w
  3551  093A  00F3               	movwf	?___awmod
  3552  093B                     l501:
  3553  093B  0008               	return
  3554  093C                     __end_of___awmod:
  3555                           
  3556                           	psect	text4
  3557  1CFE                     __ptext4:	
  3558 ;; *************** function ___awdiv *****************
  3559 ;; Defined at:
  3560 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  divisor         2    0[BANK0 ] int 
  3563 ;;  dividend        2    2[BANK0 ] int 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  quotient        2    6[BANK0 ] int 
  3566 ;;  sign            1    5[BANK0 ] unsigned char 
  3567 ;;  counter         1    4[BANK0 ] unsigned char 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  2    0[BANK0 ] int 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3577 ;;      Params:         0       4       0       0       0
  3578 ;;      Locals:         0       4       0       0       0
  3579 ;;      Temps:          1       0       0       0       0
  3580 ;;      Totals:         1       8       0       0       0
  3581 ;;Total ram usage:        9 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    1
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_scale
  3588 ;;		_sprintf
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function ___awdiv
  3594  1CFE                     ___awdiv:
  3595  1CFE                     l2194:	
  3596                           ;incstack = 0
  3597                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3598                           
  3599  1CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3600  1CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3601  1D00  01A5               	clrf	___awdiv@sign
  3602  1D01                     l2196:
  3603  1D01  1FA1               	btfss	___awdiv@divisor+1,7
  3604  1D02  2D04               	goto	u2831
  3605  1D03  2D05               	goto	u2830
  3606  1D04                     u2831:
  3607  1D04  2D0C               	goto	l2202
  3608  1D05                     u2830:
  3609  1D05                     l2198:
  3610  1D05  09A0               	comf	___awdiv@divisor,f
  3611  1D06  09A1               	comf	___awdiv@divisor+1,f
  3612  1D07  0AA0               	incf	___awdiv@divisor,f
  3613  1D08  1903               	skipnz
  3614  1D09  0AA1               	incf	___awdiv@divisor+1,f
  3615  1D0A                     l2200:
  3616  1D0A  01A5               	clrf	___awdiv@sign
  3617  1D0B  0AA5               	incf	___awdiv@sign,f
  3618  1D0C                     l2202:
  3619  1D0C  1FA3               	btfss	___awdiv@dividend+1,7
  3620  1D0D  2D0F               	goto	u2841
  3621  1D0E  2D10               	goto	u2840
  3622  1D0F                     u2841:
  3623  1D0F  2D19               	goto	l2208
  3624  1D10                     u2840:
  3625  1D10                     l2204:
  3626  1D10  09A2               	comf	___awdiv@dividend,f
  3627  1D11  09A3               	comf	___awdiv@dividend+1,f
  3628  1D12  0AA2               	incf	___awdiv@dividend,f
  3629  1D13  1903               	skipnz
  3630  1D14  0AA3               	incf	___awdiv@dividend+1,f
  3631  1D15                     l2206:
  3632  1D15  3001               	movlw	1
  3633  1D16  00FA               	movwf	??___awdiv
  3634  1D17  087A               	movf	??___awdiv,w
  3635  1D18  06A5               	xorwf	___awdiv@sign,f
  3636  1D19                     l2208:
  3637  1D19  01A6               	clrf	___awdiv@quotient
  3638  1D1A  01A7               	clrf	___awdiv@quotient+1
  3639  1D1B                     l2210:
  3640  1D1B  0820               	movf	___awdiv@divisor,w
  3641  1D1C  0421               	iorwf	___awdiv@divisor+1,w
  3642  1D1D  1903               	btfsc	3,2
  3643  1D1E  2D20               	goto	u2851
  3644  1D1F  2D21               	goto	u2850
  3645  1D20                     u2851:
  3646  1D20  2D58               	goto	l2230
  3647  1D21                     u2850:
  3648  1D21                     l2212:
  3649  1D21  01A4               	clrf	___awdiv@counter
  3650  1D22  0AA4               	incf	___awdiv@counter,f
  3651  1D23  2D2F               	goto	l2218
  3652  1D24                     l2214:
  3653  1D24  3001               	movlw	1
  3654  1D25                     u2865:
  3655  1D25  1003               	clrc
  3656  1D26  0DA0               	rlf	___awdiv@divisor,f
  3657  1D27  0DA1               	rlf	___awdiv@divisor+1,f
  3658  1D28  3EFF               	addlw	-1
  3659  1D29  1D03               	skipz
  3660  1D2A  2D25               	goto	u2865
  3661  1D2B                     l2216:
  3662  1D2B  3001               	movlw	1
  3663  1D2C  00FA               	movwf	??___awdiv
  3664  1D2D  087A               	movf	??___awdiv,w
  3665  1D2E  07A4               	addwf	___awdiv@counter,f
  3666  1D2F                     l2218:
  3667  1D2F  1FA1               	btfss	___awdiv@divisor+1,7
  3668  1D30  2D32               	goto	u2871
  3669  1D31  2D33               	goto	u2870
  3670  1D32                     u2871:
  3671  1D32  2D24               	goto	l2214
  3672  1D33                     u2870:
  3673  1D33                     l2220:
  3674  1D33  3001               	movlw	1
  3675  1D34                     u2885:
  3676  1D34  1003               	clrc
  3677  1D35  0DA6               	rlf	___awdiv@quotient,f
  3678  1D36  0DA7               	rlf	___awdiv@quotient+1,f
  3679  1D37  3EFF               	addlw	-1
  3680  1D38  1D03               	skipz
  3681  1D39  2D34               	goto	u2885
  3682  1D3A  0821               	movf	___awdiv@divisor+1,w
  3683  1D3B  0223               	subwf	___awdiv@dividend+1,w
  3684  1D3C  1D03               	skipz
  3685  1D3D  2D40               	goto	u2895
  3686  1D3E  0820               	movf	___awdiv@divisor,w
  3687  1D3F  0222               	subwf	___awdiv@dividend,w
  3688  1D40                     u2895:
  3689  1D40  1C03               	skipc
  3690  1D41  2D43               	goto	u2891
  3691  1D42  2D44               	goto	u2890
  3692  1D43                     u2891:
  3693  1D43  2D4B               	goto	l2226
  3694  1D44                     u2890:
  3695  1D44                     l2222:
  3696  1D44  0820               	movf	___awdiv@divisor,w
  3697  1D45  02A2               	subwf	___awdiv@dividend,f
  3698  1D46  0821               	movf	___awdiv@divisor+1,w
  3699  1D47  1C03               	skipc
  3700  1D48  03A3               	decf	___awdiv@dividend+1,f
  3701  1D49  02A3               	subwf	___awdiv@dividend+1,f
  3702  1D4A                     l2224:
  3703  1D4A  1426               	bsf	___awdiv@quotient,0
  3704  1D4B                     l2226:
  3705  1D4B  3001               	movlw	1
  3706  1D4C                     u2905:
  3707  1D4C  1003               	clrc
  3708  1D4D  0CA1               	rrf	___awdiv@divisor+1,f
  3709  1D4E  0CA0               	rrf	___awdiv@divisor,f
  3710  1D4F  3EFF               	addlw	-1
  3711  1D50  1D03               	skipz
  3712  1D51  2D4C               	goto	u2905
  3713  1D52                     l2228:
  3714  1D52  3001               	movlw	1
  3715  1D53  02A4               	subwf	___awdiv@counter,f
  3716  1D54  1D03               	btfss	3,2
  3717  1D55  2D57               	goto	u2911
  3718  1D56  2D58               	goto	u2910
  3719  1D57                     u2911:
  3720  1D57  2D33               	goto	l2220
  3721  1D58                     u2910:
  3722  1D58                     l2230:
  3723  1D58  0825               	movf	___awdiv@sign,w
  3724  1D59  1903               	btfsc	3,2
  3725  1D5A  2D5C               	goto	u2921
  3726  1D5B  2D5D               	goto	u2920
  3727  1D5C                     u2921:
  3728  1D5C  2D62               	goto	l2234
  3729  1D5D                     u2920:
  3730  1D5D                     l2232:
  3731  1D5D  09A6               	comf	___awdiv@quotient,f
  3732  1D5E  09A7               	comf	___awdiv@quotient+1,f
  3733  1D5F  0AA6               	incf	___awdiv@quotient,f
  3734  1D60  1903               	skipnz
  3735  1D61  0AA7               	incf	___awdiv@quotient+1,f
  3736  1D62                     l2234:
  3737  1D62  0827               	movf	___awdiv@quotient+1,w
  3738  1D63  00A1               	movwf	?___awdiv+1
  3739  1D64  0826               	movf	___awdiv@quotient,w
  3740  1D65  00A0               	movwf	?___awdiv
  3741  1D66                     l488:
  3742  1D66  0008               	return
  3743  1D67                     __end_of___awdiv:
  3744                           
  3745                           	psect	text5
  3746  1A79                     __ptext5:	
  3747 ;; *************** function _isdigit *****************
  3748 ;; Defined at:
  3749 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  c               1    wreg     unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  c               1    4[COMMON] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;		None               void
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         2       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0
  3766 ;;      Totals:         2       0       0       0       0
  3767 ;;Total ram usage:        2 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_sprintf
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           
  3778                           ;psect for function _isdigit
  3779  1A79                     _isdigit:
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3783                           ;isdigit@c stored from wreg
  3784  1A79  00F4               	movwf	isdigit@c
  3785  1A7A                     l2732:
  3786  1A7A  01F3               	clrf	_isdigit$981
  3787  1A7B                     l2734:
  3788  1A7B  303A               	movlw	58
  3789  1A7C  0274               	subwf	isdigit@c,w
  3790  1A7D  1803               	skipnc
  3791  1A7E  2A80               	goto	u4261
  3792  1A7F  2A81               	goto	u4260
  3793  1A80                     u4261:
  3794  1A80  2A89               	goto	l2740
  3795  1A81                     u4260:
  3796  1A81                     l2736:
  3797  1A81  3030               	movlw	48
  3798  1A82  0274               	subwf	isdigit@c,w
  3799  1A83  1C03               	skipc
  3800  1A84  2A86               	goto	u4271
  3801  1A85  2A87               	goto	u4270
  3802  1A86                     u4271:
  3803  1A86  2A89               	goto	l2740
  3804  1A87                     u4270:
  3805  1A87                     l2738:
  3806  1A87  01F3               	clrf	_isdigit$981
  3807  1A88  0AF3               	incf	_isdigit$981,f
  3808  1A89                     l2740:
  3809  1A89  0C73               	rrf	_isdigit$981,w
  3810  1A8A                     l822:
  3811  1A8A  0008               	return
  3812  1A8B                     __end_of_isdigit:
  3813                           
  3814                           	psect	text6
  3815  05C1                     __ptext6:	
  3816 ;; *************** function _fround *****************
  3817 ;; Defined at:
  3818 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  prec            1    wreg     unsigned char 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  prec            1   53[BANK0 ] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  4   34[BANK0 ] unsigned char 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3832 ;;      Params:         0       4       0       0       0
  3833 ;;      Locals:         0       9       0       0       0
  3834 ;;      Temps:          0       7       0       0       0
  3835 ;;      Totals:         0      20       0       0       0
  3836 ;;Total ram usage:       20 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    3
  3839 ;; This function calls:
  3840 ;;		___flmul
  3841 ;;		___lwdiv
  3842 ;;		___lwmod
  3843 ;; This function is called by:
  3844 ;;		_sprintf
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function _fround
  3850  05C1                     _fround:
  3851                           
  3852                           ;incstack = 0
  3853                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3854                           ;fround@prec stored from wreg
  3855  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3856  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  3857  05C3  00D5               	movwf	fround@prec
  3858  05C4                     l2674:
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3861  05C4  306E               	movlw	110
  3862  05C5  0255               	subwf	fround@prec,w
  3863  05C6  1C03               	skipc
  3864  05C7  2DC9               	goto	u4011
  3865  05C8  2DCA               	goto	u4010
  3866  05C9                     u4011:
  3867  05C9  2ED9               	goto	l2682
  3868  05CA                     u4010:
  3869  05CA                     l2676:
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3872  05CA  303F               	movlw	63
  3873  05CB  00AB               	movwf	___flmul@b+3
  3874  05CC  3000               	movlw	0
  3875  05CD  00AA               	movwf	___flmul@b+2
  3876  05CE  3000               	movlw	0
  3877  05CF  00A9               	movwf	___flmul@b+1
  3878  05D0  3000               	movlw	0
  3879  05D1  00A8               	movwf	___flmul@b
  3880  05D2  3064               	movlw	100
  3881  05D3  00A0               	movwf	___lwdiv@divisor
  3882  05D4  3000               	movlw	0
  3883  05D5  00A1               	movwf	___lwdiv@divisor+1
  3884  05D6  0855               	movf	fround@prec,w
  3885  05D7  00C6               	movwf	??_fround
  3886  05D8  01C7               	clrf	??_fround+1
  3887  05D9  0846               	movf	??_fround,w
  3888  05DA  00A2               	movwf	___lwdiv@dividend
  3889  05DB  0847               	movf	??_fround+1,w
  3890  05DC  00A3               	movwf	___lwdiv@dividend+1
  3891  05DD  160A  158A  235A  120A  118A  	fcall	___lwdiv
  3892  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3893  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3894  05E4  0820               	movf	?___lwdiv,w
  3895  05E5  00C8               	movwf	??_fround+2
  3896  05E6  3001               	movlw	1
  3897  05E7                     u4025:
  3898  05E7  1003               	clrc
  3899  05E8  0DC8               	rlf	??_fround+2,f
  3900  05E9  3EFF               	addlw	-1
  3901  05EA  1D03               	skipz
  3902  05EB  2DE7               	goto	u4025
  3903  05EC  1003               	clrc
  3904  05ED  0D48               	rlf	??_fround+2,w
  3905  05EE  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3906  05EF  0084               	movwf	4
  3907  05F0  120A  158A  2000  120A  118A  	fcall	stringdir
  3908  05F5  00C9               	movwf	??_fround+3
  3909  05F6  120A  158A  2000  120A  118A  	fcall	stringdir
  3910  05FB  00CA               	movwf	??_fround+4
  3911  05FC  120A  158A  2000  120A  118A  	fcall	stringdir
  3912  0601  00CB               	movwf	??_fround+5
  3913  0602  120A  158A  2000  120A  118A  	fcall	stringdir
  3914  0607  00CC               	movwf	??_fround+6
  3915  0608  084C               	movf	??_fround+6,w
  3916  0609  00AF               	movwf	___flmul@a+3
  3917  060A  084B               	movf	??_fround+5,w
  3918  060B  00AE               	movwf	___flmul@a+2
  3919  060C  084A               	movf	??_fround+4,w
  3920  060D  00AD               	movwf	___flmul@a+1
  3921  060E  0849               	movf	??_fround+3,w
  3922  060F  00AC               	movwf	___flmul@a
  3923  0610  120A  158A  213C  120A  118A  	fcall	___flmul
  3924  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0617  082B               	movf	?___flmul+3,w
  3927  0618  00D4               	movwf	_fround$1157+3
  3928  0619  082A               	movf	?___flmul+2,w
  3929  061A  00D3               	movwf	_fround$1157+2
  3930  061B  0829               	movf	?___flmul+1,w
  3931  061C  00D2               	movwf	_fround$1157+1
  3932  061D  0828               	movf	?___flmul,w
  3933  061E  00D1               	movwf	_fround$1157
  3934                           
  3935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3936  061F  300A               	movlw	10
  3937  0620  00A0               	movwf	___lwdiv@divisor
  3938  0621  3000               	movlw	0
  3939  0622  00A1               	movwf	___lwdiv@divisor+1
  3940  0623  0855               	movf	fround@prec,w
  3941  0624  00C6               	movwf	??_fround
  3942  0625  01C7               	clrf	??_fround+1
  3943  0626  0846               	movf	??_fround,w
  3944  0627  00F5               	movwf	___lwmod@dividend
  3945  0628  0847               	movf	??_fround+1,w
  3946  0629  00F6               	movwf	___lwmod@dividend+1
  3947  062A  3064               	movlw	100
  3948  062B  00F3               	movwf	___lwmod@divisor
  3949  062C  3000               	movlw	0
  3950  062D  00F4               	movwf	___lwmod@divisor+1
  3951  062E  160A  158A  2320  120A  118A  	fcall	___lwmod
  3952  0633  0874               	movf	?___lwmod+1,w
  3953  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0636  00A3               	movwf	___lwdiv@dividend+1
  3956  0637  0873               	movf	?___lwmod,w
  3957  0638  00A2               	movwf	___lwdiv@dividend
  3958  0639  160A  158A  235A  120A  118A  	fcall	___lwdiv
  3959  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3960  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3961  0640  0820               	movf	?___lwdiv,w
  3962  0641  00C8               	movwf	??_fround+2
  3963  0642  3001               	movlw	1
  3964  0643                     u4035:
  3965  0643  1003               	clrc
  3966  0644  0DC8               	rlf	??_fround+2,f
  3967  0645  3EFF               	addlw	-1
  3968  0646  1D03               	skipz
  3969  0647  2E43               	goto	u4035
  3970  0648  1003               	clrc
  3971  0649  0D48               	rlf	??_fround+2,w
  3972  064A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3973  064B  0084               	movwf	4
  3974  064C  120A  158A  2000  120A  118A  	fcall	stringdir
  3975  0651  00C9               	movwf	??_fround+3
  3976  0652  120A  158A  2000  120A  118A  	fcall	stringdir
  3977  0657  00CA               	movwf	??_fround+4
  3978  0658  120A  158A  2000  120A  118A  	fcall	stringdir
  3979  065D  00CB               	movwf	??_fround+5
  3980  065E  120A  158A  2000  120A  118A  	fcall	stringdir
  3981  0663  00CC               	movwf	??_fround+6
  3982  0664  084C               	movf	??_fround+6,w
  3983  0665  00AB               	movwf	___flmul@b+3
  3984  0666  084B               	movf	??_fround+5,w
  3985  0667  00AA               	movwf	___flmul@b+2
  3986  0668  084A               	movf	??_fround+4,w
  3987  0669  00A9               	movwf	___flmul@b+1
  3988  066A  0849               	movf	??_fround+3,w
  3989  066B  00A8               	movwf	___flmul@b
  3990  066C  0854               	movf	_fround$1157+3,w
  3991  066D  00AF               	movwf	___flmul@a+3
  3992  066E  0853               	movf	_fround$1157+2,w
  3993  066F  00AE               	movwf	___flmul@a+2
  3994  0670  0852               	movf	_fround$1157+1,w
  3995  0671  00AD               	movwf	___flmul@a+1
  3996  0672  0851               	movf	_fround$1157,w
  3997  0673  00AC               	movwf	___flmul@a
  3998  0674  120A  158A  213C  120A  118A  	fcall	___flmul
  3999  0679  1283               	bcf	3,5	;RP0=0, select bank0
  4000  067A  1303               	bcf	3,6	;RP1=0, select bank0
  4001  067B  082B               	movf	?___flmul+3,w
  4002  067C  00D0               	movwf	_fround$1158+3
  4003  067D  082A               	movf	?___flmul+2,w
  4004  067E  00CF               	movwf	_fround$1158+2
  4005  067F  0829               	movf	?___flmul+1,w
  4006  0680  00CE               	movwf	_fround$1158+1
  4007  0681  0828               	movf	?___flmul,w
  4008  0682  00CD               	movwf	_fround$1158
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4011  0683  300A               	movlw	10
  4012  0684  00F3               	movwf	___lwmod@divisor
  4013  0685  3000               	movlw	0
  4014  0686  00F4               	movwf	___lwmod@divisor+1
  4015  0687  0855               	movf	fround@prec,w
  4016  0688  00C6               	movwf	??_fround
  4017  0689  01C7               	clrf	??_fround+1
  4018  068A  0846               	movf	??_fround,w
  4019  068B  00F5               	movwf	___lwmod@dividend
  4020  068C  0847               	movf	??_fround+1,w
  4021  068D  00F6               	movwf	___lwmod@dividend+1
  4022  068E  160A  158A  2320  120A  118A  	fcall	___lwmod
  4023  0693  0873               	movf	?___lwmod,w
  4024  0694  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0695  1303               	bcf	3,6	;RP1=0, select bank0
  4026  0696  00C8               	movwf	??_fround+2
  4027  0697  3001               	movlw	1
  4028  0698                     u4045:
  4029  0698  1003               	clrc
  4030  0699  0DC8               	rlf	??_fround+2,f
  4031  069A  3EFF               	addlw	-1
  4032  069B  1D03               	skipz
  4033  069C  2E98               	goto	u4045
  4034  069D  1003               	clrc
  4035  069E  0D48               	rlf	??_fround+2,w
  4036  069F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4037  06A0  0084               	movwf	4
  4038  06A1  120A  158A  2000  120A  118A  	fcall	stringdir
  4039  06A6  00C9               	movwf	??_fround+3
  4040  06A7  120A  158A  2000  120A  118A  	fcall	stringdir
  4041  06AC  00CA               	movwf	??_fround+4
  4042  06AD  120A  158A  2000  120A  118A  	fcall	stringdir
  4043  06B2  00CB               	movwf	??_fround+5
  4044  06B3  120A  158A  2000  120A  118A  	fcall	stringdir
  4045  06B8  00CC               	movwf	??_fround+6
  4046  06B9  084C               	movf	??_fround+6,w
  4047  06BA  00AB               	movwf	___flmul@b+3
  4048  06BB  084B               	movf	??_fround+5,w
  4049  06BC  00AA               	movwf	___flmul@b+2
  4050  06BD  084A               	movf	??_fround+4,w
  4051  06BE  00A9               	movwf	___flmul@b+1
  4052  06BF  0849               	movf	??_fround+3,w
  4053  06C0  00A8               	movwf	___flmul@b
  4054  06C1  0850               	movf	_fround$1158+3,w
  4055  06C2  00AF               	movwf	___flmul@a+3
  4056  06C3  084F               	movf	_fround$1158+2,w
  4057  06C4  00AE               	movwf	___flmul@a+2
  4058  06C5  084E               	movf	_fround$1158+1,w
  4059  06C6  00AD               	movwf	___flmul@a+1
  4060  06C7  084D               	movf	_fround$1158,w
  4061  06C8  00AC               	movwf	___flmul@a
  4062  06C9  120A  158A  213C  120A  118A  	fcall	___flmul
  4063  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  4064  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  4065  06D0  082B               	movf	?___flmul+3,w
  4066  06D1  00C5               	movwf	?_fround+3
  4067  06D2  082A               	movf	?___flmul+2,w
  4068  06D3  00C4               	movwf	?_fround+2
  4069  06D4  0829               	movf	?___flmul+1,w
  4070  06D5  00C3               	movwf	?_fround+1
  4071  06D6  0828               	movf	?___flmul,w
  4072  06D7  00C2               	movwf	?_fround
  4073  06D8  2FCD               	goto	l241
  4074  06D9                     l2682:
  4075  06D9  300B               	movlw	11
  4076  06DA  0255               	subwf	fround@prec,w
  4077  06DB  1C03               	skipc
  4078  06DC  2EDE               	goto	u4051
  4079  06DD  2EDF               	goto	u4050
  4080  06DE                     u4051:
  4081  06DE  2F8A               	goto	l2688
  4082  06DF                     u4050:
  4083  06DF                     l2684:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4086  06DF  303F               	movlw	63
  4087  06E0  00AB               	movwf	___flmul@b+3
  4088  06E1  3000               	movlw	0
  4089  06E2  00AA               	movwf	___flmul@b+2
  4090  06E3  3000               	movlw	0
  4091  06E4  00A9               	movwf	___flmul@b+1
  4092  06E5  3000               	movlw	0
  4093  06E6  00A8               	movwf	___flmul@b
  4094  06E7  300A               	movlw	10
  4095  06E8  00A0               	movwf	___lwdiv@divisor
  4096  06E9  3000               	movlw	0
  4097  06EA  00A1               	movwf	___lwdiv@divisor+1
  4098  06EB  0855               	movf	fround@prec,w
  4099  06EC  00C6               	movwf	??_fround
  4100  06ED  01C7               	clrf	??_fround+1
  4101  06EE  0846               	movf	??_fround,w
  4102  06EF  00A2               	movwf	___lwdiv@dividend
  4103  06F0  0847               	movf	??_fround+1,w
  4104  06F1  00A3               	movwf	___lwdiv@dividend+1
  4105  06F2  160A  158A  235A  120A  118A  	fcall	___lwdiv
  4106  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4107  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  4108  06F9  0820               	movf	?___lwdiv,w
  4109  06FA  00C8               	movwf	??_fround+2
  4110  06FB  3001               	movlw	1
  4111  06FC                     u4065:
  4112  06FC  1003               	clrc
  4113  06FD  0DC8               	rlf	??_fround+2,f
  4114  06FE  3EFF               	addlw	-1
  4115  06FF  1D03               	skipz
  4116  0700  2EFC               	goto	u4065
  4117  0701  1003               	clrc
  4118  0702  0D48               	rlf	??_fround+2,w
  4119  0703  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4120  0704  0084               	movwf	4
  4121  0705  120A  158A  2000  120A  118A  	fcall	stringdir
  4122  070A  00C9               	movwf	??_fround+3
  4123  070B  120A  158A  2000  120A  118A  	fcall	stringdir
  4124  0710  00CA               	movwf	??_fround+4
  4125  0711  120A  158A  2000  120A  118A  	fcall	stringdir
  4126  0716  00CB               	movwf	??_fround+5
  4127  0717  120A  158A  2000  120A  118A  	fcall	stringdir
  4128  071C  00CC               	movwf	??_fround+6
  4129  071D  084C               	movf	??_fround+6,w
  4130  071E  00AF               	movwf	___flmul@a+3
  4131  071F  084B               	movf	??_fround+5,w
  4132  0720  00AE               	movwf	___flmul@a+2
  4133  0721  084A               	movf	??_fround+4,w
  4134  0722  00AD               	movwf	___flmul@a+1
  4135  0723  0849               	movf	??_fround+3,w
  4136  0724  00AC               	movwf	___flmul@a
  4137  0725  120A  158A  213C  120A  118A  	fcall	___flmul
  4138  072A  1283               	bcf	3,5	;RP0=0, select bank0
  4139  072B  1303               	bcf	3,6	;RP1=0, select bank0
  4140  072C  082B               	movf	?___flmul+3,w
  4141  072D  00D4               	movwf	_fround$1157+3
  4142  072E  082A               	movf	?___flmul+2,w
  4143  072F  00D3               	movwf	_fround$1157+2
  4144  0730  0829               	movf	?___flmul+1,w
  4145  0731  00D2               	movwf	_fround$1157+1
  4146  0732  0828               	movf	?___flmul,w
  4147  0733  00D1               	movwf	_fround$1157
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4150  0734  300A               	movlw	10
  4151  0735  00F3               	movwf	___lwmod@divisor
  4152  0736  3000               	movlw	0
  4153  0737  00F4               	movwf	___lwmod@divisor+1
  4154  0738  0855               	movf	fround@prec,w
  4155  0739  00C6               	movwf	??_fround
  4156  073A  01C7               	clrf	??_fround+1
  4157  073B  0846               	movf	??_fround,w
  4158  073C  00F5               	movwf	___lwmod@dividend
  4159  073D  0847               	movf	??_fround+1,w
  4160  073E  00F6               	movwf	___lwmod@dividend+1
  4161  073F  160A  158A  2320  120A  118A  	fcall	___lwmod
  4162  0744  0873               	movf	?___lwmod,w
  4163  0745  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0746  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0747  00C8               	movwf	??_fround+2
  4166  0748  3001               	movlw	1
  4167  0749                     u4075:
  4168  0749  1003               	clrc
  4169  074A  0DC8               	rlf	??_fround+2,f
  4170  074B  3EFF               	addlw	-1
  4171  074C  1D03               	skipz
  4172  074D  2F49               	goto	u4075
  4173  074E  1003               	clrc
  4174  074F  0D48               	rlf	??_fround+2,w
  4175  0750  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4176  0751  0084               	movwf	4
  4177  0752  120A  158A  2000  120A  118A  	fcall	stringdir
  4178  0757  00C9               	movwf	??_fround+3
  4179  0758  120A  158A  2000  120A  118A  	fcall	stringdir
  4180  075D  00CA               	movwf	??_fround+4
  4181  075E  120A  158A  2000  120A  118A  	fcall	stringdir
  4182  0763  00CB               	movwf	??_fround+5
  4183  0764  120A  158A  2000  120A  118A  	fcall	stringdir
  4184  0769  00CC               	movwf	??_fround+6
  4185  076A  084C               	movf	??_fround+6,w
  4186  076B  00AB               	movwf	___flmul@b+3
  4187  076C  084B               	movf	??_fround+5,w
  4188  076D  00AA               	movwf	___flmul@b+2
  4189  076E  084A               	movf	??_fround+4,w
  4190  076F  00A9               	movwf	___flmul@b+1
  4191  0770  0849               	movf	??_fround+3,w
  4192  0771  00A8               	movwf	___flmul@b
  4193  0772  0854               	movf	_fround$1157+3,w
  4194  0773  00AF               	movwf	___flmul@a+3
  4195  0774  0853               	movf	_fround$1157+2,w
  4196  0775  00AE               	movwf	___flmul@a+2
  4197  0776  0852               	movf	_fround$1157+1,w
  4198  0777  00AD               	movwf	___flmul@a+1
  4199  0778  0851               	movf	_fround$1157,w
  4200  0779  00AC               	movwf	___flmul@a
  4201  077A  120A  158A  213C  120A  118A  	fcall	___flmul
  4202  077F  1283               	bcf	3,5	;RP0=0, select bank0
  4203  0780  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0781  082B               	movf	?___flmul+3,w
  4205  0782  00C5               	movwf	?_fround+3
  4206  0783  082A               	movf	?___flmul+2,w
  4207  0784  00C4               	movwf	?_fround+2
  4208  0785  0829               	movf	?___flmul+1,w
  4209  0786  00C3               	movwf	?_fround+1
  4210  0787  0828               	movf	?___flmul,w
  4211  0788  00C2               	movwf	?_fround
  4212  0789  2FCD               	goto	l241
  4213  078A                     l2688:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4216  078A  303F               	movlw	63
  4217  078B  00AB               	movwf	___flmul@b+3
  4218  078C  3000               	movlw	0
  4219  078D  00AA               	movwf	___flmul@b+2
  4220  078E  3000               	movlw	0
  4221  078F  00A9               	movwf	___flmul@b+1
  4222  0790  3000               	movlw	0
  4223  0791  00A8               	movwf	___flmul@b
  4224  0792  0855               	movf	fround@prec,w
  4225  0793  00C6               	movwf	??_fround
  4226  0794  3001               	movlw	1
  4227  0795                     u4085:
  4228  0795  1003               	clrc
  4229  0796  0DC6               	rlf	??_fround,f
  4230  0797  3EFF               	addlw	-1
  4231  0798  1D03               	skipz
  4232  0799  2F95               	goto	u4085
  4233  079A  1003               	clrc
  4234  079B  0D46               	rlf	??_fround,w
  4235  079C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4236  079D  0084               	movwf	4
  4237  079E  120A  158A  2000  120A  118A  	fcall	stringdir
  4238  07A3  00C7               	movwf	??_fround+1
  4239  07A4  120A  158A  2000  120A  118A  	fcall	stringdir
  4240  07A9  00C8               	movwf	??_fround+2
  4241  07AA  120A  158A  2000  120A  118A  	fcall	stringdir
  4242  07AF  00C9               	movwf	??_fround+3
  4243  07B0  120A  158A  2000  120A  118A  	fcall	stringdir
  4244  07B5  00CA               	movwf	??_fround+4
  4245  07B6  084A               	movf	??_fround+4,w
  4246  07B7  00AF               	movwf	___flmul@a+3
  4247  07B8  0849               	movf	??_fround+3,w
  4248  07B9  00AE               	movwf	___flmul@a+2
  4249  07BA  0848               	movf	??_fround+2,w
  4250  07BB  00AD               	movwf	___flmul@a+1
  4251  07BC  0847               	movf	??_fround+1,w
  4252  07BD  00AC               	movwf	___flmul@a
  4253  07BE  120A  158A  213C  120A  118A  	fcall	___flmul
  4254  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  4255  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  4256  07C5  082B               	movf	?___flmul+3,w
  4257  07C6  00C5               	movwf	?_fround+3
  4258  07C7  082A               	movf	?___flmul+2,w
  4259  07C8  00C4               	movwf	?_fround+2
  4260  07C9  0829               	movf	?___flmul+1,w
  4261  07CA  00C3               	movwf	?_fround+1
  4262  07CB  0828               	movf	?___flmul,w
  4263  07CC  00C2               	movwf	?_fround
  4264  07CD                     l241:
  4265  07CD  0008               	return
  4266  07CE                     __end_of_fround:
  4267                           
  4268                           	psect	text7
  4269  1B20                     __ptext7:	
  4270 ;; *************** function ___lwmod *****************
  4271 ;; Defined at:
  4272 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  divisor         2    3[COMMON] unsigned int 
  4275 ;;  dividend        2    5[COMMON] unsigned int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  counter         1    8[COMMON] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    3[COMMON] unsigned int 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4287 ;;      Params:         4       0       0       0       0
  4288 ;;      Locals:         1       0       0       0       0
  4289 ;;      Temps:          1       0       0       0       0
  4290 ;;      Totals:         6       0       0       0       0
  4291 ;;Total ram usage:        6 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_fround
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function ___lwmod
  4303  1B20                     ___lwmod:
  4304  1B20                     l2302:	
  4305                           ;incstack = 0
  4306                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4307                           
  4308  1B20  0873               	movf	___lwmod@divisor,w
  4309  1B21  0474               	iorwf	___lwmod@divisor+1,w
  4310  1B22  1903               	btfsc	3,2
  4311  1B23  2B25               	goto	u3091
  4312  1B24  2B26               	goto	u3090
  4313  1B25                     u3091:
  4314  1B25  2B55               	goto	l2320
  4315  1B26                     u3090:
  4316  1B26                     l2304:
  4317  1B26  01F8               	clrf	___lwmod@counter
  4318  1B27  0AF8               	incf	___lwmod@counter,f
  4319  1B28  2B34               	goto	l2310
  4320  1B29                     l2306:
  4321  1B29  3001               	movlw	1
  4322  1B2A                     u3105:
  4323  1B2A  1003               	clrc
  4324  1B2B  0DF3               	rlf	___lwmod@divisor,f
  4325  1B2C  0DF4               	rlf	___lwmod@divisor+1,f
  4326  1B2D  3EFF               	addlw	-1
  4327  1B2E  1D03               	skipz
  4328  1B2F  2B2A               	goto	u3105
  4329  1B30                     l2308:
  4330  1B30  3001               	movlw	1
  4331  1B31  00F7               	movwf	??___lwmod
  4332  1B32  0877               	movf	??___lwmod,w
  4333  1B33  07F8               	addwf	___lwmod@counter,f
  4334  1B34                     l2310:
  4335  1B34  1FF4               	btfss	___lwmod@divisor+1,7
  4336  1B35  2B37               	goto	u3111
  4337  1B36  2B38               	goto	u3110
  4338  1B37                     u3111:
  4339  1B37  2B29               	goto	l2306
  4340  1B38                     u3110:
  4341  1B38                     l2312:
  4342  1B38  0874               	movf	___lwmod@divisor+1,w
  4343  1B39  0276               	subwf	___lwmod@dividend+1,w
  4344  1B3A  1D03               	skipz
  4345  1B3B  2B3E               	goto	u3125
  4346  1B3C  0873               	movf	___lwmod@divisor,w
  4347  1B3D  0275               	subwf	___lwmod@dividend,w
  4348  1B3E                     u3125:
  4349  1B3E  1C03               	skipc
  4350  1B3F  2B41               	goto	u3121
  4351  1B40  2B42               	goto	u3120
  4352  1B41                     u3121:
  4353  1B41  2B48               	goto	l2316
  4354  1B42                     u3120:
  4355  1B42                     l2314:
  4356  1B42  0873               	movf	___lwmod@divisor,w
  4357  1B43  02F5               	subwf	___lwmod@dividend,f
  4358  1B44  0874               	movf	___lwmod@divisor+1,w
  4359  1B45  1C03               	skipc
  4360  1B46  03F6               	decf	___lwmod@dividend+1,f
  4361  1B47  02F6               	subwf	___lwmod@dividend+1,f
  4362  1B48                     l2316:
  4363  1B48  3001               	movlw	1
  4364  1B49                     u3135:
  4365  1B49  1003               	clrc
  4366  1B4A  0CF4               	rrf	___lwmod@divisor+1,f
  4367  1B4B  0CF3               	rrf	___lwmod@divisor,f
  4368  1B4C  3EFF               	addlw	-1
  4369  1B4D  1D03               	skipz
  4370  1B4E  2B49               	goto	u3135
  4371  1B4F                     l2318:
  4372  1B4F  3001               	movlw	1
  4373  1B50  02F8               	subwf	___lwmod@counter,f
  4374  1B51  1D03               	btfss	3,2
  4375  1B52  2B54               	goto	u3141
  4376  1B53  2B55               	goto	u3140
  4377  1B54                     u3141:
  4378  1B54  2B38               	goto	l2312
  4379  1B55                     u3140:
  4380  1B55                     l2320:
  4381  1B55  0876               	movf	___lwmod@dividend+1,w
  4382  1B56  00F4               	movwf	?___lwmod+1
  4383  1B57  0875               	movf	___lwmod@dividend,w
  4384  1B58  00F3               	movwf	?___lwmod
  4385  1B59                     l651:
  4386  1B59  0008               	return
  4387  1B5A                     __end_of___lwmod:
  4388                           
  4389                           	psect	text8
  4390  1B5A                     __ptext8:	
  4391 ;; *************** function ___lwdiv *****************
  4392 ;; Defined at:
  4393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  divisor         2    0[BANK0 ] unsigned int 
  4396 ;;  dividend        2    2[BANK0 ] unsigned int 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  quotient        2    4[BANK0 ] unsigned int 
  4399 ;;  counter         1    6[BANK0 ] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2    0[BANK0 ] unsigned int 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         0       4       0       0       0
  4410 ;;      Locals:         0       3       0       0       0
  4411 ;;      Temps:          1       0       0       0       0
  4412 ;;      Totals:         1       7       0       0       0
  4413 ;;Total ram usage:        8 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_fround
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function ___lwdiv
  4425  1B5A                     ___lwdiv:
  4426  1B5A                     l2276:	
  4427                           ;incstack = 0
  4428                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4429                           
  4430  1B5A  1283               	bcf	3,5	;RP0=0, select bank0
  4431  1B5B  1303               	bcf	3,6	;RP1=0, select bank0
  4432  1B5C  01A4               	clrf	___lwdiv@quotient
  4433  1B5D  01A5               	clrf	___lwdiv@quotient+1
  4434  1B5E                     l2278:
  4435  1B5E  0820               	movf	___lwdiv@divisor,w
  4436  1B5F  0421               	iorwf	___lwdiv@divisor+1,w
  4437  1B60  1903               	btfsc	3,2
  4438  1B61  2B63               	goto	u3021
  4439  1B62  2B64               	goto	u3020
  4440  1B63                     u3021:
  4441  1B63  2B9B               	goto	l2298
  4442  1B64                     u3020:
  4443  1B64                     l2280:
  4444  1B64  01A6               	clrf	___lwdiv@counter
  4445  1B65  0AA6               	incf	___lwdiv@counter,f
  4446  1B66  2B72               	goto	l2286
  4447  1B67                     l2282:
  4448  1B67  3001               	movlw	1
  4449  1B68                     u3035:
  4450  1B68  1003               	clrc
  4451  1B69  0DA0               	rlf	___lwdiv@divisor,f
  4452  1B6A  0DA1               	rlf	___lwdiv@divisor+1,f
  4453  1B6B  3EFF               	addlw	-1
  4454  1B6C  1D03               	skipz
  4455  1B6D  2B68               	goto	u3035
  4456  1B6E                     l2284:
  4457  1B6E  3001               	movlw	1
  4458  1B6F  00F9               	movwf	??___lwdiv
  4459  1B70  0879               	movf	??___lwdiv,w
  4460  1B71  07A6               	addwf	___lwdiv@counter,f
  4461  1B72                     l2286:
  4462  1B72  1FA1               	btfss	___lwdiv@divisor+1,7
  4463  1B73  2B75               	goto	u3041
  4464  1B74  2B76               	goto	u3040
  4465  1B75                     u3041:
  4466  1B75  2B67               	goto	l2282
  4467  1B76                     u3040:
  4468  1B76                     l2288:
  4469  1B76  3001               	movlw	1
  4470  1B77                     u3055:
  4471  1B77  1003               	clrc
  4472  1B78  0DA4               	rlf	___lwdiv@quotient,f
  4473  1B79  0DA5               	rlf	___lwdiv@quotient+1,f
  4474  1B7A  3EFF               	addlw	-1
  4475  1B7B  1D03               	skipz
  4476  1B7C  2B77               	goto	u3055
  4477  1B7D  0821               	movf	___lwdiv@divisor+1,w
  4478  1B7E  0223               	subwf	___lwdiv@dividend+1,w
  4479  1B7F  1D03               	skipz
  4480  1B80  2B83               	goto	u3065
  4481  1B81  0820               	movf	___lwdiv@divisor,w
  4482  1B82  0222               	subwf	___lwdiv@dividend,w
  4483  1B83                     u3065:
  4484  1B83  1C03               	skipc
  4485  1B84  2B86               	goto	u3061
  4486  1B85  2B87               	goto	u3060
  4487  1B86                     u3061:
  4488  1B86  2B8E               	goto	l2294
  4489  1B87                     u3060:
  4490  1B87                     l2290:
  4491  1B87  0820               	movf	___lwdiv@divisor,w
  4492  1B88  02A2               	subwf	___lwdiv@dividend,f
  4493  1B89  0821               	movf	___lwdiv@divisor+1,w
  4494  1B8A  1C03               	skipc
  4495  1B8B  03A3               	decf	___lwdiv@dividend+1,f
  4496  1B8C  02A3               	subwf	___lwdiv@dividend+1,f
  4497  1B8D                     l2292:
  4498  1B8D  1424               	bsf	___lwdiv@quotient,0
  4499  1B8E                     l2294:
  4500  1B8E  3001               	movlw	1
  4501  1B8F                     u3075:
  4502  1B8F  1003               	clrc
  4503  1B90  0CA1               	rrf	___lwdiv@divisor+1,f
  4504  1B91  0CA0               	rrf	___lwdiv@divisor,f
  4505  1B92  3EFF               	addlw	-1
  4506  1B93  1D03               	skipz
  4507  1B94  2B8F               	goto	u3075
  4508  1B95                     l2296:
  4509  1B95  3001               	movlw	1
  4510  1B96  02A6               	subwf	___lwdiv@counter,f
  4511  1B97  1D03               	btfss	3,2
  4512  1B98  2B9A               	goto	u3081
  4513  1B99  2B9B               	goto	u3080
  4514  1B9A                     u3081:
  4515  1B9A  2B76               	goto	l2288
  4516  1B9B                     u3080:
  4517  1B9B                     l2298:
  4518  1B9B  0825               	movf	___lwdiv@quotient+1,w
  4519  1B9C  00A1               	movwf	?___lwdiv+1
  4520  1B9D  0824               	movf	___lwdiv@quotient,w
  4521  1B9E  00A0               	movwf	?___lwdiv
  4522  1B9F                     l641:
  4523  1B9F  0008               	return
  4524  1BA0                     __end_of___lwdiv:
  4525                           
  4526                           	psect	text9
  4527  093C                     __ptext9:	
  4528 ;; *************** function ___flmul *****************
  4529 ;; Defined at:
  4530 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  b               4    8[BANK0 ] unsigned int 
  4533 ;;  a               4   12[BANK0 ] unsigned int 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  prod            4   28[BANK0 ] struct .
  4536 ;;  grs             4   22[BANK0 ] unsigned long 
  4537 ;;  temp            2   32[BANK0 ] struct .
  4538 ;;  bexp            1   27[BANK0 ] unsigned char 
  4539 ;;  aexp            1   26[BANK0 ] unsigned char 
  4540 ;;  sign            1   21[BANK0 ] unsigned char 
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  4    8[BANK0 ] unsigned char 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4550 ;;      Params:         0       8       0       0       0
  4551 ;;      Locals:         0      13       0       0       0
  4552 ;;      Temps:          0       5       0       0       0
  4553 ;;      Totals:         0      26       0       0       0
  4554 ;;Total ram usage:       26 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    2
  4557 ;; This function calls:
  4558 ;;		__Umul8_16
  4559 ;; This function is called by:
  4560 ;;		_fround
  4561 ;;		_scale
  4562 ;;		_sprintf
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function ___flmul
  4568  093C                     ___flmul:
  4569  093C                     l2518:	
  4570                           ;incstack = 0
  4571                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4572                           
  4573  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4574  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4575  093E  082B               	movf	___flmul@b+3,w
  4576  093F  3980               	andlw	128
  4577  0940  00B0               	movwf	??___flmul
  4578  0941  0830               	movf	??___flmul,w
  4579  0942  00B5               	movwf	___flmul@sign
  4580  0943                     l2520:
  4581  0943  082B               	movf	___flmul@b+3,w
  4582  0944  00B0               	movwf	??___flmul
  4583  0945  0730               	addwf	??___flmul,w
  4584  0946  00B1               	movwf	??___flmul+1
  4585  0947  0831               	movf	??___flmul+1,w
  4586  0948  00BB               	movwf	___flmul@bexp
  4587  0949                     l2522:
  4588  0949  1FAA               	btfss	___flmul@b+2,7
  4589  094A  294C               	goto	u3611
  4590  094B  294D               	goto	u3610
  4591  094C                     u3611:
  4592  094C  294E               	goto	l2526
  4593  094D                     u3610:
  4594  094D                     l2524:
  4595  094D  143B               	bsf	___flmul@bexp,0
  4596  094E                     l2526:
  4597  094E  083B               	movf	___flmul@bexp,w
  4598  094F  1903               	btfsc	3,2
  4599  0950  2952               	goto	u3621
  4600  0951  2953               	goto	u3620
  4601  0952                     u3621:
  4602  0952  2962               	goto	l2534
  4603  0953                     u3620:
  4604  0953                     l2528:
  4605  0953  0A3B               	incf	___flmul@bexp,w
  4606  0954  1D03               	btfss	3,2
  4607  0955  2957               	goto	u3631
  4608  0956  2958               	goto	u3630
  4609  0957                     u3631:
  4610  0957  2960               	goto	l2532
  4611  0958                     u3630:
  4612  0958                     l2530:
  4613  0958  3000               	movlw	0
  4614  0959  00AB               	movwf	___flmul@b+3
  4615  095A  3000               	movlw	0
  4616  095B  00AA               	movwf	___flmul@b+2
  4617  095C  3000               	movlw	0
  4618  095D  00A9               	movwf	___flmul@b+1
  4619  095E  3000               	movlw	0
  4620  095F  00A8               	movwf	___flmul@b
  4621  0960                     l2532:
  4622  0960  17AA               	bsf	___flmul@b+2,7
  4623  0961  296A               	goto	l2536
  4624  0962                     l2534:
  4625  0962  3000               	movlw	0
  4626  0963  00AB               	movwf	___flmul@b+3
  4627  0964  3000               	movlw	0
  4628  0965  00AA               	movwf	___flmul@b+2
  4629  0966  3000               	movlw	0
  4630  0967  00A9               	movwf	___flmul@b+1
  4631  0968  3000               	movlw	0
  4632  0969  00A8               	movwf	___flmul@b
  4633  096A                     l2536:
  4634  096A  082F               	movf	___flmul@a+3,w
  4635  096B  3980               	andlw	128
  4636  096C  00B0               	movwf	??___flmul
  4637  096D  0830               	movf	??___flmul,w
  4638  096E  06B5               	xorwf	___flmul@sign,f
  4639  096F                     l2538:
  4640  096F  082F               	movf	___flmul@a+3,w
  4641  0970  00B0               	movwf	??___flmul
  4642  0971  0730               	addwf	??___flmul,w
  4643  0972  00B1               	movwf	??___flmul+1
  4644  0973  0831               	movf	??___flmul+1,w
  4645  0974  00BA               	movwf	___flmul@aexp
  4646  0975                     l2540:
  4647  0975  1FAE               	btfss	___flmul@a+2,7
  4648  0976  2978               	goto	u3641
  4649  0977  2979               	goto	u3640
  4650  0978                     u3641:
  4651  0978  297A               	goto	l2544
  4652  0979                     u3640:
  4653  0979                     l2542:
  4654  0979  143A               	bsf	___flmul@aexp,0
  4655  097A                     l2544:
  4656  097A  083A               	movf	___flmul@aexp,w
  4657  097B  1903               	btfsc	3,2
  4658  097C  297E               	goto	u3651
  4659  097D  297F               	goto	u3650
  4660  097E                     u3651:
  4661  097E  298E               	goto	l2552
  4662  097F                     u3650:
  4663  097F                     l2546:
  4664  097F  0A3A               	incf	___flmul@aexp,w
  4665  0980  1D03               	btfss	3,2
  4666  0981  2983               	goto	u3661
  4667  0982  2984               	goto	u3660
  4668  0983                     u3661:
  4669  0983  298C               	goto	l2550
  4670  0984                     u3660:
  4671  0984                     l2548:
  4672  0984  3000               	movlw	0
  4673  0985  00AF               	movwf	___flmul@a+3
  4674  0986  3000               	movlw	0
  4675  0987  00AE               	movwf	___flmul@a+2
  4676  0988  3000               	movlw	0
  4677  0989  00AD               	movwf	___flmul@a+1
  4678  098A  3000               	movlw	0
  4679  098B  00AC               	movwf	___flmul@a
  4680  098C                     l2550:
  4681  098C  17AE               	bsf	___flmul@a+2,7
  4682  098D  2996               	goto	l2554
  4683  098E                     l2552:
  4684  098E  3000               	movlw	0
  4685  098F  00AF               	movwf	___flmul@a+3
  4686  0990  3000               	movlw	0
  4687  0991  00AE               	movwf	___flmul@a+2
  4688  0992  3000               	movlw	0
  4689  0993  00AD               	movwf	___flmul@a+1
  4690  0994  3000               	movlw	0
  4691  0995  00AC               	movwf	___flmul@a
  4692  0996                     l2554:
  4693  0996  083A               	movf	___flmul@aexp,w
  4694  0997  1903               	btfsc	3,2
  4695  0998  299A               	goto	u3671
  4696  0999  299B               	goto	u3670
  4697  099A                     u3671:
  4698  099A  29A0               	goto	l2558
  4699  099B                     u3670:
  4700  099B                     l2556:
  4701  099B  083B               	movf	___flmul@bexp,w
  4702  099C  1D03               	btfss	3,2
  4703  099D  299F               	goto	u3681
  4704  099E  29A0               	goto	u3680
  4705  099F                     u3681:
  4706  099F  29A9               	goto	l2562
  4707  09A0                     u3680:
  4708  09A0                     l2558:
  4709  09A0  3000               	movlw	0
  4710  09A1  00AB               	movwf	?___flmul+3
  4711  09A2  3000               	movlw	0
  4712  09A3  00AA               	movwf	?___flmul+2
  4713  09A4  3000               	movlw	0
  4714  09A5  00A9               	movwf	?___flmul+1
  4715  09A6  3000               	movlw	0
  4716  09A7  00A8               	movwf	?___flmul
  4717  09A8  2C9C               	goto	l758
  4718  09A9                     l2562:
  4719  09A9  0828               	movf	___flmul@b,w
  4720  09AA  00B0               	movwf	??___flmul
  4721  09AB  0830               	movf	??___flmul,w
  4722  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4723  09AD  082E               	movf	___flmul@a+2,w
  4724  09AE  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  4725  09B3  0874               	movf	?__Umul8_16+1,w
  4726  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4727  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4728  09B6  00C1               	movwf	___flmul@temp+1
  4729  09B7  0873               	movf	?__Umul8_16,w
  4730  09B8  00C0               	movwf	___flmul@temp
  4731  09B9                     l2564:
  4732  09B9  0840               	movf	___flmul@temp,w
  4733  09BA  00B0               	movwf	??___flmul
  4734  09BB  01B1               	clrf	??___flmul+1
  4735  09BC  01B2               	clrf	??___flmul+2
  4736  09BD  01B3               	clrf	??___flmul+3
  4737  09BE  0833               	movf	??___flmul+3,w
  4738  09BF  00B9               	movwf	___flmul@grs+3
  4739  09C0  0832               	movf	??___flmul+2,w
  4740  09C1  00B8               	movwf	___flmul@grs+2
  4741  09C2  0831               	movf	??___flmul+1,w
  4742  09C3  00B7               	movwf	___flmul@grs+1
  4743  09C4  0830               	movf	??___flmul,w
  4744  09C5  00B6               	movwf	___flmul@grs
  4745  09C6                     l2566:
  4746  09C6  0841               	movf	___flmul@temp+1,w
  4747  09C7  00B0               	movwf	??___flmul
  4748  09C8  01B1               	clrf	??___flmul+1
  4749  09C9  01B2               	clrf	??___flmul+2
  4750  09CA  01B3               	clrf	??___flmul+3
  4751  09CB  0833               	movf	??___flmul+3,w
  4752  09CC  00BF               	movwf	___flmul@prod+3
  4753  09CD  0832               	movf	??___flmul+2,w
  4754  09CE  00BE               	movwf	___flmul@prod+2
  4755  09CF  0831               	movf	??___flmul+1,w
  4756  09D0  00BD               	movwf	___flmul@prod+1
  4757  09D1  0830               	movf	??___flmul,w
  4758  09D2  00BC               	movwf	___flmul@prod
  4759  09D3  0829               	movf	___flmul@b+1,w
  4760  09D4  00B0               	movwf	??___flmul
  4761  09D5  0830               	movf	??___flmul,w
  4762  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4763  09D7  082D               	movf	___flmul@a+1,w
  4764  09D8  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  4765  09DD  0874               	movf	?__Umul8_16+1,w
  4766  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4767  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4768  09E0  00C1               	movwf	___flmul@temp+1
  4769  09E1  0873               	movf	?__Umul8_16,w
  4770  09E2  00C0               	movwf	___flmul@temp
  4771  09E3                     l2568:
  4772  09E3  0840               	movf	___flmul@temp,w
  4773  09E4  00B0               	movwf	??___flmul
  4774  09E5  01B1               	clrf	??___flmul+1
  4775  09E6  01B2               	clrf	??___flmul+2
  4776  09E7  01B3               	clrf	??___flmul+3
  4777  09E8  0830               	movf	??___flmul,w
  4778  09E9  07B6               	addwf	___flmul@grs,f
  4779  09EA  0831               	movf	??___flmul+1,w
  4780  09EB  1103               	clrz
  4781  09EC  1803               	skipnc
  4782  09ED  3E01               	addlw	1
  4783  09EE  1903               	skipnz
  4784  09EF  29F1               	goto	u3691
  4785  09F0  07B7               	addwf	___flmul@grs+1,f
  4786  09F1                     u3691:
  4787  09F1  0832               	movf	??___flmul+2,w
  4788  09F2  1103               	clrz
  4789  09F3  1803               	skipnc
  4790  09F4  3E01               	addlw	1
  4791  09F5  1903               	skipnz
  4792  09F6  29F8               	goto	u3692
  4793  09F7  07B8               	addwf	___flmul@grs+2,f
  4794  09F8                     u3692:
  4795  09F8  0833               	movf	??___flmul+3,w
  4796  09F9  1103               	clrz
  4797  09FA  1803               	skipnc
  4798  09FB  3E01               	addlw	1
  4799  09FC  1903               	skipnz
  4800  09FD  29FF               	goto	u3693
  4801  09FE  07B9               	addwf	___flmul@grs+3,f
  4802  09FF                     u3693:
  4803  09FF                     l2570:
  4804  09FF  0841               	movf	___flmul@temp+1,w
  4805  0A00  00B0               	movwf	??___flmul
  4806  0A01  01B1               	clrf	??___flmul+1
  4807  0A02  01B2               	clrf	??___flmul+2
  4808  0A03  01B3               	clrf	??___flmul+3
  4809  0A04  0830               	movf	??___flmul,w
  4810  0A05  07BC               	addwf	___flmul@prod,f
  4811  0A06  0831               	movf	??___flmul+1,w
  4812  0A07  1103               	clrz
  4813  0A08  1803               	skipnc
  4814  0A09  3E01               	addlw	1
  4815  0A0A  1903               	skipnz
  4816  0A0B  2A0D               	goto	u3701
  4817  0A0C  07BD               	addwf	___flmul@prod+1,f
  4818  0A0D                     u3701:
  4819  0A0D  0832               	movf	??___flmul+2,w
  4820  0A0E  1103               	clrz
  4821  0A0F  1803               	skipnc
  4822  0A10  3E01               	addlw	1
  4823  0A11  1903               	skipnz
  4824  0A12  2A14               	goto	u3702
  4825  0A13  07BE               	addwf	___flmul@prod+2,f
  4826  0A14                     u3702:
  4827  0A14  0833               	movf	??___flmul+3,w
  4828  0A15  1103               	clrz
  4829  0A16  1803               	skipnc
  4830  0A17  3E01               	addlw	1
  4831  0A18  1903               	skipnz
  4832  0A19  2A1B               	goto	u3703
  4833  0A1A  07BF               	addwf	___flmul@prod+3,f
  4834  0A1B                     u3703:
  4835  0A1B  082A               	movf	___flmul@b+2,w
  4836  0A1C  00B0               	movwf	??___flmul
  4837  0A1D  0830               	movf	??___flmul,w
  4838  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  4839  0A1F  082C               	movf	___flmul@a,w
  4840  0A20  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  4841  0A25  0874               	movf	?__Umul8_16+1,w
  4842  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0A28  00C1               	movwf	___flmul@temp+1
  4845  0A29  0873               	movf	?__Umul8_16,w
  4846  0A2A  00C0               	movwf	___flmul@temp
  4847  0A2B                     l2572:
  4848  0A2B  0840               	movf	___flmul@temp,w
  4849  0A2C  00B0               	movwf	??___flmul
  4850  0A2D  01B1               	clrf	??___flmul+1
  4851  0A2E  01B2               	clrf	??___flmul+2
  4852  0A2F  01B3               	clrf	??___flmul+3
  4853  0A30  0830               	movf	??___flmul,w
  4854  0A31  07B6               	addwf	___flmul@grs,f
  4855  0A32  0831               	movf	??___flmul+1,w
  4856  0A33  1103               	clrz
  4857  0A34  1803               	skipnc
  4858  0A35  3E01               	addlw	1
  4859  0A36  1903               	skipnz
  4860  0A37  2A39               	goto	u3711
  4861  0A38  07B7               	addwf	___flmul@grs+1,f
  4862  0A39                     u3711:
  4863  0A39  0832               	movf	??___flmul+2,w
  4864  0A3A  1103               	clrz
  4865  0A3B  1803               	skipnc
  4866  0A3C  3E01               	addlw	1
  4867  0A3D  1903               	skipnz
  4868  0A3E  2A40               	goto	u3712
  4869  0A3F  07B8               	addwf	___flmul@grs+2,f
  4870  0A40                     u3712:
  4871  0A40  0833               	movf	??___flmul+3,w
  4872  0A41  1103               	clrz
  4873  0A42  1803               	skipnc
  4874  0A43  3E01               	addlw	1
  4875  0A44  1903               	skipnz
  4876  0A45  2A47               	goto	u3713
  4877  0A46  07B9               	addwf	___flmul@grs+3,f
  4878  0A47                     u3713:
  4879  0A47                     l2574:
  4880  0A47  0841               	movf	___flmul@temp+1,w
  4881  0A48  00B0               	movwf	??___flmul
  4882  0A49  01B1               	clrf	??___flmul+1
  4883  0A4A  01B2               	clrf	??___flmul+2
  4884  0A4B  01B3               	clrf	??___flmul+3
  4885  0A4C  0830               	movf	??___flmul,w
  4886  0A4D  07BC               	addwf	___flmul@prod,f
  4887  0A4E  0831               	movf	??___flmul+1,w
  4888  0A4F  1103               	clrz
  4889  0A50  1803               	skipnc
  4890  0A51  3E01               	addlw	1
  4891  0A52  1903               	skipnz
  4892  0A53  2A55               	goto	u3721
  4893  0A54  07BD               	addwf	___flmul@prod+1,f
  4894  0A55                     u3721:
  4895  0A55  0832               	movf	??___flmul+2,w
  4896  0A56  1103               	clrz
  4897  0A57  1803               	skipnc
  4898  0A58  3E01               	addlw	1
  4899  0A59  1903               	skipnz
  4900  0A5A  2A5C               	goto	u3722
  4901  0A5B  07BE               	addwf	___flmul@prod+2,f
  4902  0A5C                     u3722:
  4903  0A5C  0833               	movf	??___flmul+3,w
  4904  0A5D  1103               	clrz
  4905  0A5E  1803               	skipnc
  4906  0A5F  3E01               	addlw	1
  4907  0A60  1903               	skipnz
  4908  0A61  2A63               	goto	u3723
  4909  0A62  07BF               	addwf	___flmul@prod+3,f
  4910  0A63                     u3723:
  4911  0A63                     l2576:
  4912  0A63  3008               	movlw	8
  4913  0A64  00B0               	movwf	??___flmul
  4914  0A65                     u3735:
  4915  0A65  1003               	clrc
  4916  0A66  0DB6               	rlf	___flmul@grs,f
  4917  0A67  0DB7               	rlf	___flmul@grs+1,f
  4918  0A68  0DB8               	rlf	___flmul@grs+2,f
  4919  0A69  0DB9               	rlf	___flmul@grs+3,f
  4920  0A6A  0BB0               	decfsz	??___flmul,f
  4921  0A6B  2A65               	goto	u3735
  4922  0A6C                     l2578:
  4923  0A6C  0829               	movf	___flmul@b+1,w
  4924  0A6D  00B0               	movwf	??___flmul
  4925  0A6E  0830               	movf	??___flmul,w
  4926  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  4927  0A70  082C               	movf	___flmul@a,w
  4928  0A71  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  4929  0A76  0874               	movf	?__Umul8_16+1,w
  4930  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4931  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4932  0A79  00C1               	movwf	___flmul@temp+1
  4933  0A7A  0873               	movf	?__Umul8_16,w
  4934  0A7B  00C0               	movwf	___flmul@temp
  4935  0A7C                     l2580:
  4936  0A7C  0840               	movf	___flmul@temp,w
  4937  0A7D  00B0               	movwf	??___flmul
  4938  0A7E  0841               	movf	___flmul@temp+1,w
  4939  0A7F  00B1               	movwf	??___flmul+1
  4940  0A80  01B2               	clrf	??___flmul+2
  4941  0A81  01B3               	clrf	??___flmul+3
  4942  0A82  0830               	movf	??___flmul,w
  4943  0A83  07B6               	addwf	___flmul@grs,f
  4944  0A84  0831               	movf	??___flmul+1,w
  4945  0A85  1103               	clrz
  4946  0A86  1803               	skipnc
  4947  0A87  3E01               	addlw	1
  4948  0A88  1903               	skipnz
  4949  0A89  2A8B               	goto	u3741
  4950  0A8A  07B7               	addwf	___flmul@grs+1,f
  4951  0A8B                     u3741:
  4952  0A8B  0832               	movf	??___flmul+2,w
  4953  0A8C  1103               	clrz
  4954  0A8D  1803               	skipnc
  4955  0A8E  3E01               	addlw	1
  4956  0A8F  1903               	skipnz
  4957  0A90  2A92               	goto	u3742
  4958  0A91  07B8               	addwf	___flmul@grs+2,f
  4959  0A92                     u3742:
  4960  0A92  0833               	movf	??___flmul+3,w
  4961  0A93  1103               	clrz
  4962  0A94  1803               	skipnc
  4963  0A95  3E01               	addlw	1
  4964  0A96  1903               	skipnz
  4965  0A97  2A99               	goto	u3743
  4966  0A98  07B9               	addwf	___flmul@grs+3,f
  4967  0A99                     u3743:
  4968  0A99                     l2582:
  4969  0A99  0828               	movf	___flmul@b,w
  4970  0A9A  00B0               	movwf	??___flmul
  4971  0A9B  0830               	movf	??___flmul,w
  4972  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  4973  0A9D  082D               	movf	___flmul@a+1,w
  4974  0A9E  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  4975  0AA3  0874               	movf	?__Umul8_16+1,w
  4976  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4977  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4978  0AA6  00C1               	movwf	___flmul@temp+1
  4979  0AA7  0873               	movf	?__Umul8_16,w
  4980  0AA8  00C0               	movwf	___flmul@temp
  4981  0AA9                     l2584:
  4982  0AA9  0840               	movf	___flmul@temp,w
  4983  0AAA  00B0               	movwf	??___flmul
  4984  0AAB  0841               	movf	___flmul@temp+1,w
  4985  0AAC  00B1               	movwf	??___flmul+1
  4986  0AAD  01B2               	clrf	??___flmul+2
  4987  0AAE  01B3               	clrf	??___flmul+3
  4988  0AAF  0830               	movf	??___flmul,w
  4989  0AB0  07B6               	addwf	___flmul@grs,f
  4990  0AB1  0831               	movf	??___flmul+1,w
  4991  0AB2  1103               	clrz
  4992  0AB3  1803               	skipnc
  4993  0AB4  3E01               	addlw	1
  4994  0AB5  1903               	skipnz
  4995  0AB6  2AB8               	goto	u3751
  4996  0AB7  07B7               	addwf	___flmul@grs+1,f
  4997  0AB8                     u3751:
  4998  0AB8  0832               	movf	??___flmul+2,w
  4999  0AB9  1103               	clrz
  5000  0ABA  1803               	skipnc
  5001  0ABB  3E01               	addlw	1
  5002  0ABC  1903               	skipnz
  5003  0ABD  2ABF               	goto	u3752
  5004  0ABE  07B8               	addwf	___flmul@grs+2,f
  5005  0ABF                     u3752:
  5006  0ABF  0833               	movf	??___flmul+3,w
  5007  0AC0  1103               	clrz
  5008  0AC1  1803               	skipnc
  5009  0AC2  3E01               	addlw	1
  5010  0AC3  1903               	skipnz
  5011  0AC4  2AC6               	goto	u3753
  5012  0AC5  07B9               	addwf	___flmul@grs+3,f
  5013  0AC6                     u3753:
  5014  0AC6                     l2586:
  5015  0AC6  3008               	movlw	8
  5016  0AC7  00B0               	movwf	??___flmul
  5017  0AC8                     u3765:
  5018  0AC8  1003               	clrc
  5019  0AC9  0DB6               	rlf	___flmul@grs,f
  5020  0ACA  0DB7               	rlf	___flmul@grs+1,f
  5021  0ACB  0DB8               	rlf	___flmul@grs+2,f
  5022  0ACC  0DB9               	rlf	___flmul@grs+3,f
  5023  0ACD  0BB0               	decfsz	??___flmul,f
  5024  0ACE  2AC8               	goto	u3765
  5025  0ACF  0828               	movf	___flmul@b,w
  5026  0AD0  00B0               	movwf	??___flmul
  5027  0AD1  0830               	movf	??___flmul,w
  5028  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  5029  0AD3  082C               	movf	___flmul@a,w
  5030  0AD4  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  5031  0AD9  0874               	movf	?__Umul8_16+1,w
  5032  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5033  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5034  0ADC  00C1               	movwf	___flmul@temp+1
  5035  0ADD  0873               	movf	?__Umul8_16,w
  5036  0ADE  00C0               	movwf	___flmul@temp
  5037  0ADF                     l2588:
  5038  0ADF  0840               	movf	___flmul@temp,w
  5039  0AE0  00B0               	movwf	??___flmul
  5040  0AE1  0841               	movf	___flmul@temp+1,w
  5041  0AE2  00B1               	movwf	??___flmul+1
  5042  0AE3  01B2               	clrf	??___flmul+2
  5043  0AE4  01B3               	clrf	??___flmul+3
  5044  0AE5  0830               	movf	??___flmul,w
  5045  0AE6  07B6               	addwf	___flmul@grs,f
  5046  0AE7  0831               	movf	??___flmul+1,w
  5047  0AE8  1103               	clrz
  5048  0AE9  1803               	skipnc
  5049  0AEA  3E01               	addlw	1
  5050  0AEB  1903               	skipnz
  5051  0AEC  2AEE               	goto	u3771
  5052  0AED  07B7               	addwf	___flmul@grs+1,f
  5053  0AEE                     u3771:
  5054  0AEE  0832               	movf	??___flmul+2,w
  5055  0AEF  1103               	clrz
  5056  0AF0  1803               	skipnc
  5057  0AF1  3E01               	addlw	1
  5058  0AF2  1903               	skipnz
  5059  0AF3  2AF5               	goto	u3772
  5060  0AF4  07B8               	addwf	___flmul@grs+2,f
  5061  0AF5                     u3772:
  5062  0AF5  0833               	movf	??___flmul+3,w
  5063  0AF6  1103               	clrz
  5064  0AF7  1803               	skipnc
  5065  0AF8  3E01               	addlw	1
  5066  0AF9  1903               	skipnz
  5067  0AFA  2AFC               	goto	u3773
  5068  0AFB  07B9               	addwf	___flmul@grs+3,f
  5069  0AFC                     u3773:
  5070  0AFC                     l2590:
  5071  0AFC  0829               	movf	___flmul@b+1,w
  5072  0AFD  00B0               	movwf	??___flmul
  5073  0AFE  0830               	movf	??___flmul,w
  5074  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  5075  0B00  082E               	movf	___flmul@a+2,w
  5076  0B01  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  5077  0B06  0874               	movf	?__Umul8_16+1,w
  5078  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0B09  00C1               	movwf	___flmul@temp+1
  5081  0B0A  0873               	movf	?__Umul8_16,w
  5082  0B0B  00C0               	movwf	___flmul@temp
  5083  0B0C  0840               	movf	___flmul@temp,w
  5084  0B0D  00B0               	movwf	??___flmul
  5085  0B0E  0841               	movf	___flmul@temp+1,w
  5086  0B0F  00B1               	movwf	??___flmul+1
  5087  0B10  01B2               	clrf	??___flmul+2
  5088  0B11  01B3               	clrf	??___flmul+3
  5089  0B12  0830               	movf	??___flmul,w
  5090  0B13  07BC               	addwf	___flmul@prod,f
  5091  0B14  0831               	movf	??___flmul+1,w
  5092  0B15  1103               	clrz
  5093  0B16  1803               	skipnc
  5094  0B17  3E01               	addlw	1
  5095  0B18  1903               	skipnz
  5096  0B19  2B1B               	goto	u3781
  5097  0B1A  07BD               	addwf	___flmul@prod+1,f
  5098  0B1B                     u3781:
  5099  0B1B  0832               	movf	??___flmul+2,w
  5100  0B1C  1103               	clrz
  5101  0B1D  1803               	skipnc
  5102  0B1E  3E01               	addlw	1
  5103  0B1F  1903               	skipnz
  5104  0B20  2B22               	goto	u3782
  5105  0B21  07BE               	addwf	___flmul@prod+2,f
  5106  0B22                     u3782:
  5107  0B22  0833               	movf	??___flmul+3,w
  5108  0B23  1103               	clrz
  5109  0B24  1803               	skipnc
  5110  0B25  3E01               	addlw	1
  5111  0B26  1903               	skipnz
  5112  0B27  2B29               	goto	u3783
  5113  0B28  07BF               	addwf	___flmul@prod+3,f
  5114  0B29                     u3783:
  5115  0B29                     l2592:
  5116  0B29  082A               	movf	___flmul@b+2,w
  5117  0B2A  00B0               	movwf	??___flmul
  5118  0B2B  0830               	movf	??___flmul,w
  5119  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  5120  0B2D  082D               	movf	___flmul@a+1,w
  5121  0B2E  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  5122  0B33  0874               	movf	?__Umul8_16+1,w
  5123  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5124  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5125  0B36  00C1               	movwf	___flmul@temp+1
  5126  0B37  0873               	movf	?__Umul8_16,w
  5127  0B38  00C0               	movwf	___flmul@temp
  5128  0B39                     l2594:
  5129  0B39  0840               	movf	___flmul@temp,w
  5130  0B3A  00B0               	movwf	??___flmul
  5131  0B3B  0841               	movf	___flmul@temp+1,w
  5132  0B3C  00B1               	movwf	??___flmul+1
  5133  0B3D  01B2               	clrf	??___flmul+2
  5134  0B3E  01B3               	clrf	??___flmul+3
  5135  0B3F  0830               	movf	??___flmul,w
  5136  0B40  07BC               	addwf	___flmul@prod,f
  5137  0B41  0831               	movf	??___flmul+1,w
  5138  0B42  1103               	clrz
  5139  0B43  1803               	skipnc
  5140  0B44  3E01               	addlw	1
  5141  0B45  1903               	skipnz
  5142  0B46  2B48               	goto	u3791
  5143  0B47  07BD               	addwf	___flmul@prod+1,f
  5144  0B48                     u3791:
  5145  0B48  0832               	movf	??___flmul+2,w
  5146  0B49  1103               	clrz
  5147  0B4A  1803               	skipnc
  5148  0B4B  3E01               	addlw	1
  5149  0B4C  1903               	skipnz
  5150  0B4D  2B4F               	goto	u3792
  5151  0B4E  07BE               	addwf	___flmul@prod+2,f
  5152  0B4F                     u3792:
  5153  0B4F  0833               	movf	??___flmul+3,w
  5154  0B50  1103               	clrz
  5155  0B51  1803               	skipnc
  5156  0B52  3E01               	addlw	1
  5157  0B53  1903               	skipnz
  5158  0B54  2B56               	goto	u3793
  5159  0B55  07BF               	addwf	___flmul@prod+3,f
  5160  0B56                     u3793:
  5161  0B56  082A               	movf	___flmul@b+2,w
  5162  0B57  00B0               	movwf	??___flmul
  5163  0B58  0830               	movf	??___flmul,w
  5164  0B59  00F3               	movwf	__Umul8_16@multiplicand
  5165  0B5A  082E               	movf	___flmul@a+2,w
  5166  0B5B  120A  118A  27CE  120A  158A  	fcall	__Umul8_16
  5167  0B60  0874               	movf	?__Umul8_16+1,w
  5168  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0B63  00C1               	movwf	___flmul@temp+1
  5171  0B64  0873               	movf	?__Umul8_16,w
  5172  0B65  00C0               	movwf	___flmul@temp
  5173  0B66                     l2596:
  5174  0B66  0840               	movf	___flmul@temp,w
  5175  0B67  00B0               	movwf	??___flmul
  5176  0B68  0841               	movf	___flmul@temp+1,w
  5177  0B69  00B1               	movwf	??___flmul+1
  5178  0B6A  01B2               	clrf	??___flmul+2
  5179  0B6B  01B3               	clrf	??___flmul+3
  5180  0B6C  3008               	movlw	8
  5181  0B6D                     u3805:
  5182  0B6D  1003               	clrc
  5183  0B6E  0DB0               	rlf	??___flmul,f
  5184  0B6F  0DB1               	rlf	??___flmul+1,f
  5185  0B70  0DB2               	rlf	??___flmul+2,f
  5186  0B71  0DB3               	rlf	??___flmul+3,f
  5187  0B72                     u3800:
  5188  0B72  3EFF               	addlw	-1
  5189  0B73  1D03               	skipz
  5190  0B74  2B6D               	goto	u3805
  5191  0B75  0830               	movf	??___flmul,w
  5192  0B76  07BC               	addwf	___flmul@prod,f
  5193  0B77  0831               	movf	??___flmul+1,w
  5194  0B78  1103               	clrz
  5195  0B79  1803               	skipnc
  5196  0B7A  3E01               	addlw	1
  5197  0B7B  1903               	skipnz
  5198  0B7C  2B7E               	goto	u3811
  5199  0B7D  07BD               	addwf	___flmul@prod+1,f
  5200  0B7E                     u3811:
  5201  0B7E  0832               	movf	??___flmul+2,w
  5202  0B7F  1103               	clrz
  5203  0B80  1803               	skipnc
  5204  0B81  3E01               	addlw	1
  5205  0B82  1903               	skipnz
  5206  0B83  2B85               	goto	u3812
  5207  0B84  07BE               	addwf	___flmul@prod+2,f
  5208  0B85                     u3812:
  5209  0B85  0833               	movf	??___flmul+3,w
  5210  0B86  1103               	clrz
  5211  0B87  1803               	skipnc
  5212  0B88  3E01               	addlw	1
  5213  0B89  1903               	skipnz
  5214  0B8A  2B8C               	goto	u3813
  5215  0B8B  07BF               	addwf	___flmul@prod+3,f
  5216  0B8C                     u3813:
  5217  0B8C                     l2598:
  5218  0B8C  0836               	movf	___flmul@grs,w
  5219  0B8D  00B0               	movwf	??___flmul
  5220  0B8E  0837               	movf	___flmul@grs+1,w
  5221  0B8F  00B1               	movwf	??___flmul+1
  5222  0B90  0838               	movf	___flmul@grs+2,w
  5223  0B91  00B2               	movwf	??___flmul+2
  5224  0B92  0839               	movf	___flmul@grs+3,w
  5225  0B93  00B3               	movwf	??___flmul+3
  5226  0B94  3018               	movlw	24
  5227  0B95                     u3825:
  5228  0B95  1003               	clrc
  5229  0B96  0CB3               	rrf	??___flmul+3,f
  5230  0B97  0CB2               	rrf	??___flmul+2,f
  5231  0B98  0CB1               	rrf	??___flmul+1,f
  5232  0B99  0CB0               	rrf	??___flmul,f
  5233  0B9A                     u3820:
  5234  0B9A  3EFF               	addlw	-1
  5235  0B9B  1D03               	skipz
  5236  0B9C  2B95               	goto	u3825
  5237  0B9D  0830               	movf	??___flmul,w
  5238  0B9E  07BC               	addwf	___flmul@prod,f
  5239  0B9F  0831               	movf	??___flmul+1,w
  5240  0BA0  1103               	clrz
  5241  0BA1  1803               	skipnc
  5242  0BA2  3E01               	addlw	1
  5243  0BA3  1903               	skipnz
  5244  0BA4  2BA6               	goto	u3831
  5245  0BA5  07BD               	addwf	___flmul@prod+1,f
  5246  0BA6                     u3831:
  5247  0BA6  0832               	movf	??___flmul+2,w
  5248  0BA7  1103               	clrz
  5249  0BA8  1803               	skipnc
  5250  0BA9  3E01               	addlw	1
  5251  0BAA  1903               	skipnz
  5252  0BAB  2BAD               	goto	u3832
  5253  0BAC  07BE               	addwf	___flmul@prod+2,f
  5254  0BAD                     u3832:
  5255  0BAD  0833               	movf	??___flmul+3,w
  5256  0BAE  1103               	clrz
  5257  0BAF  1803               	skipnc
  5258  0BB0  3E01               	addlw	1
  5259  0BB1  1903               	skipnz
  5260  0BB2  2BB4               	goto	u3833
  5261  0BB3  07BF               	addwf	___flmul@prod+3,f
  5262  0BB4                     u3833:
  5263  0BB4                     l2600:
  5264  0BB4  3008               	movlw	8
  5265  0BB5  00B0               	movwf	??___flmul
  5266  0BB6                     u3845:
  5267  0BB6  1003               	clrc
  5268  0BB7  0DB6               	rlf	___flmul@grs,f
  5269  0BB8  0DB7               	rlf	___flmul@grs+1,f
  5270  0BB9  0DB8               	rlf	___flmul@grs+2,f
  5271  0BBA  0DB9               	rlf	___flmul@grs+3,f
  5272  0BBB  0BB0               	decfsz	??___flmul,f
  5273  0BBC  2BB6               	goto	u3845
  5274  0BBD                     l2602:
  5275  0BBD  083B               	movf	___flmul@bexp,w
  5276  0BBE  073A               	addwf	___flmul@aexp,w
  5277  0BBF  00B0               	movwf	??___flmul
  5278  0BC0  01B1               	clrf	??___flmul+1
  5279  0BC1  0DB1               	rlf	??___flmul+1,f
  5280  0BC2  0830               	movf	??___flmul,w
  5281  0BC3  3E82               	addlw	130
  5282  0BC4  00C0               	movwf	___flmul@temp
  5283  0BC5  0831               	movf	??___flmul+1,w
  5284  0BC6  1803               	skipnc
  5285  0BC7  3E01               	addlw	1
  5286  0BC8  3EFF               	addlw	255
  5287  0BC9  00C1               	movwf	___flmul@temp+1
  5288  0BCA  2BE8               	goto	l2614
  5289  0BCB                     l2604:
  5290  0BCB  3001               	movlw	1
  5291  0BCC  00B0               	movwf	??___flmul
  5292  0BCD                     u3855:
  5293  0BCD  1003               	clrc
  5294  0BCE  0DBC               	rlf	___flmul@prod,f
  5295  0BCF  0DBD               	rlf	___flmul@prod+1,f
  5296  0BD0  0DBE               	rlf	___flmul@prod+2,f
  5297  0BD1  0DBF               	rlf	___flmul@prod+3,f
  5298  0BD2  0BB0               	decfsz	??___flmul,f
  5299  0BD3  2BCD               	goto	u3855
  5300  0BD4                     l2606:
  5301  0BD4  1FB9               	btfss	___flmul@grs+3,7
  5302  0BD5  2BD7               	goto	u3861
  5303  0BD6  2BD8               	goto	u3860
  5304  0BD7                     u3861:
  5305  0BD7  2BD9               	goto	l2610
  5306  0BD8                     u3860:
  5307  0BD8                     l2608:
  5308  0BD8  143C               	bsf	___flmul@prod,0
  5309  0BD9                     l2610:
  5310  0BD9  3001               	movlw	1
  5311  0BDA  00B0               	movwf	??___flmul
  5312  0BDB                     u3875:
  5313  0BDB  1003               	clrc
  5314  0BDC  0DB6               	rlf	___flmul@grs,f
  5315  0BDD  0DB7               	rlf	___flmul@grs+1,f
  5316  0BDE  0DB8               	rlf	___flmul@grs+2,f
  5317  0BDF  0DB9               	rlf	___flmul@grs+3,f
  5318  0BE0  0BB0               	decfsz	??___flmul,f
  5319  0BE1  2BDB               	goto	u3875
  5320  0BE2                     l2612:
  5321  0BE2  30FF               	movlw	255
  5322  0BE3  07C0               	addwf	___flmul@temp,f
  5323  0BE4  1803               	skipnc
  5324  0BE5  0AC1               	incf	___flmul@temp+1,f
  5325  0BE6  30FF               	movlw	255
  5326  0BE7  07C1               	addwf	___flmul@temp+1,f
  5327  0BE8                     l2614:
  5328  0BE8  1FBE               	btfss	___flmul@prod+2,7
  5329  0BE9  2BEB               	goto	u3881
  5330  0BEA  2BEC               	goto	u3880
  5331  0BEB                     u3881:
  5332  0BEB  2BCB               	goto	l2604
  5333  0BEC                     u3880:
  5334  0BEC                     l2616:
  5335  0BEC  01BA               	clrf	___flmul@aexp
  5336  0BED                     l2618:
  5337  0BED  1FB9               	btfss	___flmul@grs+3,7
  5338  0BEE  2BF0               	goto	u3891
  5339  0BEF  2BF1               	goto	u3890
  5340  0BF0                     u3891:
  5341  0BF0  2C0D               	goto	l2626
  5342  0BF1                     u3890:
  5343  0BF1                     l2620:
  5344  0BF1  30FF               	movlw	255
  5345  0BF2  0536               	andwf	___flmul@grs,w
  5346  0BF3  00B0               	movwf	??___flmul
  5347  0BF4  30FF               	movlw	255
  5348  0BF5  0537               	andwf	___flmul@grs+1,w
  5349  0BF6  00B1               	movwf	??___flmul+1
  5350  0BF7  30FF               	movlw	255
  5351  0BF8  0538               	andwf	___flmul@grs+2,w
  5352  0BF9  00B2               	movwf	??___flmul+2
  5353  0BFA  307F               	movlw	127
  5354  0BFB  0539               	andwf	___flmul@grs+3,w
  5355  0BFC  00B3               	movwf	??___flmul+3
  5356  0BFD  0833               	movf	??___flmul+3,w
  5357  0BFE  0432               	iorwf	??___flmul+2,w
  5358  0BFF  0431               	iorwf	??___flmul+1,w
  5359  0C00  0430               	iorwf	??___flmul,w
  5360  0C01  1903               	skipnz
  5361  0C02  2C04               	goto	u3901
  5362  0C03  2C05               	goto	u3900
  5363  0C04                     u3901:
  5364  0C04  2C08               	goto	l764
  5365  0C05                     u3900:
  5366  0C05                     l2622:
  5367  0C05  01BA               	clrf	___flmul@aexp
  5368  0C06  0ABA               	incf	___flmul@aexp,f
  5369  0C07  2C0D               	goto	l2626
  5370  0C08                     l764:
  5371  0C08  1C3C               	btfss	___flmul@prod,0
  5372  0C09  2C0B               	goto	u3911
  5373  0C0A  2C0C               	goto	u3910
  5374  0C0B                     u3911:
  5375  0C0B  2C0D               	goto	l2626
  5376  0C0C                     u3910:
  5377  0C0C  2C05               	goto	l2622
  5378  0C0D                     l2626:
  5379  0C0D  083A               	movf	___flmul@aexp,w
  5380  0C0E  1903               	btfsc	3,2
  5381  0C0F  2C11               	goto	u3921
  5382  0C10  2C12               	goto	u3920
  5383  0C11                     u3921:
  5384  0C11  2C43               	goto	l2636
  5385  0C12                     u3920:
  5386  0C12                     l2628:
  5387  0C12  3001               	movlw	1
  5388  0C13  07BC               	addwf	___flmul@prod,f
  5389  0C14  3000               	movlw	0
  5390  0C15  1803               	skipnc
  5391  0C16  3001               	movlw	1
  5392  0C17  07BD               	addwf	___flmul@prod+1,f
  5393  0C18  3000               	movlw	0
  5394  0C19  1803               	skipnc
  5395  0C1A  3001               	movlw	1
  5396  0C1B  07BE               	addwf	___flmul@prod+2,f
  5397  0C1C  3000               	movlw	0
  5398  0C1D  1803               	skipnc
  5399  0C1E  3001               	movlw	1
  5400  0C1F  07BF               	addwf	___flmul@prod+3,f
  5401  0C20                     l2630:
  5402  0C20  1C3F               	btfss	___flmul@prod+3,0
  5403  0C21  2C23               	goto	u3931
  5404  0C22  2C24               	goto	u3930
  5405  0C23                     u3931:
  5406  0C23  2C43               	goto	l2636
  5407  0C24                     u3930:
  5408  0C24                     l2632:
  5409  0C24  083C               	movf	___flmul@prod,w
  5410  0C25  00B0               	movwf	??___flmul
  5411  0C26  083D               	movf	___flmul@prod+1,w
  5412  0C27  00B1               	movwf	??___flmul+1
  5413  0C28  083E               	movf	___flmul@prod+2,w
  5414  0C29  00B2               	movwf	??___flmul+2
  5415  0C2A  083F               	movf	___flmul@prod+3,w
  5416  0C2B  00B3               	movwf	??___flmul+3
  5417  0C2C  3001               	movlw	1
  5418  0C2D  00B4               	movwf	??___flmul+4
  5419  0C2E                     u3945:
  5420  0C2E  0D33               	rlf	??___flmul+3,w
  5421  0C2F  0CB3               	rrf	??___flmul+3,f
  5422  0C30  0CB2               	rrf	??___flmul+2,f
  5423  0C31  0CB1               	rrf	??___flmul+1,f
  5424  0C32  0CB0               	rrf	??___flmul,f
  5425  0C33                     u3940:
  5426  0C33  0BB4               	decfsz	??___flmul+4,f
  5427  0C34  2C2E               	goto	u3945
  5428  0C35  0833               	movf	??___flmul+3,w
  5429  0C36  00BF               	movwf	___flmul@prod+3
  5430  0C37  0832               	movf	??___flmul+2,w
  5431  0C38  00BE               	movwf	___flmul@prod+2
  5432  0C39  0831               	movf	??___flmul+1,w
  5433  0C3A  00BD               	movwf	___flmul@prod+1
  5434  0C3B  0830               	movf	??___flmul,w
  5435  0C3C  00BC               	movwf	___flmul@prod
  5436  0C3D                     l2634:
  5437  0C3D  3001               	movlw	1
  5438  0C3E  07C0               	addwf	___flmul@temp,f
  5439  0C3F  1803               	skipnc
  5440  0C40  0AC1               	incf	___flmul@temp+1,f
  5441  0C41  3000               	movlw	0
  5442  0C42  07C1               	addwf	___flmul@temp+1,f
  5443  0C43                     l2636:
  5444  0C43  0841               	movf	___flmul@temp+1,w
  5445  0C44  3A80               	xorlw	128
  5446  0C45  00FF               	movwf	btemp+1
  5447  0C46  3080               	movlw	128
  5448  0C47  027F               	subwf	btemp+1,w
  5449  0C48  1D03               	skipz
  5450  0C49  2C4C               	goto	u3955
  5451  0C4A  30FF               	movlw	255
  5452  0C4B  0240               	subwf	___flmul@temp,w
  5453  0C4C                     u3955:
  5454  0C4C  1C03               	skipc
  5455  0C4D  2C4F               	goto	u3951
  5456  0C4E  2C50               	goto	u3950
  5457  0C4F                     u3951:
  5458  0C4F  2C5B               	goto	l2640
  5459  0C50                     u3950:
  5460  0C50                     l2638:
  5461  0C50  307F               	movlw	127
  5462  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5463  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5464  0C53  00BF               	movwf	___flmul@prod+3
  5465  0C54  3080               	movlw	128
  5466  0C55  00BE               	movwf	___flmul@prod+2
  5467  0C56  3000               	movlw	0
  5468  0C57  00BD               	movwf	___flmul@prod+1
  5469  0C58  3000               	movlw	0
  5470  0C59  00BC               	movwf	___flmul@prod
  5471  0C5A  2C90               	goto	l770
  5472  0C5B                     l2640:
  5473  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5474  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5475  0C5D  0841               	movf	___flmul@temp+1,w
  5476  0C5E  3A80               	xorlw	128
  5477  0C5F  00FF               	movwf	btemp+1
  5478  0C60  3080               	movlw	128
  5479  0C61  027F               	subwf	btemp+1,w
  5480  0C62  1D03               	skipz
  5481  0C63  2C66               	goto	u3965
  5482  0C64  3001               	movlw	1
  5483  0C65  0240               	subwf	___flmul@temp,w
  5484  0C66                     u3965:
  5485  0C66  1803               	skipnc
  5486  0C67  2C69               	goto	u3961
  5487  0C68  2C6A               	goto	u3960
  5488  0C69                     u3961:
  5489  0C69  2C76               	goto	l2646
  5490  0C6A                     u3960:
  5491  0C6A                     l2642:
  5492  0C6A  3000               	movlw	0
  5493  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5494  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5495  0C6D  00BF               	movwf	___flmul@prod+3
  5496  0C6E  3000               	movlw	0
  5497  0C6F  00BE               	movwf	___flmul@prod+2
  5498  0C70  3000               	movlw	0
  5499  0C71  00BD               	movwf	___flmul@prod+1
  5500  0C72  3000               	movlw	0
  5501  0C73  00BC               	movwf	___flmul@prod
  5502  0C74                     l2644:
  5503  0C74  01B5               	clrf	___flmul@sign
  5504  0C75  2C90               	goto	l770
  5505  0C76                     l2646:
  5506  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5508  0C78  0840               	movf	___flmul@temp,w
  5509  0C79  00B0               	movwf	??___flmul
  5510  0C7A  0830               	movf	??___flmul,w
  5511  0C7B  00BB               	movwf	___flmul@bexp
  5512  0C7C  30FF               	movlw	255
  5513  0C7D  05BC               	andwf	___flmul@prod,f
  5514  0C7E  30FF               	movlw	255
  5515  0C7F  05BD               	andwf	___flmul@prod+1,f
  5516  0C80  307F               	movlw	127
  5517  0C81  05BE               	andwf	___flmul@prod+2,f
  5518  0C82  3000               	movlw	0
  5519  0C83  05BF               	andwf	___flmul@prod+3,f
  5520  0C84                     l2648:
  5521  0C84  1C3B               	btfss	___flmul@bexp,0
  5522  0C85  2C87               	goto	u3971
  5523  0C86  2C88               	goto	u3970
  5524  0C87                     u3971:
  5525  0C87  2C89               	goto	l2652
  5526  0C88                     u3970:
  5527  0C88                     l2650:
  5528  0C88  17BE               	bsf	___flmul@prod+2,7
  5529  0C89                     l2652:
  5530  0C89  083B               	movf	___flmul@bexp,w
  5531  0C8A  00B0               	movwf	??___flmul
  5532  0C8B  1003               	clrc
  5533  0C8C  0C30               	rrf	??___flmul,w
  5534  0C8D  00B1               	movwf	??___flmul+1
  5535  0C8E  0831               	movf	??___flmul+1,w
  5536  0C8F  00BF               	movwf	___flmul@prod+3
  5537  0C90                     l770:
  5538  0C90  0835               	movf	___flmul@sign,w
  5539  0C91  00B0               	movwf	??___flmul
  5540  0C92  0830               	movf	??___flmul,w
  5541  0C93  04BF               	iorwf	___flmul@prod+3,f
  5542  0C94                     l2654:
  5543  0C94  083F               	movf	___flmul@prod+3,w
  5544  0C95  00AB               	movwf	?___flmul+3
  5545  0C96  083E               	movf	___flmul@prod+2,w
  5546  0C97  00AA               	movwf	?___flmul+2
  5547  0C98  083D               	movf	___flmul@prod+1,w
  5548  0C99  00A9               	movwf	?___flmul+1
  5549  0C9A  083C               	movf	___flmul@prod,w
  5550  0C9B  00A8               	movwf	?___flmul
  5551  0C9C                     l758:
  5552  0C9C  0008               	return
  5553  0C9D                     __end_of___flmul:
  5554                           
  5555                           	psect	text10
  5556  07CE                     __ptext10:	
  5557 ;; *************** function __Umul8_16 *****************
  5558 ;; Defined at:
  5559 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  multiplier      1    wreg     unsigned char 
  5562 ;;  multiplicand    1    3[COMMON] unsigned char 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5565 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5566 ;;  product         2    0[BANK0 ] unsigned int 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  2    3[COMMON] unsigned int 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5576 ;;      Params:         2       0       0       0       0
  5577 ;;      Locals:         0       5       0       0       0
  5578 ;;      Temps:          2       0       0       0       0
  5579 ;;      Totals:         4       5       0       0       0
  5580 ;;Total ram usage:        9 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    1
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		___flmul
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function __Umul8_16
  5592  07CE                     __Umul8_16:
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5596                           ;__Umul8_16@multiplier stored from wreg
  5597  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  5598  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  5599  07D0  00A4               	movwf	__Umul8_16@multiplier
  5600  07D1                     l2180:
  5601  07D1  01A0               	clrf	__Umul8_16@product
  5602  07D2  01A1               	clrf	__Umul8_16@product+1
  5603  07D3                     l2182:
  5604  07D3  0873               	movf	__Umul8_16@multiplicand,w
  5605  07D4  00F5               	movwf	??__Umul8_16
  5606  07D5  01F6               	clrf	??__Umul8_16+1
  5607  07D6  0875               	movf	??__Umul8_16,w
  5608  07D7  00A2               	movwf	__Umul8_16@word_mpld
  5609  07D8  0876               	movf	??__Umul8_16+1,w
  5610  07D9  00A3               	movwf	__Umul8_16@word_mpld+1
  5611  07DA                     l2184:
  5612  07DA  1C24               	btfss	__Umul8_16@multiplier,0
  5613  07DB  2FDD               	goto	u2801
  5614  07DC  2FDE               	goto	u2800
  5615  07DD                     u2801:
  5616  07DD  2FE4               	goto	l777
  5617  07DE                     u2800:
  5618  07DE                     l2186:
  5619  07DE  0822               	movf	__Umul8_16@word_mpld,w
  5620  07DF  07A0               	addwf	__Umul8_16@product,f
  5621  07E0  1803               	skipnc
  5622  07E1  0AA1               	incf	__Umul8_16@product+1,f
  5623  07E2  0823               	movf	__Umul8_16@word_mpld+1,w
  5624  07E3  07A1               	addwf	__Umul8_16@product+1,f
  5625  07E4                     l777:
  5626  07E4  3001               	movlw	1
  5627  07E5                     u2815:
  5628  07E5  1003               	clrc
  5629  07E6  0DA2               	rlf	__Umul8_16@word_mpld,f
  5630  07E7  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5631  07E8  3EFF               	addlw	-1
  5632  07E9  1D03               	skipz
  5633  07EA  2FE5               	goto	u2815
  5634  07EB  1003               	clrc
  5635  07EC  0CA4               	rrf	__Umul8_16@multiplier,f
  5636  07ED                     l2188:
  5637  07ED  0824               	movf	__Umul8_16@multiplier,w
  5638  07EE  1D03               	btfss	3,2
  5639  07EF  2FF1               	goto	u2821
  5640  07F0  2FF2               	goto	u2820
  5641  07F1                     u2821:
  5642  07F1  2FDA               	goto	l2184
  5643  07F2                     u2820:
  5644  07F2                     l2190:
  5645  07F2  0821               	movf	__Umul8_16@product+1,w
  5646  07F3  00F4               	movwf	?__Umul8_16+1
  5647  07F4  0820               	movf	__Umul8_16@product,w
  5648  07F5  00F3               	movwf	?__Umul8_16
  5649  07F6                     l779:
  5650  07F6  0008               	return
  5651  07F7                     __end_of__Umul8_16:
  5652                           
  5653                           	psect	text11
  5654  1F43                     __ptext11:	
  5655 ;; *************** function __tdiv_to_l_ *****************
  5656 ;; Defined at:
  5657 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  f1              4    3[COMMON] float 
  5660 ;;  f2              4    7[COMMON] float 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  quot            4    4[BANK0 ] unsigned long 
  5663 ;;  exp1            1    9[BANK0 ] unsigned char 
  5664 ;;  cntr            1    8[BANK0 ] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  4    3[COMMON] unsigned long 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5674 ;;      Params:         8       0       0       0       0
  5675 ;;      Locals:         0       6       0       0       0
  5676 ;;      Temps:          0       4       0       0       0
  5677 ;;      Totals:         8      10       0       0       0
  5678 ;;Total ram usage:       18 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    1
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_sprintf
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function __tdiv_to_l_
  5690  1F43                     __tdiv_to_l_:
  5691  1F43                     l2744:	
  5692                           ;incstack = 0
  5693                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5694                           
  5695  1F43  0873               	movf	__tdiv_to_l_@f1,w
  5696  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  5697  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  5698  1F46  00A0               	movwf	??__tdiv_to_l_
  5699  1F47  0874               	movf	__tdiv_to_l_@f1+1,w
  5700  1F48  00A1               	movwf	??__tdiv_to_l_+1
  5701  1F49  0875               	movf	__tdiv_to_l_@f1+2,w
  5702  1F4A  00A2               	movwf	??__tdiv_to_l_+2
  5703  1F4B  1003               	clrc
  5704  1F4C  0D21               	rlf	??__tdiv_to_l_+1,w
  5705  1F4D  0D22               	rlf	??__tdiv_to_l_+2,w
  5706  1F4E  00A3               	movwf	??__tdiv_to_l_+3
  5707  1F4F  0823               	movf	??__tdiv_to_l_+3,w
  5708  1F50  00A9               	movwf	__tdiv_to_l_@exp1
  5709  1F51  0829               	movf	__tdiv_to_l_@exp1,w
  5710  1F52  1D03               	btfss	3,2
  5711  1F53  2F55               	goto	u4281
  5712  1F54  2F56               	goto	u4280
  5713  1F55                     u4281:
  5714  1F55  2F5F               	goto	l2750
  5715  1F56                     u4280:
  5716  1F56                     l2746:
  5717  1F56  3000               	movlw	0
  5718  1F57  00F6               	movwf	?__tdiv_to_l_+3
  5719  1F58  3000               	movlw	0
  5720  1F59  00F5               	movwf	?__tdiv_to_l_+2
  5721  1F5A  3000               	movlw	0
  5722  1F5B  00F4               	movwf	?__tdiv_to_l_+1
  5723  1F5C  3000               	movlw	0
  5724  1F5D  00F3               	movwf	?__tdiv_to_l_
  5725  1F5E  2FFF               	goto	l552
  5726  1F5F                     l2750:
  5727  1F5F  0877               	movf	__tdiv_to_l_@f2,w
  5728  1F60  00A0               	movwf	??__tdiv_to_l_
  5729  1F61  0878               	movf	__tdiv_to_l_@f2+1,w
  5730  1F62  00A1               	movwf	??__tdiv_to_l_+1
  5731  1F63  0879               	movf	__tdiv_to_l_@f2+2,w
  5732  1F64  00A2               	movwf	??__tdiv_to_l_+2
  5733  1F65  1003               	clrc
  5734  1F66  0D21               	rlf	??__tdiv_to_l_+1,w
  5735  1F67  0D22               	rlf	??__tdiv_to_l_+2,w
  5736  1F68  00A3               	movwf	??__tdiv_to_l_+3
  5737  1F69  0823               	movf	??__tdiv_to_l_+3,w
  5738  1F6A  00A8               	movwf	__tdiv_to_l_@cntr
  5739  1F6B  0828               	movf	__tdiv_to_l_@cntr,w
  5740  1F6C  1D03               	btfss	3,2
  5741  1F6D  2F6F               	goto	u4291
  5742  1F6E  2F70               	goto	u4290
  5743  1F6F                     u4291:
  5744  1F6F  2F71               	goto	l553
  5745  1F70                     u4290:
  5746  1F70  2F56               	goto	l2746
  5747  1F71                     l553:
  5748  1F71  17F4               	bsf	__tdiv_to_l_@f1+1,7
  5749  1F72                     l2756:
  5750  1F72  30FF               	movlw	255
  5751  1F73  05F3               	andwf	__tdiv_to_l_@f1,f
  5752  1F74  30FF               	movlw	255
  5753  1F75  05F4               	andwf	__tdiv_to_l_@f1+1,f
  5754  1F76  3000               	movlw	0
  5755  1F77  05F5               	andwf	__tdiv_to_l_@f1+2,f
  5756  1F78                     l2758:
  5757  1F78  17F8               	bsf	__tdiv_to_l_@f2+1,7
  5758  1F79  30FF               	movlw	255
  5759  1F7A  05F7               	andwf	__tdiv_to_l_@f2,f
  5760  1F7B  30FF               	movlw	255
  5761  1F7C  05F8               	andwf	__tdiv_to_l_@f2+1,f
  5762  1F7D  3000               	movlw	0
  5763  1F7E  05F9               	andwf	__tdiv_to_l_@f2+2,f
  5764  1F7F  3000               	movlw	0
  5765  1F80  00A7               	movwf	__tdiv_to_l_@quot+3
  5766  1F81  3000               	movlw	0
  5767  1F82  00A6               	movwf	__tdiv_to_l_@quot+2
  5768  1F83  3000               	movlw	0
  5769  1F84  00A5               	movwf	__tdiv_to_l_@quot+1
  5770  1F85  3000               	movlw	0
  5771  1F86  00A4               	movwf	__tdiv_to_l_@quot
  5772  1F87                     l2760:
  5773  1F87  307F               	movlw	127
  5774  1F88  02A9               	subwf	__tdiv_to_l_@exp1,f
  5775  1F89                     l2762:
  5776  1F89  3098               	movlw	152
  5777  1F8A  0728               	addwf	__tdiv_to_l_@cntr,w
  5778  1F8B  00A0               	movwf	??__tdiv_to_l_
  5779  1F8C  0820               	movf	??__tdiv_to_l_,w
  5780  1F8D  02A9               	subwf	__tdiv_to_l_@exp1,f
  5781  1F8E  3018               	movlw	24
  5782  1F8F  00A0               	movwf	??__tdiv_to_l_
  5783  1F90  0820               	movf	??__tdiv_to_l_,w
  5784  1F91  00A8               	movwf	__tdiv_to_l_@cntr
  5785  1F92                     l2764:
  5786  1F92  3001               	movlw	1
  5787  1F93  00A0               	movwf	??__tdiv_to_l_
  5788  1F94                     u4305:
  5789  1F94  1003               	clrc
  5790  1F95  0DA4               	rlf	__tdiv_to_l_@quot,f
  5791  1F96  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5792  1F97  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5793  1F98  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5794  1F99  0BA0               	decfsz	??__tdiv_to_l_,f
  5795  1F9A  2F94               	goto	u4305
  5796  1F9B                     l2766:
  5797  1F9B  0879               	movf	__tdiv_to_l_@f2+2,w
  5798  1F9C  0275               	subwf	__tdiv_to_l_@f1+2,w
  5799  1F9D  1D03               	skipz
  5800  1F9E  2FA5               	goto	u4315
  5801  1F9F  0878               	movf	__tdiv_to_l_@f2+1,w
  5802  1FA0  0274               	subwf	__tdiv_to_l_@f1+1,w
  5803  1FA1  1D03               	skipz
  5804  1FA2  2FA5               	goto	u4315
  5805  1FA3  0877               	movf	__tdiv_to_l_@f2,w
  5806  1FA4  0273               	subwf	__tdiv_to_l_@f1,w
  5807  1FA5                     u4315:
  5808  1FA5  1C03               	skipc
  5809  1FA6  2FA8               	goto	u4311
  5810  1FA7  2FA9               	goto	u4310
  5811  1FA8                     u4311:
  5812  1FA8  2FB4               	goto	l2772
  5813  1FA9                     u4310:
  5814  1FA9                     l2768:
  5815  1FA9  0877               	movf	__tdiv_to_l_@f2,w
  5816  1FAA  02F3               	subwf	__tdiv_to_l_@f1,f
  5817  1FAB  0878               	movf	__tdiv_to_l_@f2+1,w
  5818  1FAC  1C03               	skipc
  5819  1FAD  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  5820  1FAE  02F4               	subwf	__tdiv_to_l_@f1+1,f
  5821  1FAF  0879               	movf	__tdiv_to_l_@f2+2,w
  5822  1FB0  1C03               	skipc
  5823  1FB1  0A79               	incf	__tdiv_to_l_@f2+2,w
  5824  1FB2  02F5               	subwf	__tdiv_to_l_@f1+2,f
  5825  1FB3                     l2770:
  5826  1FB3  1424               	bsf	__tdiv_to_l_@quot,0
  5827  1FB4                     l2772:
  5828  1FB4  3001               	movlw	1
  5829  1FB5                     u4325:
  5830  1FB5  1003               	clrc
  5831  1FB6  0DF3               	rlf	__tdiv_to_l_@f1,f
  5832  1FB7  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  5833  1FB8  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  5834  1FB9  3EFF               	addlw	-1
  5835  1FBA  1D03               	skipz
  5836  1FBB  2FB5               	goto	u4325
  5837  1FBC                     l2774:
  5838  1FBC  3001               	movlw	1
  5839  1FBD  02A8               	subwf	__tdiv_to_l_@cntr,f
  5840  1FBE  1D03               	btfss	3,2
  5841  1FBF  2FC1               	goto	u4331
  5842  1FC0  2FC2               	goto	u4330
  5843  1FC1                     u4331:
  5844  1FC1  2F92               	goto	l2764
  5845  1FC2                     u4330:
  5846  1FC2                     l556:
  5847  1FC2  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5848  1FC3  2FC5               	goto	u4341
  5849  1FC4  2FC6               	goto	u4340
  5850  1FC5                     u4341:
  5851  1FC5  2FE0               	goto	l2784
  5852  1FC6                     u4340:
  5853  1FC6                     l2776:
  5854  1FC6  0829               	movf	__tdiv_to_l_@exp1,w
  5855  1FC7  3A80               	xorlw	128
  5856  1FC8  3E97               	addlw	151
  5857  1FC9  1803               	skipnc
  5858  1FCA  2FCC               	goto	u4351
  5859  1FCB  2FCD               	goto	u4350
  5860  1FCC                     u4351:
  5861  1FCC  2FCE               	goto	l2782
  5862  1FCD                     u4350:
  5863  1FCD  2F56               	goto	l2746
  5864  1FCE                     l2782:
  5865  1FCE  3001               	movlw	1
  5866  1FCF                     u4365:
  5867  1FCF  1003               	clrc
  5868  1FD0  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5869  1FD1  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5870  1FD2  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5871  1FD3  0CA4               	rrf	__tdiv_to_l_@quot,f
  5872  1FD4  3EFF               	addlw	-1
  5873  1FD5  1D03               	skipz
  5874  1FD6  2FCF               	goto	u4365
  5875  1FD7  3001               	movlw	1
  5876  1FD8  00A0               	movwf	??__tdiv_to_l_
  5877  1FD9  0820               	movf	??__tdiv_to_l_,w
  5878  1FDA  07A9               	addwf	__tdiv_to_l_@exp1,f
  5879  1FDB  1D03               	btfss	3,2
  5880  1FDC  2FDE               	goto	u4371
  5881  1FDD  2FDF               	goto	u4370
  5882  1FDE                     u4371:
  5883  1FDE  2FCE               	goto	l2782
  5884  1FDF                     u4370:
  5885  1FDF  2FF7               	goto	l2792
  5886  1FE0                     l2784:
  5887  1FE0  3018               	movlw	24
  5888  1FE1  0229               	subwf	__tdiv_to_l_@exp1,w
  5889  1FE2  1C03               	skipc
  5890  1FE3  2FE5               	goto	u4381
  5891  1FE4  2FE6               	goto	u4380
  5892  1FE5                     u4381:
  5893  1FE5  2FF2               	goto	l563
  5894  1FE6                     u4380:
  5895  1FE6  2F56               	goto	l2746
  5896  1FE7                     l2790:
  5897  1FE7  3001               	movlw	1
  5898  1FE8  00A0               	movwf	??__tdiv_to_l_
  5899  1FE9                     u4395:
  5900  1FE9  1003               	clrc
  5901  1FEA  0DA4               	rlf	__tdiv_to_l_@quot,f
  5902  1FEB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5903  1FEC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5904  1FED  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5905  1FEE  0BA0               	decfsz	??__tdiv_to_l_,f
  5906  1FEF  2FE9               	goto	u4395
  5907  1FF0  3001               	movlw	1
  5908  1FF1  02A9               	subwf	__tdiv_to_l_@exp1,f
  5909  1FF2                     l563:
  5910  1FF2  0829               	movf	__tdiv_to_l_@exp1,w
  5911  1FF3  1D03               	btfss	3,2
  5912  1FF4  2FF6               	goto	u4401
  5913  1FF5  2FF7               	goto	u4400
  5914  1FF6                     u4401:
  5915  1FF6  2FE7               	goto	l2790
  5916  1FF7                     u4400:
  5917  1FF7                     l2792:
  5918  1FF7  0827               	movf	__tdiv_to_l_@quot+3,w
  5919  1FF8  00F6               	movwf	?__tdiv_to_l_+3
  5920  1FF9  0826               	movf	__tdiv_to_l_@quot+2,w
  5921  1FFA  00F5               	movwf	?__tdiv_to_l_+2
  5922  1FFB  0825               	movf	__tdiv_to_l_@quot+1,w
  5923  1FFC  00F4               	movwf	?__tdiv_to_l_+1
  5924  1FFD  0824               	movf	__tdiv_to_l_@quot,w
  5925  1FFE  00F3               	movwf	?__tdiv_to_l_
  5926  1FFF                     l552:
  5927  1FFF  0008               	return
  5928  2000                     __end_of__tdiv_to_l_:
  5929                           
  5930                           	psect	text12
  5931  102A                     __ptext12:	
  5932 ;; *************** function __div_to_l_ *****************
  5933 ;; Defined at:
  5934 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  f1              4    3[COMMON] unsigned long 
  5937 ;;  f2              4    7[COMMON] unsigned long 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  quot            4    1[BANK0 ] unsigned long 
  5940 ;;  exp1            1    6[BANK0 ] unsigned char 
  5941 ;;  cntr            1    5[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  4    3[COMMON] unsigned long 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         8       0       0       0       0
  5952 ;;      Locals:         0       6       0       0       0
  5953 ;;      Temps:          0       1       0       0       0
  5954 ;;      Totals:         8       7       0       0       0
  5955 ;;Total ram usage:       15 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_sprintf
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           
  5966                           ;psect for function __div_to_l_
  5967  102A                     __div_to_l_:
  5968  102A                     l2796:	
  5969                           ;incstack = 0
  5970                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5971                           
  5972  102A  1003               	clrc
  5973  102B  0D75               	rlf	__div_to_l_@f1+2,w
  5974  102C  0D76               	rlf	__div_to_l_@f1+3,w
  5975  102D  1283               	bcf	3,5	;RP0=0, select bank0
  5976  102E  1303               	bcf	3,6	;RP1=0, select bank0
  5977  102F  00A0               	movwf	??__div_to_l_
  5978  1030  0820               	movf	??__div_to_l_,w
  5979  1031  00A6               	movwf	__div_to_l_@exp1
  5980  1032  0826               	movf	__div_to_l_@exp1,w
  5981  1033  1D03               	btfss	3,2
  5982  1034  2836               	goto	u4411
  5983  1035  2837               	goto	u4410
  5984  1036                     u4411:
  5985  1036  2840               	goto	l2802
  5986  1037                     u4410:
  5987  1037                     l2798:
  5988  1037  3000               	movlw	0
  5989  1038  00F6               	movwf	?__div_to_l_+3
  5990  1039  3000               	movlw	0
  5991  103A  00F5               	movwf	?__div_to_l_+2
  5992  103B  3000               	movlw	0
  5993  103C  00F4               	movwf	?__div_to_l_+1
  5994  103D  3000               	movlw	0
  5995  103E  00F3               	movwf	?__div_to_l_
  5996  103F  28E7               	goto	l505
  5997  1040                     l2802:
  5998  1040  1003               	clrc
  5999  1041  0D79               	rlf	__div_to_l_@f2+2,w
  6000  1042  0D7A               	rlf	__div_to_l_@f2+3,w
  6001  1043  00A0               	movwf	??__div_to_l_
  6002  1044  0820               	movf	??__div_to_l_,w
  6003  1045  00A5               	movwf	__div_to_l_@cntr
  6004  1046  0825               	movf	__div_to_l_@cntr,w
  6005  1047  1D03               	btfss	3,2
  6006  1048  284A               	goto	u4421
  6007  1049  284B               	goto	u4420
  6008  104A                     u4421:
  6009  104A  284C               	goto	l506
  6010  104B                     u4420:
  6011  104B  2837               	goto	l2798
  6012  104C                     l506:
  6013  104C  17F5               	bsf	__div_to_l_@f1+2,7
  6014  104D                     l2808:
  6015  104D  30FF               	movlw	255
  6016  104E  05F3               	andwf	__div_to_l_@f1,f
  6017  104F  30FF               	movlw	255
  6018  1050  05F4               	andwf	__div_to_l_@f1+1,f
  6019  1051  30FF               	movlw	255
  6020  1052  05F5               	andwf	__div_to_l_@f1+2,f
  6021  1053  3000               	movlw	0
  6022  1054  05F6               	andwf	__div_to_l_@f1+3,f
  6023  1055                     l2810:
  6024  1055  17F9               	bsf	__div_to_l_@f2+2,7
  6025  1056  30FF               	movlw	255
  6026  1057  05F7               	andwf	__div_to_l_@f2,f
  6027  1058  30FF               	movlw	255
  6028  1059  05F8               	andwf	__div_to_l_@f2+1,f
  6029  105A  30FF               	movlw	255
  6030  105B  05F9               	andwf	__div_to_l_@f2+2,f
  6031  105C  3000               	movlw	0
  6032  105D  05FA               	andwf	__div_to_l_@f2+3,f
  6033  105E  3000               	movlw	0
  6034  105F  00A4               	movwf	__div_to_l_@quot+3
  6035  1060  3000               	movlw	0
  6036  1061  00A3               	movwf	__div_to_l_@quot+2
  6037  1062  3000               	movlw	0
  6038  1063  00A2               	movwf	__div_to_l_@quot+1
  6039  1064  3000               	movlw	0
  6040  1065  00A1               	movwf	__div_to_l_@quot
  6041  1066                     l2812:
  6042  1066  307F               	movlw	127
  6043  1067  02A6               	subwf	__div_to_l_@exp1,f
  6044  1068                     l2814:
  6045  1068  30A0               	movlw	160
  6046  1069  0725               	addwf	__div_to_l_@cntr,w
  6047  106A  00A0               	movwf	??__div_to_l_
  6048  106B  0820               	movf	??__div_to_l_,w
  6049  106C  02A6               	subwf	__div_to_l_@exp1,f
  6050  106D  3020               	movlw	32
  6051  106E  00A0               	movwf	??__div_to_l_
  6052  106F  0820               	movf	??__div_to_l_,w
  6053  1070  00A5               	movwf	__div_to_l_@cntr
  6054  1071                     l2816:
  6055  1071  3001               	movlw	1
  6056  1072  00A0               	movwf	??__div_to_l_
  6057  1073                     u4435:
  6058  1073  1003               	clrc
  6059  1074  0DA1               	rlf	__div_to_l_@quot,f
  6060  1075  0DA2               	rlf	__div_to_l_@quot+1,f
  6061  1076  0DA3               	rlf	__div_to_l_@quot+2,f
  6062  1077  0DA4               	rlf	__div_to_l_@quot+3,f
  6063  1078  0BA0               	decfsz	??__div_to_l_,f
  6064  1079  2873               	goto	u4435
  6065  107A                     l2818:
  6066  107A  087A               	movf	__div_to_l_@f2+3,w
  6067  107B  0276               	subwf	__div_to_l_@f1+3,w
  6068  107C  1D03               	skipz
  6069  107D  2888               	goto	u4445
  6070  107E  0879               	movf	__div_to_l_@f2+2,w
  6071  107F  0275               	subwf	__div_to_l_@f1+2,w
  6072  1080  1D03               	skipz
  6073  1081  2888               	goto	u4445
  6074  1082  0878               	movf	__div_to_l_@f2+1,w
  6075  1083  0274               	subwf	__div_to_l_@f1+1,w
  6076  1084  1D03               	skipz
  6077  1085  2888               	goto	u4445
  6078  1086  0877               	movf	__div_to_l_@f2,w
  6079  1087  0273               	subwf	__div_to_l_@f1,w
  6080  1088                     u4445:
  6081  1088  1C03               	skipc
  6082  1089  288B               	goto	u4441
  6083  108A  288C               	goto	u4440
  6084  108B                     u4441:
  6085  108B  289B               	goto	l2824
  6086  108C                     u4440:
  6087  108C                     l2820:
  6088  108C  0877               	movf	__div_to_l_@f2,w
  6089  108D  02F3               	subwf	__div_to_l_@f1,f
  6090  108E  0878               	movf	__div_to_l_@f2+1,w
  6091  108F  1C03               	skipc
  6092  1090  0F78               	incfsz	__div_to_l_@f2+1,w
  6093  1091  02F4               	subwf	__div_to_l_@f1+1,f
  6094  1092  0879               	movf	__div_to_l_@f2+2,w
  6095  1093  1C03               	skipc
  6096  1094  0F79               	incfsz	__div_to_l_@f2+2,w
  6097  1095  02F5               	subwf	__div_to_l_@f1+2,f
  6098  1096  087A               	movf	__div_to_l_@f2+3,w
  6099  1097  1C03               	skipc
  6100  1098  0F7A               	incfsz	__div_to_l_@f2+3,w
  6101  1099  02F6               	subwf	__div_to_l_@f1+3,f
  6102  109A                     l2822:
  6103  109A  1421               	bsf	__div_to_l_@quot,0
  6104  109B                     l2824:
  6105  109B  3001               	movlw	1
  6106  109C  00A0               	movwf	??__div_to_l_
  6107  109D                     u4455:
  6108  109D  1003               	clrc
  6109  109E  0DF3               	rlf	__div_to_l_@f1,f
  6110  109F  0DF4               	rlf	__div_to_l_@f1+1,f
  6111  10A0  0DF5               	rlf	__div_to_l_@f1+2,f
  6112  10A1  0DF6               	rlf	__div_to_l_@f1+3,f
  6113  10A2  0BA0               	decfsz	??__div_to_l_,f
  6114  10A3  289D               	goto	u4455
  6115  10A4                     l2826:
  6116  10A4  3001               	movlw	1
  6117  10A5  02A5               	subwf	__div_to_l_@cntr,f
  6118  10A6  1D03               	btfss	3,2
  6119  10A7  28A9               	goto	u4461
  6120  10A8  28AA               	goto	u4460
  6121  10A9                     u4461:
  6122  10A9  2871               	goto	l2816
  6123  10AA                     u4460:
  6124  10AA                     l509:
  6125  10AA  1FA6               	btfss	__div_to_l_@exp1,7
  6126  10AB  28AD               	goto	u4471
  6127  10AC  28AE               	goto	u4470
  6128  10AD                     u4471:
  6129  10AD  28C8               	goto	l2836
  6130  10AE                     u4470:
  6131  10AE                     l2828:
  6132  10AE  0826               	movf	__div_to_l_@exp1,w
  6133  10AF  3A80               	xorlw	128
  6134  10B0  3E9F               	addlw	159
  6135  10B1  1803               	skipnc
  6136  10B2  28B4               	goto	u4481
  6137  10B3  28B5               	goto	u4480
  6138  10B4                     u4481:
  6139  10B4  28B6               	goto	l2834
  6140  10B5                     u4480:
  6141  10B5  2837               	goto	l2798
  6142  10B6                     l2834:
  6143  10B6  3001               	movlw	1
  6144  10B7                     u4495:
  6145  10B7  1003               	clrc
  6146  10B8  0CA4               	rrf	__div_to_l_@quot+3,f
  6147  10B9  0CA3               	rrf	__div_to_l_@quot+2,f
  6148  10BA  0CA2               	rrf	__div_to_l_@quot+1,f
  6149  10BB  0CA1               	rrf	__div_to_l_@quot,f
  6150  10BC  3EFF               	addlw	-1
  6151  10BD  1D03               	skipz
  6152  10BE  28B7               	goto	u4495
  6153  10BF  3001               	movlw	1
  6154  10C0  00A0               	movwf	??__div_to_l_
  6155  10C1  0820               	movf	??__div_to_l_,w
  6156  10C2  07A6               	addwf	__div_to_l_@exp1,f
  6157  10C3  1D03               	btfss	3,2
  6158  10C4  28C6               	goto	u4501
  6159  10C5  28C7               	goto	u4500
  6160  10C6                     u4501:
  6161  10C6  28B6               	goto	l2834
  6162  10C7                     u4500:
  6163  10C7  28DF               	goto	l2844
  6164  10C8                     l2836:
  6165  10C8  3020               	movlw	32
  6166  10C9  0226               	subwf	__div_to_l_@exp1,w
  6167  10CA  1C03               	skipc
  6168  10CB  28CD               	goto	u4511
  6169  10CC  28CE               	goto	u4510
  6170  10CD                     u4511:
  6171  10CD  28DA               	goto	l516
  6172  10CE                     u4510:
  6173  10CE  2837               	goto	l2798
  6174  10CF                     l2842:
  6175  10CF  3001               	movlw	1
  6176  10D0  00A0               	movwf	??__div_to_l_
  6177  10D1                     u4525:
  6178  10D1  1003               	clrc
  6179  10D2  0DA1               	rlf	__div_to_l_@quot,f
  6180  10D3  0DA2               	rlf	__div_to_l_@quot+1,f
  6181  10D4  0DA3               	rlf	__div_to_l_@quot+2,f
  6182  10D5  0DA4               	rlf	__div_to_l_@quot+3,f
  6183  10D6  0BA0               	decfsz	??__div_to_l_,f
  6184  10D7  28D1               	goto	u4525
  6185  10D8  3001               	movlw	1
  6186  10D9  02A6               	subwf	__div_to_l_@exp1,f
  6187  10DA                     l516:
  6188  10DA  0826               	movf	__div_to_l_@exp1,w
  6189  10DB  1D03               	btfss	3,2
  6190  10DC  28DE               	goto	u4531
  6191  10DD  28DF               	goto	u4530
  6192  10DE                     u4531:
  6193  10DE  28CF               	goto	l2842
  6194  10DF                     u4530:
  6195  10DF                     l2844:
  6196  10DF  0824               	movf	__div_to_l_@quot+3,w
  6197  10E0  00F6               	movwf	?__div_to_l_+3
  6198  10E1  0823               	movf	__div_to_l_@quot+2,w
  6199  10E2  00F5               	movwf	?__div_to_l_+2
  6200  10E3  0822               	movf	__div_to_l_@quot+1,w
  6201  10E4  00F4               	movwf	?__div_to_l_+1
  6202  10E5  0821               	movf	__div_to_l_@quot,w
  6203  10E6  00F3               	movwf	?__div_to_l_
  6204  10E7                     l505:
  6205  10E7  0008               	return
  6206  10E8                     __end_of__div_to_l_:
  6207                           
  6208                           	psect	text13
  6209  1E87                     __ptext13:	
  6210 ;; *************** function ___xxtofl *****************
  6211 ;; Defined at:
  6212 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  sign            1    wreg     unsigned char 
  6215 ;;  val             4    3[COMMON] long 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  sign            1    0[BANK0 ] unsigned char 
  6218 ;;  arg             4    2[BANK0 ] unsigned long 
  6219 ;;  exp             1    1[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  4    3[COMMON] unsigned char 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6229 ;;      Params:         4       0       0       0       0
  6230 ;;      Locals:         0       6       0       0       0
  6231 ;;      Temps:          4       0       0       0       0
  6232 ;;      Totals:         8       6       0       0       0
  6233 ;;Total ram usage:       14 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    1
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_main
  6240 ;;		_sprintf
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function ___xxtofl
  6246  1E87                     ___xxtofl:
  6247                           
  6248                           ;incstack = 0
  6249                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6250                           ;___xxtofl@sign stored from wreg
  6251  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  6252  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  6253  1E89  00A0               	movwf	___xxtofl@sign
  6254  1E8A                     l2988:
  6255  1E8A  0820               	movf	___xxtofl@sign,w
  6256  1E8B  1903               	btfsc	3,2
  6257  1E8C  2E8E               	goto	u4921
  6258  1E8D  2E8F               	goto	u4920
  6259  1E8E                     u4921:
  6260  1E8E  2EA3               	goto	l2994
  6261  1E8F                     u4920:
  6262  1E8F                     l2990:
  6263  1E8F  1FF6               	btfss	___xxtofl@val+3,7
  6264  1E90  2E92               	goto	u4931
  6265  1E91  2E93               	goto	u4930
  6266  1E92                     u4931:
  6267  1E92  2EA3               	goto	l2994
  6268  1E93                     u4930:
  6269  1E93                     l2992:
  6270  1E93  0973               	comf	___xxtofl@val,w
  6271  1E94  00A2               	movwf	___xxtofl@arg
  6272  1E95  0974               	comf	___xxtofl@val+1,w
  6273  1E96  00A3               	movwf	___xxtofl@arg+1
  6274  1E97  0975               	comf	___xxtofl@val+2,w
  6275  1E98  00A4               	movwf	___xxtofl@arg+2
  6276  1E99  0976               	comf	___xxtofl@val+3,w
  6277  1E9A  00A5               	movwf	___xxtofl@arg+3
  6278  1E9B  0AA2               	incf	___xxtofl@arg,f
  6279  1E9C  1903               	skipnz
  6280  1E9D  0AA3               	incf	___xxtofl@arg+1,f
  6281  1E9E  1903               	skipnz
  6282  1E9F  0AA4               	incf	___xxtofl@arg+2,f
  6283  1EA0  1903               	skipnz
  6284  1EA1  0AA5               	incf	___xxtofl@arg+3,f
  6285  1EA2  2EAB               	goto	l802
  6286  1EA3                     l2994:
  6287  1EA3  0876               	movf	___xxtofl@val+3,w
  6288  1EA4  00A5               	movwf	___xxtofl@arg+3
  6289  1EA5  0875               	movf	___xxtofl@val+2,w
  6290  1EA6  00A4               	movwf	___xxtofl@arg+2
  6291  1EA7  0874               	movf	___xxtofl@val+1,w
  6292  1EA8  00A3               	movwf	___xxtofl@arg+1
  6293  1EA9  0873               	movf	___xxtofl@val,w
  6294  1EAA  00A2               	movwf	___xxtofl@arg
  6295  1EAB                     l802:
  6296  1EAB  0876               	movf	___xxtofl@val+3,w
  6297  1EAC  0475               	iorwf	___xxtofl@val+2,w
  6298  1EAD  0474               	iorwf	___xxtofl@val+1,w
  6299  1EAE  0473               	iorwf	___xxtofl@val,w
  6300  1EAF  1D03               	skipz
  6301  1EB0  2EB2               	goto	u4941
  6302  1EB1  2EB3               	goto	u4940
  6303  1EB2                     u4941:
  6304  1EB2  2EBC               	goto	l3000
  6305  1EB3                     u4940:
  6306  1EB3                     l2996:
  6307  1EB3  3000               	movlw	0
  6308  1EB4  00F6               	movwf	?___xxtofl+3
  6309  1EB5  3000               	movlw	0
  6310  1EB6  00F5               	movwf	?___xxtofl+2
  6311  1EB7  3000               	movlw	0
  6312  1EB8  00F4               	movwf	?___xxtofl+1
  6313  1EB9  3000               	movlw	0
  6314  1EBA  00F3               	movwf	?___xxtofl
  6315  1EBB  2F42               	goto	l804
  6316  1EBC                     l3000:
  6317  1EBC  3096               	movlw	150
  6318  1EBD  00F7               	movwf	??___xxtofl
  6319  1EBE  0877               	movf	??___xxtofl,w
  6320  1EBF  00A1               	movwf	___xxtofl@exp
  6321  1EC0  2ECE               	goto	l3004
  6322  1EC1                     l3002:
  6323  1EC1  3001               	movlw	1
  6324  1EC2  00F7               	movwf	??___xxtofl
  6325  1EC3  0877               	movf	??___xxtofl,w
  6326  1EC4  07A1               	addwf	___xxtofl@exp,f
  6327  1EC5  3001               	movlw	1
  6328  1EC6                     u4955:
  6329  1EC6  1003               	clrc
  6330  1EC7  0CA5               	rrf	___xxtofl@arg+3,f
  6331  1EC8  0CA4               	rrf	___xxtofl@arg+2,f
  6332  1EC9  0CA3               	rrf	___xxtofl@arg+1,f
  6333  1ECA  0CA2               	rrf	___xxtofl@arg,f
  6334  1ECB  3EFF               	addlw	-1
  6335  1ECC  1D03               	skipz
  6336  1ECD  2EC6               	goto	u4955
  6337  1ECE                     l3004:
  6338  1ECE  30FE               	movlw	254
  6339  1ECF  0525               	andwf	___xxtofl@arg+3,w
  6340  1ED0  1D03               	btfss	3,2
  6341  1ED1  2ED3               	goto	u4961
  6342  1ED2  2ED4               	goto	u4960
  6343  1ED3                     u4961:
  6344  1ED3  2EC1               	goto	l3002
  6345  1ED4                     u4960:
  6346  1ED4  2EF0               	goto	l808
  6347  1ED5                     l3006:
  6348  1ED5  3001               	movlw	1
  6349  1ED6  00F7               	movwf	??___xxtofl
  6350  1ED7  0877               	movf	??___xxtofl,w
  6351  1ED8  07A1               	addwf	___xxtofl@exp,f
  6352  1ED9                     l3008:
  6353  1ED9  3001               	movlw	1
  6354  1EDA  07A2               	addwf	___xxtofl@arg,f
  6355  1EDB  3000               	movlw	0
  6356  1EDC  1803               	skipnc
  6357  1EDD  3001               	movlw	1
  6358  1EDE  07A3               	addwf	___xxtofl@arg+1,f
  6359  1EDF  3000               	movlw	0
  6360  1EE0  1803               	skipnc
  6361  1EE1  3001               	movlw	1
  6362  1EE2  07A4               	addwf	___xxtofl@arg+2,f
  6363  1EE3  3000               	movlw	0
  6364  1EE4  1803               	skipnc
  6365  1EE5  3001               	movlw	1
  6366  1EE6  07A5               	addwf	___xxtofl@arg+3,f
  6367  1EE7                     l3010:
  6368  1EE7  3001               	movlw	1
  6369  1EE8                     u4975:
  6370  1EE8  1003               	clrc
  6371  1EE9  0CA5               	rrf	___xxtofl@arg+3,f
  6372  1EEA  0CA4               	rrf	___xxtofl@arg+2,f
  6373  1EEB  0CA3               	rrf	___xxtofl@arg+1,f
  6374  1EEC  0CA2               	rrf	___xxtofl@arg,f
  6375  1EED  3EFF               	addlw	-1
  6376  1EEE  1D03               	skipz
  6377  1EEF  2EE8               	goto	u4975
  6378  1EF0                     l808:
  6379  1EF0  30FF               	movlw	255
  6380  1EF1  0525               	andwf	___xxtofl@arg+3,w
  6381  1EF2  1D03               	btfss	3,2
  6382  1EF3  2EF5               	goto	u4981
  6383  1EF4  2EF6               	goto	u4980
  6384  1EF5                     u4981:
  6385  1EF5  2ED5               	goto	l3006
  6386  1EF6                     u4980:
  6387  1EF6  2F02               	goto	l3014
  6388  1EF7                     l3012:
  6389  1EF7  3001               	movlw	1
  6390  1EF8  02A1               	subwf	___xxtofl@exp,f
  6391  1EF9  3001               	movlw	1
  6392  1EFA  00F7               	movwf	??___xxtofl
  6393  1EFB                     u4995:
  6394  1EFB  1003               	clrc
  6395  1EFC  0DA2               	rlf	___xxtofl@arg,f
  6396  1EFD  0DA3               	rlf	___xxtofl@arg+1,f
  6397  1EFE  0DA4               	rlf	___xxtofl@arg+2,f
  6398  1EFF  0DA5               	rlf	___xxtofl@arg+3,f
  6399  1F00  0BF7               	decfsz	??___xxtofl,f
  6400  1F01  2EFB               	goto	u4995
  6401  1F02                     l3014:
  6402  1F02  1BA4               	btfsc	___xxtofl@arg+2,7
  6403  1F03  2F05               	goto	u5001
  6404  1F04  2F06               	goto	u5000
  6405  1F05                     u5001:
  6406  1F05  2F0C               	goto	l815
  6407  1F06                     u5000:
  6408  1F06                     l3016:
  6409  1F06  3002               	movlw	2
  6410  1F07  0221               	subwf	___xxtofl@exp,w
  6411  1F08  1803               	skipnc
  6412  1F09  2F0B               	goto	u5011
  6413  1F0A  2F0C               	goto	u5010
  6414  1F0B                     u5011:
  6415  1F0B  2EF7               	goto	l3012
  6416  1F0C                     u5010:
  6417  1F0C                     l815:
  6418  1F0C  1821               	btfsc	___xxtofl@exp,0
  6419  1F0D  2F0F               	goto	u5021
  6420  1F0E  2F10               	goto	u5020
  6421  1F0F                     u5021:
  6422  1F0F  2F18               	goto	l816
  6423  1F10                     u5020:
  6424  1F10                     l3018:
  6425  1F10  30FF               	movlw	255
  6426  1F11  05A2               	andwf	___xxtofl@arg,f
  6427  1F12  30FF               	movlw	255
  6428  1F13  05A3               	andwf	___xxtofl@arg+1,f
  6429  1F14  307F               	movlw	127
  6430  1F15  05A4               	andwf	___xxtofl@arg+2,f
  6431  1F16  30FF               	movlw	255
  6432  1F17  05A5               	andwf	___xxtofl@arg+3,f
  6433  1F18                     l816:
  6434  1F18  1003               	clrc
  6435  1F19  0CA1               	rrf	___xxtofl@exp,f
  6436  1F1A                     l3020:
  6437  1F1A  0821               	movf	___xxtofl@exp,w
  6438  1F1B  00F7               	movwf	??___xxtofl
  6439  1F1C  01F8               	clrf	??___xxtofl+1
  6440  1F1D  01F9               	clrf	??___xxtofl+2
  6441  1F1E  01FA               	clrf	??___xxtofl+3
  6442  1F1F  3018               	movlw	24
  6443  1F20                     u5035:
  6444  1F20  1003               	clrc
  6445  1F21  0DF7               	rlf	??___xxtofl,f
  6446  1F22  0DF8               	rlf	??___xxtofl+1,f
  6447  1F23  0DF9               	rlf	??___xxtofl+2,f
  6448  1F24  0DFA               	rlf	??___xxtofl+3,f
  6449  1F25                     u5030:
  6450  1F25  3EFF               	addlw	-1
  6451  1F26  1D03               	skipz
  6452  1F27  2F20               	goto	u5035
  6453  1F28  0877               	movf	??___xxtofl,w
  6454  1F29  04A2               	iorwf	___xxtofl@arg,f
  6455  1F2A  0878               	movf	??___xxtofl+1,w
  6456  1F2B  04A3               	iorwf	___xxtofl@arg+1,f
  6457  1F2C  0879               	movf	??___xxtofl+2,w
  6458  1F2D  04A4               	iorwf	___xxtofl@arg+2,f
  6459  1F2E  087A               	movf	??___xxtofl+3,w
  6460  1F2F  04A5               	iorwf	___xxtofl@arg+3,f
  6461  1F30                     l3022:
  6462  1F30  0820               	movf	___xxtofl@sign,w
  6463  1F31  1903               	btfsc	3,2
  6464  1F32  2F34               	goto	u5041
  6465  1F33  2F35               	goto	u5040
  6466  1F34                     u5041:
  6467  1F34  2F3A               	goto	l3028
  6468  1F35                     u5040:
  6469  1F35                     l3024:
  6470  1F35  1FF6               	btfss	___xxtofl@val+3,7
  6471  1F36  2F38               	goto	u5051
  6472  1F37  2F39               	goto	u5050
  6473  1F38                     u5051:
  6474  1F38  2F3A               	goto	l3028
  6475  1F39                     u5050:
  6476  1F39                     l3026:
  6477  1F39  17A5               	bsf	___xxtofl@arg+3,7
  6478  1F3A                     l3028:
  6479  1F3A  0825               	movf	___xxtofl@arg+3,w
  6480  1F3B  00F6               	movwf	?___xxtofl+3
  6481  1F3C  0824               	movf	___xxtofl@arg+2,w
  6482  1F3D  00F5               	movwf	?___xxtofl+2
  6483  1F3E  0823               	movf	___xxtofl@arg+1,w
  6484  1F3F  00F4               	movwf	?___xxtofl+1
  6485  1F40  0822               	movf	___xxtofl@arg,w
  6486  1F41  00F3               	movwf	?___xxtofl
  6487  1F42                     l804:
  6488  1F42  0008               	return
  6489  1F43                     __end_of___xxtofl:
  6490                           
  6491                           	psect	text14
  6492  1005                     __ptext14:	
  6493 ;; *************** function ___wmul *****************
  6494 ;; Defined at:
  6495 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  multiplier      2    3[COMMON] unsigned int 
  6498 ;;  multiplicand    2    5[COMMON] unsigned int 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  product         2    7[COMMON] unsigned int 
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  2    3[COMMON] unsigned int 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6510 ;;      Params:         4       0       0       0       0
  6511 ;;      Locals:         2       0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0
  6513 ;;      Totals:         6       0       0       0       0
  6514 ;;Total ram usage:        6 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    1
  6517 ;; This function calls:
  6518 ;;		Nothing
  6519 ;; This function is called by:
  6520 ;;		_sprintf
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           
  6525                           ;psect for function ___wmul
  6526  1005                     ___wmul:
  6527  1005                     l2848:	
  6528                           ;incstack = 0
  6529                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6530                           
  6531  1005  01F7               	clrf	___wmul@product
  6532  1006  01F8               	clrf	___wmul@product+1
  6533  1007                     l2850:
  6534  1007  1C73               	btfss	___wmul@multiplier,0
  6535  1008  280A               	goto	u4541
  6536  1009  280B               	goto	u4540
  6537  100A                     u4541:
  6538  100A  2811               	goto	l335
  6539  100B                     u4540:
  6540  100B                     l2852:
  6541  100B  0875               	movf	___wmul@multiplicand,w
  6542  100C  07F7               	addwf	___wmul@product,f
  6543  100D  1803               	skipnc
  6544  100E  0AF8               	incf	___wmul@product+1,f
  6545  100F  0876               	movf	___wmul@multiplicand+1,w
  6546  1010  07F8               	addwf	___wmul@product+1,f
  6547  1011                     l335:
  6548  1011  3001               	movlw	1
  6549  1012                     u4555:
  6550  1012  1003               	clrc
  6551  1013  0DF5               	rlf	___wmul@multiplicand,f
  6552  1014  0DF6               	rlf	___wmul@multiplicand+1,f
  6553  1015  3EFF               	addlw	-1
  6554  1016  1D03               	skipz
  6555  1017  2812               	goto	u4555
  6556  1018                     l2854:
  6557  1018  3001               	movlw	1
  6558  1019                     u4565:
  6559  1019  1003               	clrc
  6560  101A  0CF4               	rrf	___wmul@multiplier+1,f
  6561  101B  0CF3               	rrf	___wmul@multiplier,f
  6562  101C  3EFF               	addlw	-1
  6563  101D  1D03               	skipz
  6564  101E  2819               	goto	u4565
  6565  101F                     l2856:
  6566  101F  0873               	movf	___wmul@multiplier,w
  6567  1020  0474               	iorwf	___wmul@multiplier+1,w
  6568  1021  1D03               	btfss	3,2
  6569  1022  2824               	goto	u4571
  6570  1023  2825               	goto	u4570
  6571  1024                     u4571:
  6572  1024  2807               	goto	l2850
  6573  1025                     u4570:
  6574  1025                     l2858:
  6575  1025  0878               	movf	___wmul@product+1,w
  6576  1026  00F4               	movwf	?___wmul+1
  6577  1027  0877               	movf	___wmul@product,w
  6578  1028  00F3               	movwf	?___wmul
  6579  1029                     l337:
  6580  1029  0008               	return
  6581  102A                     __end_of___wmul:
  6582                           
  6583                           	psect	text15
  6584  1C40                     __ptext15:	
  6585 ;; *************** function ___llmod *****************
  6586 ;; Defined at:
  6587 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  divisor         4    3[COMMON] unsigned long 
  6590 ;;  dividend        4    7[COMMON] unsigned long 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  counter         1    1[BANK0 ] unsigned char 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  4    3[COMMON] unsigned long 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6602 ;;      Params:         8       0       0       0       0
  6603 ;;      Locals:         0       1       0       0       0
  6604 ;;      Temps:          0       1       0       0       0
  6605 ;;      Totals:         8       2       0       0       0
  6606 ;;Total ram usage:       10 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    1
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_sprintf
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           
  6617                           ;psect for function ___llmod
  6618  1C40                     ___llmod:
  6619  1C40                     l2962:	
  6620                           ;incstack = 0
  6621                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6622                           
  6623  1C40  0876               	movf	___llmod@divisor+3,w
  6624  1C41  0475               	iorwf	___llmod@divisor+2,w
  6625  1C42  0474               	iorwf	___llmod@divisor+1,w
  6626  1C43  0473               	iorwf	___llmod@divisor,w
  6627  1C44  1903               	skipnz
  6628  1C45  2C47               	goto	u4861
  6629  1C46  2C48               	goto	u4860
  6630  1C47                     u4861:
  6631  1C47  2C8D               	goto	l2978
  6632  1C48                     u4860:
  6633  1C48                     l2964:
  6634  1C48  1283               	bcf	3,5	;RP0=0, select bank0
  6635  1C49  1303               	bcf	3,6	;RP1=0, select bank0
  6636  1C4A  01A1               	clrf	___llmod@counter
  6637  1C4B  0AA1               	incf	___llmod@counter,f
  6638  1C4C  2C5A               	goto	l2968
  6639  1C4D                     l2966:
  6640  1C4D  3001               	movlw	1
  6641  1C4E  00A0               	movwf	??___llmod
  6642  1C4F                     u4875:
  6643  1C4F  1003               	clrc
  6644  1C50  0DF3               	rlf	___llmod@divisor,f
  6645  1C51  0DF4               	rlf	___llmod@divisor+1,f
  6646  1C52  0DF5               	rlf	___llmod@divisor+2,f
  6647  1C53  0DF6               	rlf	___llmod@divisor+3,f
  6648  1C54  0BA0               	decfsz	??___llmod,f
  6649  1C55  2C4F               	goto	u4875
  6650  1C56  3001               	movlw	1
  6651  1C57  00A0               	movwf	??___llmod
  6652  1C58  0820               	movf	??___llmod,w
  6653  1C59  07A1               	addwf	___llmod@counter,f
  6654  1C5A                     l2968:
  6655  1C5A  1FF6               	btfss	___llmod@divisor+3,7
  6656  1C5B  2C5D               	goto	u4881
  6657  1C5C  2C5E               	goto	u4880
  6658  1C5D                     u4881:
  6659  1C5D  2C4D               	goto	l2966
  6660  1C5E                     u4880:
  6661  1C5E                     l2970:
  6662  1C5E  0876               	movf	___llmod@divisor+3,w
  6663  1C5F  027A               	subwf	___llmod@dividend+3,w
  6664  1C60  1D03               	skipz
  6665  1C61  2C6C               	goto	u4895
  6666  1C62  0875               	movf	___llmod@divisor+2,w
  6667  1C63  0279               	subwf	___llmod@dividend+2,w
  6668  1C64  1D03               	skipz
  6669  1C65  2C6C               	goto	u4895
  6670  1C66  0874               	movf	___llmod@divisor+1,w
  6671  1C67  0278               	subwf	___llmod@dividend+1,w
  6672  1C68  1D03               	skipz
  6673  1C69  2C6C               	goto	u4895
  6674  1C6A  0873               	movf	___llmod@divisor,w
  6675  1C6B  0277               	subwf	___llmod@dividend,w
  6676  1C6C                     u4895:
  6677  1C6C  1C03               	skipc
  6678  1C6D  2C6F               	goto	u4891
  6679  1C6E  2C70               	goto	u4890
  6680  1C6F                     u4891:
  6681  1C6F  2C7E               	goto	l2974
  6682  1C70                     u4890:
  6683  1C70                     l2972:
  6684  1C70  0873               	movf	___llmod@divisor,w
  6685  1C71  02F7               	subwf	___llmod@dividend,f
  6686  1C72  0874               	movf	___llmod@divisor+1,w
  6687  1C73  1C03               	skipc
  6688  1C74  0F74               	incfsz	___llmod@divisor+1,w
  6689  1C75  02F8               	subwf	___llmod@dividend+1,f
  6690  1C76  0875               	movf	___llmod@divisor+2,w
  6691  1C77  1C03               	skipc
  6692  1C78  0F75               	incfsz	___llmod@divisor+2,w
  6693  1C79  02F9               	subwf	___llmod@dividend+2,f
  6694  1C7A  0876               	movf	___llmod@divisor+3,w
  6695  1C7B  1C03               	skipc
  6696  1C7C  0F76               	incfsz	___llmod@divisor+3,w
  6697  1C7D  02FA               	subwf	___llmod@dividend+3,f
  6698  1C7E                     l2974:
  6699  1C7E  3001               	movlw	1
  6700  1C7F                     u4905:
  6701  1C7F  1003               	clrc
  6702  1C80  0CF6               	rrf	___llmod@divisor+3,f
  6703  1C81  0CF5               	rrf	___llmod@divisor+2,f
  6704  1C82  0CF4               	rrf	___llmod@divisor+1,f
  6705  1C83  0CF3               	rrf	___llmod@divisor,f
  6706  1C84  3EFF               	addlw	-1
  6707  1C85  1D03               	skipz
  6708  1C86  2C7F               	goto	u4905
  6709  1C87                     l2976:
  6710  1C87  3001               	movlw	1
  6711  1C88  02A1               	subwf	___llmod@counter,f
  6712  1C89  1D03               	btfss	3,2
  6713  1C8A  2C8C               	goto	u4911
  6714  1C8B  2C8D               	goto	u4910
  6715  1C8C                     u4911:
  6716  1C8C  2C5E               	goto	l2970
  6717  1C8D                     u4910:
  6718  1C8D                     l2978:
  6719  1C8D  087A               	movf	___llmod@dividend+3,w
  6720  1C8E  00F6               	movwf	?___llmod+3
  6721  1C8F  0879               	movf	___llmod@dividend+2,w
  6722  1C90  00F5               	movwf	?___llmod+2
  6723  1C91  0878               	movf	___llmod@dividend+1,w
  6724  1C92  00F4               	movwf	?___llmod+1
  6725  1C93  0877               	movf	___llmod@dividend,w
  6726  1C94  00F3               	movwf	?___llmod
  6727  1C95                     l591:
  6728  1C95  0008               	return
  6729  1C96                     __end_of___llmod:
  6730                           
  6731                           	psect	text16
  6732  1C96                     __ptext16:	
  6733 ;; *************** function ___lldiv *****************
  6734 ;; Defined at:
  6735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  divisor         4    3[COMMON] unsigned long 
  6738 ;;  dividend        4    7[COMMON] unsigned long 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  quotient        4    1[BANK0 ] unsigned long 
  6741 ;;  counter         1    5[BANK0 ] unsigned char 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  4    3[COMMON] unsigned long 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6751 ;;      Params:         8       0       0       0       0
  6752 ;;      Locals:         0       5       0       0       0
  6753 ;;      Temps:          0       1       0       0       0
  6754 ;;      Totals:         8       6       0       0       0
  6755 ;;Total ram usage:       14 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    1
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_sprintf
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           
  6766                           ;psect for function ___lldiv
  6767  1C96                     ___lldiv:
  6768  1C96                     l2862:	
  6769                           ;incstack = 0
  6770                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6771                           
  6772  1C96  3000               	movlw	0
  6773  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  6774  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  6775  1C99  00A4               	movwf	___lldiv@quotient+3
  6776  1C9A  3000               	movlw	0
  6777  1C9B  00A3               	movwf	___lldiv@quotient+2
  6778  1C9C  3000               	movlw	0
  6779  1C9D  00A2               	movwf	___lldiv@quotient+1
  6780  1C9E  3000               	movlw	0
  6781  1C9F  00A1               	movwf	___lldiv@quotient
  6782  1CA0  0876               	movf	___lldiv@divisor+3,w
  6783  1CA1  0475               	iorwf	___lldiv@divisor+2,w
  6784  1CA2  0474               	iorwf	___lldiv@divisor+1,w
  6785  1CA3  0473               	iorwf	___lldiv@divisor,w
  6786  1CA4  1903               	skipnz
  6787  1CA5  2CA7               	goto	u4581
  6788  1CA6  2CA8               	goto	u4580
  6789  1CA7                     u4581:
  6790  1CA7  2CF5               	goto	l2882
  6791  1CA8                     u4580:
  6792  1CA8                     l2864:
  6793  1CA8  01A5               	clrf	___lldiv@counter
  6794  1CA9  0AA5               	incf	___lldiv@counter,f
  6795  1CAA  2CB8               	goto	l2868
  6796  1CAB                     l2866:
  6797  1CAB  3001               	movlw	1
  6798  1CAC  00A0               	movwf	??___lldiv
  6799  1CAD                     u4595:
  6800  1CAD  1003               	clrc
  6801  1CAE  0DF3               	rlf	___lldiv@divisor,f
  6802  1CAF  0DF4               	rlf	___lldiv@divisor+1,f
  6803  1CB0  0DF5               	rlf	___lldiv@divisor+2,f
  6804  1CB1  0DF6               	rlf	___lldiv@divisor+3,f
  6805  1CB2  0BA0               	decfsz	??___lldiv,f
  6806  1CB3  2CAD               	goto	u4595
  6807  1CB4  3001               	movlw	1
  6808  1CB5  00A0               	movwf	??___lldiv
  6809  1CB6  0820               	movf	??___lldiv,w
  6810  1CB7  07A5               	addwf	___lldiv@counter,f
  6811  1CB8                     l2868:
  6812  1CB8  1FF6               	btfss	___lldiv@divisor+3,7
  6813  1CB9  2CBB               	goto	u4601
  6814  1CBA  2CBC               	goto	u4600
  6815  1CBB                     u4601:
  6816  1CBB  2CAB               	goto	l2866
  6817  1CBC                     u4600:
  6818  1CBC                     l2870:
  6819  1CBC  3001               	movlw	1
  6820  1CBD  00A0               	movwf	??___lldiv
  6821  1CBE                     u4615:
  6822  1CBE  1003               	clrc
  6823  1CBF  0DA1               	rlf	___lldiv@quotient,f
  6824  1CC0  0DA2               	rlf	___lldiv@quotient+1,f
  6825  1CC1  0DA3               	rlf	___lldiv@quotient+2,f
  6826  1CC2  0DA4               	rlf	___lldiv@quotient+3,f
  6827  1CC3  0BA0               	decfsz	??___lldiv,f
  6828  1CC4  2CBE               	goto	u4615
  6829  1CC5                     l2872:
  6830  1CC5  0876               	movf	___lldiv@divisor+3,w
  6831  1CC6  027A               	subwf	___lldiv@dividend+3,w
  6832  1CC7  1D03               	skipz
  6833  1CC8  2CD3               	goto	u4625
  6834  1CC9  0875               	movf	___lldiv@divisor+2,w
  6835  1CCA  0279               	subwf	___lldiv@dividend+2,w
  6836  1CCB  1D03               	skipz
  6837  1CCC  2CD3               	goto	u4625
  6838  1CCD  0874               	movf	___lldiv@divisor+1,w
  6839  1CCE  0278               	subwf	___lldiv@dividend+1,w
  6840  1CCF  1D03               	skipz
  6841  1CD0  2CD3               	goto	u4625
  6842  1CD1  0873               	movf	___lldiv@divisor,w
  6843  1CD2  0277               	subwf	___lldiv@dividend,w
  6844  1CD3                     u4625:
  6845  1CD3  1C03               	skipc
  6846  1CD4  2CD6               	goto	u4621
  6847  1CD5  2CD7               	goto	u4620
  6848  1CD6                     u4621:
  6849  1CD6  2CE6               	goto	l2878
  6850  1CD7                     u4620:
  6851  1CD7                     l2874:
  6852  1CD7  0873               	movf	___lldiv@divisor,w
  6853  1CD8  02F7               	subwf	___lldiv@dividend,f
  6854  1CD9  0874               	movf	___lldiv@divisor+1,w
  6855  1CDA  1C03               	skipc
  6856  1CDB  0F74               	incfsz	___lldiv@divisor+1,w
  6857  1CDC  02F8               	subwf	___lldiv@dividend+1,f
  6858  1CDD  0875               	movf	___lldiv@divisor+2,w
  6859  1CDE  1C03               	skipc
  6860  1CDF  0F75               	incfsz	___lldiv@divisor+2,w
  6861  1CE0  02F9               	subwf	___lldiv@dividend+2,f
  6862  1CE1  0876               	movf	___lldiv@divisor+3,w
  6863  1CE2  1C03               	skipc
  6864  1CE3  0F76               	incfsz	___lldiv@divisor+3,w
  6865  1CE4  02FA               	subwf	___lldiv@dividend+3,f
  6866  1CE5                     l2876:
  6867  1CE5  1421               	bsf	___lldiv@quotient,0
  6868  1CE6                     l2878:
  6869  1CE6  3001               	movlw	1
  6870  1CE7                     u4635:
  6871  1CE7  1003               	clrc
  6872  1CE8  0CF6               	rrf	___lldiv@divisor+3,f
  6873  1CE9  0CF5               	rrf	___lldiv@divisor+2,f
  6874  1CEA  0CF4               	rrf	___lldiv@divisor+1,f
  6875  1CEB  0CF3               	rrf	___lldiv@divisor,f
  6876  1CEC  3EFF               	addlw	-1
  6877  1CED  1D03               	skipz
  6878  1CEE  2CE7               	goto	u4635
  6879  1CEF                     l2880:
  6880  1CEF  3001               	movlw	1
  6881  1CF0  02A5               	subwf	___lldiv@counter,f
  6882  1CF1  1D03               	btfss	3,2
  6883  1CF2  2CF4               	goto	u4641
  6884  1CF3  2CF5               	goto	u4640
  6885  1CF4                     u4641:
  6886  1CF4  2CBC               	goto	l2870
  6887  1CF5                     u4640:
  6888  1CF5                     l2882:
  6889  1CF5  0824               	movf	___lldiv@quotient+3,w
  6890  1CF6  00F6               	movwf	?___lldiv+3
  6891  1CF7  0823               	movf	___lldiv@quotient+2,w
  6892  1CF8  00F5               	movwf	?___lldiv+2
  6893  1CF9  0822               	movf	___lldiv@quotient+1,w
  6894  1CFA  00F4               	movwf	?___lldiv+1
  6895  1CFB  0821               	movf	___lldiv@quotient,w
  6896  1CFC  00F3               	movwf	?___lldiv
  6897  1CFD                     l371:
  6898  1CFD  0008               	return
  6899  1CFE                     __end_of___lldiv:
  6900                           
  6901                           	psect	text17
  6902  1D67                     __ptext17:	
  6903 ;; *************** function ___fltol *****************
  6904 ;; Defined at:
  6905 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  f1              4   53[BANK0 ] unsigned long 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;  exp1            1   63[BANK0 ] unsigned char 
  6910 ;;  sign1           1   62[BANK0 ] unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  4   53[BANK0 ] long 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6920 ;;      Params:         0       4       0       0       0
  6921 ;;      Locals:         0       2       0       0       0
  6922 ;;      Temps:          0       5       0       0       0
  6923 ;;      Totals:         0      11       0       0       0
  6924 ;;Total ram usage:       11 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    1
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_main
  6931 ;;		_sprintf
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           
  6936                           ;psect for function ___fltol
  6937  1D67                     ___fltol:
  6938  1D67                     l2926:	
  6939                           ;incstack = 0
  6940                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6941                           
  6942  1D67  1003               	clrc
  6943  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  6944  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  6945  1D6A  0D57               	rlf	___fltol@f1+2,w
  6946  1D6B  0D58               	rlf	___fltol@f1+3,w
  6947  1D6C  00D9               	movwf	??___fltol
  6948  1D6D  0859               	movf	??___fltol,w
  6949  1D6E  00DF               	movwf	___fltol@exp1
  6950  1D6F  085F               	movf	___fltol@exp1,w
  6951  1D70  1D03               	btfss	3,2
  6952  1D71  2D73               	goto	u4761
  6953  1D72  2D74               	goto	u4760
  6954  1D73                     u4761:
  6955  1D73  2D7D               	goto	l2932
  6956  1D74                     u4760:
  6957  1D74                     l2928:
  6958  1D74  3000               	movlw	0
  6959  1D75  00D8               	movwf	?___fltol+3
  6960  1D76  3000               	movlw	0
  6961  1D77  00D7               	movwf	?___fltol+2
  6962  1D78  3000               	movlw	0
  6963  1D79  00D6               	movwf	?___fltol+1
  6964  1D7A  3000               	movlw	0
  6965  1D7B  00D5               	movwf	?___fltol
  6966  1D7C  2DE2               	goto	l538
  6967  1D7D                     l2932:
  6968  1D7D  0855               	movf	___fltol@f1,w
  6969  1D7E  00D9               	movwf	??___fltol
  6970  1D7F  0856               	movf	___fltol@f1+1,w
  6971  1D80  00DA               	movwf	??___fltol+1
  6972  1D81  0857               	movf	___fltol@f1+2,w
  6973  1D82  00DB               	movwf	??___fltol+2
  6974  1D83  0858               	movf	___fltol@f1+3,w
  6975  1D84  00DC               	movwf	??___fltol+3
  6976  1D85  301F               	movlw	31
  6977  1D86                     u4775:
  6978  1D86  1003               	clrc
  6979  1D87  0CDC               	rrf	??___fltol+3,f
  6980  1D88  0CDB               	rrf	??___fltol+2,f
  6981  1D89  0CDA               	rrf	??___fltol+1,f
  6982  1D8A  0CD9               	rrf	??___fltol,f
  6983  1D8B                     u4770:
  6984  1D8B  3EFF               	addlw	-1
  6985  1D8C  1D03               	skipz
  6986  1D8D  2D86               	goto	u4775
  6987  1D8E  0859               	movf	??___fltol,w
  6988  1D8F  00DD               	movwf	??___fltol+4
  6989  1D90  085D               	movf	??___fltol+4,w
  6990  1D91  00DE               	movwf	___fltol@sign1
  6991  1D92                     l2934:
  6992  1D92  17D7               	bsf	___fltol@f1+2,7
  6993  1D93                     l2936:
  6994  1D93  30FF               	movlw	255
  6995  1D94  05D5               	andwf	___fltol@f1,f
  6996  1D95  30FF               	movlw	255
  6997  1D96  05D6               	andwf	___fltol@f1+1,f
  6998  1D97  30FF               	movlw	255
  6999  1D98  05D7               	andwf	___fltol@f1+2,f
  7000  1D99  3000               	movlw	0
  7001  1D9A  05D8               	andwf	___fltol@f1+3,f
  7002  1D9B                     l2938:
  7003  1D9B  3096               	movlw	150
  7004  1D9C  02DF               	subwf	___fltol@exp1,f
  7005  1D9D                     l2940:
  7006  1D9D  1FDF               	btfss	___fltol@exp1,7
  7007  1D9E  2DA0               	goto	u4781
  7008  1D9F  2DA1               	goto	u4780
  7009  1DA0                     u4781:
  7010  1DA0  2DBB               	goto	l2950
  7011  1DA1                     u4780:
  7012  1DA1                     l2942:
  7013  1DA1  085F               	movf	___fltol@exp1,w
  7014  1DA2  3A80               	xorlw	128
  7015  1DA3  3E97               	addlw	151
  7016  1DA4  1803               	skipnc
  7017  1DA5  2DA7               	goto	u4791
  7018  1DA6  2DA8               	goto	u4790
  7019  1DA7                     u4791:
  7020  1DA7  2DA9               	goto	l2948
  7021  1DA8                     u4790:
  7022  1DA8  2D74               	goto	l2928
  7023  1DA9                     l2948:
  7024  1DA9  3001               	movlw	1
  7025  1DAA                     u4805:
  7026  1DAA  1003               	clrc
  7027  1DAB  0CD8               	rrf	___fltol@f1+3,f
  7028  1DAC  0CD7               	rrf	___fltol@f1+2,f
  7029  1DAD  0CD6               	rrf	___fltol@f1+1,f
  7030  1DAE  0CD5               	rrf	___fltol@f1,f
  7031  1DAF  3EFF               	addlw	-1
  7032  1DB0  1D03               	skipz
  7033  1DB1  2DAA               	goto	u4805
  7034  1DB2  3001               	movlw	1
  7035  1DB3  00D9               	movwf	??___fltol
  7036  1DB4  0859               	movf	??___fltol,w
  7037  1DB5  07DF               	addwf	___fltol@exp1,f
  7038  1DB6  1D03               	btfss	3,2
  7039  1DB7  2DB9               	goto	u4811
  7040  1DB8  2DBA               	goto	u4810
  7041  1DB9                     u4811:
  7042  1DB9  2DA9               	goto	l2948
  7043  1DBA                     u4810:
  7044  1DBA  2DD2               	goto	l2958
  7045  1DBB                     l2950:
  7046  1DBB  3020               	movlw	32
  7047  1DBC  025F               	subwf	___fltol@exp1,w
  7048  1DBD  1C03               	skipc
  7049  1DBE  2DC0               	goto	u4821
  7050  1DBF  2DC1               	goto	u4820
  7051  1DC0                     u4821:
  7052  1DC0  2DCD               	goto	l545
  7053  1DC1                     u4820:
  7054  1DC1  2D74               	goto	l2928
  7055  1DC2                     l2956:
  7056  1DC2  3001               	movlw	1
  7057  1DC3  00D9               	movwf	??___fltol
  7058  1DC4                     u4835:
  7059  1DC4  1003               	clrc
  7060  1DC5  0DD5               	rlf	___fltol@f1,f
  7061  1DC6  0DD6               	rlf	___fltol@f1+1,f
  7062  1DC7  0DD7               	rlf	___fltol@f1+2,f
  7063  1DC8  0DD8               	rlf	___fltol@f1+3,f
  7064  1DC9  0BD9               	decfsz	??___fltol,f
  7065  1DCA  2DC4               	goto	u4835
  7066  1DCB  3001               	movlw	1
  7067  1DCC  02DF               	subwf	___fltol@exp1,f
  7068  1DCD                     l545:
  7069  1DCD  085F               	movf	___fltol@exp1,w
  7070  1DCE  1D03               	btfss	3,2
  7071  1DCF  2DD1               	goto	u4841
  7072  1DD0  2DD2               	goto	u4840
  7073  1DD1                     u4841:
  7074  1DD1  2DC2               	goto	l2956
  7075  1DD2                     u4840:
  7076  1DD2                     l2958:
  7077  1DD2  085E               	movf	___fltol@sign1,w
  7078  1DD3  1903               	btfsc	3,2
  7079  1DD4  2DD6               	goto	u4851
  7080  1DD5  2DD7               	goto	u4850
  7081  1DD6                     u4851:
  7082  1DD6  2DE2               	goto	l548
  7083  1DD7                     u4850:
  7084  1DD7                     l2960:
  7085  1DD7  09D5               	comf	___fltol@f1,f
  7086  1DD8  09D6               	comf	___fltol@f1+1,f
  7087  1DD9  09D7               	comf	___fltol@f1+2,f
  7088  1DDA  09D8               	comf	___fltol@f1+3,f
  7089  1DDB  0AD5               	incf	___fltol@f1,f
  7090  1DDC  1903               	skipnz
  7091  1DDD  0AD6               	incf	___fltol@f1+1,f
  7092  1DDE  1903               	skipnz
  7093  1DDF  0AD7               	incf	___fltol@f1+2,f
  7094  1DE0  1903               	skipnz
  7095  1DE1  0AD8               	incf	___fltol@f1+3,f
  7096  1DE2                     l548:
  7097  1DE2                     l538:
  7098  1DE2  0008               	return
  7099  1DE3                     __end_of___fltol:
  7100                           
  7101                           	psect	text18
  7102  1BF0                     __ptext18:	
  7103 ;; *************** function ___flsub *****************
  7104 ;; Defined at:
  7105 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  a               4    0[BANK1 ] long 
  7108 ;;  b               4    4[BANK1 ] long 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  4    0[BANK1 ] long 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7120 ;;      Params:         0       0       8       0       0
  7121 ;;      Locals:         0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0
  7123 ;;      Totals:         0       0       8       0       0
  7124 ;;Total ram usage:        8 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    2
  7127 ;; This function calls:
  7128 ;;		___fladd
  7129 ;; This function is called by:
  7130 ;;		_main
  7131 ;;		_sprintf
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           
  7136                           ;psect for function ___flsub
  7137  1BF0                     ___flsub:
  7138  1BF0                     l2982:	
  7139                           ;incstack = 0
  7140                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7141                           
  7142  1BF0  3080               	movlw	128
  7143  1BF1  1683               	bsf	3,5	;RP0=1, select bank1
  7144  1BF2  1303               	bcf	3,6	;RP1=0, select bank1
  7145  1BF3  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7146  1BF4                     l2984:
  7147  1BF4  0827               	movf	(___flsub@b+3)^(0+128),w
  7148  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
  7149  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
  7150  1BF7  00D9               	movwf	___fladd@b+3
  7151  1BF8  1683               	bsf	3,5	;RP0=1, select bank1
  7152  1BF9  1303               	bcf	3,6	;RP1=0, select bank1
  7153  1BFA  0826               	movf	(___flsub@b+2)^(0+128),w
  7154  1BFB  1283               	bcf	3,5	;RP0=0, select bank0
  7155  1BFC  1303               	bcf	3,6	;RP1=0, select bank0
  7156  1BFD  00D8               	movwf	___fladd@b+2
  7157  1BFE  1683               	bsf	3,5	;RP0=1, select bank1
  7158  1BFF  1303               	bcf	3,6	;RP1=0, select bank1
  7159  1C00  0825               	movf	(___flsub@b+1)^(0+128),w
  7160  1C01  1283               	bcf	3,5	;RP0=0, select bank0
  7161  1C02  1303               	bcf	3,6	;RP1=0, select bank0
  7162  1C03  00D7               	movwf	___fladd@b+1
  7163  1C04  1683               	bsf	3,5	;RP0=1, select bank1
  7164  1C05  1303               	bcf	3,6	;RP1=0, select bank1
  7165  1C06  0824               	movf	___flsub@b^(0+128),w
  7166  1C07  1283               	bcf	3,5	;RP0=0, select bank0
  7167  1C08  1303               	bcf	3,6	;RP1=0, select bank0
  7168  1C09  00D6               	movwf	___fladd@b
  7169  1C0A  1683               	bsf	3,5	;RP0=1, select bank1
  7170  1C0B  1303               	bcf	3,6	;RP1=0, select bank1
  7171  1C0C  0823               	movf	(___flsub@a+3)^(0+128),w
  7172  1C0D  1283               	bcf	3,5	;RP0=0, select bank0
  7173  1C0E  1303               	bcf	3,6	;RP1=0, select bank0
  7174  1C0F  00DD               	movwf	___fladd@a+3
  7175  1C10  1683               	bsf	3,5	;RP0=1, select bank1
  7176  1C11  1303               	bcf	3,6	;RP1=0, select bank1
  7177  1C12  0822               	movf	(___flsub@a+2)^(0+128),w
  7178  1C13  1283               	bcf	3,5	;RP0=0, select bank0
  7179  1C14  1303               	bcf	3,6	;RP1=0, select bank0
  7180  1C15  00DC               	movwf	___fladd@a+2
  7181  1C16  1683               	bsf	3,5	;RP0=1, select bank1
  7182  1C17  1303               	bcf	3,6	;RP1=0, select bank1
  7183  1C18  0821               	movf	(___flsub@a+1)^(0+128),w
  7184  1C19  1283               	bcf	3,5	;RP0=0, select bank0
  7185  1C1A  1303               	bcf	3,6	;RP1=0, select bank0
  7186  1C1B  00DB               	movwf	___fladd@a+1
  7187  1C1C  1683               	bsf	3,5	;RP0=1, select bank1
  7188  1C1D  1303               	bcf	3,6	;RP1=0, select bank1
  7189  1C1E  0820               	movf	___flsub@a^(0+128),w
  7190  1C1F  1283               	bcf	3,5	;RP0=0, select bank0
  7191  1C20  1303               	bcf	3,6	;RP1=0, select bank0
  7192  1C21  00DA               	movwf	___fladd@a
  7193  1C22  160A  118A  2273  160A  158A  	fcall	___fladd
  7194  1C27  1283               	bcf	3,5	;RP0=0, select bank0
  7195  1C28  1303               	bcf	3,6	;RP1=0, select bank0
  7196  1C29  0859               	movf	?___fladd+3,w
  7197  1C2A  1683               	bsf	3,5	;RP0=1, select bank1
  7198  1C2B  1303               	bcf	3,6	;RP1=0, select bank1
  7199  1C2C  00A3               	movwf	(?___flsub+3)^(0+128)
  7200  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7201  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7202  1C2F  0858               	movf	?___fladd+2,w
  7203  1C30  1683               	bsf	3,5	;RP0=1, select bank1
  7204  1C31  1303               	bcf	3,6	;RP1=0, select bank1
  7205  1C32  00A2               	movwf	(?___flsub+2)^(0+128)
  7206  1C33  1283               	bcf	3,5	;RP0=0, select bank0
  7207  1C34  1303               	bcf	3,6	;RP1=0, select bank0
  7208  1C35  0857               	movf	?___fladd+1,w
  7209  1C36  1683               	bsf	3,5	;RP0=1, select bank1
  7210  1C37  1303               	bcf	3,6	;RP1=0, select bank1
  7211  1C38  00A1               	movwf	(?___flsub+1)^(0+128)
  7212  1C39  1283               	bcf	3,5	;RP0=0, select bank0
  7213  1C3A  1303               	bcf	3,6	;RP1=0, select bank0
  7214  1C3B  0856               	movf	?___fladd,w
  7215  1C3C  1683               	bsf	3,5	;RP0=1, select bank1
  7216  1C3D  1303               	bcf	3,6	;RP1=0, select bank1
  7217  1C3E  00A0               	movwf	?___flsub^(0+128)
  7218  1C3F                     l708:
  7219  1C3F  0008               	return
  7220  1C40                     __end_of___flsub:
  7221                           
  7222                           	psect	text19
  7223  1273                     __ptext19:	
  7224 ;; *************** function ___fladd *****************
  7225 ;; Defined at:
  7226 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  b               4   54[BANK0 ] long 
  7229 ;;  a               4   58[BANK0 ] long 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  grs             1   73[BANK0 ] unsigned char 
  7232 ;;  bexp            1   72[BANK0 ] unsigned char 
  7233 ;;  aexp            1   71[BANK0 ] unsigned char 
  7234 ;;  signs           1   70[BANK0 ] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  4   54[BANK0 ] unsigned char 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0, btemp+1
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7244 ;;      Params:         0       8       0       0       0
  7245 ;;      Locals:         0       4       0       0       0
  7246 ;;      Temps:          0       8       0       0       0
  7247 ;;      Totals:         0      20       0       0       0
  7248 ;;Total ram usage:       20 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    1
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_main
  7255 ;;		_sprintf
  7256 ;;		___flsub
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           
  7261                           ;psect for function ___fladd
  7262  1273                     ___fladd:
  7263  1273                     l2324:	
  7264                           ;incstack = 0
  7265                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7266                           
  7267  1273  1283               	bcf	3,5	;RP0=0, select bank0
  7268  1274  1303               	bcf	3,6	;RP1=0, select bank0
  7269  1275  0859               	movf	___fladd@b+3,w
  7270  1276  3980               	andlw	128
  7271  1277  00DE               	movwf	??___fladd
  7272  1278  085E               	movf	??___fladd,w
  7273  1279  00E6               	movwf	___fladd@signs
  7274  127A                     l2326:
  7275  127A  0859               	movf	___fladd@b+3,w
  7276  127B  00DE               	movwf	??___fladd
  7277  127C  075E               	addwf	??___fladd,w
  7278  127D  00DF               	movwf	??___fladd+1
  7279  127E  085F               	movf	??___fladd+1,w
  7280  127F  00E8               	movwf	___fladd@bexp
  7281  1280                     l2328:
  7282  1280  1FD8               	btfss	___fladd@b+2,7
  7283  1281  2A83               	goto	u3151
  7284  1282  2A84               	goto	u3150
  7285  1283                     u3151:
  7286  1283  2A85               	goto	l2332
  7287  1284                     u3150:
  7288  1284                     l2330:
  7289  1284  1468               	bsf	___fladd@bexp,0
  7290  1285                     l2332:
  7291  1285  0868               	movf	___fladd@bexp,w
  7292  1286  1903               	btfsc	3,2
  7293  1287  2A89               	goto	u3161
  7294  1288  2A8A               	goto	u3160
  7295  1289                     u3161:
  7296  1289  2A9A               	goto	l2342
  7297  128A                     u3160:
  7298  128A                     l2334:
  7299  128A  0A68               	incf	___fladd@bexp,w
  7300  128B  1D03               	btfss	3,2
  7301  128C  2A8E               	goto	u3171
  7302  128D  2A8F               	goto	u3170
  7303  128E                     u3171:
  7304  128E  2A97               	goto	l2338
  7305  128F                     u3170:
  7306  128F                     l2336:
  7307  128F  3000               	movlw	0
  7308  1290  00D9               	movwf	___fladd@b+3
  7309  1291  3000               	movlw	0
  7310  1292  00D8               	movwf	___fladd@b+2
  7311  1293  3000               	movlw	0
  7312  1294  00D7               	movwf	___fladd@b+1
  7313  1295  3000               	movlw	0
  7314  1296  00D6               	movwf	___fladd@b
  7315  1297                     l2338:
  7316  1297  17D8               	bsf	___fladd@b+2,7
  7317  1298                     l2340:
  7318  1298  01D9               	clrf	___fladd@b+3
  7319  1299  2AA2               	goto	l2344
  7320  129A                     l2342:
  7321  129A  3000               	movlw	0
  7322  129B  00D9               	movwf	___fladd@b+3
  7323  129C  3000               	movlw	0
  7324  129D  00D8               	movwf	___fladd@b+2
  7325  129E  3000               	movlw	0
  7326  129F  00D7               	movwf	___fladd@b+1
  7327  12A0  3000               	movlw	0
  7328  12A1  00D6               	movwf	___fladd@b
  7329  12A2                     l2344:
  7330  12A2  085D               	movf	___fladd@a+3,w
  7331  12A3  3980               	andlw	128
  7332  12A4  00DE               	movwf	??___fladd
  7333  12A5  085E               	movf	??___fladd,w
  7334  12A6  00E7               	movwf	___fladd@aexp
  7335  12A7                     l2346:
  7336  12A7  0867               	movf	___fladd@aexp,w
  7337  12A8  0666               	xorwf	___fladd@signs,w
  7338  12A9  1903               	skipnz
  7339  12AA  2AAC               	goto	u3181
  7340  12AB  2AAD               	goto	u3180
  7341  12AC                     u3181:
  7342  12AC  2AAE               	goto	l2350
  7343  12AD                     u3180:
  7344  12AD                     l2348:
  7345  12AD  1766               	bsf	___fladd@signs,6
  7346  12AE                     l2350:
  7347  12AE  085D               	movf	___fladd@a+3,w
  7348  12AF  00DE               	movwf	??___fladd
  7349  12B0  075E               	addwf	??___fladd,w
  7350  12B1  00DF               	movwf	??___fladd+1
  7351  12B2  085F               	movf	??___fladd+1,w
  7352  12B3  00E7               	movwf	___fladd@aexp
  7353  12B4                     l2352:
  7354  12B4  1FDC               	btfss	___fladd@a+2,7
  7355  12B5  2AB7               	goto	u3191
  7356  12B6  2AB8               	goto	u3190
  7357  12B7                     u3191:
  7358  12B7  2AB9               	goto	l2356
  7359  12B8                     u3190:
  7360  12B8                     l2354:
  7361  12B8  1467               	bsf	___fladd@aexp,0
  7362  12B9                     l2356:
  7363  12B9  0867               	movf	___fladd@aexp,w
  7364  12BA  1903               	btfsc	3,2
  7365  12BB  2ABD               	goto	u3201
  7366  12BC  2ABE               	goto	u3200
  7367  12BD                     u3201:
  7368  12BD  2ACE               	goto	l2366
  7369  12BE                     u3200:
  7370  12BE                     l2358:
  7371  12BE  0A67               	incf	___fladd@aexp,w
  7372  12BF  1D03               	btfss	3,2
  7373  12C0  2AC2               	goto	u3211
  7374  12C1  2AC3               	goto	u3210
  7375  12C2                     u3211:
  7376  12C2  2ACB               	goto	l2362
  7377  12C3                     u3210:
  7378  12C3                     l2360:
  7379  12C3  3000               	movlw	0
  7380  12C4  00DD               	movwf	___fladd@a+3
  7381  12C5  3000               	movlw	0
  7382  12C6  00DC               	movwf	___fladd@a+2
  7383  12C7  3000               	movlw	0
  7384  12C8  00DB               	movwf	___fladd@a+1
  7385  12C9  3000               	movlw	0
  7386  12CA  00DA               	movwf	___fladd@a
  7387  12CB                     l2362:
  7388  12CB  17DC               	bsf	___fladd@a+2,7
  7389  12CC                     l2364:
  7390  12CC  01DD               	clrf	___fladd@a+3
  7391  12CD  2AD6               	goto	l662
  7392  12CE                     l2366:
  7393  12CE  3000               	movlw	0
  7394  12CF  00DD               	movwf	___fladd@a+3
  7395  12D0  3000               	movlw	0
  7396  12D1  00DC               	movwf	___fladd@a+2
  7397  12D2  3000               	movlw	0
  7398  12D3  00DB               	movwf	___fladd@a+1
  7399  12D4  3000               	movlw	0
  7400  12D5  00DA               	movwf	___fladd@a
  7401  12D6                     l662:
  7402  12D6  0868               	movf	___fladd@bexp,w
  7403  12D7  0267               	subwf	___fladd@aexp,w
  7404  12D8  1803               	skipnc
  7405  12D9  2ADB               	goto	u3221
  7406  12DA  2ADC               	goto	u3220
  7407  12DB                     u3221:
  7408  12DB  2B20               	goto	l2402
  7409  12DC                     u3220:
  7410  12DC                     l2368:
  7411  12DC  1F66               	btfss	___fladd@signs,6
  7412  12DD  2ADF               	goto	u3231
  7413  12DE  2AE0               	goto	u3230
  7414  12DF                     u3231:
  7415  12DF  2AE4               	goto	l2372
  7416  12E0                     u3230:
  7417  12E0                     l2370:
  7418  12E0  3080               	movlw	128
  7419  12E1  00DE               	movwf	??___fladd
  7420  12E2  085E               	movf	??___fladd,w
  7421  12E3  06E6               	xorwf	___fladd@signs,f
  7422  12E4                     l2372:
  7423  12E4  0868               	movf	___fladd@bexp,w
  7424  12E5  00DE               	movwf	??___fladd
  7425  12E6  085E               	movf	??___fladd,w
  7426  12E7  00E9               	movwf	___fladd@grs
  7427  12E8                     l2374:
  7428  12E8  0867               	movf	___fladd@aexp,w
  7429  12E9  00DE               	movwf	??___fladd
  7430  12EA  085E               	movf	??___fladd,w
  7431  12EB  00E8               	movwf	___fladd@bexp
  7432  12EC                     l2376:
  7433  12EC  0869               	movf	___fladd@grs,w
  7434  12ED  00DE               	movwf	??___fladd
  7435  12EE  085E               	movf	??___fladd,w
  7436  12EF  00E7               	movwf	___fladd@aexp
  7437  12F0                     l2378:
  7438  12F0  0856               	movf	___fladd@b,w
  7439  12F1  00DE               	movwf	??___fladd
  7440  12F2  085E               	movf	??___fladd,w
  7441  12F3  00E9               	movwf	___fladd@grs
  7442  12F4                     l2380:
  7443  12F4  085A               	movf	___fladd@a,w
  7444  12F5  00DE               	movwf	??___fladd
  7445  12F6  085E               	movf	??___fladd,w
  7446  12F7  00D6               	movwf	___fladd@b
  7447  12F8                     l2382:
  7448  12F8  0869               	movf	___fladd@grs,w
  7449  12F9  00DE               	movwf	??___fladd
  7450  12FA  085E               	movf	??___fladd,w
  7451  12FB  00DA               	movwf	___fladd@a
  7452  12FC                     l2384:
  7453  12FC  0857               	movf	___fladd@b+1,w
  7454  12FD  00DE               	movwf	??___fladd
  7455  12FE  085E               	movf	??___fladd,w
  7456  12FF  00E9               	movwf	___fladd@grs
  7457  1300                     l2386:
  7458  1300  085B               	movf	___fladd@a+1,w
  7459  1301  00DE               	movwf	??___fladd
  7460  1302  085E               	movf	??___fladd,w
  7461  1303  00D7               	movwf	___fladd@b+1
  7462  1304                     l2388:
  7463  1304  0869               	movf	___fladd@grs,w
  7464  1305  00DE               	movwf	??___fladd
  7465  1306  085E               	movf	??___fladd,w
  7466  1307  00DB               	movwf	___fladd@a+1
  7467  1308                     l2390:
  7468  1308  0858               	movf	___fladd@b+2,w
  7469  1309  00DE               	movwf	??___fladd
  7470  130A  085E               	movf	??___fladd,w
  7471  130B  00E9               	movwf	___fladd@grs
  7472  130C                     l2392:
  7473  130C  085C               	movf	___fladd@a+2,w
  7474  130D  00DE               	movwf	??___fladd
  7475  130E  085E               	movf	??___fladd,w
  7476  130F  00D8               	movwf	___fladd@b+2
  7477  1310                     l2394:
  7478  1310  0869               	movf	___fladd@grs,w
  7479  1311  00DE               	movwf	??___fladd
  7480  1312  085E               	movf	??___fladd,w
  7481  1313  00DC               	movwf	___fladd@a+2
  7482  1314                     l2396:
  7483  1314  0859               	movf	___fladd@b+3,w
  7484  1315  00DE               	movwf	??___fladd
  7485  1316  085E               	movf	??___fladd,w
  7486  1317  00E9               	movwf	___fladd@grs
  7487  1318                     l2398:
  7488  1318  085D               	movf	___fladd@a+3,w
  7489  1319  00DE               	movwf	??___fladd
  7490  131A  085E               	movf	??___fladd,w
  7491  131B  00D9               	movwf	___fladd@b+3
  7492  131C                     l2400:
  7493  131C  0869               	movf	___fladd@grs,w
  7494  131D  00DE               	movwf	??___fladd
  7495  131E  085E               	movf	??___fladd,w
  7496  131F  00DD               	movwf	___fladd@a+3
  7497  1320                     l2402:
  7498  1320  01E9               	clrf	___fladd@grs
  7499  1321                     l2404:
  7500  1321  0867               	movf	___fladd@aexp,w
  7501  1322  00DE               	movwf	??___fladd
  7502  1323  01DF               	clrf	??___fladd+1
  7503  1324  085F               	movf	??___fladd+1,w
  7504  1325  00E1               	movwf	??___fladd+3
  7505  1326  0868               	movf	___fladd@bexp,w
  7506  1327  025E               	subwf	??___fladd,w
  7507  1328  00E0               	movwf	??___fladd+2
  7508  1329  1C03               	skipc
  7509  132A  03E1               	decf	??___fladd+3,f
  7510  132B  0861               	movf	??___fladd+3,w
  7511  132C  3A80               	xorlw	128
  7512  132D  00FF               	movwf	btemp+1
  7513  132E  3080               	movlw	128
  7514  132F  027F               	subwf	btemp+1,w
  7515  1330  1D03               	skipz
  7516  1331  2B34               	goto	u3245
  7517  1332  301A               	movlw	26
  7518  1333  0260               	subwf	??___fladd+2,w
  7519  1334                     u3245:
  7520  1334  1C03               	skipc
  7521  1335  2B37               	goto	u3241
  7522  1336  2B38               	goto	u3240
  7523  1337                     u3241:
  7524  1337  2B75               	goto	l2420
  7525  1338                     u3240:
  7526  1338                     l2406:
  7527  1338  1283               	bcf	3,5	;RP0=0, select bank0
  7528  1339  1303               	bcf	3,6	;RP1=0, select bank0
  7529  133A  0859               	movf	___fladd@b+3,w
  7530  133B  0458               	iorwf	___fladd@b+2,w
  7531  133C  0457               	iorwf	___fladd@b+1,w
  7532  133D  0456               	iorwf	___fladd@b,w
  7533  133E  1D03               	skipz
  7534  133F  2B41               	goto	u3251
  7535  1340  2B43               	goto	u3250
  7536  1341                     u3251:
  7537  1341  3001               	movlw	1
  7538  1342  2B44               	goto	u3260
  7539  1343                     u3250:
  7540  1343  3000               	movlw	0
  7541  1344                     u3260:
  7542  1344  00DE               	movwf	??___fladd
  7543  1345  085E               	movf	??___fladd,w
  7544  1346  00E9               	movwf	___fladd@grs
  7545  1347  3000               	movlw	0
  7546  1348  00D9               	movwf	___fladd@b+3
  7547  1349  3000               	movlw	0
  7548  134A  00D8               	movwf	___fladd@b+2
  7549  134B  3000               	movlw	0
  7550  134C  00D7               	movwf	___fladd@b+1
  7551  134D  3000               	movlw	0
  7552  134E  00D6               	movwf	___fladd@b
  7553  134F  0867               	movf	___fladd@aexp,w
  7554  1350  00DE               	movwf	??___fladd
  7555  1351  085E               	movf	??___fladd,w
  7556  1352  00E8               	movwf	___fladd@bexp
  7557  1353  2B7D               	goto	l666
  7558  1354                     l668:
  7559  1354  1C69               	btfss	___fladd@grs,0
  7560  1355  2B57               	goto	u3271
  7561  1356  2B58               	goto	u3270
  7562  1357                     u3271:
  7563  1357  2B61               	goto	l2410
  7564  1358                     u3270:
  7565  1358                     l2408:
  7566  1358  0869               	movf	___fladd@grs,w
  7567  1359  00DE               	movwf	??___fladd
  7568  135A  1003               	clrc
  7569  135B  0C5E               	rrf	??___fladd,w
  7570  135C  3801               	iorlw	1
  7571  135D  00DF               	movwf	??___fladd+1
  7572  135E  085F               	movf	??___fladd+1,w
  7573  135F  00E9               	movwf	___fladd@grs
  7574  1360  2B63               	goto	l2412
  7575  1361                     l2410:
  7576  1361  1003               	clrc
  7577  1362  0CE9               	rrf	___fladd@grs,f
  7578  1363                     l2412:
  7579  1363  1C56               	btfss	___fladd@b,0
  7580  1364  2B66               	goto	u3281
  7581  1365  2B67               	goto	u3280
  7582  1366                     u3281:
  7583  1366  2B68               	goto	l2416
  7584  1367                     u3280:
  7585  1367                     l2414:
  7586  1367  17E9               	bsf	___fladd@grs,7
  7587  1368                     l2416:
  7588  1368  3001               	movlw	1
  7589  1369  00DE               	movwf	??___fladd
  7590  136A                     u3295:
  7591  136A  0D59               	rlf	___fladd@b+3,w
  7592  136B  0CD9               	rrf	___fladd@b+3,f
  7593  136C  0CD8               	rrf	___fladd@b+2,f
  7594  136D  0CD7               	rrf	___fladd@b+1,f
  7595  136E  0CD6               	rrf	___fladd@b,f
  7596  136F  0BDE               	decfsz	??___fladd& (0+127),f
  7597  1370  2B6A               	goto	u3295
  7598  1371                     l2418:
  7599  1371  3001               	movlw	1
  7600  1372  00DE               	movwf	??___fladd
  7601  1373  085E               	movf	??___fladd,w
  7602  1374  07E8               	addwf	___fladd@bexp,f
  7603  1375                     l2420:
  7604  1375  1283               	bcf	3,5	;RP0=0, select bank0
  7605  1376  1303               	bcf	3,6	;RP1=0, select bank0
  7606  1377  0867               	movf	___fladd@aexp,w
  7607  1378  0268               	subwf	___fladd@bexp,w
  7608  1379  1C03               	skipc
  7609  137A  2B7C               	goto	u3301
  7610  137B  2B7D               	goto	u3300
  7611  137C                     u3301:
  7612  137C  2B54               	goto	l668
  7613  137D                     u3300:
  7614  137D                     l666:
  7615  137D  1B66               	btfsc	___fladd@signs,6
  7616  137E  2B80               	goto	u3311
  7617  137F  2B81               	goto	u3310
  7618  1380                     u3311:
  7619  1380  2BCC               	goto	l2446
  7620  1381                     u3310:
  7621  1381                     l2422:
  7622  1381  0868               	movf	___fladd@bexp,w
  7623  1382  1D03               	btfss	3,2
  7624  1383  2B85               	goto	u3321
  7625  1384  2B86               	goto	u3320
  7626  1385                     u3321:
  7627  1385  2B8F               	goto	l2428
  7628  1386                     u3320:
  7629  1386                     l2424:
  7630  1386  3000               	movlw	0
  7631  1387  00D9               	movwf	?___fladd+3
  7632  1388  3000               	movlw	0
  7633  1389  00D8               	movwf	?___fladd+2
  7634  138A  3000               	movlw	0
  7635  138B  00D7               	movwf	?___fladd+1
  7636  138C  3000               	movlw	0
  7637  138D  00D6               	movwf	?___fladd
  7638  138E  2CFA               	goto	l675
  7639  138F                     l2428:
  7640  138F  085A               	movf	___fladd@a,w
  7641  1390  07D6               	addwf	___fladd@b,f
  7642  1391  085B               	movf	___fladd@a+1,w
  7643  1392  1103               	clrz
  7644  1393  1803               	skipnc
  7645  1394  3E01               	addlw	1
  7646  1395  1903               	skipnz
  7647  1396  2B98               	goto	u3331
  7648  1397  07D7               	addwf	___fladd@b+1,f
  7649  1398                     u3331:
  7650  1398  085C               	movf	___fladd@a+2,w
  7651  1399  1103               	clrz
  7652  139A  1803               	skipnc
  7653  139B  3E01               	addlw	1
  7654  139C  1903               	skipnz
  7655  139D  2B9F               	goto	u3332
  7656  139E  07D8               	addwf	___fladd@b+2,f
  7657  139F                     u3332:
  7658  139F  085D               	movf	___fladd@a+3,w
  7659  13A0  1103               	clrz
  7660  13A1  1803               	skipnc
  7661  13A2  3E01               	addlw	1
  7662  13A3  1903               	skipnz
  7663  13A4  2BA6               	goto	u3333
  7664  13A5  07D9               	addwf	___fladd@b+3,f
  7665  13A6                     u3333:
  7666  13A6                     l2430:
  7667  13A6  1C59               	btfss	___fladd@b+3,0
  7668  13A7  2BA9               	goto	u3341
  7669  13A8  2BAA               	goto	u3340
  7670  13A9                     u3341:
  7671  13A9  2C80               	goto	l2480
  7672  13AA                     u3340:
  7673  13AA                     l2432:
  7674  13AA  1C69               	btfss	___fladd@grs,0
  7675  13AB  2BAD               	goto	u3351
  7676  13AC  2BAE               	goto	u3350
  7677  13AD                     u3351:
  7678  13AD  2BB7               	goto	l2436
  7679  13AE                     u3350:
  7680  13AE                     l2434:
  7681  13AE  0869               	movf	___fladd@grs,w
  7682  13AF  00DE               	movwf	??___fladd
  7683  13B0  1003               	clrc
  7684  13B1  0C5E               	rrf	??___fladd,w
  7685  13B2  3801               	iorlw	1
  7686  13B3  00DF               	movwf	??___fladd+1
  7687  13B4  085F               	movf	??___fladd+1,w
  7688  13B5  00E9               	movwf	___fladd@grs
  7689  13B6  2BB9               	goto	l2438
  7690  13B7                     l2436:
  7691  13B7  1003               	clrc
  7692  13B8  0CE9               	rrf	___fladd@grs,f
  7693  13B9                     l2438:
  7694  13B9  1C56               	btfss	___fladd@b,0
  7695  13BA  2BBC               	goto	u3361
  7696  13BB  2BBD               	goto	u3360
  7697  13BC                     u3361:
  7698  13BC  2BBE               	goto	l2442
  7699  13BD                     u3360:
  7700  13BD                     l2440:
  7701  13BD  17E9               	bsf	___fladd@grs,7
  7702  13BE                     l2442:
  7703  13BE  3001               	movlw	1
  7704  13BF  00DE               	movwf	??___fladd
  7705  13C0                     u3375:
  7706  13C0  0D59               	rlf	___fladd@b+3,w
  7707  13C1  0CD9               	rrf	___fladd@b+3,f
  7708  13C2  0CD8               	rrf	___fladd@b+2,f
  7709  13C3  0CD7               	rrf	___fladd@b+1,f
  7710  13C4  0CD6               	rrf	___fladd@b,f
  7711  13C5  0BDE               	decfsz	??___fladd& (0+127),f
  7712  13C6  2BC0               	goto	u3375
  7713  13C7                     l2444:
  7714  13C7  3001               	movlw	1
  7715  13C8  00DE               	movwf	??___fladd
  7716  13C9  085E               	movf	??___fladd,w
  7717  13CA  07E8               	addwf	___fladd@bexp,f
  7718  13CB  2C80               	goto	l2480
  7719  13CC                     l2446:
  7720  13CC  0859               	movf	___fladd@b+3,w
  7721  13CD  3A80               	xorlw	128
  7722  13CE  00FF               	movwf	btemp+1
  7723  13CF  085D               	movf	___fladd@a+3,w
  7724  13D0  3A80               	xorlw	128
  7725  13D1  027F               	subwf	btemp+1,w
  7726  13D2  1D03               	skipz
  7727  13D3  2BDE               	goto	u3383
  7728  13D4  085C               	movf	___fladd@a+2,w
  7729  13D5  0258               	subwf	___fladd@b+2,w
  7730  13D6  1D03               	skipz
  7731  13D7  2BDE               	goto	u3383
  7732  13D8  085B               	movf	___fladd@a+1,w
  7733  13D9  0257               	subwf	___fladd@b+1,w
  7734  13DA  1D03               	skipz
  7735  13DB  2BDE               	goto	u3383
  7736  13DC  085A               	movf	___fladd@a,w
  7737  13DD  0256               	subwf	___fladd@b,w
  7738  13DE                     u3383:
  7739  13DE  1803               	skipnc
  7740  13DF  2BE1               	goto	u3381
  7741  13E0  2BE2               	goto	u3380
  7742  13E1                     u3381:
  7743  13E1  2C3A               	goto	l2456
  7744  13E2                     u3380:
  7745  13E2                     l2448:
  7746  13E2  30FF               	movlw	255
  7747  13E3  00DE               	movwf	??___fladd
  7748  13E4  30FF               	movlw	255
  7749  13E5  00DF               	movwf	??___fladd+1
  7750  13E6  30FF               	movlw	255
  7751  13E7  00E0               	movwf	??___fladd+2
  7752  13E8  30FF               	movlw	255
  7753  13E9  00E1               	movwf	??___fladd+3
  7754  13EA  085A               	movf	___fladd@a,w
  7755  13EB  00E2               	movwf	??___fladd+4
  7756  13EC  085B               	movf	___fladd@a+1,w
  7757  13ED  00E3               	movwf	??___fladd+5
  7758  13EE  085C               	movf	___fladd@a+2,w
  7759  13EF  00E4               	movwf	??___fladd+6
  7760  13F0  085D               	movf	___fladd@a+3,w
  7761  13F1  00E5               	movwf	??___fladd+7
  7762  13F2  0856               	movf	___fladd@b,w
  7763  13F3  02E2               	subwf	??___fladd+4,f
  7764  13F4  0857               	movf	___fladd@b+1,w
  7765  13F5  1C03               	skipc
  7766  13F6  0F57               	incfsz	___fladd@b+1,w
  7767  13F7  2BF9               	goto	u3391
  7768  13F8  2BFA               	goto	u3392
  7769  13F9                     u3391:
  7770  13F9  02E3               	subwf	??___fladd+5,f
  7771  13FA                     u3392:
  7772  13FA  0858               	movf	___fladd@b+2,w
  7773  13FB  1C03               	skipc
  7774  13FC  0F58               	incfsz	___fladd@b+2,w
  7775  13FD  2BFF               	goto	u3393
  7776  13FE  2C00               	goto	u3394
  7777  13FF                     u3393:
  7778  13FF  02E4               	subwf	??___fladd+6,f
  7779  1400                     u3394:
  7780  1400  0859               	movf	___fladd@b+3,w
  7781  1401  1C03               	skipc
  7782  1402  0F59               	incfsz	___fladd@b+3,w
  7783  1403  2C05               	goto	u3395
  7784  1404  2C06               	goto	u3396
  7785  1405                     u3395:
  7786  1405  02E5               	subwf	??___fladd+7,f
  7787  1406                     u3396:
  7788  1406  0862               	movf	??___fladd+4,w
  7789  1407  07DE               	addwf	??___fladd,f
  7790  1408  0863               	movf	??___fladd+5,w
  7791  1409  1803               	skipnc
  7792  140A  0F63               	incfsz	??___fladd+5,w
  7793  140B  2C0D               	goto	u3400
  7794  140C  2C0E               	goto	u3401
  7795  140D                     u3400:
  7796  140D  07DF               	addwf	??___fladd+1,f
  7797  140E                     u3401:
  7798  140E  0864               	movf	??___fladd+6,w
  7799  140F  1803               	skipnc
  7800  1410  0F64               	incfsz	??___fladd+6,w
  7801  1411  2C13               	goto	u3402
  7802  1412  2C14               	goto	u3403
  7803  1413                     u3402:
  7804  1413  07E0               	addwf	??___fladd+2,f
  7805  1414                     u3403:
  7806  1414  0865               	movf	??___fladd+7,w
  7807  1415  1803               	skipnc
  7808  1416  0A65               	incf	??___fladd+7,w
  7809  1417  07E1               	addwf	??___fladd+3,f
  7810  1418  0861               	movf	??___fladd+3,w
  7811  1419  00D9               	movwf	___fladd@b+3
  7812  141A  0860               	movf	??___fladd+2,w
  7813  141B  00D8               	movwf	___fladd@b+2
  7814  141C  085F               	movf	??___fladd+1,w
  7815  141D  00D7               	movwf	___fladd@b+1
  7816  141E  085E               	movf	??___fladd,w
  7817  141F  00D6               	movwf	___fladd@b
  7818  1420                     l2450:
  7819  1420  3080               	movlw	128
  7820  1421  00DE               	movwf	??___fladd
  7821  1422  085E               	movf	??___fladd,w
  7822  1423  06E6               	xorwf	___fladd@signs,f
  7823  1424  09E9               	comf	___fladd@grs,f
  7824  1425  0AE9               	incf	___fladd@grs,f
  7825  1426                     l2452:
  7826  1426  0869               	movf	___fladd@grs,w
  7827  1427  1D03               	btfss	3,2
  7828  1428  2C2A               	goto	u3411
  7829  1429  2C2B               	goto	u3410
  7830  142A                     u3411:
  7831  142A  2C48               	goto	l683
  7832  142B                     u3410:
  7833  142B                     l2454:
  7834  142B  3001               	movlw	1
  7835  142C  07D6               	addwf	___fladd@b,f
  7836  142D  3000               	movlw	0
  7837  142E  1803               	skipnc
  7838  142F  3001               	movlw	1
  7839  1430  07D7               	addwf	___fladd@b+1,f
  7840  1431  3000               	movlw	0
  7841  1432  1803               	skipnc
  7842  1433  3001               	movlw	1
  7843  1434  07D8               	addwf	___fladd@b+2,f
  7844  1435  3000               	movlw	0
  7845  1436  1803               	skipnc
  7846  1437  3001               	movlw	1
  7847  1438  07D9               	addwf	___fladd@b+3,f
  7848  1439  2C48               	goto	l683
  7849  143A                     l2456:
  7850  143A  085A               	movf	___fladd@a,w
  7851  143B  02D6               	subwf	___fladd@b,f
  7852  143C  085B               	movf	___fladd@a+1,w
  7853  143D  1C03               	skipc
  7854  143E  0F5B               	incfsz	___fladd@a+1,w
  7855  143F  02D7               	subwf	___fladd@b+1,f
  7856  1440  085C               	movf	___fladd@a+2,w
  7857  1441  1C03               	skipc
  7858  1442  0F5C               	incfsz	___fladd@a+2,w
  7859  1443  02D8               	subwf	___fladd@b+2,f
  7860  1444  085D               	movf	___fladd@a+3,w
  7861  1445  1C03               	skipc
  7862  1446  0F5D               	incfsz	___fladd@a+3,w
  7863  1447  02D9               	subwf	___fladd@b+3,f
  7864  1448                     l683:
  7865  1448  0859               	movf	___fladd@b+3,w
  7866  1449  0458               	iorwf	___fladd@b+2,w
  7867  144A  0457               	iorwf	___fladd@b+1,w
  7868  144B  0456               	iorwf	___fladd@b,w
  7869  144C  1D03               	skipz
  7870  144D  2C4F               	goto	u3421
  7871  144E  2C50               	goto	u3420
  7872  144F                     u3421:
  7873  144F  2C7C               	goto	l2478
  7874  1450                     u3420:
  7875  1450                     l2458:
  7876  1450  0869               	movf	___fladd@grs,w
  7877  1451  1D03               	btfss	3,2
  7878  1452  2C54               	goto	u3431
  7879  1453  2C55               	goto	u3430
  7880  1454                     u3431:
  7881  1454  2C7C               	goto	l2478
  7882  1455                     u3430:
  7883  1455                     l2460:
  7884  1455  3000               	movlw	0
  7885  1456  00D9               	movwf	?___fladd+3
  7886  1457  3000               	movlw	0
  7887  1458  00D8               	movwf	?___fladd+2
  7888  1459  3000               	movlw	0
  7889  145A  00D7               	movwf	?___fladd+1
  7890  145B  3000               	movlw	0
  7891  145C  00D6               	movwf	?___fladd
  7892  145D  2CFA               	goto	l675
  7893  145E                     l2464:
  7894  145E  3001               	movlw	1
  7895  145F  00DE               	movwf	??___fladd
  7896  1460                     u3445:
  7897  1460  1003               	clrc
  7898  1461  0DD6               	rlf	___fladd@b,f
  7899  1462  0DD7               	rlf	___fladd@b+1,f
  7900  1463  0DD8               	rlf	___fladd@b+2,f
  7901  1464  0DD9               	rlf	___fladd@b+3,f
  7902  1465  0BDE               	decfsz	??___fladd,f
  7903  1466  2C60               	goto	u3445
  7904  1467                     l2466:
  7905  1467  1FE9               	btfss	___fladd@grs,7
  7906  1468  2C6A               	goto	u3451
  7907  1469  2C6B               	goto	u3450
  7908  146A                     u3451:
  7909  146A  2C6C               	goto	l687
  7910  146B                     u3450:
  7911  146B                     l2468:
  7912  146B  1456               	bsf	___fladd@b,0
  7913  146C                     l687:
  7914  146C  1C69               	btfss	___fladd@grs,0
  7915  146D  2C6F               	goto	u3461
  7916  146E  2C70               	goto	u3460
  7917  146F                     u3461:
  7918  146F  2C73               	goto	l2472
  7919  1470                     u3460:
  7920  1470                     l2470:
  7921  1470  1403               	setc
  7922  1471  0DE9               	rlf	___fladd@grs,f
  7923  1472  2C75               	goto	l2474
  7924  1473                     l2472:
  7925  1473  1003               	clrc
  7926  1474  0DE9               	rlf	___fladd@grs,f
  7927  1475                     l2474:
  7928  1475  0868               	movf	___fladd@bexp,w
  7929  1476  1903               	btfsc	3,2
  7930  1477  2C79               	goto	u3471
  7931  1478  2C7A               	goto	u3470
  7932  1479                     u3471:
  7933  1479  2C7C               	goto	l2478
  7934  147A                     u3470:
  7935  147A                     l2476:
  7936  147A  3001               	movlw	1
  7937  147B  02E8               	subwf	___fladd@bexp,f
  7938  147C                     l2478:
  7939  147C  1FD8               	btfss	___fladd@b+2,7
  7940  147D  2C7F               	goto	u3481
  7941  147E  2C80               	goto	u3480
  7942  147F                     u3481:
  7943  147F  2C5E               	goto	l2464
  7944  1480                     u3480:
  7945  1480                     l2480:
  7946  1480  01E7               	clrf	___fladd@aexp
  7947  1481                     l2482:
  7948  1481  1FE9               	btfss	___fladd@grs,7
  7949  1482  2C84               	goto	u3491
  7950  1483  2C85               	goto	u3490
  7951  1484                     u3491:
  7952  1484  2C93               	goto	l2490
  7953  1485                     u3490:
  7954  1485                     l2484:
  7955  1485  0869               	movf	___fladd@grs,w
  7956  1486  397F               	andlw	127
  7957  1487  1903               	btfsc	3,2
  7958  1488  2C8A               	goto	u3501
  7959  1489  2C8B               	goto	u3500
  7960  148A                     u3501:
  7961  148A  2C8E               	goto	l693
  7962  148B                     u3500:
  7963  148B                     l2486:
  7964  148B  01E7               	clrf	___fladd@aexp
  7965  148C  0AE7               	incf	___fladd@aexp,f
  7966  148D  2C93               	goto	l2490
  7967  148E                     l693:
  7968  148E  1C56               	btfss	___fladd@b,0
  7969  148F  2C91               	goto	u3511
  7970  1490  2C92               	goto	u3510
  7971  1491                     u3511:
  7972  1491  2C93               	goto	l2490
  7973  1492                     u3510:
  7974  1492  2C8B               	goto	l2486
  7975  1493                     l2490:
  7976  1493  0867               	movf	___fladd@aexp,w
  7977  1494  1903               	btfsc	3,2
  7978  1495  2C97               	goto	u3521
  7979  1496  2C98               	goto	u3520
  7980  1497                     u3521:
  7981  1497  2CCC               	goto	l696
  7982  1498                     u3520:
  7983  1498                     l2492:
  7984  1498  3001               	movlw	1
  7985  1499  07D6               	addwf	___fladd@b,f
  7986  149A  3000               	movlw	0
  7987  149B  1803               	skipnc
  7988  149C  3001               	movlw	1
  7989  149D  07D7               	addwf	___fladd@b+1,f
  7990  149E  3000               	movlw	0
  7991  149F  1803               	skipnc
  7992  14A0  3001               	movlw	1
  7993  14A1  07D8               	addwf	___fladd@b+2,f
  7994  14A2  3000               	movlw	0
  7995  14A3  1803               	skipnc
  7996  14A4  3001               	movlw	1
  7997  14A5  07D9               	addwf	___fladd@b+3,f
  7998  14A6                     l2494:
  7999  14A6  1C59               	btfss	___fladd@b+3,0
  8000  14A7  2CA9               	goto	u3531
  8001  14A8  2CAA               	goto	u3530
  8002  14A9                     u3531:
  8003  14A9  2CCC               	goto	l696
  8004  14AA                     u3530:
  8005  14AA                     l2496:
  8006  14AA  0856               	movf	___fladd@b,w
  8007  14AB  00DE               	movwf	??___fladd
  8008  14AC  0857               	movf	___fladd@b+1,w
  8009  14AD  00DF               	movwf	??___fladd+1
  8010  14AE  0858               	movf	___fladd@b+2,w
  8011  14AF  00E0               	movwf	??___fladd+2
  8012  14B0  0859               	movf	___fladd@b+3,w
  8013  14B1  00E1               	movwf	??___fladd+3
  8014  14B2  3001               	movlw	1
  8015  14B3  00E2               	movwf	??___fladd+4
  8016  14B4                     u3545:
  8017  14B4  0D61               	rlf	??___fladd+3,w
  8018  14B5  0CE1               	rrf	??___fladd+3,f
  8019  14B6  0CE0               	rrf	??___fladd+2,f
  8020  14B7  0CDF               	rrf	??___fladd+1,f
  8021  14B8  0CDE               	rrf	??___fladd,f
  8022  14B9                     u3540:
  8023  14B9  0BE2               	decfsz	??___fladd+4,f
  8024  14BA  2CB4               	goto	u3545
  8025  14BB  0861               	movf	??___fladd+3,w
  8026  14BC  00D9               	movwf	___fladd@b+3
  8027  14BD  0860               	movf	??___fladd+2,w
  8028  14BE  00D8               	movwf	___fladd@b+2
  8029  14BF  085F               	movf	??___fladd+1,w
  8030  14C0  00D7               	movwf	___fladd@b+1
  8031  14C1  085E               	movf	??___fladd,w
  8032  14C2  00D6               	movwf	___fladd@b
  8033  14C3  0A68               	incf	___fladd@bexp,w
  8034  14C4  1903               	btfsc	3,2
  8035  14C5  2CC7               	goto	u3551
  8036  14C6  2CC8               	goto	u3550
  8037  14C7                     u3551:
  8038  14C7  2CCC               	goto	l696
  8039  14C8                     u3550:
  8040  14C8                     l2498:
  8041  14C8  3001               	movlw	1
  8042  14C9  00DE               	movwf	??___fladd
  8043  14CA  085E               	movf	??___fladd,w
  8044  14CB  07E8               	addwf	___fladd@bexp,f
  8045  14CC                     l696:
  8046  14CC  0A68               	incf	___fladd@bexp,w
  8047  14CD  1903               	btfsc	3,2
  8048  14CE  2CD0               	goto	u3561
  8049  14CF  2CD1               	goto	u3560
  8050  14D0                     u3561:
  8051  14D0  2CD6               	goto	l2502
  8052  14D1                     u3560:
  8053  14D1                     l2500:
  8054  14D1  0868               	movf	___fladd@bexp,w
  8055  14D2  1D03               	btfss	3,2
  8056  14D3  2CD5               	goto	u3571
  8057  14D4  2CD6               	goto	u3570
  8058  14D5                     u3571:
  8059  14D5  2CE4               	goto	l2508
  8060  14D6                     u3570:
  8061  14D6                     l2502:
  8062  14D6  3000               	movlw	0
  8063  14D7  00D9               	movwf	___fladd@b+3
  8064  14D8  3000               	movlw	0
  8065  14D9  00D8               	movwf	___fladd@b+2
  8066  14DA  3000               	movlw	0
  8067  14DB  00D7               	movwf	___fladd@b+1
  8068  14DC  3000               	movlw	0
  8069  14DD  00D6               	movwf	___fladd@b
  8070  14DE                     l2504:
  8071  14DE  0868               	movf	___fladd@bexp,w
  8072  14DF  1D03               	btfss	3,2
  8073  14E0  2CE2               	goto	u3581
  8074  14E1  2CE3               	goto	u3580
  8075  14E2                     u3581:
  8076  14E2  2CE4               	goto	l2508
  8077  14E3                     u3580:
  8078  14E3                     l2506:
  8079  14E3  01E6               	clrf	___fladd@signs
  8080  14E4                     l2508:
  8081  14E4  1C68               	btfss	___fladd@bexp,0
  8082  14E5  2CE7               	goto	u3591
  8083  14E6  2CE8               	goto	u3590
  8084  14E7                     u3591:
  8085  14E7  2CEA               	goto	l2512
  8086  14E8                     u3590:
  8087  14E8                     l2510:
  8088  14E8  17D8               	bsf	___fladd@b+2,7
  8089  14E9  2CEE               	goto	l704
  8090  14EA                     l2512:
  8091  14EA  307F               	movlw	127
  8092  14EB  00DE               	movwf	??___fladd
  8093  14EC  085E               	movf	??___fladd,w
  8094  14ED  05D8               	andwf	___fladd@b+2,f
  8095  14EE                     l704:
  8096  14EE  0868               	movf	___fladd@bexp,w
  8097  14EF  00DE               	movwf	??___fladd
  8098  14F0  1003               	clrc
  8099  14F1  0C5E               	rrf	??___fladd,w
  8100  14F2  00DF               	movwf	??___fladd+1
  8101  14F3  085F               	movf	??___fladd+1,w
  8102  14F4  00D9               	movwf	___fladd@b+3
  8103  14F5                     l2514:
  8104  14F5  1FE6               	btfss	___fladd@signs,7
  8105  14F6  2CF8               	goto	u3601
  8106  14F7  2CF9               	goto	u3600
  8107  14F8                     u3601:
  8108  14F8  2CFA               	goto	l705
  8109  14F9                     u3600:
  8110  14F9                     l2516:
  8111  14F9  17D9               	bsf	___fladd@b+3,7
  8112  14FA                     l705:
  8113  14FA                     l675:
  8114  14FA  0008               	return
  8115  14FB                     __end_of___fladd:
  8116                           
  8117                           	psect	text20
  8118  1A6E                     __ptext20:	
  8119 ;; *************** function ___flneg *****************
  8120 ;; Defined at:
  8121 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  f1              4    3[COMMON] unsigned char 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  4    3[COMMON] unsigned char 
  8128 ;; Registers used:
  8129 ;;		wreg
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8135 ;;      Params:         4       0       0       0       0
  8136 ;;      Locals:         0       0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0
  8138 ;;      Totals:         4       0       0       0       0
  8139 ;;Total ram usage:        4 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:    1
  8142 ;; This function calls:
  8143 ;;		Nothing
  8144 ;; This function is called by:
  8145 ;;		_sprintf
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           
  8150                           ;psect for function ___flneg
  8151  1A6E                     ___flneg:
  8152  1A6E                     l2918:	
  8153                           ;incstack = 0
  8154                           ; Regs used in ___flneg: [wreg]
  8155                           
  8156  1A6E  0876               	movf	___flneg@f1+3,w
  8157  1A6F  0475               	iorwf	___flneg@f1+2,w
  8158  1A70  0474               	iorwf	___flneg@f1+1,w
  8159  1A71  0473               	iorwf	___flneg@f1,w
  8160  1A72  1903               	skipnz
  8161  1A73  2A75               	goto	u4751
  8162  1A74  2A76               	goto	u4750
  8163  1A75                     u4751:
  8164  1A75  2A78               	goto	l2922
  8165  1A76                     u4750:
  8166  1A76                     l2920:
  8167  1A76  3080               	movlw	128
  8168  1A77  06F6               	xorwf	___flneg@f1+3,f
  8169  1A78                     l2922:
  8170  1A78                     l534:
  8171  1A78  0008               	return
  8172  1A79                     __end_of___flneg:
  8173                           
  8174                           	psect	text21
  8175  1DE3                     __ptext21:	
  8176 ;; *************** function ___flge *****************
  8177 ;; Defined at:
  8178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  ff1             4    3[COMMON] unsigned char 
  8181 ;;  ff2             4    7[COMMON] unsigned char 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;		None               void
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8193 ;;      Params:         8       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0
  8195 ;;      Temps:          0       4       0       0       0
  8196 ;;      Totals:         8       4       0       0       0
  8197 ;;Total ram usage:       12 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:    1
  8200 ;; This function calls:
  8201 ;;		Nothing
  8202 ;; This function is called by:
  8203 ;;		_sprintf
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           
  8208                           ;psect for function ___flge
  8209  1DE3                     ___flge:
  8210  1DE3                     l2898:	
  8211                           ;incstack = 0
  8212                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8213                           
  8214  1DE3  3000               	movlw	0
  8215  1DE4  0573               	andwf	___flge@ff1,w
  8216  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  8217  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  8218  1DE7  00A0               	movwf	??___flge
  8219  1DE8  3000               	movlw	0
  8220  1DE9  0574               	andwf	___flge@ff1+1,w
  8221  1DEA  00A1               	movwf	??___flge+1
  8222  1DEB  3080               	movlw	128
  8223  1DEC  0575               	andwf	___flge@ff1+2,w
  8224  1DED  00A2               	movwf	??___flge+2
  8225  1DEE  307F               	movlw	127
  8226  1DEF  0576               	andwf	___flge@ff1+3,w
  8227  1DF0  00A3               	movwf	??___flge+3
  8228  1DF1  0823               	movf	??___flge+3,w
  8229  1DF2  0422               	iorwf	??___flge+2,w
  8230  1DF3  0421               	iorwf	??___flge+1,w
  8231  1DF4  0420               	iorwf	??___flge,w
  8232  1DF5  1D03               	skipz
  8233  1DF6  2DF8               	goto	u4681
  8234  1DF7  2DF9               	goto	u4680
  8235  1DF8                     u4681:
  8236  1DF8  2E01               	goto	l526
  8237  1DF9                     u4680:
  8238  1DF9                     l2900:
  8239  1DF9  3000               	movlw	0
  8240  1DFA  00F6               	movwf	___flge@ff1+3
  8241  1DFB  3000               	movlw	0
  8242  1DFC  00F5               	movwf	___flge@ff1+2
  8243  1DFD  3000               	movlw	0
  8244  1DFE  00F4               	movwf	___flge@ff1+1
  8245  1DFF  3000               	movlw	0
  8246  1E00  00F3               	movwf	___flge@ff1
  8247  1E01                     l526:
  8248  1E01  3000               	movlw	0
  8249  1E02  0577               	andwf	___flge@ff2,w
  8250  1E03  00A0               	movwf	??___flge
  8251  1E04  3000               	movlw	0
  8252  1E05  0578               	andwf	___flge@ff2+1,w
  8253  1E06  00A1               	movwf	??___flge+1
  8254  1E07  3080               	movlw	128
  8255  1E08  0579               	andwf	___flge@ff2+2,w
  8256  1E09  00A2               	movwf	??___flge+2
  8257  1E0A  307F               	movlw	127
  8258  1E0B  057A               	andwf	___flge@ff2+3,w
  8259  1E0C  00A3               	movwf	??___flge+3
  8260  1E0D  0823               	movf	??___flge+3,w
  8261  1E0E  0422               	iorwf	??___flge+2,w
  8262  1E0F  0421               	iorwf	??___flge+1,w
  8263  1E10  0420               	iorwf	??___flge,w
  8264  1E11  1D03               	skipz
  8265  1E12  2E14               	goto	u4691
  8266  1E13  2E15               	goto	u4690
  8267  1E14                     u4691:
  8268  1E14  2E1D               	goto	l2904
  8269  1E15                     u4690:
  8270  1E15                     l2902:
  8271  1E15  3000               	movlw	0
  8272  1E16  00FA               	movwf	___flge@ff2+3
  8273  1E17  3000               	movlw	0
  8274  1E18  00F9               	movwf	___flge@ff2+2
  8275  1E19  3000               	movlw	0
  8276  1E1A  00F8               	movwf	___flge@ff2+1
  8277  1E1B  3000               	movlw	0
  8278  1E1C  00F7               	movwf	___flge@ff2
  8279  1E1D                     l2904:
  8280  1E1D  1FF6               	btfss	___flge@ff1+3,7
  8281  1E1E  2E20               	goto	u4701
  8282  1E1F  2E21               	goto	u4700
  8283  1E20                     u4701:
  8284  1E20  2E45               	goto	l2908
  8285  1E21                     u4700:
  8286  1E21                     l2906:
  8287  1E21  3000               	movlw	0
  8288  1E22  00A0               	movwf	??___flge
  8289  1E23  3000               	movlw	0
  8290  1E24  00A1               	movwf	??___flge+1
  8291  1E25  3000               	movlw	0
  8292  1E26  00A2               	movwf	??___flge+2
  8293  1E27  3080               	movlw	128
  8294  1E28  00A3               	movwf	??___flge+3
  8295  1E29  0873               	movf	___flge@ff1,w
  8296  1E2A  02A0               	subwf	??___flge,f
  8297  1E2B  0874               	movf	___flge@ff1+1,w
  8298  1E2C  1C03               	skipc
  8299  1E2D  0F74               	incfsz	___flge@ff1+1,w
  8300  1E2E  2E30               	goto	u4711
  8301  1E2F  2E31               	goto	u4712
  8302  1E30                     u4711:
  8303  1E30  02A1               	subwf	??___flge+1,f
  8304  1E31                     u4712:
  8305  1E31  0875               	movf	___flge@ff1+2,w
  8306  1E32  1C03               	skipc
  8307  1E33  0F75               	incfsz	___flge@ff1+2,w
  8308  1E34  2E36               	goto	u4713
  8309  1E35  2E37               	goto	u4714
  8310  1E36                     u4713:
  8311  1E36  02A2               	subwf	??___flge+2,f
  8312  1E37                     u4714:
  8313  1E37  0876               	movf	___flge@ff1+3,w
  8314  1E38  1C03               	skipc
  8315  1E39  0F76               	incfsz	___flge@ff1+3,w
  8316  1E3A  2E3C               	goto	u4715
  8317  1E3B  2E3D               	goto	u4716
  8318  1E3C                     u4715:
  8319  1E3C  02A3               	subwf	??___flge+3,f
  8320  1E3D                     u4716:
  8321  1E3D  0823               	movf	??___flge+3,w
  8322  1E3E  00F6               	movwf	___flge@ff1+3
  8323  1E3F  0822               	movf	??___flge+2,w
  8324  1E40  00F5               	movwf	___flge@ff1+2
  8325  1E41  0821               	movf	??___flge+1,w
  8326  1E42  00F4               	movwf	___flge@ff1+1
  8327  1E43  0820               	movf	??___flge,w
  8328  1E44  00F3               	movwf	___flge@ff1
  8329  1E45                     l2908:
  8330  1E45  1FFA               	btfss	___flge@ff2+3,7
  8331  1E46  2E48               	goto	u4721
  8332  1E47  2E49               	goto	u4720
  8333  1E48                     u4721:
  8334  1E48  2E6D               	goto	l529
  8335  1E49                     u4720:
  8336  1E49                     l2910:
  8337  1E49  3000               	movlw	0
  8338  1E4A  00A0               	movwf	??___flge
  8339  1E4B  3000               	movlw	0
  8340  1E4C  00A1               	movwf	??___flge+1
  8341  1E4D  3000               	movlw	0
  8342  1E4E  00A2               	movwf	??___flge+2
  8343  1E4F  3080               	movlw	128
  8344  1E50  00A3               	movwf	??___flge+3
  8345  1E51  0877               	movf	___flge@ff2,w
  8346  1E52  02A0               	subwf	??___flge,f
  8347  1E53  0878               	movf	___flge@ff2+1,w
  8348  1E54  1C03               	skipc
  8349  1E55  0F78               	incfsz	___flge@ff2+1,w
  8350  1E56  2E58               	goto	u4731
  8351  1E57  2E59               	goto	u4732
  8352  1E58                     u4731:
  8353  1E58  02A1               	subwf	??___flge+1,f
  8354  1E59                     u4732:
  8355  1E59  0879               	movf	___flge@ff2+2,w
  8356  1E5A  1C03               	skipc
  8357  1E5B  0F79               	incfsz	___flge@ff2+2,w
  8358  1E5C  2E5E               	goto	u4733
  8359  1E5D  2E5F               	goto	u4734
  8360  1E5E                     u4733:
  8361  1E5E  02A2               	subwf	??___flge+2,f
  8362  1E5F                     u4734:
  8363  1E5F  087A               	movf	___flge@ff2+3,w
  8364  1E60  1C03               	skipc
  8365  1E61  0F7A               	incfsz	___flge@ff2+3,w
  8366  1E62  2E64               	goto	u4735
  8367  1E63  2E65               	goto	u4736
  8368  1E64                     u4735:
  8369  1E64  02A3               	subwf	??___flge+3,f
  8370  1E65                     u4736:
  8371  1E65  0823               	movf	??___flge+3,w
  8372  1E66  00FA               	movwf	___flge@ff2+3
  8373  1E67  0822               	movf	??___flge+2,w
  8374  1E68  00F9               	movwf	___flge@ff2+2
  8375  1E69  0821               	movf	??___flge+1,w
  8376  1E6A  00F8               	movwf	___flge@ff2+1
  8377  1E6B  0820               	movf	??___flge,w
  8378  1E6C  00F7               	movwf	___flge@ff2
  8379  1E6D                     l529:
  8380  1E6D  3080               	movlw	128
  8381  1E6E  06F6               	xorwf	___flge@ff1+3,f
  8382  1E6F  3080               	movlw	128
  8383  1E70  06FA               	xorwf	___flge@ff2+3,f
  8384  1E71  087A               	movf	___flge@ff2+3,w
  8385  1E72  0276               	subwf	___flge@ff1+3,w
  8386  1E73  1D03               	skipz
  8387  1E74  2E7F               	goto	u4745
  8388  1E75  0879               	movf	___flge@ff2+2,w
  8389  1E76  0275               	subwf	___flge@ff1+2,w
  8390  1E77  1D03               	skipz
  8391  1E78  2E7F               	goto	u4745
  8392  1E79  0878               	movf	___flge@ff2+1,w
  8393  1E7A  0274               	subwf	___flge@ff1+1,w
  8394  1E7B  1D03               	skipz
  8395  1E7C  2E7F               	goto	u4745
  8396  1E7D  0877               	movf	___flge@ff2,w
  8397  1E7E  0273               	subwf	___flge@ff1,w
  8398  1E7F                     u4745:
  8399  1E7F  1803               	skipnc
  8400  1E80  2E82               	goto	u4741
  8401  1E81  2E83               	goto	u4740
  8402  1E82                     u4741:
  8403  1E82  2E85               	goto	l2914
  8404  1E83                     u4740:
  8405  1E83                     l2912:
  8406  1E83  1003               	clrc
  8407  1E84  2E86               	goto	l530
  8408  1E85                     l2914:
  8409  1E85  1403               	setc
  8410  1E86                     l530:
  8411  1E86  0008               	return
  8412  1E87                     __end_of___flge:
  8413                           
  8414                           	psect	text22
  8415  1BA0                     __ptext22:	
  8416 ;; *************** function ___fleq *****************
  8417 ;; Defined at:
  8418 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  ff1             4    3[COMMON] unsigned char 
  8421 ;;  ff2             4    7[COMMON] unsigned char 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;		None               void
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8433 ;;      Params:         8       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0
  8435 ;;      Temps:          0       4       0       0       0
  8436 ;;      Totals:         8       4       0       0       0
  8437 ;;Total ram usage:       12 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    1
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_sprintf
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           
  8448                           ;psect for function ___fleq
  8449  1BA0                     ___fleq:
  8450  1BA0                     l2886:	
  8451                           ;incstack = 0
  8452                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8453                           
  8454  1BA0  3000               	movlw	0
  8455  1BA1  0573               	andwf	___fleq@ff1,w
  8456  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  8457  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  8458  1BA4  00A0               	movwf	??___fleq
  8459  1BA5  3000               	movlw	0
  8460  1BA6  0574               	andwf	___fleq@ff1+1,w
  8461  1BA7  00A1               	movwf	??___fleq+1
  8462  1BA8  3080               	movlw	128
  8463  1BA9  0575               	andwf	___fleq@ff1+2,w
  8464  1BAA  00A2               	movwf	??___fleq+2
  8465  1BAB  307F               	movlw	127
  8466  1BAC  0576               	andwf	___fleq@ff1+3,w
  8467  1BAD  00A3               	movwf	??___fleq+3
  8468  1BAE  0823               	movf	??___fleq+3,w
  8469  1BAF  0422               	iorwf	??___fleq+2,w
  8470  1BB0  0421               	iorwf	??___fleq+1,w
  8471  1BB1  0420               	iorwf	??___fleq,w
  8472  1BB2  1D03               	skipz
  8473  1BB3  2BB5               	goto	u4651
  8474  1BB4  2BB6               	goto	u4650
  8475  1BB5                     u4651:
  8476  1BB5  2BBE               	goto	l521
  8477  1BB6                     u4650:
  8478  1BB6                     l2888:
  8479  1BB6  3000               	movlw	0
  8480  1BB7  00F6               	movwf	___fleq@ff1+3
  8481  1BB8  3000               	movlw	0
  8482  1BB9  00F5               	movwf	___fleq@ff1+2
  8483  1BBA  3000               	movlw	0
  8484  1BBB  00F4               	movwf	___fleq@ff1+1
  8485  1BBC  3000               	movlw	0
  8486  1BBD  00F3               	movwf	___fleq@ff1
  8487  1BBE                     l521:
  8488  1BBE  3000               	movlw	0
  8489  1BBF  0577               	andwf	___fleq@ff2,w
  8490  1BC0  00A0               	movwf	??___fleq
  8491  1BC1  3000               	movlw	0
  8492  1BC2  0578               	andwf	___fleq@ff2+1,w
  8493  1BC3  00A1               	movwf	??___fleq+1
  8494  1BC4  3080               	movlw	128
  8495  1BC5  0579               	andwf	___fleq@ff2+2,w
  8496  1BC6  00A2               	movwf	??___fleq+2
  8497  1BC7  307F               	movlw	127
  8498  1BC8  057A               	andwf	___fleq@ff2+3,w
  8499  1BC9  00A3               	movwf	??___fleq+3
  8500  1BCA  0823               	movf	??___fleq+3,w
  8501  1BCB  0422               	iorwf	??___fleq+2,w
  8502  1BCC  0421               	iorwf	??___fleq+1,w
  8503  1BCD  0420               	iorwf	??___fleq,w
  8504  1BCE  1D03               	skipz
  8505  1BCF  2BD1               	goto	u4661
  8506  1BD0  2BD2               	goto	u4660
  8507  1BD1                     u4661:
  8508  1BD1  2BDA               	goto	l522
  8509  1BD2                     u4660:
  8510  1BD2                     l2890:
  8511  1BD2  3000               	movlw	0
  8512  1BD3  00FA               	movwf	___fleq@ff2+3
  8513  1BD4  3000               	movlw	0
  8514  1BD5  00F9               	movwf	___fleq@ff2+2
  8515  1BD6  3000               	movlw	0
  8516  1BD7  00F8               	movwf	___fleq@ff2+1
  8517  1BD8  3000               	movlw	0
  8518  1BD9  00F7               	movwf	___fleq@ff2
  8519  1BDA                     l522:
  8520  1BDA  087A               	movf	___fleq@ff2+3,w
  8521  1BDB  0676               	xorwf	___fleq@ff1+3,w
  8522  1BDC  1D03               	skipz
  8523  1BDD  2BE8               	goto	u4675
  8524  1BDE  0879               	movf	___fleq@ff2+2,w
  8525  1BDF  0675               	xorwf	___fleq@ff1+2,w
  8526  1BE0  1D03               	skipz
  8527  1BE1  2BE8               	goto	u4675
  8528  1BE2  0878               	movf	___fleq@ff2+1,w
  8529  1BE3  0674               	xorwf	___fleq@ff1+1,w
  8530  1BE4  1D03               	skipz
  8531  1BE5  2BE8               	goto	u4675
  8532  1BE6  0877               	movf	___fleq@ff2,w
  8533  1BE7  0673               	xorwf	___fleq@ff1,w
  8534  1BE8                     u4675:
  8535  1BE8  1903               	skipnz
  8536  1BE9  2BEB               	goto	u4671
  8537  1BEA  2BEC               	goto	u4670
  8538  1BEB                     u4671:
  8539  1BEB  2BEE               	goto	l2894
  8540  1BEC                     u4670:
  8541  1BEC                     l2892:
  8542  1BEC  1003               	clrc
  8543  1BED  2BEF               	goto	l523
  8544  1BEE                     l2894:
  8545  1BEE  1403               	setc
  8546  1BEF                     l523:
  8547  1BEF  0008               	return
  8548  1BF0                     __end_of___fleq:
  8549                           
  8550                           	psect	text23
  8551  1A56                     __ptext23:	
  8552 ;; *************** function _spiWrite *****************
  8553 ;; Defined at:
  8554 ;;		line 34 in file "SPI.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  dat             1    wreg     unsigned char 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  dat             1    3[COMMON] unsigned char 
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8568 ;;      Params:         0       0       0       0       0
  8569 ;;      Locals:         1       0       0       0       0
  8570 ;;      Temps:          0       0       0       0       0
  8571 ;;      Totals:         1       0       0       0       0
  8572 ;;Total ram usage:        1 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    1
  8575 ;; This function calls:
  8576 ;;		Nothing
  8577 ;; This function is called by:
  8578 ;;		_main
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function _spiWrite
  8584  1A56                     _spiWrite:
  8585                           
  8586                           ;incstack = 0
  8587                           ; Regs used in _spiWrite: [wreg]
  8588                           ;spiWrite@dat stored from wreg
  8589  1A56  00F3               	movwf	spiWrite@dat
  8590  1A57                     l3068:
  8591                           
  8592                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  8593  1A57  0873               	movf	spiWrite@dat,w
  8594  1A58  1283               	bcf	3,5	;RP0=0, select bank0
  8595  1A59  1303               	bcf	3,6	;RP1=0, select bank0
  8596  1A5A  0093               	movwf	19	;volatile
  8597  1A5B                     l115:
  8598  1A5B  0008               	return
  8599  1A5C                     __end_of_spiWrite:
  8600                           
  8601                           	psect	text24
  8602  07F7                     __ptext24:	
  8603 ;; *************** function _spiRead *****************
  8604 ;; Defined at:
  8605 ;;		line 47 in file "SPI.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      unsigned char 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0, pclath, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8619 ;;      Params:         0       0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0
  8622 ;;      Totals:         0       0       0       0       0
  8623 ;;Total ram usage:        0 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    2
  8626 ;; This function calls:
  8627 ;;		_spiReceiveWait
  8628 ;; This function is called by:
  8629 ;;		_main
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function _spiRead
  8635  07F7                     _spiRead:
  8636  07F7                     l3070:	
  8637                           ;incstack = 0
  8638                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8639                           
  8640                           
  8641                           ;SPI.c: 49:     spiReceiveWait();
  8642  07F7  120A  158A  20DC  120A  118A  	fcall	_spiReceiveWait
  8643  07FC                     l3072:
  8644                           
  8645                           ;SPI.c: 50:     return(SSPBUF);
  8646  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  8647  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  8648  07FE  0813               	movf	19,w	;volatile
  8649  07FF                     l123:
  8650  07FF  0008               	return
  8651  0800                     __end_of_spiRead:
  8652                           
  8653                           	psect	text25
  8654  08DC                     __ptext25:	
  8655 ;; *************** function _spiReceiveWait *****************
  8656 ;; Defined at:
  8657 ;;		line 29 in file "SPI.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;		None
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;		None
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  1    wreg      void 
  8664 ;; Registers used:
  8665 ;;		None
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8671 ;;      Params:         0       0       0       0       0
  8672 ;;      Locals:         0       0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0
  8674 ;;      Totals:         0       0       0       0       0
  8675 ;;Total ram usage:        0 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; Hardware stack levels required when called:    1
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_spiRead
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           
  8686                           ;psect for function _spiReceiveWait
  8687  08DC                     _spiReceiveWait:
  8688  08DC                     l2668:	
  8689                           ;incstack = 0
  8690                           ; Regs used in _spiReceiveWait: []
  8691                           
  8692  08DC                     l109:	
  8693                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  8694                           
  8695  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  8696  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  8697  08DE  1C14               	btfss	20,0	;volatile
  8698  08DF  28E1               	goto	u3991
  8699  08E0  28E2               	goto	u3990
  8700  08E1                     u3991:
  8701  08E1  28DC               	goto	l109
  8702  08E2                     u3990:
  8703  08E2                     l112:
  8704  08E2  0008               	return
  8705  08E3                     __end_of_spiReceiveWait:
  8706                           
  8707                           	psect	text26
  8708  1AB4                     __ptext26:	
  8709 ;; *************** function _setup *****************
  8710 ;; Defined at:
  8711 ;;		line 119 in file "main.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;		None
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      void 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0, pclath, cstack
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8725 ;;      Params:         0       0       0       0       0
  8726 ;;      Locals:         0       0       0       0       0
  8727 ;;      Temps:          0       0       0       0       0
  8728 ;;      Totals:         0       0       0       0       0
  8729 ;;Total ram usage:        0 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; Hardware stack levels required when called:    2
  8732 ;; This function calls:
  8733 ;;		_spiInit
  8734 ;; This function is called by:
  8735 ;;		_main
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           
  8740                           ;psect for function _setup
  8741  1AB4                     _setup:
  8742  1AB4                     l3032:	
  8743                           ;incstack = 0
  8744                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  8745                           
  8746                           
  8747                           ;main.c: 120:     ANSEL = 0;
  8748  1AB4  1683               	bsf	3,5	;RP0=1, select bank3
  8749  1AB5  1703               	bsf	3,6	;RP1=1, select bank3
  8750  1AB6  0188               	clrf	8	;volatile
  8751                           
  8752                           ;main.c: 121:     ANSELH = 0;
  8753  1AB7  0189               	clrf	9	;volatile
  8754  1AB8                     l3034:
  8755                           
  8756                           ;main.c: 122:     TRISC2 = 0;
  8757  1AB8  1683               	bsf	3,5	;RP0=1, select bank1
  8758  1AB9  1303               	bcf	3,6	;RP1=0, select bank1
  8759  1ABA  1107               	bcf	7,2	;volatile
  8760                           
  8761                           ;main.c: 123:     TRISB = 0;
  8762  1ABB  0186               	clrf	6	;volatile
  8763                           
  8764                           ;main.c: 124:     TRISD = 0;
  8765  1ABC  0188               	clrf	8	;volatile
  8766                           
  8767                           ;main.c: 125:     PORTB = 0;
  8768  1ABD  1283               	bcf	3,5	;RP0=0, select bank0
  8769  1ABE  1303               	bcf	3,6	;RP1=0, select bank0
  8770  1ABF  0186               	clrf	6	;volatile
  8771                           
  8772                           ;main.c: 126:     PORTD = 0;
  8773  1AC0  0188               	clrf	8	;volatile
  8774  1AC1                     l3036:
  8775                           
  8776                           ;main.c: 127:     PORTCbits.RC2 = 1;
  8777  1AC1  1507               	bsf	7,2	;volatile
  8778  1AC2                     l3038:
  8779                           
  8780                           ;main.c: 128:     PORTCbits.RC7 = 1;
  8781  1AC2  1787               	bsf	7,7	;volatile
  8782  1AC3                     l3040:
  8783                           
  8784                           ;main.c: 129:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  8785  1AC3  01F3               	clrf	spiInit@sDataSample
  8786  1AC4  01F4               	clrf	spiInit@sClockIdle
  8787  1AC5  01F5               	clrf	spiInit@sTransmitEdge
  8788  1AC6  3020               	movlw	32
  8789  1AC7  160A  158A  229E  160A  158A  	fcall	_spiInit
  8790  1ACC                     l3042:
  8791                           
  8792                           ;main.c: 132:     INTCONbits.PEIE = 1;
  8793  1ACC  170B               	bsf	11,6	;volatile
  8794  1ACD                     l3044:
  8795                           
  8796                           ;main.c: 133:     PIE1bits.RCIE = 1;
  8797  1ACD  1683               	bsf	3,5	;RP0=1, select bank1
  8798  1ACE  1303               	bcf	3,6	;RP1=0, select bank1
  8799  1ACF  168C               	bsf	12,5	;volatile
  8800  1AD0                     l3046:
  8801                           
  8802                           ;main.c: 134:     PIR1bits.RCIF = 0;
  8803  1AD0  1283               	bcf	3,5	;RP0=0, select bank0
  8804  1AD1  1303               	bcf	3,6	;RP1=0, select bank0
  8805  1AD2  128C               	bcf	12,5	;volatile
  8806  1AD3                     l3048:
  8807                           
  8808                           ;main.c: 135:     INTCONbits.GIE = 1;
  8809  1AD3  178B               	bsf	11,7	;volatile
  8810  1AD4                     l3050:
  8811                           
  8812                           ;main.c: 138:     TXSTAbits.SYNC = 0;
  8813  1AD4  1683               	bsf	3,5	;RP0=1, select bank1
  8814  1AD5  1303               	bcf	3,6	;RP1=0, select bank1
  8815  1AD6  1218               	bcf	24,4	;volatile
  8816  1AD7                     l3052:
  8817                           
  8818                           ;main.c: 139:     TXSTAbits.BRGH = 0;
  8819  1AD7  1118               	bcf	24,2	;volatile
  8820  1AD8                     l3054:
  8821                           
  8822                           ;main.c: 141:     BAUDCTLbits.BRG16 = 1;
  8823  1AD8  1683               	bsf	3,5	;RP0=1, select bank3
  8824  1AD9  1703               	bsf	3,6	;RP1=1, select bank3
  8825  1ADA  1587               	bsf	7,3	;volatile
  8826  1ADB                     l3056:
  8827                           
  8828                           ;main.c: 143:     SPBRG = 51;
  8829  1ADB  3033               	movlw	51
  8830  1ADC  1683               	bsf	3,5	;RP0=1, select bank1
  8831  1ADD  1303               	bcf	3,6	;RP1=0, select bank1
  8832  1ADE  0099               	movwf	25	;volatile
  8833  1ADF                     l3058:
  8834                           
  8835                           ;main.c: 144:     SPBRGH = 0;
  8836  1ADF  019A               	clrf	26	;volatile
  8837  1AE0                     l3060:
  8838                           
  8839                           ;main.c: 146:     RCSTAbits.SPEN =1;
  8840  1AE0  1283               	bcf	3,5	;RP0=0, select bank0
  8841  1AE1  1303               	bcf	3,6	;RP1=0, select bank0
  8842  1AE2  1798               	bsf	24,7	;volatile
  8843  1AE3                     l3062:
  8844                           
  8845                           ;main.c: 147:     RCSTAbits.RX9 = 0;
  8846  1AE3  1318               	bcf	24,6	;volatile
  8847  1AE4                     l3064:
  8848                           
  8849                           ;main.c: 148:     RCSTAbits.CREN = 1;
  8850  1AE4  1618               	bsf	24,4	;volatile
  8851  1AE5                     l3066:
  8852                           
  8853                           ;main.c: 150:     TXSTAbits.TXEN = 1;
  8854  1AE5  1683               	bsf	3,5	;RP0=1, select bank1
  8855  1AE6  1303               	bcf	3,6	;RP1=0, select bank1
  8856  1AE7  1698               	bsf	24,5	;volatile
  8857  1AE8                     l89:
  8858  1AE8  0008               	return
  8859  1AE9                     __end_of_setup:
  8860                           
  8861                           	psect	text27
  8862  1A9E                     __ptext27:	
  8863 ;; *************** function _spiInit *****************
  8864 ;; Defined at:
  8865 ;;		line 12 in file "SPI.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  sType           1    wreg     enum E1292
  8868 ;;  sDataSample     1    3[COMMON] enum E1300
  8869 ;;  sClockIdle      1    4[COMMON] enum E1304
  8870 ;;  sTransmitEdg    1    5[COMMON] enum E1308
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;  sType           1    6[COMMON] enum E1292
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  1    wreg      void 
  8875 ;; Registers used:
  8876 ;;		wreg, status,2, status,0
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8882 ;;      Params:         3       0       0       0       0
  8883 ;;      Locals:         1       0       0       0       0
  8884 ;;      Temps:          0       0       0       0       0
  8885 ;;      Totals:         4       0       0       0       0
  8886 ;;Total ram usage:        4 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; Hardware stack levels required when called:    1
  8889 ;; This function calls:
  8890 ;;		Nothing
  8891 ;; This function is called by:
  8892 ;;		_setup
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           
  8897                           ;psect for function _spiInit
  8898  1A9E                     _spiInit:
  8899                           
  8900                           ;incstack = 0
  8901                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  8902                           ;spiInit@sType stored from wreg
  8903  1A9E  00F6               	movwf	spiInit@sType
  8904  1A9F                     l2658:
  8905                           
  8906                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  8907  1A9F  1683               	bsf	3,5	;RP0=1, select bank1
  8908  1AA0  1303               	bcf	3,6	;RP1=0, select bank1
  8909  1AA1  1287               	bcf	7,5	;volatile
  8910                           
  8911                           ;SPI.c: 15:     if(sType & 0b00000100)
  8912  1AA2  1D76               	btfss	spiInit@sType,2
  8913  1AA3  2AA5               	goto	u3981
  8914  1AA4  2AA6               	goto	u3980
  8915  1AA5                     u3981:
  8916  1AA5  2AAA               	goto	l2664
  8917  1AA6                     u3980:
  8918  1AA6                     l2660:
  8919                           
  8920                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  8921  1AA6  0875               	movf	spiInit@sTransmitEdge,w
  8922  1AA7  0094               	movwf	20	;volatile
  8923  1AA8                     l2662:
  8924                           
  8925                           ;SPI.c: 18:         TRISC3 = 1;
  8926  1AA8  1587               	bsf	7,3	;volatile
  8927                           
  8928                           ;SPI.c: 19:     }
  8929  1AA9  2AAE               	goto	l105
  8930  1AAA                     l2664:
  8931                           
  8932                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  8933  1AAA  0873               	movf	spiInit@sDataSample,w
  8934  1AAB  0475               	iorwf	spiInit@sTransmitEdge,w
  8935  1AAC  0094               	movwf	20	;volatile
  8936  1AAD                     l2666:
  8937                           
  8938                           ;SPI.c: 23:         TRISC3 = 0;
  8939  1AAD  1187               	bcf	7,3	;volatile
  8940  1AAE                     l105:	
  8941                           ;SPI.c: 24:     }
  8942                           
  8943                           
  8944                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  8945  1AAE  0876               	movf	spiInit@sType,w
  8946  1AAF  0474               	iorwf	spiInit@sClockIdle,w
  8947  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
  8948  1AB1  1303               	bcf	3,6	;RP1=0, select bank0
  8949  1AB2  0094               	movwf	20	;volatile
  8950  1AB3                     l106:
  8951  1AB3  0008               	return
  8952  1AB4                     __end_of_spiInit:
  8953                           
  8954                           	psect	text28
  8955  1AE9                     __ptext28:	
  8956 ;; *************** function _envio_caract *****************
  8957 ;; Defined at:
  8958 ;;		line 24 in file "USART.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  st              2    4[COMMON] PTR unsigned char 
  8961 ;;		 -> e(20), d(20), c(30), 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  i               2    9[COMMON] int 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      void 
  8966 ;; Registers used:
  8967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8973 ;;      Params:         2       0       0       0       0
  8974 ;;      Locals:         2       0       0       0       0
  8975 ;;      Temps:          3       0       0       0       0
  8976 ;;      Totals:         7       0       0       0       0
  8977 ;;Total ram usage:        7 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:    2
  8980 ;; This function calls:
  8981 ;;		_envio_char
  8982 ;; This function is called by:
  8983 ;;		_main
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function _envio_caract
  8989  1AE9                     _envio_caract:
  8990  1AE9                     l3694:	
  8991                           ;incstack = 0
  8992                           ; Regs used in _envio_caract: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8993                           
  8994                           
  8995                           ;USART.c: 25:     int i = 0;
  8996  1AE9  01F9               	clrf	envio_caract@i
  8997  1AEA  01FA               	clrf	envio_caract@i+1
  8998                           
  8999                           ;USART.c: 26:     while (st[i] != 0){
  9000  1AEB  2B09               	goto	l3700
  9001  1AEC                     l3696:
  9002                           
  9003                           ;USART.c: 27:         envio_char(st[i]);
  9004  1AEC  0879               	movf	envio_caract@i,w
  9005  1AED  0774               	addwf	envio_caract@st,w
  9006  1AEE  00F7               	movwf	??_envio_caract+1
  9007  1AEF  0875               	movf	envio_caract@st+1,w
  9008  1AF0  00F6               	movwf	??_envio_caract
  9009  1AF1  1803               	skipnc
  9010  1AF2  0AF6               	incf	??_envio_caract,f
  9011  1AF3  1FF9               	btfss	envio_caract@i,7
  9012  1AF4  2AF6               	goto	u6080
  9013  1AF5  03F6               	decf	??_envio_caract,f
  9014  1AF6                     u6080:
  9015  1AF6  0876               	movf	??_envio_caract,w
  9016  1AF7  00F8               	movwf	??_envio_caract+2
  9017  1AF8  0877               	movf	??_envio_caract+1,w
  9018  1AF9  0084               	movwf	4
  9019  1AFA  1783               	bsf	3,7
  9020  1AFB  1C78               	btfss	??_envio_caract+2,0
  9021  1AFC  1383               	bcf	3,7
  9022  1AFD  0800               	movf	0,w
  9023  1AFE  160A  158A  2264  160A  158A  	fcall	_envio_char
  9024  1B03                     l3698:
  9025                           
  9026                           ;USART.c: 28:         i++;
  9027  1B03  3001               	movlw	1
  9028  1B04  07F9               	addwf	envio_caract@i,f
  9029  1B05  1803               	skipnc
  9030  1B06  0AFA               	incf	envio_caract@i+1,f
  9031  1B07  3000               	movlw	0
  9032  1B08  07FA               	addwf	envio_caract@i+1,f
  9033  1B09                     l3700:
  9034                           
  9035                           ;USART.c: 26:     while (st[i] != 0){
  9036  1B09  0879               	movf	envio_caract@i,w
  9037  1B0A  0774               	addwf	envio_caract@st,w
  9038  1B0B  00F7               	movwf	??_envio_caract+1
  9039  1B0C  0875               	movf	envio_caract@st+1,w
  9040  1B0D  00F6               	movwf	??_envio_caract
  9041  1B0E  1803               	skipnc
  9042  1B0F  0AF6               	incf	??_envio_caract,f
  9043  1B10  1FF9               	btfss	envio_caract@i,7
  9044  1B11  2B13               	goto	u6090
  9045  1B12  03F6               	decf	??_envio_caract,f
  9046  1B13                     u6090:
  9047  1B13  0876               	movf	??_envio_caract,w
  9048  1B14  00F8               	movwf	??_envio_caract+2
  9049  1B15  0877               	movf	??_envio_caract+1,w
  9050  1B16  0084               	movwf	4
  9051  1B17  1783               	bsf	3,7
  9052  1B18  1C78               	btfss	??_envio_caract+2,0
  9053  1B19  1383               	bcf	3,7
  9054  1B1A  0800               	movf	0,w
  9055  1B1B  1D03               	btfss	3,2
  9056  1B1C  2B1E               	goto	u6101
  9057  1B1D  2B1F               	goto	u6100
  9058  1B1E                     u6101:
  9059  1B1E  2AEC               	goto	l3696
  9060  1B1F                     u6100:
  9061  1B1F                     l139:
  9062  1B1F  0008               	return
  9063  1B20                     __end_of_envio_caract:
  9064                           
  9065                           	psect	text29
  9066  1A64                     __ptext29:	
  9067 ;; *************** function _envio_char *****************
  9068 ;; Defined at:
  9069 ;;		line 19 in file "USART.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  dato            1    wreg     unsigned char 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  dato            1    3[COMMON] unsigned char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         0       0       0       0       0
  9084 ;;      Locals:         1       0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0
  9086 ;;      Totals:         1       0       0       0       0
  9087 ;;Total ram usage:        1 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    1
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_envio_caract
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function _envio_char
  9099  1A64                     _envio_char:
  9100                           
  9101                           ;incstack = 0
  9102                           ; Regs used in _envio_char: [wreg]
  9103                           ;envio_char@dato stored from wreg
  9104  1A64  00F3               	movwf	envio_char@dato
  9105  1A65                     l2670:
  9106  1A65                     l130:	
  9107                           ;USART.c: 20:     while(!TXIF);
  9108                           
  9109  1A65  1283               	bcf	3,5	;RP0=0, select bank0
  9110  1A66  1303               	bcf	3,6	;RP1=0, select bank0
  9111  1A67  1E0C               	btfss	12,4	;volatile
  9112  1A68  2A6A               	goto	u4001
  9113  1A69  2A6B               	goto	u4000
  9114  1A6A                     u4001:
  9115  1A6A  2A65               	goto	l130
  9116  1A6B                     u4000:
  9117  1A6B                     l2672:
  9118                           
  9119                           ;USART.c: 21:     TXREG = dato;
  9120  1A6B  0873               	movf	envio_char@dato,w
  9121  1A6C  0099               	movwf	25	;volatile
  9122  1A6D                     l133:
  9123  1A6D  0008               	return
  9124  1A6E                     __end_of_envio_char:
  9125                           
  9126                           	psect	text30
  9127  1A8B                     __ptext30:	
  9128 ;; *************** function _Interrupciones *****************
  9129 ;; Defined at:
  9130 ;;		line 58 in file "main.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9144 ;;      Params:         0       0       0       0       0
  9145 ;;      Locals:         0       0       0       0       0
  9146 ;;      Temps:          3       0       0       0       0
  9147 ;;      Totals:         3       0       0       0       0
  9148 ;;Total ram usage:        3 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		Interrupt level 1
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           
  9158                           ;psect for function _Interrupciones
  9159  1A8B                     _Interrupciones:
  9160  1A8B                     i1l3348:
  9161                           
  9162                           ;main.c: 59:     if(PIR1bits.RCIF){
  9163  1A8B  1283               	bcf	3,5	;RP0=0, select bank0
  9164  1A8C  1303               	bcf	3,6	;RP1=0, select bank0
  9165  1A8D  1E8C               	btfss	12,5	;volatile
  9166  1A8E  2A90               	goto	u556_21
  9167  1A8F  2A91               	goto	u556_20
  9168  1A90                     u556_21:
  9169  1A90  2A97               	goto	i1l72
  9170  1A91                     u556_20:
  9171  1A91                     i1l3350:
  9172                           
  9173                           ;main.c: 60:         dato = RCREG;
  9174  1A91  081A               	movf	26,w	;volatile
  9175  1A92  00F0               	movwf	??_Interrupciones
  9176  1A93  0870               	movf	??_Interrupciones,w
  9177  1A94  1683               	bsf	3,5	;RP0=1, select bank1
  9178  1A95  1303               	bcf	3,6	;RP1=0, select bank1
  9179  1A96  00D9               	movwf	_dato^(0+128)
  9180  1A97                     i1l72:
  9181  1A97  0872               	movf	??_Interrupciones+2,w
  9182  1A98  008A               	movwf	10
  9183  1A99  0E71               	swapf	??_Interrupciones+1,w
  9184  1A9A  0083               	movwf	3
  9185  1A9B  0EFE               	swapf	btemp,f
  9186  1A9C  0E7E               	swapf	btemp,w
  9187  1A9D  0009               	retfie
  9188  1A9E                     __end_of_Interrupciones:
  9189  007E                     btemp	set	126	;btemp
  9190  007E                     wtemp0	set	126
  9191                           
  9192                           	psect	intentry
  9193  0004                     __pintentry:	
  9194                           ;incstack = 0
  9195                           ; Regs used in _Interrupciones: [wreg]
  9196                           
  9197  0004                     interrupt_function:
  9198  007E                     saved_w	set	btemp
  9199  0004  00FE               	movwf	btemp
  9200  0005  0E03               	swapf	3,w
  9201  0006  00F1               	movwf	??_Interrupciones+1
  9202  0007  080A               	movf	10,w
  9203  0008  00F2               	movwf	??_Interrupciones+2
  9204  0009  160A  158A  2A8B   	ljmp	_Interrupciones
  9205                           
  9206                           	psect	config
  9207                           
  9208                           ;Config register CONFIG1 @ 0x2007
  9209                           ;	Oscillator Selection bits
  9210                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  9211                           ;	Watchdog Timer Enable bit
  9212                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9213                           ;	Power-up Timer Enable bit
  9214                           ;	PWRTE = OFF, PWRT disabled
  9215                           ;	RE3/MCLR pin function select bit
  9216                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9217                           ;	Code Protection bit
  9218                           ;	CP = OFF, Program memory code protection is disabled
  9219                           ;	Data Code Protection bit
  9220                           ;	CPD = OFF, Data memory code protection is disabled
  9221                           ;	Brown Out Reset Selection bits
  9222                           ;	BOREN = OFF, BOR disabled
  9223                           ;	Internal External Switchover bit
  9224                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9225                           ;	Fail-Safe Clock Monitor Enabled bit
  9226                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9227                           ;	Low Voltage Programming Enable bit
  9228                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9229                           ;	In-Circuit Debugger Mode bit
  9230                           ;	DEBUG = 0x1, unprogrammed default
  9231  2007                     	org	8199
  9232  2007  20D6               	dw	8406
  9233                           
  9234                           ;Config register CONFIG2 @ 0x2008
  9235                           ;	Brown-out Reset Selection bit
  9236                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9237                           ;	Flash Program Memory Self Write Enable bits
  9238                           ;	WRT = OFF, Write protection off
  9239  2008                     	org	8200
  9240  2008  3FFF               	dw	16383
  9241                           
  9242                           	psect	text1_split_1
  9243  0028                     u5740:
  9244  0028                     l3526:
  9245  0028  1683               	bsf	3,5	;RP0=1, select bank1
  9246  0029  1303               	bcf	3,6	;RP1=0, select bank1
  9247  002A  0845               	movf	(sprintf@fval+3)^(0+128),w
  9248  002B  00F6               	movwf	___fleq@ff1+3
  9249  002C  0844               	movf	(sprintf@fval+2)^(0+128),w
  9250  002D  00F5               	movwf	___fleq@ff1+2
  9251  002E  0843               	movf	(sprintf@fval+1)^(0+128),w
  9252  002F  00F4               	movwf	___fleq@ff1+1
  9253  0030  0842               	movf	sprintf@fval^(0+128),w
  9254  0031  00F3               	movwf	___fleq@ff1
  9255  0032  3000               	movlw	0
  9256  0033  00FA               	movwf	___fleq@ff2+3
  9257  0034  3000               	movlw	0
  9258  0035  00F9               	movwf	___fleq@ff2+2
  9259  0036  3000               	movlw	0
  9260  0037  00F8               	movwf	___fleq@ff2+1
  9261  0038  3000               	movlw	0
  9262  0039  00F7               	movwf	___fleq@ff2
  9263  003A  160A  158A  23A0  120A  118A  	fcall	___fleq
  9264  003F  1803               	btfsc	3,0
  9265  0040  2842               	goto	u5751
  9266  0041  2843               	goto	u5750
  9267  0042                     u5751:
  9268  0042  28EB               	goto	l3546
  9269  0043                     u5750:
  9270  0043                     l3528:
  9271  0043  1683               	bsf	3,5	;RP0=1, select bank1
  9272  0044  1303               	bcf	3,6	;RP1=0, select bank1
  9273  0045  0845               	movf	(sprintf@fval+3)^(0+128),w
  9274  0046  1283               	bcf	3,5	;RP0=0, select bank0
  9275  0047  1303               	bcf	3,6	;RP1=0, select bank0
  9276  0048  00D8               	movwf	___fltol@f1+3
  9277  0049  1683               	bsf	3,5	;RP0=1, select bank1
  9278  004A  1303               	bcf	3,6	;RP1=0, select bank1
  9279  004B  0844               	movf	(sprintf@fval+2)^(0+128),w
  9280  004C  1283               	bcf	3,5	;RP0=0, select bank0
  9281  004D  1303               	bcf	3,6	;RP1=0, select bank0
  9282  004E  00D7               	movwf	___fltol@f1+2
  9283  004F  1683               	bsf	3,5	;RP0=1, select bank1
  9284  0050  1303               	bcf	3,6	;RP1=0, select bank1
  9285  0051  0843               	movf	(sprintf@fval+1)^(0+128),w
  9286  0052  1283               	bcf	3,5	;RP0=0, select bank0
  9287  0053  1303               	bcf	3,6	;RP1=0, select bank0
  9288  0054  00D6               	movwf	___fltol@f1+1
  9289  0055  1683               	bsf	3,5	;RP0=1, select bank1
  9290  0056  1303               	bcf	3,6	;RP1=0, select bank1
  9291  0057  0842               	movf	sprintf@fval^(0+128),w
  9292  0058  1283               	bcf	3,5	;RP0=0, select bank0
  9293  0059  1303               	bcf	3,6	;RP1=0, select bank0
  9294  005A  00D5               	movwf	___fltol@f1
  9295  005B  160A  158A  2567  120A  118A  	fcall	___fltol
  9296  0060  1283               	bcf	3,5	;RP0=0, select bank0
  9297  0061  1303               	bcf	3,6	;RP1=0, select bank0
  9298  0062  0858               	movf	?___fltol+3,w
  9299  0063  0457               	iorwf	?___fltol+2,w
  9300  0064  0456               	iorwf	?___fltol+1,w
  9301  0065  0455               	iorwf	?___fltol,w
  9302  0066  1D03               	skipz
  9303  0067  2869               	goto	u5761
  9304  0068  286A               	goto	u5760
  9305  0069                     u5761:
  9306  0069  28EB               	goto	l3546
  9307  006A                     u5760:
  9308  006A                     l3530:
  9309  006A  1683               	bsf	3,5	;RP0=1, select bank1
  9310  006B  1303               	bcf	3,6	;RP1=0, select bank1
  9311  006C  0841               	movf	(sprintf@eexp+1)^(0+128),w
  9312  006D  3A80               	xorlw	128
  9313  006E  00FF               	movwf	btemp+1
  9314  006F  3080               	movlw	128
  9315  0070  027F               	subwf	btemp+1,w
  9316  0071  1D03               	skipz
  9317  0072  2875               	goto	u5775
  9318  0073  3002               	movlw	2
  9319  0074  0240               	subwf	sprintf@eexp^(0+128),w
  9320  0075                     u5775:
  9321  0075  1C03               	skipc
  9322  0076  2878               	goto	u5771
  9323  0077  2879               	goto	u5770
  9324  0078                     u5771:
  9325  0078  28EB               	goto	l3546
  9326  0079                     u5770:
  9327  0079                     l3532:
  9328                           
  9329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9330  0079  1683               	bsf	3,5	;RP0=1, select bank1
  9331  007A  1303               	bcf	3,6	;RP1=0, select bank1
  9332  007B  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  9333  007C  00F6               	movwf	___flge@ff1+3
  9334  007D  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  9335  007E  00F5               	movwf	___flge@ff1+2
  9336  007F  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  9337  0080  00F4               	movwf	___flge@ff1+1
  9338  0081  083C               	movf	sprintf@tmpval^(0+128),w
  9339  0082  00F3               	movwf	___flge@ff1
  9340  0083  3040               	movlw	64
  9341  0084  00FA               	movwf	___flge@ff2+3
  9342  0085  3089               	movlw	137
  9343  0086  00F9               	movwf	___flge@ff2+2
  9344  0087  3070               	movlw	112
  9345  0088  00F8               	movwf	___flge@ff2+1
  9346  0089  305F               	movlw	95
  9347  008A  00F7               	movwf	___flge@ff2
  9348  008B  160A  158A  25E3  120A  118A  	fcall	___flge
  9349  0090  1803               	btfsc	3,0
  9350  0091  2893               	goto	u5781
  9351  0092  2894               	goto	u5780
  9352  0093                     u5781:
  9353  0093  289D               	goto	l3536
  9354  0094                     u5780:
  9355  0094                     l3534:
  9356                           
  9357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9358  0094  30F7               	movlw	247
  9359  0095  1683               	bsf	3,5	;RP0=1, select bank1
  9360  0096  1303               	bcf	3,6	;RP1=0, select bank1
  9361  0097  07C0               	addwf	sprintf@eexp^(0+128),f
  9362  0098  1803               	skipnc
  9363  0099  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  9364  009A  30FF               	movlw	255
  9365  009B  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  9366                           
  9367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9368  009C  28A5               	goto	l3538
  9369  009D                     l3536:
  9370                           
  9371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9372  009D  30F8               	movlw	248
  9373  009E  1683               	bsf	3,5	;RP0=1, select bank1
  9374  009F  1303               	bcf	3,6	;RP1=0, select bank1
  9375  00A0  07C0               	addwf	sprintf@eexp^(0+128),f
  9376  00A1  1803               	skipnc
  9377  00A2  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  9378  00A3  30FF               	movlw	255
  9379  00A4  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  9380  00A5                     l3538:
  9381                           
  9382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9383  00A5  0840               	movf	sprintf@eexp^(0+128),w
  9384  00A6  120A  158A  249D  120A  118A  	fcall	_scale
  9385  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  9386  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  9387  00AD  0845               	movf	?_scale+3,w
  9388  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  9389  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  9390  00B0  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  9391  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  9392  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  9393  00B3  0844               	movf	?_scale+2,w
  9394  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  9395  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  9396  00B6  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  9397  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  9398  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  9399  00B9  0843               	movf	?_scale+1,w
  9400  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  9401  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  9402  00BC  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  9403  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9404  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9405  00BF  0842               	movf	?_scale,w
  9406  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9407  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9408  00C2  00BC               	movwf	sprintf@tmpval^(0+128)
  9409  00C3                     l3540:
  9410  00C3  0845               	movf	(sprintf@fval+3)^(0+128),w
  9411  00C4  00F6               	movwf	__div_to_l_@f1+3
  9412  00C5  0844               	movf	(sprintf@fval+2)^(0+128),w
  9413  00C6  00F5               	movwf	__div_to_l_@f1+2
  9414  00C7  0843               	movf	(sprintf@fval+1)^(0+128),w
  9415  00C8  00F4               	movwf	__div_to_l_@f1+1
  9416  00C9  0842               	movf	sprintf@fval^(0+128),w
  9417  00CA  00F3               	movwf	__div_to_l_@f1
  9418  00CB  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  9419  00CC  00FA               	movwf	__div_to_l_@f2+3
  9420  00CD  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  9421  00CE  00F9               	movwf	__div_to_l_@f2+2
  9422  00CF  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  9423  00D0  00F8               	movwf	__div_to_l_@f2+1
  9424  00D1  083C               	movf	sprintf@tmpval^(0+128),w
  9425  00D2  00F7               	movwf	__div_to_l_@f2
  9426  00D3  160A  118A  202A  120A  118A  	fcall	__div_to_l_
  9427  00D8  0876               	movf	?__div_to_l_+3,w
  9428  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  9429  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  9430  00DB  00B7               	movwf	(sprintf@val+3)^(0+128)
  9431  00DC  0875               	movf	?__div_to_l_+2,w
  9432  00DD  00B6               	movwf	(sprintf@val+2)^(0+128)
  9433  00DE  0874               	movf	?__div_to_l_+1,w
  9434  00DF  00B5               	movwf	(sprintf@val+1)^(0+128)
  9435  00E0  0873               	movf	?__div_to_l_,w
  9436  00E1  00B4               	movwf	sprintf@val^(0+128)
  9437  00E2                     l3544:
  9438                           
  9439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9440  00E2  3000               	movlw	0
  9441  00E3  00C5               	movwf	(sprintf@fval+3)^(0+128)
  9442  00E4  3000               	movlw	0
  9443  00E5  00C4               	movwf	(sprintf@fval+2)^(0+128)
  9444  00E6  3000               	movlw	0
  9445  00E7  00C3               	movwf	(sprintf@fval+1)^(0+128)
  9446  00E8  3000               	movlw	0
  9447  00E9  00C2               	movwf	sprintf@fval^(0+128)
  9448                           
  9449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9450  00EA  2951               	goto	l3552
  9451  00EB                     l3546:
  9452                           
  9453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9454  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  9455  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  9456  00ED  0845               	movf	(sprintf@fval+3)^(0+128),w
  9457  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  9458  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  9459  00F0  00D8               	movwf	___fltol@f1+3
  9460  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9461  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9462  00F3  0844               	movf	(sprintf@fval+2)^(0+128),w
  9463  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  9464  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  9465  00F6  00D7               	movwf	___fltol@f1+2
  9466  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  9467  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  9468  00F9  0843               	movf	(sprintf@fval+1)^(0+128),w
  9469  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  9470  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  9471  00FC  00D6               	movwf	___fltol@f1+1
  9472  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  9473  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  9474  00FF  0842               	movf	sprintf@fval^(0+128),w
  9475  0100  1283               	bcf	3,5	;RP0=0, select bank0
  9476  0101  1303               	bcf	3,6	;RP1=0, select bank0
  9477  0102  00D5               	movwf	___fltol@f1
  9478  0103  160A  158A  2567  120A  118A  	fcall	___fltol
  9479  0108  1283               	bcf	3,5	;RP0=0, select bank0
  9480  0109  1303               	bcf	3,6	;RP1=0, select bank0
  9481  010A  0858               	movf	?___fltol+3,w
  9482  010B  1683               	bsf	3,5	;RP0=1, select bank1
  9483  010C  1303               	bcf	3,6	;RP1=0, select bank1
  9484  010D  00B7               	movwf	(sprintf@val+3)^(0+128)
  9485  010E  1283               	bcf	3,5	;RP0=0, select bank0
  9486  010F  1303               	bcf	3,6	;RP1=0, select bank0
  9487  0110  0857               	movf	?___fltol+2,w
  9488  0111  1683               	bsf	3,5	;RP0=1, select bank1
  9489  0112  1303               	bcf	3,6	;RP1=0, select bank1
  9490  0113  00B6               	movwf	(sprintf@val+2)^(0+128)
  9491  0114  1283               	bcf	3,5	;RP0=0, select bank0
  9492  0115  1303               	bcf	3,6	;RP1=0, select bank0
  9493  0116  0856               	movf	?___fltol+1,w
  9494  0117  1683               	bsf	3,5	;RP0=1, select bank1
  9495  0118  1303               	bcf	3,6	;RP1=0, select bank1
  9496  0119  00B5               	movwf	(sprintf@val+1)^(0+128)
  9497  011A  1283               	bcf	3,5	;RP0=0, select bank0
  9498  011B  1303               	bcf	3,6	;RP1=0, select bank0
  9499  011C  0855               	movf	?___fltol,w
  9500  011D  1683               	bsf	3,5	;RP0=1, select bank1
  9501  011E  1303               	bcf	3,6	;RP1=0, select bank1
  9502  011F  00B4               	movwf	sprintf@val^(0+128)
  9503  0120                     l3548:
  9504                           
  9505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9506  0120  0837               	movf	(sprintf@val+3)^(0+128),w
  9507  0121  00F6               	movwf	___xxtofl@val+3
  9508  0122  0836               	movf	(sprintf@val+2)^(0+128),w
  9509  0123  00F5               	movwf	___xxtofl@val+2
  9510  0124  0835               	movf	(sprintf@val+1)^(0+128),w
  9511  0125  00F4               	movwf	___xxtofl@val+1
  9512  0126  0834               	movf	sprintf@val^(0+128),w
  9513  0127  00F3               	movwf	___xxtofl@val
  9514  0128  3000               	movlw	0
  9515  0129  160A  158A  2687  120A  118A  	fcall	___xxtofl
  9516  012E  0876               	movf	?___xxtofl+3,w
  9517  012F  1683               	bsf	3,5	;RP0=1, select bank1
  9518  0130  1303               	bcf	3,6	;RP1=0, select bank1
  9519  0131  00A3               	movwf	(___flsub@a+3)^(0+128)
  9520  0132  0875               	movf	?___xxtofl+2,w
  9521  0133  00A2               	movwf	(___flsub@a+2)^(0+128)
  9522  0134  0874               	movf	?___xxtofl+1,w
  9523  0135  00A1               	movwf	(___flsub@a+1)^(0+128)
  9524  0136  0873               	movf	?___xxtofl,w
  9525  0137  00A0               	movwf	___flsub@a^(0+128)
  9526  0138  0845               	movf	(sprintf@fval+3)^(0+128),w
  9527  0139  00A7               	movwf	(___flsub@b+3)^(0+128)
  9528  013A  0844               	movf	(sprintf@fval+2)^(0+128),w
  9529  013B  00A6               	movwf	(___flsub@b+2)^(0+128)
  9530  013C  0843               	movf	(sprintf@fval+1)^(0+128),w
  9531  013D  00A5               	movwf	(___flsub@b+1)^(0+128)
  9532  013E  0842               	movf	sprintf@fval^(0+128),w
  9533  013F  00A4               	movwf	___flsub@b^(0+128)
  9534  0140  160A  158A  23F0  120A  118A  	fcall	___flsub
  9535  0145  1683               	bsf	3,5	;RP0=1, select bank1
  9536  0146  1303               	bcf	3,6	;RP1=0, select bank1
  9537  0147  0823               	movf	(?___flsub+3)^(0+128),w
  9538  0148  00C5               	movwf	(sprintf@fval+3)^(0+128)
  9539  0149  0822               	movf	(?___flsub+2)^(0+128),w
  9540  014A  00C4               	movwf	(sprintf@fval+2)^(0+128)
  9541  014B  0821               	movf	(?___flsub+1)^(0+128),w
  9542  014C  00C3               	movwf	(sprintf@fval+1)^(0+128)
  9543  014D  0820               	movf	?___flsub^(0+128),w
  9544  014E  00C2               	movwf	sprintf@fval^(0+128)
  9545  014F                     l3550:
  9546                           
  9547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9548  014F  01C0               	clrf	sprintf@eexp^(0+128)
  9549  0150  01C1               	clrf	(sprintf@eexp+1)^(0+128)
  9550  0151                     l3552:
  9551                           
  9552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9553  0151  01C8               	clrf	sprintf@c^(0+128)
  9554  0152  0AC8               	incf	sprintf@c^(0+128),f
  9555  0153                     l3558:
  9556                           
  9557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9558  0153  0848               	movf	sprintf@c^(0+128),w
  9559  0154  1283               	bcf	3,5	;RP0=0, select bank0
  9560  0155  1303               	bcf	3,6	;RP1=0, select bank0
  9561  0156  00EA               	movwf	??_sprintf
  9562  0157  3001               	movlw	1
  9563  0158                     u5795:
  9564  0158  1003               	clrc
  9565  0159  0DEA               	rlf	??_sprintf,f
  9566  015A  3EFF               	addlw	-1
  9567  015B  1D03               	skipz
  9568  015C  2958               	goto	u5795
  9569  015D  1003               	clrc
  9570  015E  0D6A               	rlf	??_sprintf,w
  9571  015F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9572  0160  0084               	movwf	4
  9573  0161  120A  158A  2000  120A  118A  	fcall	stringdir
  9574  0166  00EB               	movwf	??_sprintf+1
  9575  0167  120A  158A  2000  120A  118A  	fcall	stringdir
  9576  016C  00EC               	movwf	??_sprintf+2
  9577  016D  120A  158A  2000  120A  118A  	fcall	stringdir
  9578  0172  00ED               	movwf	??_sprintf+3
  9579  0173  120A  158A  2000  120A  118A  	fcall	stringdir
  9580  0178  00EE               	movwf	??_sprintf+4
  9581  0179  086E               	movf	??_sprintf+4,w
  9582  017A  1683               	bsf	3,5	;RP0=1, select bank1
  9583  017B  1303               	bcf	3,6	;RP1=0, select bank1
  9584  017C  0237               	subwf	(sprintf@val+3)^(0+128),w
  9585  017D  1D03               	skipz
  9586  017E  2995               	goto	u5805
  9587  017F  1283               	bcf	3,5	;RP0=0, select bank0
  9588  0180  1303               	bcf	3,6	;RP1=0, select bank0
  9589  0181  086D               	movf	??_sprintf+3,w
  9590  0182  1683               	bsf	3,5	;RP0=1, select bank1
  9591  0183  1303               	bcf	3,6	;RP1=0, select bank1
  9592  0184  0236               	subwf	(sprintf@val+2)^(0+128),w
  9593  0185  1D03               	skipz
  9594  0186  2995               	goto	u5805
  9595  0187  1283               	bcf	3,5	;RP0=0, select bank0
  9596  0188  1303               	bcf	3,6	;RP1=0, select bank0
  9597  0189  086C               	movf	??_sprintf+2,w
  9598  018A  1683               	bsf	3,5	;RP0=1, select bank1
  9599  018B  1303               	bcf	3,6	;RP1=0, select bank1
  9600  018C  0235               	subwf	(sprintf@val+1)^(0+128),w
  9601  018D  1D03               	skipz
  9602  018E  2995               	goto	u5805
  9603  018F  1283               	bcf	3,5	;RP0=0, select bank0
  9604  0190  1303               	bcf	3,6	;RP1=0, select bank0
  9605  0191  086B               	movf	??_sprintf+1,w
  9606  0192  1683               	bsf	3,5	;RP0=1, select bank1
  9607  0193  1303               	bcf	3,6	;RP1=0, select bank1
  9608  0194  0234               	subwf	sprintf@val^(0+128),w
  9609  0195                     u5805:
  9610  0195  1803               	skipnc
  9611  0196  2998               	goto	u5801
  9612  0197  2999               	goto	u5800
  9613  0198                     u5801:
  9614  0198  299A               	goto	l3562
  9615  0199                     u5800:
  9616  0199  29A8               	goto	l3564
  9617  019A                     l3562:
  9618  019A  3001               	movlw	1
  9619  019B  1283               	bcf	3,5	;RP0=0, select bank0
  9620  019C  1303               	bcf	3,6	;RP1=0, select bank0
  9621  019D  00EA               	movwf	??_sprintf
  9622  019E  086A               	movf	??_sprintf,w
  9623  019F  1683               	bsf	3,5	;RP0=1, select bank1
  9624  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  9625  01A1  07C8               	addwf	sprintf@c^(0+128),f
  9626  01A2  300A               	movlw	10
  9627  01A3  0648               	xorwf	sprintf@c^(0+128),w
  9628  01A4  1D03               	btfss	3,2
  9629  01A5  29A7               	goto	u5811
  9630  01A6  29A8               	goto	u5810
  9631  01A7                     u5811:
  9632  01A7  2953               	goto	l3558
  9633  01A8                     u5810:
  9634  01A8                     l3564:
  9635                           
  9636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9637  01A8  0848               	movf	sprintf@c^(0+128),w
  9638  01A9  0746               	addwf	sprintf@prec^(0+128),w
  9639  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  9640  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  9641  01AC  00EA               	movwf	??_sprintf
  9642  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  9643  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  9644  01AF  0847               	movf	(sprintf@prec+1)^(0+128),w
  9645  01B0  1803               	skipnc
  9646  01B1  0A47               	incf	(sprintf@prec+1)^(0+128),w
  9647  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  9648  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  9649  01B4  00EB               	movwf	??_sprintf+1
  9650  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  9651  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  9652  01B7  0840               	movf	sprintf@eexp^(0+128),w
  9653  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  9654  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  9655  01BA  076A               	addwf	??_sprintf,w
  9656  01BB  00EC               	movwf	??_sprintf+2
  9657  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  9658  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  9659  01BE  0841               	movf	(sprintf@eexp+1)^(0+128),w
  9660  01BF  1803               	skipnc
  9661  01C0  0A41               	incf	(sprintf@eexp+1)^(0+128),w
  9662  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  9663  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  9664  01C3  076B               	addwf	??_sprintf+1,w
  9665  01C4  00ED               	movwf	??_sprintf+3
  9666  01C5  086C               	movf	??_sprintf+2,w
  9667  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  9668  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  9669  01C8  02BA               	subwf	sprintf@width^(0+128),f
  9670  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  9671  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  9672  01CB  086D               	movf	??_sprintf+3,w
  9673  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  9674  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  9675  01CE  1C03               	skipc
  9676  01CF  03BB               	decf	(sprintf@width+1)^(0+128),f
  9677  01D0  02BB               	subwf	(sprintf@width+1)^(0+128),f
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9680  01D1  0846               	movf	sprintf@prec^(0+128),w
  9681  01D2  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  9682  01D3  1903               	btfsc	3,2
  9683  01D4  29D6               	goto	u5821
  9684  01D5  29D7               	goto	u5820
  9685  01D6                     u5821:
  9686  01D6  29DD               	goto	l3568
  9687  01D7                     u5820:
  9688  01D7                     l3566:
  9689                           
  9690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9691  01D7  30FF               	movlw	255
  9692  01D8  07BA               	addwf	sprintf@width^(0+128),f
  9693  01D9  1803               	skipnc
  9694  01DA  0ABB               	incf	(sprintf@width+1)^(0+128),f
  9695  01DB  30FF               	movlw	255
  9696  01DC  07BB               	addwf	(sprintf@width+1)^(0+128),f
  9697  01DD                     l3568:
  9698                           
  9699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9700  01DD  3003               	movlw	3
  9701  01DE  0538               	andwf	sprintf@flag^(0+128),w
  9702  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  9703  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  9704  01E1  00EA               	movwf	??_sprintf
  9705  01E2  3000               	movlw	0
  9706  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  9707  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  9708  01E5  0539               	andwf	(sprintf@flag+1)^(0+128),w
  9709  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  9710  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  9711  01E8  00EB               	movwf	??_sprintf+1
  9712  01E9  086A               	movf	??_sprintf,w
  9713  01EA  046B               	iorwf	??_sprintf+1,w
  9714  01EB  1903               	btfsc	3,2
  9715  01EC  29EE               	goto	u5831
  9716  01ED  29EF               	goto	u5830
  9717  01EE                     u5831:
  9718  01EE  2A10               	goto	l3578
  9719  01EF                     u5830:
  9720  01EF                     l3570:
  9721                           
  9722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9723  01EF  30FF               	movlw	255
  9724  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  9725  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  9726  01F2  07BA               	addwf	sprintf@width^(0+128),f
  9727  01F3  1803               	skipnc
  9728  01F4  0ABB               	incf	(sprintf@width+1)^(0+128),f
  9729  01F5  30FF               	movlw	255
  9730  01F6  07BB               	addwf	(sprintf@width+1)^(0+128),f
  9731  01F7  2A10               	goto	l3578
  9732  01F8                     l3572:
  9733                           
  9734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9735  01F8  3020               	movlw	32
  9736  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  9737  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  9738  01FB  00EA               	movwf	??_sprintf
  9739  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  9740  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  9741  01FE  0828               	movf	sprintf@sp^(0+128),w
  9742  01FF  0084               	movwf	4
  9743  0200  1783               	bsf	3,7
  9744  0201  1C29               	btfss	(sprintf@sp+1)^(0+128),0
  9745  0202  1383               	bcf	3,7
  9746  0203  1283               	bcf	3,5	;RP0=0, select bank0
  9747  0204  1303               	bcf	3,6	;RP1=0, select bank0
  9748  0205  086A               	movf	??_sprintf,w
  9749  0206  0080               	movwf	0
  9750  0207                     l3574:
  9751  0207  3001               	movlw	1
  9752  0208  1683               	bsf	3,5	;RP0=1, select bank1
  9753  0209  1303               	bcf	3,6	;RP1=0, select bank1
  9754  020A  07A8               	addwf	sprintf@sp^(0+128),f
  9755  020B  1803               	skipnc
  9756  020C  0AA9               	incf	(sprintf@sp+1)^(0+128),f
  9757  020D  3000               	movlw	0
  9758  020E  07A9               	addwf	(sprintf@sp+1)^(0+128),f
  9759  020F  29EF               	goto	l3570
  9760  0210                     l3578:
  9761                           
  9762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9763  0210  1683               	bsf	3,5	;RP0=1, select bank1
  9764  0211  1303               	bcf	3,6	;RP1=0, select bank1
  9765  0212  083B               	movf	(sprintf@width+1)^(0+128),w
  9766  0213  3A80               	xorlw	128
  9767  0214  00FF               	movwf	btemp+1
  9768  0215  3080               	movlw	128
  9769  0216  027F               	subwf	btemp+1,w
  9770  0217  1D03               	skipz
  9771  0218  2A1B               	goto	u5845
  9772  0219  3001               	movlw	1
  9773  021A  023A               	subwf	sprintf@width^(0+128),w
  9774  021B                     u5845:
  9775  021B  1803               	skipnc
  9776  021C  2A1E               	goto	u5841
  9777  021D  2A1F               	goto	u5840
  9778  021E                     u5841:
  9779  021E  29F8               	goto	l3572
  9780  021F                     u5840:
  9781  021F                     l3580:
  9782                           
  9783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9784  021F  3003               	movlw	3
  9785  0220  1683               	bsf	3,5	;RP0=1, select bank1
  9786  0221  1303               	bcf	3,6	;RP1=0, select bank1
  9787  0222  0538               	andwf	sprintf@flag^(0+128),w
  9788  0223  1283               	bcf	3,5	;RP0=0, select bank0
  9789  0224  1303               	bcf	3,6	;RP1=0, select bank0
  9790  0225  00EA               	movwf	??_sprintf
  9791  0226  3000               	movlw	0
  9792  0227  1683               	bsf	3,5	;RP0=1, select bank1
  9793  0228  1303               	bcf	3,6	;RP1=0, select bank1
  9794  0229  0539               	andwf	(sprintf@flag+1)^(0+128),w
  9795  022A  1283               	bcf	3,5	;RP0=0, select bank0
  9796  022B  1303               	bcf	3,6	;RP1=0, select bank0
  9797  022C  00EB               	movwf	??_sprintf+1
  9798  022D  086A               	movf	??_sprintf,w
  9799  022E  046B               	iorwf	??_sprintf+1,w
  9800  022F  1903               	btfsc	3,2
  9801  0230  2A32               	goto	u5851
  9802  0231  2A33               	goto	u5850
  9803  0232                     u5851:
  9804  0232  2AB8               	goto	l3594
  9805  0233                     u5850:
  9806  0233                     l3582:
  9807                           
  9808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9809  0233  302D               	movlw	45
  9810  0234  00EA               	movwf	??_sprintf
  9811  0235  1683               	bsf	3,5	;RP0=1, select bank1
  9812  0236  1303               	bcf	3,6	;RP1=0, select bank1
  9813  0237  0828               	movf	sprintf@sp^(0+128),w
  9814  0238  0084               	movwf	4
  9815  0239  1783               	bsf	3,7
  9816  023A  1C29               	btfss	(sprintf@sp+1)^(0+128),0
  9817  023B  1383               	bcf	3,7
  9818  023C  1283               	bcf	3,5	;RP0=0, select bank0
  9819  023D  1303               	bcf	3,6	;RP1=0, select bank0
  9820  023E  086A               	movf	??_sprintf,w
  9821  023F  0080               	movwf	0
  9822  0240                     l3584:
  9823  0240  3001               	movlw	1
  9824  0241  1683               	bsf	3,5	;RP0=1, select bank1
  9825  0242  1303               	bcf	3,6	;RP1=0, select bank1
  9826  0243  07A8               	addwf	sprintf@sp^(0+128),f
  9827  0244  1803               	skipnc
  9828  0245  0AA9               	incf	(sprintf@sp+1)^(0+128),f
  9829  0246  3000               	movlw	0
  9830  0247  07A9               	addwf	(sprintf@sp+1)^(0+128),f
  9831  0248  2AB8               	goto	l3594
  9832  0249                     l3586:
  9833                           
  9834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9835  0249  0848               	movf	sprintf@c^(0+128),w
  9836  024A  1283               	bcf	3,5	;RP0=0, select bank0
  9837  024B  1303               	bcf	3,6	;RP1=0, select bank0
  9838  024C  00EA               	movwf	??_sprintf
  9839  024D  3001               	movlw	1
  9840  024E                     u5865:
  9841  024E  1003               	clrc
  9842  024F  0DEA               	rlf	??_sprintf,f
  9843  0250  3EFF               	addlw	-1
  9844  0251  1D03               	skipz
  9845  0252  2A4E               	goto	u5865
  9846  0253  1003               	clrc
  9847  0254  0D6A               	rlf	??_sprintf,w
  9848  0255  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9849  0256  0084               	movwf	4
  9850  0257  120A  158A  2000  120A  118A  	fcall	stringdir
  9851  025C  00F3               	movwf	___lldiv@divisor
  9852  025D  120A  158A  2000  120A  118A  	fcall	stringdir
  9853  0262  00F4               	movwf	___lldiv@divisor+1
  9854  0263  120A  158A  2000  120A  118A  	fcall	stringdir
  9855  0268  00F5               	movwf	___lldiv@divisor+2
  9856  0269  120A  158A  2000  120A  118A  	fcall	stringdir
  9857  026E  00F6               	movwf	___lldiv@divisor+3
  9858  026F  1683               	bsf	3,5	;RP0=1, select bank1
  9859  0270  1303               	bcf	3,6	;RP1=0, select bank1
  9860  0271  0837               	movf	(sprintf@val+3)^(0+128),w
  9861  0272  00FA               	movwf	___lldiv@dividend+3
  9862  0273  0836               	movf	(sprintf@val+2)^(0+128),w
  9863  0274  00F9               	movwf	___lldiv@dividend+2
  9864  0275  0835               	movf	(sprintf@val+1)^(0+128),w
  9865  0276  00F8               	movwf	___lldiv@dividend+1
  9866  0277  0834               	movf	sprintf@val^(0+128),w
  9867  0278  00F7               	movwf	___lldiv@dividend
  9868  0279  160A  158A  2496  120A  118A  	fcall	___lldiv
  9869  027E  0876               	movf	?___lldiv+3,w
  9870  027F  1683               	bsf	3,5	;RP0=1, select bank1
  9871  0280  1303               	bcf	3,6	;RP1=0, select bank1
  9872  0281  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  9873  0282  0875               	movf	?___lldiv+2,w
  9874  0283  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  9875  0284  0874               	movf	?___lldiv+1,w
  9876  0285  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  9877  0286  0873               	movf	?___lldiv,w
  9878  0287  00BC               	movwf	sprintf@tmpval^(0+128)
  9879  0288                     l3588:
  9880                           
  9881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9882  0288  3000               	movlw	0
  9883  0289  00F6               	movwf	___llmod@divisor+3
  9884  028A  3000               	movlw	0
  9885  028B  00F5               	movwf	___llmod@divisor+2
  9886  028C  3000               	movlw	0
  9887  028D  00F4               	movwf	___llmod@divisor+1
  9888  028E  300A               	movlw	10
  9889  028F  00F3               	movwf	___llmod@divisor
  9890  0290  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  9891  0291  00FA               	movwf	___llmod@dividend+3
  9892  0292  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  9893  0293  00F9               	movwf	___llmod@dividend+2
  9894  0294  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  9895  0295  00F8               	movwf	___llmod@dividend+1
  9896  0296  083C               	movf	sprintf@tmpval^(0+128),w
  9897  0297  00F7               	movwf	___llmod@dividend
  9898  0298  160A  158A  2440  120A  118A  	fcall	___llmod
  9899  029D  0876               	movf	?___llmod+3,w
  9900  029E  1683               	bsf	3,5	;RP0=1, select bank1
  9901  029F  1303               	bcf	3,6	;RP1=0, select bank1
  9902  02A0  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  9903  02A1  0875               	movf	?___llmod+2,w
  9904  02A2  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  9905  02A3  0874               	movf	?___llmod+1,w
  9906  02A4  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  9907  02A5  0873               	movf	?___llmod,w
  9908  02A6  00BC               	movwf	sprintf@tmpval^(0+128)
  9909  02A7                     l3590:
  9910                           
  9911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9912  02A7  083C               	movf	sprintf@tmpval^(0+128),w
  9913  02A8  3E30               	addlw	48
  9914  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  9915  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  9916  02AB  00EA               	movwf	??_sprintf
  9917  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  9918  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  9919  02AE  0828               	movf	sprintf@sp^(0+128),w
  9920  02AF  0084               	movwf	4
  9921  02B0  1783               	bsf	3,7
  9922  02B1  1C29               	btfss	(sprintf@sp+1)^(0+128),0
  9923  02B2  1383               	bcf	3,7
  9924  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  9925  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  9926  02B5  086A               	movf	??_sprintf,w
  9927  02B6  0080               	movwf	0
  9928  02B7  2A40               	goto	l3584
  9929  02B8                     l3594:
  9930                           
  9931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9932  02B8  3001               	movlw	1
  9933  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  9934  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  9935  02BB  02C8               	subwf	sprintf@c^(0+128),f
  9936  02BC  0A48               	incf	sprintf@c^(0+128),w
  9937  02BD  1D03               	btfss	3,2
  9938  02BE  2AC0               	goto	u5871
  9939  02BF  2AC1               	goto	u5870
  9940  02C0                     u5871:
  9941  02C0  2A49               	goto	l3586
  9942  02C1                     u5870:
  9943  02C1  2ADF               	goto	l3602
  9944  02C2                     l3596:
  9945                           
  9946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9947  02C2  3030               	movlw	48
  9948  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  9949  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  9950  02C5  00EA               	movwf	??_sprintf
  9951  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  9952  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  9953  02C8  0828               	movf	sprintf@sp^(0+128),w
  9954  02C9  0084               	movwf	4
  9955  02CA  1783               	bsf	3,7
  9956  02CB  1C29               	btfss	(sprintf@sp+1)^(0+128),0
  9957  02CC  1383               	bcf	3,7
  9958  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  9959  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  9960  02CF  086A               	movf	??_sprintf,w
  9961  02D0  0080               	movwf	0
  9962  02D1                     l3598:
  9963  02D1  3001               	movlw	1
  9964  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  9965  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  9966  02D4  07A8               	addwf	sprintf@sp^(0+128),f
  9967  02D5  1803               	skipnc
  9968  02D6  0AA9               	incf	(sprintf@sp+1)^(0+128),f
  9969  02D7  3000               	movlw	0
  9970  02D8  07A9               	addwf	(sprintf@sp+1)^(0+128),f
  9971  02D9                     l3600:
  9972                           
  9973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9974  02D9  30FF               	movlw	255
  9975  02DA  07C0               	addwf	sprintf@eexp^(0+128),f
  9976  02DB  1803               	skipnc
  9977  02DC  0AC1               	incf	(sprintf@eexp+1)^(0+128),f
  9978  02DD  30FF               	movlw	255
  9979  02DE  07C1               	addwf	(sprintf@eexp+1)^(0+128),f
  9980  02DF                     l3602:
  9981                           
  9982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9983  02DF  0841               	movf	(sprintf@eexp+1)^(0+128),w
  9984  02E0  3A80               	xorlw	128
  9985  02E1  00FF               	movwf	btemp+1
  9986  02E2  3080               	movlw	128
  9987  02E3  027F               	subwf	btemp+1,w
  9988  02E4  1D03               	skipz
  9989  02E5  2AE8               	goto	u5885
  9990  02E6  3001               	movlw	1
  9991  02E7  0240               	subwf	sprintf@eexp^(0+128),w
  9992  02E8                     u5885:
  9993  02E8  1803               	skipnc
  9994  02E9  2AEB               	goto	u5881
  9995  02EA  2AEC               	goto	u5880
  9996  02EB                     u5881:
  9997  02EB  2AC2               	goto	l3596
  9998  02EC                     u5880:
  9999  02EC                     l3604:
 10000                           
 10001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10002  02EC  1683               	bsf	3,5	;RP0=1, select bank1
 10003  02ED  1303               	bcf	3,6	;RP1=0, select bank1
 10004  02EE  0847               	movf	(sprintf@prec+1)^(0+128),w
 10005  02EF  3A80               	xorlw	128
 10006  02F0  00FF               	movwf	btemp+1
 10007  02F1  3080               	movlw	128
 10008  02F2  027F               	subwf	btemp+1,w
 10009  02F3  1D03               	skipz
 10010  02F4  2AF7               	goto	u5895
 10011  02F5  3009               	movlw	9
 10012  02F6  0246               	subwf	sprintf@prec^(0+128),w
 10013  02F7                     u5895:
 10014  02F7  1C03               	skipc
 10015  02F8  2AFA               	goto	u5891
 10016  02F9  2AFB               	goto	u5890
 10017  02FA                     u5891:
 10018  02FA  2B04               	goto	l3608
 10019  02FB                     u5890:
 10020  02FB                     l3606:
 10021                           
 10022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10023  02FB  3008               	movlw	8
 10024  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10025  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10026  02FE  00EA               	movwf	??_sprintf
 10027  02FF  086A               	movf	??_sprintf,w
 10028  0300  1683               	bsf	3,5	;RP0=1, select bank1
 10029  0301  1303               	bcf	3,6	;RP1=0, select bank1
 10030  0302  00C8               	movwf	sprintf@c^(0+128)
 10031  0303  2B0E               	goto	l308
 10032  0304                     l3608:
 10033                           
 10034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10035  0304  1683               	bsf	3,5	;RP0=1, select bank1
 10036  0305  1303               	bcf	3,6	;RP1=0, select bank1
 10037  0306  0846               	movf	sprintf@prec^(0+128),w
 10038  0307  1283               	bcf	3,5	;RP0=0, select bank0
 10039  0308  1303               	bcf	3,6	;RP1=0, select bank0
 10040  0309  00EA               	movwf	??_sprintf
 10041  030A  086A               	movf	??_sprintf,w
 10042  030B  1683               	bsf	3,5	;RP0=1, select bank1
 10043  030C  1303               	bcf	3,6	;RP1=0, select bank1
 10044  030D  00C8               	movwf	sprintf@c^(0+128)
 10045  030E                     l308:
 10046                           
 10047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10048  030E  0848               	movf	sprintf@c^(0+128),w
 10049  030F  1283               	bcf	3,5	;RP0=0, select bank0
 10050  0310  1303               	bcf	3,6	;RP1=0, select bank0
 10051  0311  00EA               	movwf	??_sprintf
 10052  0312  01EB               	clrf	??_sprintf+1
 10053  0313  086A               	movf	??_sprintf,w
 10054  0314  1683               	bsf	3,5	;RP0=1, select bank1
 10055  0315  1303               	bcf	3,6	;RP1=0, select bank1
 10056  0316  02C6               	subwf	sprintf@prec^(0+128),f
 10057  0317  1283               	bcf	3,5	;RP0=0, select bank0
 10058  0318  1303               	bcf	3,6	;RP1=0, select bank0
 10059  0319  086B               	movf	??_sprintf+1,w
 10060  031A  1683               	bsf	3,5	;RP0=1, select bank1
 10061  031B  1303               	bcf	3,6	;RP1=0, select bank1
 10062  031C  1C03               	skipc
 10063  031D  03C7               	decf	(sprintf@prec+1)^(0+128),f
 10064  031E  02C7               	subwf	(sprintf@prec+1)^(0+128),f
 10065  031F                     l3610:
 10066                           
 10067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10068  031F  0848               	movf	sprintf@c^(0+128),w
 10069  0320  1903               	btfsc	3,2
 10070  0321  2B23               	goto	u5901
 10071  0322  2B24               	goto	u5900
 10072  0323                     u5901:
 10073  0323  2B3B               	goto	l3616
 10074  0324                     u5900:
 10075  0324                     l3612:
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10078  0324  302E               	movlw	46
 10079  0325  1283               	bcf	3,5	;RP0=0, select bank0
 10080  0326  1303               	bcf	3,6	;RP1=0, select bank0
 10081  0327  00EA               	movwf	??_sprintf
 10082  0328  1683               	bsf	3,5	;RP0=1, select bank1
 10083  0329  1303               	bcf	3,6	;RP1=0, select bank1
 10084  032A  0828               	movf	sprintf@sp^(0+128),w
 10085  032B  0084               	movwf	4
 10086  032C  1783               	bsf	3,7
 10087  032D  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10088  032E  1383               	bcf	3,7
 10089  032F  1283               	bcf	3,5	;RP0=0, select bank0
 10090  0330  1303               	bcf	3,6	;RP1=0, select bank0
 10091  0331  086A               	movf	??_sprintf,w
 10092  0332  0080               	movwf	0
 10093  0333                     l3614:
 10094  0333  3001               	movlw	1
 10095  0334  1683               	bsf	3,5	;RP0=1, select bank1
 10096  0335  1303               	bcf	3,6	;RP1=0, select bank1
 10097  0336  07A8               	addwf	sprintf@sp^(0+128),f
 10098  0337  1803               	skipnc
 10099  0338  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10100  0339  3000               	movlw	0
 10101  033A  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10102  033B                     l3616:
 10103                           
 10104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10105  033B  0848               	movf	sprintf@c^(0+128),w
 10106  033C  120A  158A  249D  120A  118A  	fcall	_scale
 10107  0341  1283               	bcf	3,5	;RP0=0, select bank0
 10108  0342  1303               	bcf	3,6	;RP1=0, select bank0
 10109  0343  0845               	movf	?_scale+3,w
 10110  0344  1683               	bsf	3,5	;RP0=1, select bank1
 10111  0345  1303               	bcf	3,6	;RP1=0, select bank1
 10112  0346  00B2               	movwf	(_sprintf$1160+3)^(0+128)
 10113  0347  1283               	bcf	3,5	;RP0=0, select bank0
 10114  0348  1303               	bcf	3,6	;RP1=0, select bank0
 10115  0349  0844               	movf	?_scale+2,w
 10116  034A  1683               	bsf	3,5	;RP0=1, select bank1
 10117  034B  1303               	bcf	3,6	;RP1=0, select bank1
 10118  034C  00B1               	movwf	(_sprintf$1160+2)^(0+128)
 10119  034D  1283               	bcf	3,5	;RP0=0, select bank0
 10120  034E  1303               	bcf	3,6	;RP1=0, select bank0
 10121  034F  0843               	movf	?_scale+1,w
 10122  0350  1683               	bsf	3,5	;RP0=1, select bank1
 10123  0351  1303               	bcf	3,6	;RP1=0, select bank1
 10124  0352  00B0               	movwf	(_sprintf$1160+1)^(0+128)
 10125  0353  1283               	bcf	3,5	;RP0=0, select bank0
 10126  0354  1303               	bcf	3,6	;RP1=0, select bank0
 10127  0355  0842               	movf	?_scale,w
 10128  0356  1683               	bsf	3,5	;RP0=1, select bank1
 10129  0357  1303               	bcf	3,6	;RP1=0, select bank1
 10130  0358  00AF               	movwf	_sprintf$1160^(0+128)
 10131                           
 10132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10133  0359  0832               	movf	(_sprintf$1160+3)^(0+128),w
 10134  035A  1283               	bcf	3,5	;RP0=0, select bank0
 10135  035B  1303               	bcf	3,6	;RP1=0, select bank0
 10136  035C  00AF               	movwf	___flmul@a+3
 10137  035D  1683               	bsf	3,5	;RP0=1, select bank1
 10138  035E  1303               	bcf	3,6	;RP1=0, select bank1
 10139  035F  0831               	movf	(_sprintf$1160+2)^(0+128),w
 10140  0360  1283               	bcf	3,5	;RP0=0, select bank0
 10141  0361  1303               	bcf	3,6	;RP1=0, select bank0
 10142  0362  00AE               	movwf	___flmul@a+2
 10143  0363  1683               	bsf	3,5	;RP0=1, select bank1
 10144  0364  1303               	bcf	3,6	;RP1=0, select bank1
 10145  0365  0830               	movf	(_sprintf$1160+1)^(0+128),w
 10146  0366  1283               	bcf	3,5	;RP0=0, select bank0
 10147  0367  1303               	bcf	3,6	;RP1=0, select bank0
 10148  0368  00AD               	movwf	___flmul@a+1
 10149  0369  1683               	bsf	3,5	;RP0=1, select bank1
 10150  036A  1303               	bcf	3,6	;RP1=0, select bank1
 10151  036B  082F               	movf	_sprintf$1160^(0+128),w
 10152  036C  1283               	bcf	3,5	;RP0=0, select bank0
 10153  036D  1303               	bcf	3,6	;RP1=0, select bank0
 10154  036E  00AC               	movwf	___flmul@a
 10155  036F  1683               	bsf	3,5	;RP0=1, select bank1
 10156  0370  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0371  0845               	movf	(sprintf@fval+3)^(0+128),w
 10158  0372  1283               	bcf	3,5	;RP0=0, select bank0
 10159  0373  1303               	bcf	3,6	;RP1=0, select bank0
 10160  0374  00AB               	movwf	___flmul@b+3
 10161  0375  1683               	bsf	3,5	;RP0=1, select bank1
 10162  0376  1303               	bcf	3,6	;RP1=0, select bank1
 10163  0377  0844               	movf	(sprintf@fval+2)^(0+128),w
 10164  0378  1283               	bcf	3,5	;RP0=0, select bank0
 10165  0379  1303               	bcf	3,6	;RP1=0, select bank0
 10166  037A  00AA               	movwf	___flmul@b+2
 10167  037B  1683               	bsf	3,5	;RP0=1, select bank1
 10168  037C  1303               	bcf	3,6	;RP1=0, select bank1
 10169  037D  0843               	movf	(sprintf@fval+1)^(0+128),w
 10170  037E  1283               	bcf	3,5	;RP0=0, select bank0
 10171  037F  1303               	bcf	3,6	;RP1=0, select bank0
 10172  0380  00A9               	movwf	___flmul@b+1
 10173  0381  1683               	bsf	3,5	;RP0=1, select bank1
 10174  0382  1303               	bcf	3,6	;RP1=0, select bank1
 10175  0383  0842               	movf	sprintf@fval^(0+128),w
 10176  0384  1283               	bcf	3,5	;RP0=0, select bank0
 10177  0385  1303               	bcf	3,6	;RP1=0, select bank0
 10178  0386  00A8               	movwf	___flmul@b
 10179  0387  120A  158A  213C  120A  118A  	fcall	___flmul
 10180  038C  1283               	bcf	3,5	;RP0=0, select bank0
 10181  038D  1303               	bcf	3,6	;RP1=0, select bank0
 10182  038E  082B               	movf	?___flmul+3,w
 10183  038F  00D8               	movwf	___fltol@f1+3
 10184  0390  082A               	movf	?___flmul+2,w
 10185  0391  00D7               	movwf	___fltol@f1+2
 10186  0392  0829               	movf	?___flmul+1,w
 10187  0393  00D6               	movwf	___fltol@f1+1
 10188  0394  0828               	movf	?___flmul,w
 10189  0395  00D5               	movwf	___fltol@f1
 10190  0396  160A  158A  2567  120A  118A  	fcall	___fltol
 10191  039B  1283               	bcf	3,5	;RP0=0, select bank0
 10192  039C  1303               	bcf	3,6	;RP1=0, select bank0
 10193  039D  0858               	movf	?___fltol+3,w
 10194  039E  1683               	bsf	3,5	;RP0=1, select bank1
 10195  039F  1303               	bcf	3,6	;RP1=0, select bank1
 10196  03A0  00B7               	movwf	(sprintf@val+3)^(0+128)
 10197  03A1  1283               	bcf	3,5	;RP0=0, select bank0
 10198  03A2  1303               	bcf	3,6	;RP1=0, select bank0
 10199  03A3  0857               	movf	?___fltol+2,w
 10200  03A4  1683               	bsf	3,5	;RP0=1, select bank1
 10201  03A5  1303               	bcf	3,6	;RP1=0, select bank1
 10202  03A6  00B6               	movwf	(sprintf@val+2)^(0+128)
 10203  03A7  1283               	bcf	3,5	;RP0=0, select bank0
 10204  03A8  1303               	bcf	3,6	;RP1=0, select bank0
 10205  03A9  0856               	movf	?___fltol+1,w
 10206  03AA  1683               	bsf	3,5	;RP0=1, select bank1
 10207  03AB  1303               	bcf	3,6	;RP1=0, select bank1
 10208  03AC  00B5               	movwf	(sprintf@val+1)^(0+128)
 10209  03AD  1283               	bcf	3,5	;RP0=0, select bank0
 10210  03AE  1303               	bcf	3,6	;RP1=0, select bank0
 10211  03AF  0855               	movf	?___fltol,w
 10212  03B0  1683               	bsf	3,5	;RP0=1, select bank1
 10213  03B1  1303               	bcf	3,6	;RP1=0, select bank1
 10214  03B2  00B4               	movwf	sprintf@val^(0+128)
 10215                           
 10216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10217  03B3  2C69               	goto	l3628
 10218  03B4                     l3618:
 10219                           
 10220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10221  03B4  0848               	movf	sprintf@c^(0+128),w
 10222  03B5  1283               	bcf	3,5	;RP0=0, select bank0
 10223  03B6  1303               	bcf	3,6	;RP1=0, select bank0
 10224  03B7  00EA               	movwf	??_sprintf
 10225  03B8  3001               	movlw	1
 10226  03B9                     u5915:
 10227  03B9  1003               	clrc
 10228  03BA  0DEA               	rlf	??_sprintf,f
 10229  03BB  3EFF               	addlw	-1
 10230  03BC  1D03               	skipz
 10231  03BD  2BB9               	goto	u5915
 10232  03BE  1003               	clrc
 10233  03BF  0D6A               	rlf	??_sprintf,w
 10234  03C0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10235  03C1  0084               	movwf	4
 10236  03C2  120A  158A  2000  120A  118A  	fcall	stringdir
 10237  03C7  00F3               	movwf	___lldiv@divisor
 10238  03C8  120A  158A  2000  120A  118A  	fcall	stringdir
 10239  03CD  00F4               	movwf	___lldiv@divisor+1
 10240  03CE  120A  158A  2000  120A  118A  	fcall	stringdir
 10241  03D3  00F5               	movwf	___lldiv@divisor+2
 10242  03D4  120A  158A  2000  120A  118A  	fcall	stringdir
 10243  03D9  00F6               	movwf	___lldiv@divisor+3
 10244  03DA  1683               	bsf	3,5	;RP0=1, select bank1
 10245  03DB  1303               	bcf	3,6	;RP1=0, select bank1
 10246  03DC  0837               	movf	(sprintf@val+3)^(0+128),w
 10247  03DD  00FA               	movwf	___lldiv@dividend+3
 10248  03DE  0836               	movf	(sprintf@val+2)^(0+128),w
 10249  03DF  00F9               	movwf	___lldiv@dividend+2
 10250  03E0  0835               	movf	(sprintf@val+1)^(0+128),w
 10251  03E1  00F8               	movwf	___lldiv@dividend+1
 10252  03E2  0834               	movf	sprintf@val^(0+128),w
 10253  03E3  00F7               	movwf	___lldiv@dividend
 10254  03E4  160A  158A  2496  120A  118A  	fcall	___lldiv
 10255  03E9  0876               	movf	?___lldiv+3,w
 10256  03EA  1683               	bsf	3,5	;RP0=1, select bank1
 10257  03EB  1303               	bcf	3,6	;RP1=0, select bank1
 10258  03EC  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10259  03ED  0875               	movf	?___lldiv+2,w
 10260  03EE  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10261  03EF  0874               	movf	?___lldiv+1,w
 10262  03F0  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10263  03F1  0873               	movf	?___lldiv,w
 10264  03F2  00BC               	movwf	sprintf@tmpval^(0+128)
 10265  03F3                     l3620:
 10266                           
 10267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10268  03F3  3000               	movlw	0
 10269  03F4  00F6               	movwf	___llmod@divisor+3
 10270  03F5  3000               	movlw	0
 10271  03F6  00F5               	movwf	___llmod@divisor+2
 10272  03F7  3000               	movlw	0
 10273  03F8  00F4               	movwf	___llmod@divisor+1
 10274  03F9  300A               	movlw	10
 10275  03FA  00F3               	movwf	___llmod@divisor
 10276  03FB  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10277  03FC  00FA               	movwf	___llmod@dividend+3
 10278  03FD  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10279  03FE  00F9               	movwf	___llmod@dividend+2
 10280  03FF  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10281  0400  00F8               	movwf	___llmod@dividend+1
 10282  0401  083C               	movf	sprintf@tmpval^(0+128),w
 10283  0402  00F7               	movwf	___llmod@dividend
 10284  0403  160A  158A  2440  120A  118A  	fcall	___llmod
 10285  0408  0876               	movf	?___llmod+3,w
 10286  0409  1683               	bsf	3,5	;RP0=1, select bank1
 10287  040A  1303               	bcf	3,6	;RP1=0, select bank1
 10288  040B  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10289  040C  0875               	movf	?___llmod+2,w
 10290  040D  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10291  040E  0874               	movf	?___llmod+1,w
 10292  040F  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10293  0410  0873               	movf	?___llmod,w
 10294  0411  00BC               	movwf	sprintf@tmpval^(0+128)
 10295  0412                     l3622:
 10296                           
 10297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10298  0412  083C               	movf	sprintf@tmpval^(0+128),w
 10299  0413  3E30               	addlw	48
 10300  0414  1283               	bcf	3,5	;RP0=0, select bank0
 10301  0415  1303               	bcf	3,6	;RP1=0, select bank0
 10302  0416  00EA               	movwf	??_sprintf
 10303  0417  1683               	bsf	3,5	;RP0=1, select bank1
 10304  0418  1303               	bcf	3,6	;RP1=0, select bank1
 10305  0419  0828               	movf	sprintf@sp^(0+128),w
 10306  041A  0084               	movwf	4
 10307  041B  1783               	bsf	3,7
 10308  041C  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10309  041D  1383               	bcf	3,7
 10310  041E  1283               	bcf	3,5	;RP0=0, select bank0
 10311  041F  1303               	bcf	3,6	;RP1=0, select bank0
 10312  0420  086A               	movf	??_sprintf,w
 10313  0421  0080               	movwf	0
 10314  0422                     l3624:
 10315  0422  3001               	movlw	1
 10316  0423  1683               	bsf	3,5	;RP0=1, select bank1
 10317  0424  1303               	bcf	3,6	;RP1=0, select bank1
 10318  0425  07A8               	addwf	sprintf@sp^(0+128),f
 10319  0426  1803               	skipnc
 10320  0427  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10321  0428  3000               	movlw	0
 10322  0429  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10323  042A                     l3626:
 10324                           
 10325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10326  042A  0848               	movf	sprintf@c^(0+128),w
 10327  042B  1283               	bcf	3,5	;RP0=0, select bank0
 10328  042C  1303               	bcf	3,6	;RP1=0, select bank0
 10329  042D  00EA               	movwf	??_sprintf
 10330  042E  3001               	movlw	1
 10331  042F                     u5925:
 10332  042F  1003               	clrc
 10333  0430  0DEA               	rlf	??_sprintf,f
 10334  0431  3EFF               	addlw	-1
 10335  0432  1D03               	skipz
 10336  0433  2C2F               	goto	u5925
 10337  0434  1003               	clrc
 10338  0435  0D6A               	rlf	??_sprintf,w
 10339  0436  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10340  0437  0084               	movwf	4
 10341  0438  120A  158A  2000  120A  118A  	fcall	stringdir
 10342  043D  00F3               	movwf	___llmod@divisor
 10343  043E  120A  158A  2000  120A  118A  	fcall	stringdir
 10344  0443  00F4               	movwf	___llmod@divisor+1
 10345  0444  120A  158A  2000  120A  118A  	fcall	stringdir
 10346  0449  00F5               	movwf	___llmod@divisor+2
 10347  044A  120A  158A  2000  120A  118A  	fcall	stringdir
 10348  044F  00F6               	movwf	___llmod@divisor+3
 10349  0450  1683               	bsf	3,5	;RP0=1, select bank1
 10350  0451  1303               	bcf	3,6	;RP1=0, select bank1
 10351  0452  0837               	movf	(sprintf@val+3)^(0+128),w
 10352  0453  00FA               	movwf	___llmod@dividend+3
 10353  0454  0836               	movf	(sprintf@val+2)^(0+128),w
 10354  0455  00F9               	movwf	___llmod@dividend+2
 10355  0456  0835               	movf	(sprintf@val+1)^(0+128),w
 10356  0457  00F8               	movwf	___llmod@dividend+1
 10357  0458  0834               	movf	sprintf@val^(0+128),w
 10358  0459  00F7               	movwf	___llmod@dividend
 10359  045A  160A  158A  2440  120A  118A  	fcall	___llmod
 10360  045F  0876               	movf	?___llmod+3,w
 10361  0460  1683               	bsf	3,5	;RP0=1, select bank1
 10362  0461  1303               	bcf	3,6	;RP1=0, select bank1
 10363  0462  00B7               	movwf	(sprintf@val+3)^(0+128)
 10364  0463  0875               	movf	?___llmod+2,w
 10365  0464  00B6               	movwf	(sprintf@val+2)^(0+128)
 10366  0465  0874               	movf	?___llmod+1,w
 10367  0466  00B5               	movwf	(sprintf@val+1)^(0+128)
 10368  0467  0873               	movf	?___llmod,w
 10369  0468  00B4               	movwf	sprintf@val^(0+128)
 10370  0469                     l3628:
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10373  0469  3001               	movlw	1
 10374  046A  02C8               	subwf	sprintf@c^(0+128),f
 10375  046B  0A48               	incf	sprintf@c^(0+128),w
 10376  046C  1D03               	btfss	3,2
 10377  046D  2C6F               	goto	u5931
 10378  046E  2C70               	goto	u5930
 10379  046F                     u5931:
 10380  046F  2BB4               	goto	l3618
 10381  0470                     u5930:
 10382  0470  2C8E               	goto	l3636
 10383  0471                     l3630:
 10384                           
 10385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10386  0471  3030               	movlw	48
 10387  0472  1283               	bcf	3,5	;RP0=0, select bank0
 10388  0473  1303               	bcf	3,6	;RP1=0, select bank0
 10389  0474  00EA               	movwf	??_sprintf
 10390  0475  1683               	bsf	3,5	;RP0=1, select bank1
 10391  0476  1303               	bcf	3,6	;RP1=0, select bank1
 10392  0477  0828               	movf	sprintf@sp^(0+128),w
 10393  0478  0084               	movwf	4
 10394  0479  1783               	bsf	3,7
 10395  047A  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10396  047B  1383               	bcf	3,7
 10397  047C  1283               	bcf	3,5	;RP0=0, select bank0
 10398  047D  1303               	bcf	3,6	;RP1=0, select bank0
 10399  047E  086A               	movf	??_sprintf,w
 10400  047F  0080               	movwf	0
 10401  0480                     l3632:
 10402  0480  3001               	movlw	1
 10403  0481  1683               	bsf	3,5	;RP0=1, select bank1
 10404  0482  1303               	bcf	3,6	;RP1=0, select bank1
 10405  0483  07A8               	addwf	sprintf@sp^(0+128),f
 10406  0484  1803               	skipnc
 10407  0485  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10408  0486  3000               	movlw	0
 10409  0487  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10410  0488                     l3634:
 10411                           
 10412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10413  0488  30FF               	movlw	255
 10414  0489  07C6               	addwf	sprintf@prec^(0+128),f
 10415  048A  1803               	skipnc
 10416  048B  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 10417  048C  30FF               	movlw	255
 10418  048D  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 10419  048E                     l3636:
 10420                           
 10421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10422  048E  0846               	movf	sprintf@prec^(0+128),w
 10423  048F  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 10424  0490  1D03               	btfss	3,2
 10425  0491  2C93               	goto	u5941
 10426  0492  2C94               	goto	u5940
 10427  0493                     u5941:
 10428  0493  2C71               	goto	l3630
 10429  0494                     u5940:
 10430  0494  2D9E               	goto	l3684
 10431  0495                     l3638:
 10432                           
 10433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10434  0495  1683               	bsf	3,5	;RP0=1, select bank1
 10435  0496  1303               	bcf	3,6	;RP1=0, select bank1
 10436  0497  0846               	movf	sprintf@prec^(0+128),w
 10437  0498  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 10438  0499  1D03               	btfss	3,2
 10439  049A  2C9C               	goto	u5951
 10440  049B  2C9D               	goto	u5950
 10441  049C                     u5951:
 10442  049C  2CAB               	goto	l316
 10443  049D                     u5950:
 10444  049D                     l3640:
 10445  049D  0837               	movf	(sprintf@val+3)^(0+128),w
 10446  049E  0436               	iorwf	(sprintf@val+2)^(0+128),w
 10447  049F  0435               	iorwf	(sprintf@val+1)^(0+128),w
 10448  04A0  0434               	iorwf	sprintf@val^(0+128),w
 10449  04A1  1D03               	skipz
 10450  04A2  2CA4               	goto	u5961
 10451  04A3  2CA5               	goto	u5960
 10452  04A4                     u5961:
 10453  04A4  2CAB               	goto	l316
 10454  04A5                     u5960:
 10455  04A5                     l3642:
 10456                           
 10457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10458  04A5  3001               	movlw	1
 10459  04A6  07C6               	addwf	sprintf@prec^(0+128),f
 10460  04A7  1803               	skipnc
 10461  04A8  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 10462  04A9  3000               	movlw	0
 10463  04AA  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 10464  04AB                     l316:
 10465                           
 10466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10467  04AB  0847               	movf	(sprintf@prec+1)^(0+128),w
 10468  04AC  3A80               	xorlw	128
 10469  04AD  3C80               	sublw	128
 10470  04AE  1D03               	skipz
 10471  04AF  2CB2               	goto	u5975
 10472  04B0  0846               	movf	sprintf@prec^(0+128),w
 10473  04B1  0248               	subwf	sprintf@c^(0+128),w
 10474  04B2                     u5975:
 10475  04B2  1803               	skipnc
 10476  04B3  2CB5               	goto	u5971
 10477  04B4  2CB6               	goto	u5970
 10478  04B5                     u5971:
 10479  04B5  2CC1               	goto	l3646
 10480  04B6                     u5970:
 10481  04B6                     l3644:
 10482                           
 10483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10484  04B6  1683               	bsf	3,5	;RP0=1, select bank1
 10485  04B7  1303               	bcf	3,6	;RP1=0, select bank1
 10486  04B8  0846               	movf	sprintf@prec^(0+128),w
 10487  04B9  1283               	bcf	3,5	;RP0=0, select bank0
 10488  04BA  1303               	bcf	3,6	;RP1=0, select bank0
 10489  04BB  00EA               	movwf	??_sprintf
 10490  04BC  086A               	movf	??_sprintf,w
 10491  04BD  1683               	bsf	3,5	;RP0=1, select bank1
 10492  04BE  1303               	bcf	3,6	;RP1=0, select bank1
 10493  04BF  00C8               	movwf	sprintf@c^(0+128)
 10494  04C0  2CE5               	goto	l3650
 10495  04C1                     l3646:
 10496  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10497  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10498  04C3  0847               	movf	(sprintf@prec+1)^(0+128),w
 10499  04C4  3A80               	xorlw	128
 10500  04C5  1283               	bcf	3,5	;RP0=0, select bank0
 10501  04C6  1303               	bcf	3,6	;RP1=0, select bank0
 10502  04C7  00EA               	movwf	??_sprintf
 10503  04C8  3080               	movlw	128
 10504  04C9  026A               	subwf	??_sprintf,w
 10505  04CA  1D03               	skipz
 10506  04CB  2CD0               	goto	u5985
 10507  04CC  1683               	bsf	3,5	;RP0=1, select bank1
 10508  04CD  1303               	bcf	3,6	;RP1=0, select bank1
 10509  04CE  0848               	movf	sprintf@c^(0+128),w
 10510  04CF  0246               	subwf	sprintf@prec^(0+128),w
 10511  04D0                     u5985:
 10512  04D0  1803               	skipnc
 10513  04D1  2CD3               	goto	u5981
 10514  04D2  2CD4               	goto	u5980
 10515  04D3                     u5981:
 10516  04D3  2CE5               	goto	l3650
 10517  04D4                     u5980:
 10518  04D4                     l3648:
 10519                           
 10520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10521  04D4  1683               	bsf	3,5	;RP0=1, select bank1
 10522  04D5  1303               	bcf	3,6	;RP1=0, select bank1
 10523  04D6  0848               	movf	sprintf@c^(0+128),w
 10524  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 10525  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 10526  04D9  00EA               	movwf	??_sprintf
 10527  04DA  01EB               	clrf	??_sprintf+1
 10528  04DB  086A               	movf	??_sprintf,w
 10529  04DC  1683               	bsf	3,5	;RP0=1, select bank1
 10530  04DD  1303               	bcf	3,6	;RP1=0, select bank1
 10531  04DE  00C6               	movwf	sprintf@prec^(0+128)
 10532  04DF  1283               	bcf	3,5	;RP0=0, select bank0
 10533  04E0  1303               	bcf	3,6	;RP1=0, select bank0
 10534  04E1  086B               	movf	??_sprintf+1,w
 10535  04E2  1683               	bsf	3,5	;RP0=1, select bank1
 10536  04E3  1303               	bcf	3,6	;RP1=0, select bank1
 10537  04E4  00C7               	movwf	(sprintf@prec+1)^(0+128)
 10538  04E5                     l3650:
 10539                           
 10540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10541  04E5  1683               	bsf	3,5	;RP0=1, select bank1
 10542  04E6  1303               	bcf	3,6	;RP1=0, select bank1
 10543  04E7  083A               	movf	sprintf@width^(0+128),w
 10544  04E8  043B               	iorwf	(sprintf@width+1)^(0+128),w
 10545  04E9  1903               	btfsc	3,2
 10546  04EA  2CEC               	goto	u5991
 10547  04EB  2CED               	goto	u5990
 10548  04EC                     u5991:
 10549  04EC  2D07               	goto	l3656
 10550  04ED                     u5990:
 10551  04ED                     l3652:
 10552  04ED  3003               	movlw	3
 10553  04EE  0538               	andwf	sprintf@flag^(0+128),w
 10554  04EF  1283               	bcf	3,5	;RP0=0, select bank0
 10555  04F0  1303               	bcf	3,6	;RP1=0, select bank0
 10556  04F1  00EA               	movwf	??_sprintf
 10557  04F2  3000               	movlw	0
 10558  04F3  1683               	bsf	3,5	;RP0=1, select bank1
 10559  04F4  1303               	bcf	3,6	;RP1=0, select bank1
 10560  04F5  0539               	andwf	(sprintf@flag+1)^(0+128),w
 10561  04F6  1283               	bcf	3,5	;RP0=0, select bank0
 10562  04F7  1303               	bcf	3,6	;RP1=0, select bank0
 10563  04F8  00EB               	movwf	??_sprintf+1
 10564  04F9  086A               	movf	??_sprintf,w
 10565  04FA  046B               	iorwf	??_sprintf+1,w
 10566  04FB  1903               	btfsc	3,2
 10567  04FC  2CFE               	goto	u6001
 10568  04FD  2CFF               	goto	u6000
 10569  04FE                     u6001:
 10570  04FE  2D07               	goto	l3656
 10571  04FF                     u6000:
 10572  04FF                     l3654:
 10573                           
 10574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10575  04FF  30FF               	movlw	255
 10576  0500  1683               	bsf	3,5	;RP0=1, select bank1
 10577  0501  1303               	bcf	3,6	;RP1=0, select bank1
 10578  0502  07BA               	addwf	sprintf@width^(0+128),f
 10579  0503  1803               	skipnc
 10580  0504  0ABB               	incf	(sprintf@width+1)^(0+128),f
 10581  0505  30FF               	movlw	255
 10582  0506  07BB               	addwf	(sprintf@width+1)^(0+128),f
 10583  0507                     l3656:
 10584                           
 10585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10586  0507  1683               	bsf	3,5	;RP0=1, select bank1
 10587  0508  1303               	bcf	3,6	;RP1=0, select bank1
 10588  0509  1F39               	btfss	(sprintf@flag+1)^(0+128),6
 10589  050A  2D0C               	goto	u6011
 10590  050B  2D0D               	goto	u6010
 10591  050C                     u6011:
 10592  050C  2D30               	goto	l3664
 10593  050D                     u6010:
 10594  050D                     l3658:
 10595                           
 10596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10597  050D  0847               	movf	(sprintf@prec+1)^(0+128),w
 10598  050E  3A80               	xorlw	128
 10599  050F  1283               	bcf	3,5	;RP0=0, select bank0
 10600  0510  1303               	bcf	3,6	;RP1=0, select bank0
 10601  0511  00EA               	movwf	??_sprintf
 10602  0512  1683               	bsf	3,5	;RP0=1, select bank1
 10603  0513  1303               	bcf	3,6	;RP1=0, select bank1
 10604  0514  083B               	movf	(sprintf@width+1)^(0+128),w
 10605  0515  3A80               	xorlw	128
 10606  0516  1283               	bcf	3,5	;RP0=0, select bank0
 10607  0517  1303               	bcf	3,6	;RP1=0, select bank0
 10608  0518  026A               	subwf	??_sprintf,w
 10609  0519  1D03               	skipz
 10610  051A  2D1F               	goto	u6025
 10611  051B  1683               	bsf	3,5	;RP0=1, select bank1
 10612  051C  1303               	bcf	3,6	;RP1=0, select bank1
 10613  051D  083A               	movf	sprintf@width^(0+128),w
 10614  051E  0246               	subwf	sprintf@prec^(0+128),w
 10615  051F                     u6025:
 10616  051F  1803               	skipnc
 10617  0520  2D22               	goto	u6021
 10618  0521  2D23               	goto	u6020
 10619  0522                     u6021:
 10620  0522  2D2C               	goto	l3662
 10621  0523                     u6020:
 10622  0523                     l3660:
 10623                           
 10624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10625  0523  1683               	bsf	3,5	;RP0=1, select bank1
 10626  0524  1303               	bcf	3,6	;RP1=0, select bank1
 10627  0525  0846               	movf	sprintf@prec^(0+128),w
 10628  0526  02BA               	subwf	sprintf@width^(0+128),f
 10629  0527  0847               	movf	(sprintf@prec+1)^(0+128),w
 10630  0528  1C03               	skipc
 10631  0529  03BB               	decf	(sprintf@width+1)^(0+128),f
 10632  052A  02BB               	subwf	(sprintf@width+1)^(0+128),f
 10633  052B  2D30               	goto	l3664
 10634  052C                     l3662:
 10635                           
 10636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10637  052C  1683               	bsf	3,5	;RP0=1, select bank1
 10638  052D  1303               	bcf	3,6	;RP1=0, select bank1
 10639  052E  01BA               	clrf	sprintf@width^(0+128)
 10640  052F  01BB               	clrf	(sprintf@width+1)^(0+128)
 10641  0530                     l3664:
 10642                           
 10643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10644  0530  083B               	movf	(sprintf@width+1)^(0+128),w
 10645  0531  3A80               	xorlw	128
 10646  0532  3C80               	sublw	128
 10647  0533  1D03               	skipz
 10648  0534  2D37               	goto	u6035
 10649  0535  083A               	movf	sprintf@width^(0+128),w
 10650  0536  0248               	subwf	sprintf@c^(0+128),w
 10651  0537                     u6035:
 10652  0537  1803               	skipnc
 10653  0538  2D3A               	goto	u6031
 10654  0539  2D3B               	goto	u6030
 10655  053A                     u6031:
 10656  053A  2D4F               	goto	l3668
 10657  053B                     u6030:
 10658  053B                     l3666:
 10659                           
 10660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10661  053B  1683               	bsf	3,5	;RP0=1, select bank1
 10662  053C  1303               	bcf	3,6	;RP1=0, select bank1
 10663  053D  0848               	movf	sprintf@c^(0+128),w
 10664  053E  1283               	bcf	3,5	;RP0=0, select bank0
 10665  053F  1303               	bcf	3,6	;RP1=0, select bank0
 10666  0540  00EA               	movwf	??_sprintf
 10667  0541  01EB               	clrf	??_sprintf+1
 10668  0542  086A               	movf	??_sprintf,w
 10669  0543  1683               	bsf	3,5	;RP0=1, select bank1
 10670  0544  1303               	bcf	3,6	;RP1=0, select bank1
 10671  0545  02BA               	subwf	sprintf@width^(0+128),f
 10672  0546  1283               	bcf	3,5	;RP0=0, select bank0
 10673  0547  1303               	bcf	3,6	;RP1=0, select bank0
 10674  0548  086B               	movf	??_sprintf+1,w
 10675  0549  1683               	bsf	3,5	;RP0=1, select bank1
 10676  054A  1303               	bcf	3,6	;RP1=0, select bank1
 10677  054B  1C03               	skipc
 10678  054C  03BB               	decf	(sprintf@width+1)^(0+128),f
 10679  054D  02BB               	subwf	(sprintf@width+1)^(0+128),f
 10680  054E  2D53               	goto	l3670
 10681  054F                     l3668:
 10682                           
 10683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10684  054F  1683               	bsf	3,5	;RP0=1, select bank1
 10685  0550  1303               	bcf	3,6	;RP1=0, select bank1
 10686  0551  01BA               	clrf	sprintf@width^(0+128)
 10687  0552  01BB               	clrf	(sprintf@width+1)^(0+128)
 10688  0553                     l3670:
 10689                           
 10690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10691  0553  083A               	movf	sprintf@width^(0+128),w
 10692  0554  043B               	iorwf	(sprintf@width+1)^(0+128),w
 10693  0555  1903               	btfsc	3,2
 10694  0556  2D58               	goto	u6041
 10695  0557  2D59               	goto	u6040
 10696  0558                     u6041:
 10697  0558  2D7C               	goto	l3678
 10698  0559                     u6040:
 10699  0559                     l3672:
 10700                           
 10701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10702  0559  3020               	movlw	32
 10703  055A  1283               	bcf	3,5	;RP0=0, select bank0
 10704  055B  1303               	bcf	3,6	;RP1=0, select bank0
 10705  055C  00EA               	movwf	??_sprintf
 10706  055D  1683               	bsf	3,5	;RP0=1, select bank1
 10707  055E  1303               	bcf	3,6	;RP1=0, select bank1
 10708  055F  0828               	movf	sprintf@sp^(0+128),w
 10709  0560  0084               	movwf	4
 10710  0561  1783               	bsf	3,7
 10711  0562  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10712  0563  1383               	bcf	3,7
 10713  0564  1283               	bcf	3,5	;RP0=0, select bank0
 10714  0565  1303               	bcf	3,6	;RP1=0, select bank0
 10715  0566  086A               	movf	??_sprintf,w
 10716  0567  0080               	movwf	0
 10717  0568                     l3674:
 10718  0568  3001               	movlw	1
 10719  0569  1683               	bsf	3,5	;RP0=1, select bank1
 10720  056A  1303               	bcf	3,6	;RP1=0, select bank1
 10721  056B  07A8               	addwf	sprintf@sp^(0+128),f
 10722  056C  1803               	skipnc
 10723  056D  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 10724  056E  3000               	movlw	0
 10725  056F  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 10726  0570                     l3676:
 10727  0570  30FF               	movlw	255
 10728  0571  07BA               	addwf	sprintf@width^(0+128),f
 10729  0572  1803               	skipnc
 10730  0573  0ABB               	incf	(sprintf@width+1)^(0+128),f
 10731  0574  30FF               	movlw	255
 10732  0575  07BB               	addwf	(sprintf@width+1)^(0+128),f
 10733  0576  083A               	movf	sprintf@width^(0+128),w
 10734  0577  043B               	iorwf	(sprintf@width+1)^(0+128),w
 10735  0578  1D03               	btfss	3,2
 10736  0579  2D7B               	goto	u6051
 10737  057A  2D7C               	goto	u6050
 10738  057B                     u6051:
 10739  057B  2D59               	goto	l3672
 10740  057C                     u6050:
 10741  057C                     l3678:
 10742                           
 10743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10744  057C  3003               	movlw	3
 10745  057D  0538               	andwf	sprintf@flag^(0+128),w
 10746  057E  1283               	bcf	3,5	;RP0=0, select bank0
 10747  057F  1303               	bcf	3,6	;RP1=0, select bank0
 10748  0580  00EA               	movwf	??_sprintf
 10749  0581  3000               	movlw	0
 10750  0582  1683               	bsf	3,5	;RP0=1, select bank1
 10751  0583  1303               	bcf	3,6	;RP1=0, select bank1
 10752  0584  0539               	andwf	(sprintf@flag+1)^(0+128),w
 10753  0585  1283               	bcf	3,5	;RP0=0, select bank0
 10754  0586  1303               	bcf	3,6	;RP1=0, select bank0
 10755  0587  00EB               	movwf	??_sprintf+1
 10756  0588  086A               	movf	??_sprintf,w
 10757  0589  046B               	iorwf	??_sprintf+1,w
 10758  058A  1903               	btfsc	3,2
 10759  058B  2D8D               	goto	u6061
 10760  058C  2D8E               	goto	u6060
 10761  058D                     u6061:
 10762  058D  2D9E               	goto	l3684
 10763  058E                     u6060:
 10764  058E                     l3680:
 10765                           
 10766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10767  058E  302D               	movlw	45
 10768  058F  00EA               	movwf	??_sprintf
 10769  0590  1683               	bsf	3,5	;RP0=1, select bank1
 10770  0591  1303               	bcf	3,6	;RP1=0, select bank1
 10771  0592  0828               	movf	sprintf@sp^(0+128),w
 10772  0593  0084               	movwf	4
 10773  0594  1783               	bsf	3,7
 10774  0595  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10775  0596  1383               	bcf	3,7
 10776  0597  1283               	bcf	3,5	;RP0=0, select bank0
 10777  0598  1303               	bcf	3,6	;RP1=0, select bank0
 10778  0599  086A               	movf	??_sprintf,w
 10779  059A  0080               	movwf	0
 10780  059B  160A  118A  2D1B   	goto	l3436
 10781  059E                     l3684:
 10782                           
 10783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10784  059E  3001               	movlw	1
 10785  059F  1683               	bsf	3,5	;RP0=1, select bank1
 10786  05A0  1303               	bcf	3,6	;RP1=0, select bank1
 10787  05A1  07AA               	addwf	sprintf@f^(0+128),f
 10788  05A2  30FF               	movlw	-1
 10789  05A3  072A               	addwf	sprintf@f^(0+128),w
 10790  05A4  0084               	movwf	4
 10791  05A5  120A  158A  2000  120A  118A  	fcall	stringdir
 10792  05AA  1283               	bcf	3,5	;RP0=0, select bank0
 10793  05AB  1303               	bcf	3,6	;RP1=0, select bank0
 10794  05AC  00EA               	movwf	??_sprintf
 10795  05AD  086A               	movf	??_sprintf,w
 10796  05AE  1683               	bsf	3,5	;RP0=1, select bank1
 10797  05AF  1303               	bcf	3,6	;RP1=0, select bank1
 10798  05B0  00C8               	movwf	sprintf@c^(0+128)
 10799  05B1  0848               	movf	sprintf@c^(0+128),w
 10800  05B2  1D03               	btfss	3,2
 10801  05B3  2DB5               	goto	u6071
 10802  05B4  2DB8               	goto	u6070
 10803  05B5                     u6071:
 10804  05B5  160A  118A  2D06   	goto	l3432
 10805  05B8                     u6070:
 10806  05B8                     l3686:
 10807                           
 10808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10809  05B8  1683               	bsf	3,5	;RP0=1, select bank1
 10810  05B9  1303               	bcf	3,6	;RP1=0, select bank1
 10811  05BA  0828               	movf	sprintf@sp^(0+128),w
 10812  05BB  0084               	movwf	4
 10813  05BC  1783               	bsf	3,7
 10814  05BD  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 10815  05BE  1383               	bcf	3,7
 10816  05BF  0180               	clrf	0
 10817  05C0                     l331:
 10818  05C0  0008               	return
 10819  05C1                     __end_of_sprintf:

Data Sizes:
    Strings     70
    Constant    144
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     45      78
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_3(CODE[16]), STR_2(CODE[27]), STR_1(CODE[27]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> e(BANK3[20]), d(BANK1[20]), c(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    envio_caract@st	PTR unsigned char  size(2) Largest target is 30
		 -> e(BANK3[20]), d(BANK1[20]), c(BANK3[30]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_envio_caract
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flsub->___xxtofl
    _setup->_spiInit
    _envio_caract->_envio_char

Critical Paths under _Interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _Interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _Interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40139
                                             41 BANK1      4     4      0
                            ___fladd
                            ___flsub
                            ___fltol
                           ___xxtofl
                       _envio_caract
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   33173
                                             74 BANK0      5     5      0
                                              8 BANK1     33    26      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _envio_caract                                         7     5      2     272
                                              4 COMMON     7     5      2
                         _envio_char
 ---------------------------------------------------------------------------------
 (2) _envio_char                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupciones                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___flsub
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___xxtofl (ARG)
       _spiRead (ARG)
         _spiReceiveWait
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   ___xxtofl
     _spiRead (ARG)
       _spiReceiveWait
   _envio_caract
     _envio_char
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _Interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      DB       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      32       9       52.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      DB      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 00:52:57 2021

                      _c 0190                        _d 00DA                        _e 01AE  
                      pc 0002              _SSPSTATbits 0094                       l89 1AE8  
           ___awdiv@sign 0025                       fsr 0004      ___wmul@multiplicand 0075  
    __Umul8_16@word_mpld 0022                      l112 08E2                      l105 1AAE  
                    l130 1A65                      l106 1AB3                      l123 07FF  
                    l115 1A5B                      l133 1A6D                      l109 08DC  
                    l241 07CD                      l139 1B1F                      l331 05C0  
                    l316 04AB                      l308 030E                      l501 093B  
                    l270 15EB                      l335 1011                      l248 0FFF  
                    l521 1BBE                      l337 1029                      l505 10E7  
                    l522 1BDA                      l530 1E86                      l506 104C  
                    l523 1BEF                      l371 1CFD                      l516 10DA  
                    l509 10AA                      l526 1E01                      l534 1A78  
                    l704 14EE                      l552 1FFF                      l529 1E6D  
                    l705 14FA                      l545 1DCD                      l553 1F71  
                    l641 1B9F                      l538 1DE2                      l802 1EAB  
                    l563 1FF2                      l651 1B59                      l708 1C3F  
                    l548 1DE2                      l804 1F42                      l556 1FC2  
                    l662 12D6                      l822 1A8A                      l591 1C95  
                    l815 1F0C                      l816 1F18                      l808 1EF0  
                    l488 1D66                      l666 137D                      l770 0C90  
                    l683 1448                      l675 14FA                      l668 1354  
                    l764 0C08                      l693 148E                      l758 0C9C  
                    l687 146C                      l696 14CC                      l777 07E4  
                    l779 07F6                      fsr0 0004                      indf 0000  
           ___awmod@sign 0079             ___flmul@aexp 003A             ___flmul@bexp 003B  
           ___flmul@sign 0035             ___flmul@temp 0040             ___flmul@prod 003C  
           ___fltol@exp1 005F                     l3000 1EBC                     l2200 1D0A  
                   l3010 1EE7                     l3002 1EC1                     l2210 1D1B  
                   l2202 1D0C                     l3020 1F1A                     l3012 1EF7  
                   l3004 1ECE                     l2220 1D33                     l2212 1D21  
                   l2204 1D10                     l3022 1F30                     l3014 1F02  
                   l3006 1ED5                     l2310 1B34                     l2302 1B20  
                   l2222 1D44                     l2214 1D24                     l2230 1D58  
                   l2206 1D15                     l3040 1AC3                     l3032 1AB4  
                   l2400 131C                     l3024 1F35                     l3016 1F06  
                   l3008 1ED9                     l2312 1B38                     l2304 1B26  
                   l2320 1B55                     l2232 1D5D                     l2224 1D4A  
                   l2216 1D2B                     l2208 1D19                     l2240 08E4  
                   l3050 1AD4                     l3042 1ACC                     l3034 1AB8  
                   l2410 1361                     l2402 1320                     l2330 1284  
                   l3026 1F39                     l3018 1F10                     l2314 1B42  
                   l2306 1B29                     l2234 1D62                     l2226 1D4B  
                   l2218 1D2F                     l2250 08F8                     l2242 08E8  
                   l3060 1AE0                     l3052 1AD7                     l3044 1ACD  
                   l3036 1AC1                     l2500 14D1                     l2412 1363  
                   l2420 1375                     l2404 1321                     l2340 1298  
                   l2332 1285                     l2324 1273                     l3028 1F3A  
                   l2180 07D1                     l2316 1B48                     l2308 1B30  
                   l2228 1D52                     l2260 0910                     l2252 08FE  
                   l2244 08ED                     l3062 1AE3                     l3054 1AD8  
                   l3046 1AD0                     l3038 1AC2                     l3070 07F7  
                   l2510 14E8                     l2502 14D6                     l2430 13A6  
                   l2422 1381                     l2414 1367                     l2406 1338  
                   l2350 12AE                     l2334 128A                     l2342 129A  
                   l2326 127A                     l2190 07F2                     l2182 07D3  
                   l2318 1B4F                     l2270 0932                     l2262 091A  
                   l2254 0901                     l2246 08EF                     l2238 08E3  
                   l3064 1AE4                     l3056 1ADB                     l3048 1AD3  
                   l3072 07FC                     l2512 14EA                     l2504 14DE  
                   l2440 13BD                     l2432 13AA                     l2424 1386  
                   l2416 1368                     l2408 1358                     l2360 12C3  
                   l2352 12B4                     l2344 12A2                     l2336 128F  
                   l2328 1280                     l2184 07DA                     l2600 0BB4  
                   l2520 0943                     l2280 1B64                     l2272 0937  
                   l2264 0920                     l2256 0908                     l2248 08F3  
                   l3066 1AE5                     l3058 1ADF                     l2514 14F5  
                   l2506 14E3                     l2450 1420                     l2442 13BE  
                   l2434 13AE                     l2418 1371                     l2370 12E0  
                   l2362 12CB                     l2354 12B8                     l2346 12A7  
                   l2338 1297                     l2186 07DE                     l2610 0BD9  
                   l2602 0BBD                     l2530 0958                     l2522 0949  
                   l2290 1B87                     l2282 1B67                     l2194 1CFE  
                   l2266 0927                     l2258 090C                     l3068 1A57  
                   l2516 14F9                     l2508 14E4                     l2460 1455  
                   l2452 1426                     l2444 13C7                     l2436 13B7  
                   l2428 138F                     l2380 12F4                     l2372 12E4  
                   l2364 12CC                     l2356 12B9                     l2348 12AD  
                   l2188 07ED                     l2620 0BF1                     l2612 0BE2  
                   l2604 0BCB                     l2540 0975                     l2532 0960  
                   l2524 094D                     l2292 1B8D                     l2284 1B6E  
                   l2276 1B5A                     l2196 1D01                     l2268 092D  
                   l3500 16A5                     l2470 1470                     l2454 142B  
                   l2438 13B9                     l2446 13CC                     l2390 1308  
                   l2382 12F8                     l2374 12E8                     l2358 12BE  
                   l2366 12CE                     l2630 0C20                     l2622 0C05  
                   l2606 0BD4                     l2614 0BE8                     l2550 098C  
                   l2542 0979                     l2534 0962                     l2526 094E  
                   l2518 093C                     l2294 1B8E                     l2286 1B72  
                   l2278 1B5E                     l2198 1D05                     l2710 0E26  
                   l3510 1704                     l3502 16B8                     l3430 14FB  
                   l2472 1473                     l2464 145E                     l2448 13E2  
                   l2456 143A                     l2480 1480                     l2392 130C  
                   l2384 12FC                     l2376 12EC                     l2368 12DC  
                   l2640 0C5B                     l2632 0C24                     l2616 0BEC  
                   l2608 0BD8                     l2552 098E                     l2544 097A  
                   l2536 096A                     l2528 0953                     l2296 1B95  
                   l2288 1B76                     l2704 0D97                     l3600 02D9  
                   l3512 174F                     l3504 16DB                     l3520 1794  
                   l3440 1528                     l3432 1506                     l2490 1493  
                   l2482 1481                     l2474 1475                     l2466 1467  
                   l2458 1450                     l2394 1310                     l2386 1300  
                   l2378 12F0                     l2810 1055                     l2802 1040  
                   l2650 0C88                     l2642 0C6A                     l2634 0C3D  
                   l2626 0C0D                     l2618 0BED                     l2570 09FF  
                   l2562 09A9                     l2554 0996                     l2546 097F  
                   l2538 096F                     l2298 1B9B                     l2722 0F44  
                   l2706 0D9E                     l2714 0E53                     l3610 031F  
                   l3602 02DF                     l3530 006A                     l3522 17A3  
                   l3514 1768                     l3506 16DF                     l3450 1574  
                   l3442 1538                     l3434 150C                     l3700 1B09  
                   l2660 1AA6                     l2900 1DF9                     l2492 1498  
                   l2484 1485                     l2476 147A                     l2468 146B  
                   l2396 1314                     l2388 1304                     l2820 108C  
                   l2812 1066                     l2652 0C89                     l2644 0C74  
                   l2628 0C12                     l2636 0C43                     l2580 0A7C  
                   l2572 0A2B                     l2564 09B9                     l2556 099B  
                   l2548 0984                     l2740 1A89                     l2732 1A7A  
                   l2724 0F4B                     l2716 0E5A                     l3620 03F3  
                   l3612 0324                     l3604 02EC                     l3540 00C3  
                   l3532 0079                     l3524 17EA                     l3516 1771  
                   l3508 16E5                     l3460 159E                     l3444 153C  
                   l3452 1584                     l3436 151B                     l2670 1A65  
                   l2662 1AA8                     l2910 1E49                     l2902 1E15  
                   l2494 14A6                     l2486 148B                     l2478 147C  
                   l2398 1318                     l2822 109A                     l2814 1068  
                   l2750 1F5F                     l2654 0C94                     l2646 0C76  
                   l2638 0C50                     l2590 0AFC                     l2582 0A99  
                   l2574 0A47                     l2566 09C6                     l2558 09A0  
                   l2734 1A7B                     l3630 0471                     l3622 0412  
                   l3614 0333                     l3606 02FB                     l3550 014F  
                   l3534 0094                     l3526 0028                     l3518 178C  
                   l3470 15E9                     l3462 15B3                     l3454 1592  
                   l3446 1551                     l3438 1524                     l3710 1102  
                   l3702 10E8                     l2672 1A6B                     l2664 1AAA  
                   l2912 1E83                     l2904 1E1D                     l2920 1A76  
                   l2496 14AA                     l2824 109B                     l2816 1071  
                   l2808 104D                     l2760 1F87                     l2744 1F43  
                   l2648 0C84                     l2592 0B29                     l2584 0AA9  
                   l2576 0A63                     l2568 09E3                     l2736 1A81  
                   l2728 0FD3                     l3640 049D                     l3632 0480  
                   l3624 0422                     l3616 033B                     l3608 0304  
                   l3552 0151                     l3544 00E2                     l3536 009D  
                   l3528 0043                     l3480 1627                     l3464 15CE  
                   l3456 1593                     l3448 156C                     l3720 1169  
                   l3712 1141                     l3704 10ED                     l2666 1AAD  
                   l2658 1A9F                     l2914 1E85                     l2906 1E21  
                   l2922 1A78                     l2498 14C8                     l2850 1007  
                   l2842 10CF                     l2834 10B6                     l2826 10A4  
                   l2818 107A                     l2770 1FB3                     l2762 1F89  
                   l2746 1F56                     l2594 0B39                     l2586 0AC6  
                   l2578 0A6C                     l2682 06D9                     l2674 05C4  
                   l2738 1A87                     l3650 04E5                     l3642 04A5  
                   l3634 0488                     l3626 042A                     l3618 03B4  
                   l3570 01EF                     l3562 019A                     l3538 00A5  
                   l3546 00EB                     l3490 1673                     l3482 162B  
                   l3474 15EF                     l3466 15D6                     l3458 159B  
                   l3730 11A3                     l3722 1171                     l3714 1143  
                   l3706 10F0                     l2668 08DC                     l2908 1E45  
                   l2940 1D9D                     l2932 1D7D                     l2852 100B  
                   l2844 10DF                     l2828 10AE                     l2836 10C8  
                   l2772 1FB4                     l2764 1F92                     l2756 1F72  
                   l2596 0B66                     l2588 0ADF                     l2684 06DF  
                   l2676 05CA                     l2692 0CA0                     l3660 0523  
                   l3652 04ED                     l3644 04B6                     l3636 048E  
                   l3628 0469                     l3580 021F                     l3572 01F8  
                   l3564 01A8                     l3548 0120                     l3492 1677  
                   l3484 1639                     l3476 160D                     l3468 15E7  
                   l3740 11E2                     l3732 11A4                     l3724 1178  
                   l3716 1149                     l3708 10FA                     l2918 1A6E  
                   l2942 1DA1                     l2950 1DBB                     l2934 1D92  
                   l2926 1D67                     l2870 1CBC                     l2862 1C96  
                   l2854 1018                     l2790 1FE7                     l2782 1FCE  
                   l2774 1FBC                     l2766 1F9B                     l2758 1F78  
                   l2598 0B8C                     l2694 0CA4                     l3670 0553  
                   l3662 052C                     l3654 04FF                     l3646 04C1  
                   l3590 02A7                     l3582 0233                     l3574 0207  
                   l3566 01D7                     l3558 0153                     l3494 167B  
                   l3486 1641                     l3478 1621                     l3638 0495  
                   l3750 1234                     l3742 11F9                     l3734 11C7  
                   l3726 117A                     l2960 1DD7                     l2936 1D93  
                   l2928 1D74                     l2880 1CEF                     l2872 1CC5  
                   l2864 1CA8                     l2856 101F                     l2848 1005  
                   l2792 1FF7                     l2776 1FC6                     l2784 1FE0  
                   l2768 1FA9                     l2688 078A                     l2696 0CA6  
                   l3680 058E                     l3672 0559                     l3664 0530  
                   l3656 0507                     l3648 04D4                     l3584 0240  
                   l3568 01DD                     l3496 1694                     l3488 165A  
                   l3752 1238                     l3744 1210                     l3736 11D1  
                   l3728 119E                     l2890 1BD2                     l2938 1D9B  
                   l2874 1CD7                     l2866 1CAB                     l2882 1CF5  
                   l2970 1C5E                     l2962 1C40                     l2858 1025  
                   l2698 0CAD                     l3674 0568                     l3666 053B  
                   l3658 050D                     l3586 0249                     l3594 02B8  
                   l3578 0210                     l3498 169F                     l3754 1241  
                   l3746 1227                     l3738 11D4                     l2892 1BEC  
                   l2956 1DC2                     l2948 1DA9                     l2876 1CE5  
                   l2868 1CB8                     l2972 1C70                     l2964 1C48  
                   l2796 102A                     l3676 0570                     l3668 054F  
                   l3596 02C2                     l3588 0288                     l3780 1605  
                   l3684 059E                     l3756 1245                     l3748 122B  
                   l3694 1AE9                     l2894 1BEE                     l2886 1BA0  
                   l2982 1BF0                     l2958 1DD2                     l2878 1CE6  
                   l2974 1C7E                     l2966 1C4D                     l2990 1E8F  
                   l2798 1037                     l3678 057C                     l3598 02D1  
                   l3686 05B8                     l3758 124E                     l3696 1AEC  
                   l2888 1BB6                     l2984 1BF4                     l2976 1C87  
                   l2968 1C5A                     l2992 1E93                     l3698 1B03  
                   l2898 1DE3                     l2978 1C8D                     l2994 1EA3  
                   l2996 1EB3                     l2988 1E8A                     STR_1 0896  
                   STR_2 08B1                     STR_3 08CC                     u3000 092D  
                   u3001 092C                     u3010 0932                     u3011 0931  
                   u3020 1B64                     u3021 1B63                     u3110 1B38  
                   u3111 1B37                     u4000 1A6B                     u3200 12BE  
                   u3040 1B76                     u3120 1B42                     u4001 1A6A  
                   u3201 12BD                     u3041 1B75                     u3121 1B41  
                   u3105 1B2A                     u3210 12C3                     u4010 05CA  
                   u3211 12C2                     u3035 1B68                     u4011 05C9  
                   u3300 137D                     u3220 12DC                     u3060 1B87  
                   u3140 1B55                     u4100 0CAD                     u3301 137C  
                   u3221 12DB                     u3061 1B86                     u3141 1B54  
                   u3125 1B3E                     u4101 0CAC                     u3310 1381  
                   u3230 12E0                     u3150 1284                     u3311 1380  
                   u3231 12DF                     u3151 1283                     u3055 1B77  
                   u3135 1B49                     u3400 140D                     u3320 1386  
                   u3240 1338                     u3160 128A                     u5000 1F06  
                   u3080 1B9B                     u3401 140E                     u3321 1385  
                   u3241 1337                     u3161 1289                     u5001 1F05  
                   u3081 1B9A                     u3065 1B83                     u4025 05E7  
                   u3410 142B                     u3402 1413                     u3250 1343  
                   u3170 128F                     u5010 1F0C                     u3090 1B26  
                   u4050 06DF                     u3411 142A                     u3403 1414  
                   u3331 1398                     u3251 1341                     u3171 128E  
                   u5011 1F0B                     u3075 1B8F                     u3091 1B25  
                   u4051 06DE                     u4035 0643                     u4115 0CCF  
                   u3500 148B                     u3420 1450                     u3340 13AA  
                   u3332 139F                     u3260 1344                     u3180 12AD  
                   u5020 1F10                     u4220 0F4B                     u4140 0D9E  
                   u3501 148A                     u3421 144F                     u3341 13A9  
                   u3333 13A6                     u3245 1334                     u3181 12AC  
                   u5021 1F0F                     u4045 0698                     u4221 0F4A  
                   u4205 0EB8                     u4141 0D9D                     u4125 0D0B  
                   u3510 1492                     u3430 1455                     u3350 13AE  
                   u3270 1358                     u3190 12B8                     u5030 1F25  
                   u4310 1FA9                     u3511 1491                     u3431 1454  
                   u3351 13AD                     u3271 1357                     u3191 12B7  
                   u4311 1FA8                     u4215 0F03                     u4135 0D56  
                   u3600 14F9                     u3520 1498                     u3360 13BD  
                   u3280 1367                     u5040 1F35                     u4400 1FF7  
                   u2800 07DE                     u6000 04FF                     u3601 14F8  
                   u3521 1497                     u3361 13BC                     u3281 1366  
                   u5041 1F34                     u4401 1FF6                     u4305 1F94  
                   u2801 07DD                     u4065 06FC                     u6001 04FE  
                   u3530 14AA                     u3450 146B                     u5050 1F39  
                   u4410 1037                     u4330 1FC2                     u3610 094D  
                   u4090 0CA4                     u6010 050D                     u3531 14A9  
                   u3451 146A                     u5051 1F38                     u5035 1F20  
                   u4411 1036                     u4331 1FC1                     u4315 1FA5  
                   u3611 094C                     u4075 0749                     u4235 0F5E  
                   u4155 0DB1                     u4091 0CA3                     u6011 050C  
                   u6100 1B1F                     u3540 14B9                     u3460 1470  
                   u3380 13E2                     u4500 10C7                     u4420 104B  
                   u4340 1FC6                     u2820 07F2                     u3620 0953  
                   u4260 1A81                     u4180 0E5A                     u6020 0523  
                   u6101 1B1E                     u3461 146F                     u3445 1460  
                   u3381 13E1                     u4501 10C6                     u4421 104A  
                   u4341 1FC5                     u4325 1FB5                     u2821 07F1  
                   u3701 0A0D                     u3621 0952                     u4085 0795  
                   u4261 1A80                     u4245 0F9A                     u4181 0E59  
                   u4165 0DED                     u6021 0522                     u3550 14C8  
                   u3470 147A                     u4510 10CE                     u4350 1FCD  
                   u3702 0A14                     u3630 0958                     u4270 1A87  
                   u2910 1D58                     u2830 1D05                     u6030 053B  
                   u6110 1102                     u3551 14C7                     u3471 1479  
                   u3391 13F9                     u3383 13DE                     u3375 13C0  
                   u3295 136A                     u4511 10CD                     u4351 1FCC  
                   u2815 07E5                     u3711 0A39                     u3703 0A1B  
                   u3631 0957                     u4271 1A86                     u2911 1D57  
                   u2831 1D04                     u4255 0FD6                     u4175 0E29  
                   u6031 053A                     u6111 1101                     u3560 14D1  
                   u3480 1480                     u3392 13FA                     u4600 1CBC  
                   u4440 108C                     u4280 1F56                     u3800 0B72  
                   u3712 0A40                     u3640 0979                     u2920 1D5D  
                   u2840 1D10                     u6040 0559                     u6120 1149  
                   u3561 14D0                     u3545 14B4                     u3481 147F  
                   u3393 13FF                     u4601 1CBB                     u4441 108B  
                   u4281 1F55                     u3721 0A55                     u3713 0A47  
                   u3641 0978                     u2921 1D5C                     u2905 1D4C  
                   u2841 1D0F                     u6041 0558                     u6025 051F  
                   u6121 1148                     u3570 14D6                     u3490 1485  
                   u3394 1400                     u4530 10DF                     u4370 1FDF  
                   u4290 1F70                     u3722 0A5C                     u3650 097F  
                   u2850 1D21                     u2930 08E8                     u6050 057C  
                   u6130 1178                     u3571 14D5                     u3491 1484  
                   u3395 1405                     u4531 10DE                     u4435 1073  
                   u4371 1FDE                     u4291 1F6F                     u3811 0B7E  
                   u3723 0A63                     u3651 097E                     u2851 1D20  
                   u2931 08E7                     u4195 0E7C                     u6051 057B  
                   u6035 0537                     u6131 1177                     u4700 1E21  
                   u3580 14E3                     u3396 1406                     u4620 1CD7  
                   u4540 100B                     u4460 10AA                     u4380 1FE6  
                   u3900 0C05                     u3820 0B9A                     u3812 0B85  
                   u3660 0984                     u2940 08F3                     u6060 058E  
                   u6140 11A3                     u4701 1E20                     u3581 14E2  
                   u4621 1CD6                     u4541 100A                     u4525 10D1  
                   u4461 10A9                     u4445 1088                     u4381 1FE5  
                   u4365 1FCF                     u3901 0C04                     u3813 0B8C  
                   u3805 0B6D                     u3741 0A8B                     u3661 0983  
                   u2941 08F2                     u6061 058D                     u6141 11A2  
                   u3590 14E8                     u4470 10AE                     u3910 0C0C  
                   u3742 0A92                     u3670 099B                     u2870 1D33  
                   u2950 08FE                     u6070 05B8                     u4711 1E30  
                   u3591 14E7                     u4615 1CBE                     u4471 10AD  
                   u4455 109D                     u3911 0C0B                     u3831 0BA6  
                   u3751 0AB8                     u3743 0A99                     u3735 0A65  
                   u3671 099A                     u2871 1D32                     u2951 08FD  
                   u6071 05B5                     u6080 1AF6                     u4720 1E49  
                   u4712 1E31                     u4640 1CF5                     u4480 10B5  
                   u3920 0C12                     u3832 0BAD                     u3752 0ABF  
                   u3680 09A0                     u4721 1E48                     u4713 1E36  
                   u4641 1CF4                     u4625 1CD3                     u4481 10B4  
                   u3921 0C11                     u3833 0BB4                     u3825 0B95  
                   u3753 0AC6                     u3681 099F                     u2865 1D25  
                   u6090 1B13                     u4650 1BB6                     u4714 1E37  
                   u4810 1DBA                     u4570 1025                     u3930 0C24  
                   u2890 1D44                     u2970 0910                     u5610 150C  
                   u4651 1BB5                     u4731 1E58                     u4715 1E3C  
                   u4811 1DB9                     u4635 1CE7                     u4571 1024  
                   u4555 1012                     u4395 1FE9                     u3931 0C23  
                   u3771 0AEE                     u3691 09F1                     u2891 1D43  
                   u2971 090F                     u5611 150B                     u4660 1BD2  
                   u4740 1E83                     u4732 1E59                     u4716 1E3D  
                   u4820 1DC1                     u4580 1CA8                     u3940 0C33  
                   u3860 0BD8                     u3772 0AF5                     u3692 09F8  
                   u2980 091A                     u5700 16DF                     u5620 1538  
                   u4661 1BD1                     u4741 1E82                     u4733 1E5E  
                   u4821 1DC0                     u4805 1DAA                     u4581 1CA7  
                   u4565 1019                     u3861 0BD7                     u3845 0BB6  
                   u3781 0B1B                     u3773 0AFC                     u3765 0AC8  
                   u3693 09FF                     u2885 1D34                     u2981 0919  
                   u2965 0902                     u5701 16DE                     u5621 1537  
                   u6157 10F6                     u4670 1BEC                     u4734 1E5F  
                   u4750 1A76                     u4910 1C8D                     u3950 0C50  
                   u3782 0B22                     u5710 1768                     u5630 1584  
                   u4671 1BEB                     u4735 1E64                     u4751 1A75  
                   u4911 1C8C                     u4495 10B7                     u3951 0C4F  
                   u3855 0BCD                     u3791 0B48                     u3783 0B29  
                   u2895 1D40                     u5711 1767                     u5631 1583  
                   u6167 11CD                     i1l72 1A97                     u4736 1E65  
                   u4680 1DF9                     u4840 1DD2                     u4760 1D74  
                   u4920 1E8F                     u3960 0C6A                     u3880 0BEC  
                   u3792 0B4F                     u5800 0199                     u5720 178C  
                   u5640 1592                     u4745 1E7F                     u4681 1DF8  
                   u4841 1DD1                     u4761 1D73                     u4905 1C7F  
                   u4921 1E8E                     u3961 0C69                     u3945 0C2E  
                   u3881 0BEB                     u3793 0B56                     u2985 0916  
                   u5801 0198                     u5721 178B                     u5641 1591  
                   u6177 11DC                     u4690 1E15                     u4850 1DD7  
                   u4770 1D8B                     u4930 1E93                     u3970 0C88  
                   u3890 0BF1                     u5810 01A8                     u5730 17A3  
                   u5650 15E6                     u4675 1BE8                     u4691 1E14  
                   u4851 1DD6                     u4835 1DC4                     u4595 1CAD  
                   u4931 1E92                     u3971 0C87                     u3955 0C4C  
                   u3891 0BF0                     u3875 0BDB                     u2995 0921  
                   u5811 01A7                     u5731 17A2                     u5651 15E5  
                   u3980 1AA6                     u4780 1DA1                     u4860 1C48  
                   u4940 1EB3                     u5900 0324                     u5820 01D7  
                   u5740 0028                     u5660 1621                     u3981 1AA5  
                   u4781 1DA0                     u4861 1C47                     u4941 1EB2  
                   u3965 0C66                     u5901 0323                     u5821 01D6  
                   u5805 0195                     u5741 17FA                     u5661 161E  
                   u3990 08E2                     u4790 1DA8                     u5830 01EF  
                   u5750 0043                     u5670 1627                     u3991 08E1  
                   u4791 1DA7                     u4775 1D86                     u5831 01EE  
                   u5751 0042                     u5735 179F                     u5671 1626  
                   u4880 1C5E                     u4960 1ED4                     u5840 021F  
                   u5760 006A                     u5680 165A                     u4881 1C5D  
                   u4961 1ED3                     u5841 021E                     u5761 0069  
                   u5745 17F5                     u5681 1659                     u4890 1C70  
                   u5930 0470                     u5850 0233                     u5770 0079  
                   u5690 1694                     u4891 1C6F                     u4875 1C4F  
                   u4955 1EC6                     u5931 046F                     u5915 03B9  
                   u5851 0232                     u5771 0078                     u5691 1693  
                   u4980 1EF6                     u5940 0494                     u5780 0094  
                   u4981 1EF5                     u5941 0493                     u5925 042F  
                   u5845 021B                     u5781 0093                     u5950 049D  
                   u5870 02C1                     u4895 1C6C                     u4975 1EE8  
                   u5951 049C                     u5871 02C0                     u5775 0075  
                   u5960 04A5                     u5880 02EC                     u5961 04A4  
                   u5881 02EB                     u5865 024E                     u5970 04B6  
                   u5890 02FB                     u4995 1EFB                     u5971 04B5  
                   u5891 02FA                     u5795 0158                     u5980 04D4  
                   u5981 04D3                     u5885 02E8                     u5990 04ED  
                   u5991 04EC                     u5975 04B2                     u5895 02F7  
                   u5985 04D0                     _TXIF 0064                     _dato 00D9  
                   _cont 00CD                     _main 10E8                     _val1 00D5  
                   _val2 00D1                     btemp 007E                     start 000C  
           _sprintf$1160 00AF            ___fltol@sign1 005E          __end_of___fladd 14FB  
                  ?_main 0070          __end_of___awdiv 1D67          __end_of___flneg 1A79  
        __end_of___awmod 093C          __end_of___flmul 0C9D          __end_of___flsub 1C40  
        __end_of___fltol 1DE3                    _ANSEL 0188          __end_of___lldiv 1CFE  
        ___awdiv@divisor 0020          __end_of___llmod 1C96          __end_of___lwdiv 1BA0  
        __end_of___lwmod 1B5A          ___awdiv@counter 0024                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
        __end_of_dpowers 0896                    _scale 0C9D          __end_of_isdigit 1A8B  
                  _setup 1AB4                    pclath 000A          __end_of_spiInit 1AB4  
        __end_of_spiRead 0800                    status 0003                    wtemp0 007E  
        __end_of_sprintf 05C1            ?_envio_caract 0074          __initialization 000F  
           __end_of_main 1273                   ??_main 00C9     __size_of__tdiv_to_l_ 00BD  
       ___llmod@dividend 0077                   ?_scale 0042         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l3350 1A91  
                 i1l3348 1A8B                   u556_20 1A91                   u556_21 1A90  
                 _SPBRGH 009A                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of___xxtofl 1F43           ??_envio_caract 0076         __end_of__powers_ 083A  
                 ___flge 1DE3                   ___fleq 1BA0                ??___fladd 005E  
                 ___wmul 1005                ??___awdiv 007A                ??___flneg 0077  
              ??___awmod 0077                ??___flmul 0030                ??___flsub 007B  
              ??___fltol 0059                ??___lldiv 0020                ??___llmod 0020  
              ??___lwdiv 0079                ??___lwmod 0077                   _fround 05C1  
       ___awdiv@quotient 0026          ___awmod@divisor 0073          ___awmod@counter 0078  
              ??_isdigit 0073       __size_of__Umul8_16 0029                   saved_w 007E  
       __end_of_spiWrite 1A5C                ??_spiInit 0076                ??_spiRead 0073  
              ??_sprintf 006A               ___flge@ff1 0073               ___flge@ff2 0077  
           ___xxtofl@arg 0022             ___xxtofl@exp 0021             ___xxtofl@val 0073  
             ___fleq@ff1 0073               ___fleq@ff2 0077  __end_of__initialization 0024  
             ___flneg@f1 0073               ___fltol@f1 0055           __pcstackCOMMON 0070  
          __end_of_scale 1000            __end_of_setup 1AE9               __div_to_l_ 102A  
        __div_to_l_@exp1 0026          __div_to_l_@cntr 0025                  ??_scale 0046  
        __div_to_l_@quot 0021             sprintf@width 00BA                  ??_setup 0077  
             __pbssBANK0 006F               __pbssBANK1 00CD               __pbssBANK3 0190  
         envio_char@dato 0073            __div_to_l_@f1 0073            __div_to_l_@f2 0077  
         envio_caract@st 0074        __end_of__Umul8_16 07F7               __pmaintext 10E8  
                ?___flge 0073                  ?___fleq 0073                  ?___wmul 0073  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  ?_fround 0042  
              ?___xxtofl 0073     __end_of_envio_caract 1B20                  _SSPSTAT 0094  
             __stringtab 0800        __end_of__npowers_ 086E               _scale$1159 0050  
             _envio_char 1A64                ?_spiWrite 0070          __size_of___flge 00A4  
        __size_of___fleq 0050                  ___fladd 1273                  ___awdiv 1CFE  
                ___flneg 1A6E                  ___awmod 08E3                  ___flmul 093C  
                ___flsub 1BF0                  ___fltol 1D67                  ___lldiv 1C96  
        __size_of___wmul 0025                  ___llmod 1C40                  ___lwdiv 1B5A  
                ___lwmod 1B20                  _bandera 006F          __size_of_fround 020D  
                __ptext1 14FB                  __ptext2 0C9D                  __ptext3 08E3  
                __ptext4 1CFE                  __ptext5 1A79                  __ptext6 05C1  
                __ptext7 1B20                  __ptext8 1B5A                  __ptext9 093C  
            ?__div_to_l_ 0073                  _dpowers 086E  __size_of_Interrupciones 0013  
                _isdigit 1A79               ??___xxtofl 0077         ___awmod@dividend 0075  
                _spiInit 1A9E                  _spiRead 07F7                  _sprintf 14FB  
                clrloop0 1A5D     end_of_initialization 0024          ___lldiv@divisor 0073  
        ___lldiv@counter 0025                _RCSTAbits 0018               ??_spiWrite 0073  
                psplit$0 C002C           __tdiv_to_l_@f1 0073           __tdiv_to_l_@f2 0077  
          ??__tdiv_to_l_ 0020                _PORTCbits 0007              ___fladd@grs 0069  
          ___xxtofl@sign 0020              spiWrite@dat 0073              ___flmul@grs 0036  
              _TXSTAbits 0098      __size_of__div_to_l_ 00BE              ?_envio_char 0070  
         _spiReceiveWait 08DC           __end_of___flge 1E87           __end_of___fleq 1BF0  
         __end_of___wmul 102A    __size_of_envio_caract 0037        pnum$text1_split_1 002C  
            _BAUDCTLbits 0187           __end_of_fround 07CE      start_initialization 000F  
    __end_of__tdiv_to_l_ 2000          ___llmod@divisor 0073          ___llmod@counter 0021  
           _envio_caract 1AE9   __end_of_spiReceiveWait 08E3                 ??___flge 0020  
               ??___fleq 0020                 ??___wmul 0077                __Umul8_16 07CE  
               ??_fround 0046            sprintf@tmpval 00BC           _Interrupciones 1A8B  
              ___fladd@a 005A                ___fladd@b 0056               fround@prec 0055  
              ___flmul@a 002C                ___flmul@b 0028                ___flsub@a 00A0  
              ___flsub@b 00A4                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0      __size_of_envio_char 000A        __size_of___xxtofl 00BC  
            sprintf@flag 00B8              sprintf@eexp 00C0              sprintf@fval 00C2  
            sprintf@prec 00C6            envio_caract@i 0079         ___lwdiv@dividend 0022  
        ?_spiReceiveWait 0070                 ?___fladd 0056                 ?___awdiv 0020  
               ?___flneg 0073                 ?___awmod 0073                 ?___flmul 0028  
               ?___flsub 00A0                 ?___fltol 0055                 ?___lldiv 0073  
               ?___llmod 0073                __npowers_ 083A               ?__Umul8_16 0073  
               ?___lwdiv 0020                 ?___lwmod 0073        __size_of_spiWrite 0006  
 __end_of_Interrupciones 1A9E                __pstrings 0800              __tdiv_to_l_ 1F43  
           ??__div_to_l_ 0020                 ?_isdigit 0070                 ?_spiInit 0073  
               ?_spiRead 0070         ___lwdiv@quotient 0024                 ?_sprintf 00A8  
         __size_of_scale 0363           __size_of_setup 0035     spiInit@sTransmitEdge 0075  
      interrupt_function 0004           ___wmul@product 0077                clear_ram0 1A5C  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
     __end_of__div_to_l_ 10E8          ?_Interrupciones 0070              __stringbase 0805  
      ___wmul@multiplier 0073             ??_envio_char 0073              ??__Umul8_16 0075  
       __size_of___fladd 0288         __size_of___awdiv 0069         __size_of___flneg 000B  
       __size_of___awmod 0059         __size_of___flmul 0361         __size_of___flsub 0050  
       __size_of___fltol 007C         __size_of___lldiv 0068         __size_of___llmod 0056  
       __size_of___lwdiv 0046         __size_of___lwmod 003A              _fround$1157 0051  
            _fround$1158 004D       __end_of__stringtab 0806              _isdigit$981 0073  
             sprintf@val 00B4                 ___xxtofl 1E87         __size_of_isdigit 0012  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0026                 __ptext10 07CE  
               __ptext11 1F43                 __ptext20 1A6E                 __ptext12 102A  
               __ptext21 1DE3                 __ptext13 1E87                 __ptext30 1A8B  
               __ptext22 1BA0                 __ptext14 1005                 __ptext23 1A56  
               __ptext15 1C40                 __ptext24 07F7                 __ptext16 1C96  
               __ptext25 08DC                 __ptext17 1D67                 __ptext26 1AB4  
               __ptext18 1BF0                 __ptext27 1A9E                 __ptext19 1273  
               __ptext28 1AE9                 __ptext29 1A64         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 __powers_ 0806       __end_of_envio_char 1A6E  
       __size_of_sprintf F0C6            __size_of_main 018B                pnum$text1 000C  
               _spiWrite 1A56             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 isdigit@c 0074                 scale@scl 0054  
               intlevel1 0000                sprintf@ap 00B3         __tdiv_to_l_@exp1 0029  
       __tdiv_to_l_@cntr 0028                sprintf@sp 00A8         __tdiv_to_l_@quot 0024  
       ___lwmod@dividend 0075         ___lldiv@dividend 0077         ??_spiReceiveWait 0073  
              stringcode 0800             ?__tdiv_to_l_ 0073   __Umul8_16@multiplicand 0073  
               sprintf@c 00C8                 sprintf@f 00AA         ___lldiv@quotient 0021  
        ___lwmod@divisor 0073          ___lwmod@counter 0078                 stringdir 0800  
               stringtab 0800            ___fladd@signs 0066             ___fladd@aexp 0067  
           ___fladd@bexp 0068     __Umul8_16@multiplier 0024        __Umul8_16@product 0020  
       ??_Interrupciones 0070  
